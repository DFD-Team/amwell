/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
import { HTMLStencilElement, JSXBase } from "./stencil-public-runtime";
import { awsdk, } from "./awsdk";
import { TytoWizardScreenType, } from "./components/amwell-tyto-device/tyto-wizard-screen-type.model";
export namespace Components {
    interface AmwellChatWindow {
        "destroy": () => Promise<void>;
        "initialize": (sdk: awsdk.AWSDK, options: {
            visit: awsdk.AWSDKVisit;
            messages?: {
                [key: string]: string;
            };
            locale?: string;
        }) => Promise<void>;
        "visit": awsdk.AWSDKVisit;
    }
    interface AmwellGuestInvite {
        "destroy": () => Promise<void>;
        "initialize": (sdk: awsdk.AWSDK, options: {
            visit: awsdk.AWSDKVisit;
            messages?: {
                [key: string]: string;
            };
        }) => Promise<void>;
        "visit": awsdk.AWSDKVisit;
    }
    interface AmwellTytoDevice {
        "destroy": () => Promise<void>;
        "initialize": (sdk: awsdk.AWSDK, options: {
            visit: awsdk.AWSDKVisit;
            messages?: {
                [key: string]: string;
            };
            locale?: string;
        }) => Promise<void>;
        "initializeStep": TytoWizardScreenType;
    }
    interface AmwellVideoConsole {
        "destroy": () => Promise<void>;
        "initialize": (sdk: awsdk.AWSDK, options: {
            visit: awsdk.AWSDKVisit;
            messages?: {
                [key: string]: string;
            };
            locale?: string;
        }) => Promise<boolean>;
        "refresh": () => Promise<void>;
    }
    interface AmwellVisitConsole {
        "destroy": () => Promise<void>;
        /**
          * The initialize function for this widget.  Requires an initialized SDK instance and an options object with an PreVisitScreening or InProgress Visit.  + `visit`: a PreVisitScreening or InProgress AWSDKVisit instance to use in the WebRTC video experience. + `disableHeader`: set to `true` if the header portion of the visit console should be disabled. + `disableSidebar`: set to `true` if the sidebar portion of the visit console should be disabled. + `messages`: an object of localized string messages. + `locale`: the locale of the visit console i.e. `en-US`.
         */
        "initialize": (sdk: awsdk.AWSDK, options: {
            visit: awsdk.AWSDKVisit;
            disableHeader?: boolean;
            disableSidebar?: boolean;
            messages?: {
                [key: string]: string;
            };
            locale?: string;
        }) => Promise<void>;
    }
    interface AmwellVisitNotes {
        "destroy": () => Promise<void>;
        "initialize": (sdk: awsdk.AWSDK, options: {
            visit: awsdk.AWSDKVisit;
            messages?: {
                [key: string]: string;
            };
        }) => Promise<void>;
        "visit": awsdk.AWSDKVisit;
    }
    interface FloatingLabelInput {
        "error"?: string;
        "handleOnBlur"?: Function;
        "handleOnFocus"?: Function;
        "hasFocus"?: boolean;
        "label": string;
        "type"?: string;
        "value": string;
    }
    interface LoadingSpinner {
    }
    interface TytoDevice {
        "messages": {
            amwell_tyto_device_qrCodePageDesc: string;
            amwell_tyto_device_deviceDescription: string;
            amwell_tyto_device_useTytoInVisitQuestion: string;
            amwell_tyto_device_deviceSetupHeader: string;
            amwell_tyto_device_pairing_setup_provider: string;
            amwell_tyto_device_pairing_setup_disclaimer: string;
            amwell_tyto_device_network: string;
            amwell_tyto_device_password: string;
            amwell_tyto_device_deviceId: string;
            amwell_tyto_device_devicePaired: string;
            amwell_tyto_device_pairDifferentNetwork: string;
            amwell_tyto_device_misc_ok: string;
            amwell_tyto_device_misc_cancel: string;
            amwell_tyto_device_misc_back: string;
            amwell_tyto_device_misc_continue: string;
            amwell_tyto_device_misc_show: string;
            amwell_tyto_device_misc_hide: string;
            amwell_tyto_device_misc_yes: string;
            amwell_tyto_device_misc_no: string;
            amwell_tyto_device_able_to_pair: string;
            amwell_tyto_device_not_connected: string;
            amwell_tyto_device_trying_to_connect: string;
            amwell_tyto_device_trying_to_pairing: string;
            amwell_tyto_device_trouble_to_connect: string;
            amwell_tyto_device_reload: string;
            amwell_tyto_device_pair_anytime: string;
            amwell_tyto_device_qr_expired: string;
            amwell_tyto_device_regenerate: string;
            amwell_tyto_device_generate_new_qrcode: string;
            amwell_tyto_device_pairing_failure: string;
            amwell_tyto_device_support_link: string;
            amwell_tyto_device_please_try_again: string;
            amwell_tyto_device_try_again: string;
            amwell_tyto_device_first_error_callback: string;
            amwell_tyto_device_connection_unavailable: string;
            amwell_tyto_device_second_error_callback: string;
        };
    }
    interface TytoErrorCallback {
        "bodyMsg": string;
        "buttonMsg": string;
        "headerMsg": string;
    }
    interface TytoPairedDevice {
        "displayChangeNetwork": boolean;
        "messages": {
            amwell_tyto_device_qrCodePageDesc: string;
            amwell_tyto_device_deviceDescription: string;
            amwell_tyto_device_useTytoInVisitQuestion: string;
            amwell_tyto_device_deviceSetupHeader: string;
            amwell_tyto_device_pairing_setup_provider: string;
            amwell_tyto_device_pairing_setup_disclaimer: string;
            amwell_tyto_device_network: string;
            amwell_tyto_device_password: string;
            amwell_tyto_device_deviceId: string;
            amwell_tyto_device_devicePaired: string;
            amwell_tyto_device_pairDifferentNetwork: string;
            amwell_tyto_device_misc_ok: string;
            amwell_tyto_device_misc_cancel: string;
            amwell_tyto_device_misc_back: string;
            amwell_tyto_device_misc_continue: string;
            amwell_tyto_device_misc_show: string;
            amwell_tyto_device_misc_hide: string;
            amwell_tyto_device_misc_yes: string;
            amwell_tyto_device_misc_no: string;
            amwell_tyto_device_able_to_pair: string;
            amwell_tyto_device_not_connected: string;
            amwell_tyto_device_trying_to_connect: string;
            amwell_tyto_device_trying_to_pairing: string;
            amwell_tyto_device_trouble_to_connect: string;
            amwell_tyto_device_reload: string;
            amwell_tyto_device_pair_anytime: string;
            amwell_tyto_device_qr_expired: string;
            amwell_tyto_device_regenerate: string;
            amwell_tyto_device_generate_new_qrcode: string;
            amwell_tyto_device_pairing_failure: string;
            amwell_tyto_device_support_link: string;
            amwell_tyto_device_please_try_again: string;
            amwell_tyto_device_try_again: string;
            amwell_tyto_device_first_error_callback: string;
            amwell_tyto_device_connection_unavailable: string;
            amwell_tyto_device_second_error_callback: string;
        };
    }
    interface TytoPairingFailed {
        "messages": {
            amwell_tyto_device_qrCodePageDesc: string;
            amwell_tyto_device_deviceDescription: string;
            amwell_tyto_device_useTytoInVisitQuestion: string;
            amwell_tyto_device_deviceSetupHeader: string;
            amwell_tyto_device_pairing_setup_provider: string;
            amwell_tyto_device_pairing_setup_disclaimer: string;
            amwell_tyto_device_network: string;
            amwell_tyto_device_password: string;
            amwell_tyto_device_deviceId: string;
            amwell_tyto_device_devicePaired: string;
            amwell_tyto_device_pairDifferentNetwork: string;
            amwell_tyto_device_misc_ok: string;
            amwell_tyto_device_misc_cancel: string;
            amwell_tyto_device_misc_back: string;
            amwell_tyto_device_misc_continue: string;
            amwell_tyto_device_misc_show: string;
            amwell_tyto_device_misc_hide: string;
            amwell_tyto_device_misc_yes: string;
            amwell_tyto_device_misc_no: string;
            amwell_tyto_device_able_to_pair: string;
            amwell_tyto_device_not_connected: string;
            amwell_tyto_device_trying_to_connect: string;
            amwell_tyto_device_trying_to_pairing: string;
            amwell_tyto_device_trouble_to_connect: string;
            amwell_tyto_device_reload: string;
            amwell_tyto_device_pair_anytime: string;
            amwell_tyto_device_qr_expired: string;
            amwell_tyto_device_regenerate: string;
            amwell_tyto_device_generate_new_qrcode: string;
            amwell_tyto_device_pairing_failure: string;
            amwell_tyto_device_support_link: string;
            amwell_tyto_device_please_try_again: string;
            amwell_tyto_device_try_again: string;
            amwell_tyto_device_first_error_callback: string;
            amwell_tyto_device_connection_unavailable: string;
            amwell_tyto_device_second_error_callback: string;
        };
    }
    interface TytoQrCode {
        "consumer": awsdk.AWSDKConsumer;
        "handleCreateNewQRCode": (ssid: string, ssidPwd: string) => Promise<void>;
        "hasQRCode": boolean;
        "messages": {
            amwell_tyto_device_qrCodePageDesc: string;
            amwell_tyto_device_deviceDescription: string;
            amwell_tyto_device_useTytoInVisitQuestion: string;
            amwell_tyto_device_deviceSetupHeader: string;
            amwell_tyto_device_pairing_setup_provider: string;
            amwell_tyto_device_pairing_setup_disclaimer: string;
            amwell_tyto_device_network: string;
            amwell_tyto_device_password: string;
            amwell_tyto_device_deviceId: string;
            amwell_tyto_device_devicePaired: string;
            amwell_tyto_device_pairDifferentNetwork: string;
            amwell_tyto_device_misc_ok: string;
            amwell_tyto_device_misc_cancel: string;
            amwell_tyto_device_misc_back: string;
            amwell_tyto_device_misc_continue: string;
            amwell_tyto_device_misc_show: string;
            amwell_tyto_device_misc_hide: string;
            amwell_tyto_device_misc_yes: string;
            amwell_tyto_device_misc_no: string;
            amwell_tyto_device_able_to_pair: string;
            amwell_tyto_device_not_connected: string;
            amwell_tyto_device_trying_to_connect: string;
            amwell_tyto_device_trying_to_pairing: string;
            amwell_tyto_device_trouble_to_connect: string;
            amwell_tyto_device_reload: string;
            amwell_tyto_device_pair_anytime: string;
            amwell_tyto_device_qr_expired: string;
            amwell_tyto_device_regenerate: string;
            amwell_tyto_device_generate_new_qrcode: string;
            amwell_tyto_device_pairing_failure: string;
            amwell_tyto_device_support_link: string;
            amwell_tyto_device_please_try_again: string;
            amwell_tyto_device_try_again: string;
            amwell_tyto_device_first_error_callback: string;
            amwell_tyto_device_connection_unavailable: string;
            amwell_tyto_device_second_error_callback: string;
        };
        "sdk": awsdk.AWSDK;
    }
    interface TytoRegenerateQr {
        "messages": {
            amwell_tyto_device_qrCodePageDesc: string;
            amwell_tyto_device_deviceDescription: string;
            amwell_tyto_device_useTytoInVisitQuestion: string;
            amwell_tyto_device_deviceSetupHeader: string;
            amwell_tyto_device_pairing_setup_provider: string;
            amwell_tyto_device_pairing_setup_disclaimer: string;
            amwell_tyto_device_network: string;
            amwell_tyto_device_password: string;
            amwell_tyto_device_deviceId: string;
            amwell_tyto_device_devicePaired: string;
            amwell_tyto_device_pairDifferentNetwork: string;
            amwell_tyto_device_misc_ok: string;
            amwell_tyto_device_misc_cancel: string;
            amwell_tyto_device_misc_back: string;
            amwell_tyto_device_misc_continue: string;
            amwell_tyto_device_misc_show: string;
            amwell_tyto_device_misc_hide: string;
            amwell_tyto_device_misc_yes: string;
            amwell_tyto_device_misc_no: string;
            amwell_tyto_device_able_to_pair: string;
            amwell_tyto_device_not_connected: string;
            amwell_tyto_device_trying_to_connect: string;
            amwell_tyto_device_trying_to_pairing: string;
            amwell_tyto_device_trouble_to_connect: string;
            amwell_tyto_device_reload: string;
            amwell_tyto_device_pair_anytime: string;
            amwell_tyto_device_qr_expired: string;
            amwell_tyto_device_regenerate: string;
            amwell_tyto_device_generate_new_qrcode: string;
            amwell_tyto_device_pairing_failure: string;
            amwell_tyto_device_support_link: string;
            amwell_tyto_device_please_try_again: string;
            amwell_tyto_device_try_again: string;
            amwell_tyto_device_first_error_callback: string;
            amwell_tyto_device_connection_unavailable: string;
            amwell_tyto_device_second_error_callback: string;
        };
    }
    interface TytoSetupWifi {
        "focusedIndex": number;
        "messages": {
            amwell_tyto_device_qrCodePageDesc: string;
            amwell_tyto_device_deviceDescription: string;
            amwell_tyto_device_useTytoInVisitQuestion: string;
            amwell_tyto_device_deviceSetupHeader: string;
            amwell_tyto_device_pairing_setup_provider: string;
            amwell_tyto_device_pairing_setup_disclaimer: string;
            amwell_tyto_device_network: string;
            amwell_tyto_device_password: string;
            amwell_tyto_device_deviceId: string;
            amwell_tyto_device_devicePaired: string;
            amwell_tyto_device_pairDifferentNetwork: string;
            amwell_tyto_device_misc_ok: string;
            amwell_tyto_device_misc_cancel: string;
            amwell_tyto_device_misc_back: string;
            amwell_tyto_device_misc_continue: string;
            amwell_tyto_device_misc_show: string;
            amwell_tyto_device_misc_hide: string;
            amwell_tyto_device_misc_yes: string;
            amwell_tyto_device_misc_no: string;
            amwell_tyto_device_able_to_pair: string;
            amwell_tyto_device_not_connected: string;
            amwell_tyto_device_trying_to_connect: string;
            amwell_tyto_device_trying_to_pairing: string;
            amwell_tyto_device_trouble_to_connect: string;
            amwell_tyto_device_reload: string;
            amwell_tyto_device_pair_anytime: string;
            amwell_tyto_device_qr_expired: string;
            amwell_tyto_device_regenerate: string;
            amwell_tyto_device_generate_new_qrcode: string;
            amwell_tyto_device_pairing_failure: string;
            amwell_tyto_device_support_link: string;
            amwell_tyto_device_please_try_again: string;
            amwell_tyto_device_try_again: string;
            amwell_tyto_device_first_error_callback: string;
            amwell_tyto_device_connection_unavailable: string;
            amwell_tyto_device_second_error_callback: string;
        };
        "showPasswordText": string;
        "wifiNetworkInput": string;
        "wifiPasswordInput": string;
        "wifiPasswordInputType": string;
    }
    interface TytoStepper {
        "consumer": awsdk.AWSDKConsumer;
        "initializeStep": any;
        "isTytoDevicePaired": any;
        "messages": {
            amwell_tyto_device_qrCodePageDesc: string;
            amwell_tyto_device_deviceDescription: string;
            amwell_tyto_device_useTytoInVisitQuestion: string;
            amwell_tyto_device_deviceSetupHeader: string;
            amwell_tyto_device_pairing_setup_provider: string;
            amwell_tyto_device_pairing_setup_disclaimer: string;
            amwell_tyto_device_network: string;
            amwell_tyto_device_password: string;
            amwell_tyto_device_deviceId: string;
            amwell_tyto_device_devicePaired: string;
            amwell_tyto_device_pairDifferentNetwork: string;
            amwell_tyto_device_misc_ok: string;
            amwell_tyto_device_misc_cancel: string;
            amwell_tyto_device_misc_back: string;
            amwell_tyto_device_misc_continue: string;
            amwell_tyto_device_misc_show: string;
            amwell_tyto_device_misc_hide: string;
            amwell_tyto_device_misc_yes: string;
            amwell_tyto_device_misc_no: string;
            amwell_tyto_device_able_to_pair: string;
            amwell_tyto_device_not_connected: string;
            amwell_tyto_device_trying_to_connect: string;
            amwell_tyto_device_trying_to_pairing: string;
            amwell_tyto_device_trouble_to_connect: string;
            amwell_tyto_device_reload: string;
            amwell_tyto_device_pair_anytime: string;
            amwell_tyto_device_qr_expired: string;
            amwell_tyto_device_regenerate: string;
            amwell_tyto_device_generate_new_qrcode: string;
            amwell_tyto_device_pairing_failure: string;
            amwell_tyto_device_support_link: string;
            amwell_tyto_device_please_try_again: string;
            amwell_tyto_device_try_again: string;
            amwell_tyto_device_first_error_callback: string;
            amwell_tyto_device_connection_unavailable: string;
            amwell_tyto_device_second_error_callback: string;
        };
        "sdk": awsdk.AWSDK;
    }
}
declare global {
    interface HTMLAmwellChatWindowElement extends Components.AmwellChatWindow, HTMLStencilElement {
    }
    var HTMLAmwellChatWindowElement: {
        prototype: HTMLAmwellChatWindowElement;
        new (): HTMLAmwellChatWindowElement;
    };
    interface HTMLAmwellGuestInviteElement extends Components.AmwellGuestInvite, HTMLStencilElement {
    }
    var HTMLAmwellGuestInviteElement: {
        prototype: HTMLAmwellGuestInviteElement;
        new (): HTMLAmwellGuestInviteElement;
    };
    interface HTMLAmwellTytoDeviceElement extends Components.AmwellTytoDevice, HTMLStencilElement {
    }
    var HTMLAmwellTytoDeviceElement: {
        prototype: HTMLAmwellTytoDeviceElement;
        new (): HTMLAmwellTytoDeviceElement;
    };
    interface HTMLAmwellVideoConsoleElement extends Components.AmwellVideoConsole, HTMLStencilElement {
    }
    var HTMLAmwellVideoConsoleElement: {
        prototype: HTMLAmwellVideoConsoleElement;
        new (): HTMLAmwellVideoConsoleElement;
    };
    interface HTMLAmwellVisitConsoleElement extends Components.AmwellVisitConsole, HTMLStencilElement {
    }
    var HTMLAmwellVisitConsoleElement: {
        prototype: HTMLAmwellVisitConsoleElement;
        new (): HTMLAmwellVisitConsoleElement;
    };
    interface HTMLAmwellVisitNotesElement extends Components.AmwellVisitNotes, HTMLStencilElement {
    }
    var HTMLAmwellVisitNotesElement: {
        prototype: HTMLAmwellVisitNotesElement;
        new (): HTMLAmwellVisitNotesElement;
    };
    interface HTMLFloatingLabelInputElement extends Components.FloatingLabelInput, HTMLStencilElement {
    }
    var HTMLFloatingLabelInputElement: {
        prototype: HTMLFloatingLabelInputElement;
        new (): HTMLFloatingLabelInputElement;
    };
    interface HTMLLoadingSpinnerElement extends Components.LoadingSpinner, HTMLStencilElement {
    }
    var HTMLLoadingSpinnerElement: {
        prototype: HTMLLoadingSpinnerElement;
        new (): HTMLLoadingSpinnerElement;
    };
    interface HTMLTytoDeviceElement extends Components.TytoDevice, HTMLStencilElement {
    }
    var HTMLTytoDeviceElement: {
        prototype: HTMLTytoDeviceElement;
        new (): HTMLTytoDeviceElement;
    };
    interface HTMLTytoErrorCallbackElement extends Components.TytoErrorCallback, HTMLStencilElement {
    }
    var HTMLTytoErrorCallbackElement: {
        prototype: HTMLTytoErrorCallbackElement;
        new (): HTMLTytoErrorCallbackElement;
    };
    interface HTMLTytoPairedDeviceElement extends Components.TytoPairedDevice, HTMLStencilElement {
    }
    var HTMLTytoPairedDeviceElement: {
        prototype: HTMLTytoPairedDeviceElement;
        new (): HTMLTytoPairedDeviceElement;
    };
    interface HTMLTytoPairingFailedElement extends Components.TytoPairingFailed, HTMLStencilElement {
    }
    var HTMLTytoPairingFailedElement: {
        prototype: HTMLTytoPairingFailedElement;
        new (): HTMLTytoPairingFailedElement;
    };
    interface HTMLTytoQrCodeElement extends Components.TytoQrCode, HTMLStencilElement {
    }
    var HTMLTytoQrCodeElement: {
        prototype: HTMLTytoQrCodeElement;
        new (): HTMLTytoQrCodeElement;
    };
    interface HTMLTytoRegenerateQrElement extends Components.TytoRegenerateQr, HTMLStencilElement {
    }
    var HTMLTytoRegenerateQrElement: {
        prototype: HTMLTytoRegenerateQrElement;
        new (): HTMLTytoRegenerateQrElement;
    };
    interface HTMLTytoSetupWifiElement extends Components.TytoSetupWifi, HTMLStencilElement {
    }
    var HTMLTytoSetupWifiElement: {
        prototype: HTMLTytoSetupWifiElement;
        new (): HTMLTytoSetupWifiElement;
    };
    interface HTMLTytoStepperElement extends Components.TytoStepper, HTMLStencilElement {
    }
    var HTMLTytoStepperElement: {
        prototype: HTMLTytoStepperElement;
        new (): HTMLTytoStepperElement;
    };
    interface HTMLElementTagNameMap {
        "amwell-chat-window": HTMLAmwellChatWindowElement;
        "amwell-guest-invite": HTMLAmwellGuestInviteElement;
        "amwell-tyto-device": HTMLAmwellTytoDeviceElement;
        "amwell-video-console": HTMLAmwellVideoConsoleElement;
        "amwell-visit-console": HTMLAmwellVisitConsoleElement;
        "amwell-visit-notes": HTMLAmwellVisitNotesElement;
        "floating-label-input": HTMLFloatingLabelInputElement;
        "loading-spinner": HTMLLoadingSpinnerElement;
        "tyto-device": HTMLTytoDeviceElement;
        "tyto-error-callback": HTMLTytoErrorCallbackElement;
        "tyto-paired-device": HTMLTytoPairedDeviceElement;
        "tyto-pairing-failed": HTMLTytoPairingFailedElement;
        "tyto-qr-code": HTMLTytoQrCodeElement;
        "tyto-regenerate-qr": HTMLTytoRegenerateQrElement;
        "tyto-setup-wifi": HTMLTytoSetupWifiElement;
        "tyto-stepper": HTMLTytoStepperElement;
    }
}
declare namespace LocalJSX {
    interface AmwellChatWindow {
        "onNewMessagesReceived"?: (event: CustomEvent<any>) => void;
        "visit"?: awsdk.AWSDKVisit;
    }
    interface AmwellGuestInvite {
        "visit"?: awsdk.AWSDKVisit;
    }
    interface AmwellTytoDevice {
        "initializeStep"?: TytoWizardScreenType;
    }
    interface AmwellVideoConsole {
        /**
          * Called when the visit ends. event.detail is an object with the ended visit.
         */
        "onVisitEnd"?: (event: CustomEvent<{
            visit: awsdk.AWSDKVisit;
        }>) => void;
        /**
          * Called when the visit encounters an error. event.detail is an object with the latest visit and an error field.
         */
        "onVisitError"?: (event: CustomEvent<{
            visit: awsdk.AWSDKVisit;
            error: any;
        }>) => void;
        /**
          * Called whenever the visit is updated. event.detail is an object with the latest visit.
         */
        "onVisitUpdated"?: (event: CustomEvent<{
            visit: awsdk.AWSDKVisit;
        }>) => void;
    }
    interface AmwellVisitConsole {
    }
    interface AmwellVisitNotes {
        "onNewNotesReceived"?: (event: CustomEvent<any>) => void;
        "visit"?: awsdk.AWSDKVisit;
    }
    interface FloatingLabelInput {
        "error"?: string;
        "handleOnBlur"?: Function;
        "handleOnFocus"?: Function;
        "hasFocus"?: boolean;
        "label"?: string;
        "type"?: string;
        "value"?: string;
    }
    interface LoadingSpinner {
    }
    interface TytoDevice {
        "messages"?: {
            amwell_tyto_device_qrCodePageDesc: string;
            amwell_tyto_device_deviceDescription: string;
            amwell_tyto_device_useTytoInVisitQuestion: string;
            amwell_tyto_device_deviceSetupHeader: string;
            amwell_tyto_device_pairing_setup_provider: string;
            amwell_tyto_device_pairing_setup_disclaimer: string;
            amwell_tyto_device_network: string;
            amwell_tyto_device_password: string;
            amwell_tyto_device_deviceId: string;
            amwell_tyto_device_devicePaired: string;
            amwell_tyto_device_pairDifferentNetwork: string;
            amwell_tyto_device_misc_ok: string;
            amwell_tyto_device_misc_cancel: string;
            amwell_tyto_device_misc_back: string;
            amwell_tyto_device_misc_continue: string;
            amwell_tyto_device_misc_show: string;
            amwell_tyto_device_misc_hide: string;
            amwell_tyto_device_misc_yes: string;
            amwell_tyto_device_misc_no: string;
            amwell_tyto_device_able_to_pair: string;
            amwell_tyto_device_not_connected: string;
            amwell_tyto_device_trying_to_connect: string;
            amwell_tyto_device_trying_to_pairing: string;
            amwell_tyto_device_trouble_to_connect: string;
            amwell_tyto_device_reload: string;
            amwell_tyto_device_pair_anytime: string;
            amwell_tyto_device_qr_expired: string;
            amwell_tyto_device_regenerate: string;
            amwell_tyto_device_generate_new_qrcode: string;
            amwell_tyto_device_pairing_failure: string;
            amwell_tyto_device_support_link: string;
            amwell_tyto_device_please_try_again: string;
            amwell_tyto_device_try_again: string;
            amwell_tyto_device_first_error_callback: string;
            amwell_tyto_device_connection_unavailable: string;
            amwell_tyto_device_second_error_callback: string;
        };
        "onDisplayStep"?: (event: CustomEvent<any>) => void;
    }
    interface TytoErrorCallback {
        "bodyMsg"?: string;
        "buttonMsg"?: string;
        "headerMsg"?: string;
        "onDisplayStep"?: (event: CustomEvent<any>) => void;
    }
    interface TytoPairedDevice {
        "displayChangeNetwork"?: boolean;
        "messages"?: {
            amwell_tyto_device_qrCodePageDesc: string;
            amwell_tyto_device_deviceDescription: string;
            amwell_tyto_device_useTytoInVisitQuestion: string;
            amwell_tyto_device_deviceSetupHeader: string;
            amwell_tyto_device_pairing_setup_provider: string;
            amwell_tyto_device_pairing_setup_disclaimer: string;
            amwell_tyto_device_network: string;
            amwell_tyto_device_password: string;
            amwell_tyto_device_deviceId: string;
            amwell_tyto_device_devicePaired: string;
            amwell_tyto_device_pairDifferentNetwork: string;
            amwell_tyto_device_misc_ok: string;
            amwell_tyto_device_misc_cancel: string;
            amwell_tyto_device_misc_back: string;
            amwell_tyto_device_misc_continue: string;
            amwell_tyto_device_misc_show: string;
            amwell_tyto_device_misc_hide: string;
            amwell_tyto_device_misc_yes: string;
            amwell_tyto_device_misc_no: string;
            amwell_tyto_device_able_to_pair: string;
            amwell_tyto_device_not_connected: string;
            amwell_tyto_device_trying_to_connect: string;
            amwell_tyto_device_trying_to_pairing: string;
            amwell_tyto_device_trouble_to_connect: string;
            amwell_tyto_device_reload: string;
            amwell_tyto_device_pair_anytime: string;
            amwell_tyto_device_qr_expired: string;
            amwell_tyto_device_regenerate: string;
            amwell_tyto_device_generate_new_qrcode: string;
            amwell_tyto_device_pairing_failure: string;
            amwell_tyto_device_support_link: string;
            amwell_tyto_device_please_try_again: string;
            amwell_tyto_device_try_again: string;
            amwell_tyto_device_first_error_callback: string;
            amwell_tyto_device_connection_unavailable: string;
            amwell_tyto_device_second_error_callback: string;
        };
        "onDisplayStep"?: (event: CustomEvent<any>) => void;
    }
    interface TytoPairingFailed {
        "messages"?: {
            amwell_tyto_device_qrCodePageDesc: string;
            amwell_tyto_device_deviceDescription: string;
            amwell_tyto_device_useTytoInVisitQuestion: string;
            amwell_tyto_device_deviceSetupHeader: string;
            amwell_tyto_device_pairing_setup_provider: string;
            amwell_tyto_device_pairing_setup_disclaimer: string;
            amwell_tyto_device_network: string;
            amwell_tyto_device_password: string;
            amwell_tyto_device_deviceId: string;
            amwell_tyto_device_devicePaired: string;
            amwell_tyto_device_pairDifferentNetwork: string;
            amwell_tyto_device_misc_ok: string;
            amwell_tyto_device_misc_cancel: string;
            amwell_tyto_device_misc_back: string;
            amwell_tyto_device_misc_continue: string;
            amwell_tyto_device_misc_show: string;
            amwell_tyto_device_misc_hide: string;
            amwell_tyto_device_misc_yes: string;
            amwell_tyto_device_misc_no: string;
            amwell_tyto_device_able_to_pair: string;
            amwell_tyto_device_not_connected: string;
            amwell_tyto_device_trying_to_connect: string;
            amwell_tyto_device_trying_to_pairing: string;
            amwell_tyto_device_trouble_to_connect: string;
            amwell_tyto_device_reload: string;
            amwell_tyto_device_pair_anytime: string;
            amwell_tyto_device_qr_expired: string;
            amwell_tyto_device_regenerate: string;
            amwell_tyto_device_generate_new_qrcode: string;
            amwell_tyto_device_pairing_failure: string;
            amwell_tyto_device_support_link: string;
            amwell_tyto_device_please_try_again: string;
            amwell_tyto_device_try_again: string;
            amwell_tyto_device_first_error_callback: string;
            amwell_tyto_device_connection_unavailable: string;
            amwell_tyto_device_second_error_callback: string;
        };
        "onDisplayStep"?: (event: CustomEvent<any>) => void;
    }
    interface TytoQrCode {
        "consumer"?: awsdk.AWSDKConsumer;
        "hasQRCode"?: boolean;
        "messages"?: {
            amwell_tyto_device_qrCodePageDesc: string;
            amwell_tyto_device_deviceDescription: string;
            amwell_tyto_device_useTytoInVisitQuestion: string;
            amwell_tyto_device_deviceSetupHeader: string;
            amwell_tyto_device_pairing_setup_provider: string;
            amwell_tyto_device_pairing_setup_disclaimer: string;
            amwell_tyto_device_network: string;
            amwell_tyto_device_password: string;
            amwell_tyto_device_deviceId: string;
            amwell_tyto_device_devicePaired: string;
            amwell_tyto_device_pairDifferentNetwork: string;
            amwell_tyto_device_misc_ok: string;
            amwell_tyto_device_misc_cancel: string;
            amwell_tyto_device_misc_back: string;
            amwell_tyto_device_misc_continue: string;
            amwell_tyto_device_misc_show: string;
            amwell_tyto_device_misc_hide: string;
            amwell_tyto_device_misc_yes: string;
            amwell_tyto_device_misc_no: string;
            amwell_tyto_device_able_to_pair: string;
            amwell_tyto_device_not_connected: string;
            amwell_tyto_device_trying_to_connect: string;
            amwell_tyto_device_trying_to_pairing: string;
            amwell_tyto_device_trouble_to_connect: string;
            amwell_tyto_device_reload: string;
            amwell_tyto_device_pair_anytime: string;
            amwell_tyto_device_qr_expired: string;
            amwell_tyto_device_regenerate: string;
            amwell_tyto_device_generate_new_qrcode: string;
            amwell_tyto_device_pairing_failure: string;
            amwell_tyto_device_support_link: string;
            amwell_tyto_device_please_try_again: string;
            amwell_tyto_device_try_again: string;
            amwell_tyto_device_first_error_callback: string;
            amwell_tyto_device_connection_unavailable: string;
            amwell_tyto_device_second_error_callback: string;
        };
        "onDisplayStep"?: (event: CustomEvent<any>) => void;
        "onPairedDeviceSuccess"?: (event: CustomEvent<any>) => void;
        "onShowErrorPage"?: (event: CustomEvent<any>) => void;
        "onStartNewQRCodeProcess"?: (event: CustomEvent<any>) => void;
        "sdk"?: awsdk.AWSDK;
    }
    interface TytoRegenerateQr {
        "messages"?: {
            amwell_tyto_device_qrCodePageDesc: string;
            amwell_tyto_device_deviceDescription: string;
            amwell_tyto_device_useTytoInVisitQuestion: string;
            amwell_tyto_device_deviceSetupHeader: string;
            amwell_tyto_device_pairing_setup_provider: string;
            amwell_tyto_device_pairing_setup_disclaimer: string;
            amwell_tyto_device_network: string;
            amwell_tyto_device_password: string;
            amwell_tyto_device_deviceId: string;
            amwell_tyto_device_devicePaired: string;
            amwell_tyto_device_pairDifferentNetwork: string;
            amwell_tyto_device_misc_ok: string;
            amwell_tyto_device_misc_cancel: string;
            amwell_tyto_device_misc_back: string;
            amwell_tyto_device_misc_continue: string;
            amwell_tyto_device_misc_show: string;
            amwell_tyto_device_misc_hide: string;
            amwell_tyto_device_misc_yes: string;
            amwell_tyto_device_misc_no: string;
            amwell_tyto_device_able_to_pair: string;
            amwell_tyto_device_not_connected: string;
            amwell_tyto_device_trying_to_connect: string;
            amwell_tyto_device_trying_to_pairing: string;
            amwell_tyto_device_trouble_to_connect: string;
            amwell_tyto_device_reload: string;
            amwell_tyto_device_pair_anytime: string;
            amwell_tyto_device_qr_expired: string;
            amwell_tyto_device_regenerate: string;
            amwell_tyto_device_generate_new_qrcode: string;
            amwell_tyto_device_pairing_failure: string;
            amwell_tyto_device_support_link: string;
            amwell_tyto_device_please_try_again: string;
            amwell_tyto_device_try_again: string;
            amwell_tyto_device_first_error_callback: string;
            amwell_tyto_device_connection_unavailable: string;
            amwell_tyto_device_second_error_callback: string;
        };
        "onDisplayStep"?: (event: CustomEvent<any>) => void;
    }
    interface TytoSetupWifi {
        "focusedIndex"?: number;
        "messages"?: {
            amwell_tyto_device_qrCodePageDesc: string;
            amwell_tyto_device_deviceDescription: string;
            amwell_tyto_device_useTytoInVisitQuestion: string;
            amwell_tyto_device_deviceSetupHeader: string;
            amwell_tyto_device_pairing_setup_provider: string;
            amwell_tyto_device_pairing_setup_disclaimer: string;
            amwell_tyto_device_network: string;
            amwell_tyto_device_password: string;
            amwell_tyto_device_deviceId: string;
            amwell_tyto_device_devicePaired: string;
            amwell_tyto_device_pairDifferentNetwork: string;
            amwell_tyto_device_misc_ok: string;
            amwell_tyto_device_misc_cancel: string;
            amwell_tyto_device_misc_back: string;
            amwell_tyto_device_misc_continue: string;
            amwell_tyto_device_misc_show: string;
            amwell_tyto_device_misc_hide: string;
            amwell_tyto_device_misc_yes: string;
            amwell_tyto_device_misc_no: string;
            amwell_tyto_device_able_to_pair: string;
            amwell_tyto_device_not_connected: string;
            amwell_tyto_device_trying_to_connect: string;
            amwell_tyto_device_trying_to_pairing: string;
            amwell_tyto_device_trouble_to_connect: string;
            amwell_tyto_device_reload: string;
            amwell_tyto_device_pair_anytime: string;
            amwell_tyto_device_qr_expired: string;
            amwell_tyto_device_regenerate: string;
            amwell_tyto_device_generate_new_qrcode: string;
            amwell_tyto_device_pairing_failure: string;
            amwell_tyto_device_support_link: string;
            amwell_tyto_device_please_try_again: string;
            amwell_tyto_device_try_again: string;
            amwell_tyto_device_first_error_callback: string;
            amwell_tyto_device_connection_unavailable: string;
            amwell_tyto_device_second_error_callback: string;
        };
        "onDisplayStep"?: (event: CustomEvent<any>) => void;
        "onHandleNetworkDetails"?: (event: CustomEvent<any>) => void;
        "onParentFunction"?: (event: CustomEvent<any>) => void;
        "showPasswordText"?: string;
        "wifiNetworkInput"?: string;
        "wifiPasswordInput"?: string;
        "wifiPasswordInputType"?: string;
    }
    interface TytoStepper {
        "consumer"?: awsdk.AWSDKConsumer;
        "initializeStep"?: any;
        "isTytoDevicePaired"?: any;
        "messages"?: {
            amwell_tyto_device_qrCodePageDesc: string;
            amwell_tyto_device_deviceDescription: string;
            amwell_tyto_device_useTytoInVisitQuestion: string;
            amwell_tyto_device_deviceSetupHeader: string;
            amwell_tyto_device_pairing_setup_provider: string;
            amwell_tyto_device_pairing_setup_disclaimer: string;
            amwell_tyto_device_network: string;
            amwell_tyto_device_password: string;
            amwell_tyto_device_deviceId: string;
            amwell_tyto_device_devicePaired: string;
            amwell_tyto_device_pairDifferentNetwork: string;
            amwell_tyto_device_misc_ok: string;
            amwell_tyto_device_misc_cancel: string;
            amwell_tyto_device_misc_back: string;
            amwell_tyto_device_misc_continue: string;
            amwell_tyto_device_misc_show: string;
            amwell_tyto_device_misc_hide: string;
            amwell_tyto_device_misc_yes: string;
            amwell_tyto_device_misc_no: string;
            amwell_tyto_device_able_to_pair: string;
            amwell_tyto_device_not_connected: string;
            amwell_tyto_device_trying_to_connect: string;
            amwell_tyto_device_trying_to_pairing: string;
            amwell_tyto_device_trouble_to_connect: string;
            amwell_tyto_device_reload: string;
            amwell_tyto_device_pair_anytime: string;
            amwell_tyto_device_qr_expired: string;
            amwell_tyto_device_regenerate: string;
            amwell_tyto_device_generate_new_qrcode: string;
            amwell_tyto_device_pairing_failure: string;
            amwell_tyto_device_support_link: string;
            amwell_tyto_device_please_try_again: string;
            amwell_tyto_device_try_again: string;
            amwell_tyto_device_first_error_callback: string;
            amwell_tyto_device_connection_unavailable: string;
            amwell_tyto_device_second_error_callback: string;
        };
        "sdk"?: awsdk.AWSDK;
    }
    interface IntrinsicElements {
        "amwell-chat-window": AmwellChatWindow;
        "amwell-guest-invite": AmwellGuestInvite;
        "amwell-tyto-device": AmwellTytoDevice;
        "amwell-video-console": AmwellVideoConsole;
        "amwell-visit-console": AmwellVisitConsole;
        "amwell-visit-notes": AmwellVisitNotes;
        "floating-label-input": FloatingLabelInput;
        "loading-spinner": LoadingSpinner;
        "tyto-device": TytoDevice;
        "tyto-error-callback": TytoErrorCallback;
        "tyto-paired-device": TytoPairedDevice;
        "tyto-pairing-failed": TytoPairingFailed;
        "tyto-qr-code": TytoQrCode;
        "tyto-regenerate-qr": TytoRegenerateQr;
        "tyto-setup-wifi": TytoSetupWifi;
        "tyto-stepper": TytoStepper;
    }
}
export { LocalJSX as JSX };
declare module "@stencil/core" {
    export namespace JSX {
        interface IntrinsicElements {
            "amwell-chat-window": LocalJSX.AmwellChatWindow & JSXBase.HTMLAttributes<HTMLAmwellChatWindowElement>;
            "amwell-guest-invite": LocalJSX.AmwellGuestInvite & JSXBase.HTMLAttributes<HTMLAmwellGuestInviteElement>;
            "amwell-tyto-device": LocalJSX.AmwellTytoDevice & JSXBase.HTMLAttributes<HTMLAmwellTytoDeviceElement>;
            "amwell-video-console": LocalJSX.AmwellVideoConsole & JSXBase.HTMLAttributes<HTMLAmwellVideoConsoleElement>;
            "amwell-visit-console": LocalJSX.AmwellVisitConsole & JSXBase.HTMLAttributes<HTMLAmwellVisitConsoleElement>;
            "amwell-visit-notes": LocalJSX.AmwellVisitNotes & JSXBase.HTMLAttributes<HTMLAmwellVisitNotesElement>;
            "floating-label-input": LocalJSX.FloatingLabelInput & JSXBase.HTMLAttributes<HTMLFloatingLabelInputElement>;
            "loading-spinner": LocalJSX.LoadingSpinner & JSXBase.HTMLAttributes<HTMLLoadingSpinnerElement>;
            "tyto-device": LocalJSX.TytoDevice & JSXBase.HTMLAttributes<HTMLTytoDeviceElement>;
            "tyto-error-callback": LocalJSX.TytoErrorCallback & JSXBase.HTMLAttributes<HTMLTytoErrorCallbackElement>;
            "tyto-paired-device": LocalJSX.TytoPairedDevice & JSXBase.HTMLAttributes<HTMLTytoPairedDeviceElement>;
            "tyto-pairing-failed": LocalJSX.TytoPairingFailed & JSXBase.HTMLAttributes<HTMLTytoPairingFailedElement>;
            "tyto-qr-code": LocalJSX.TytoQrCode & JSXBase.HTMLAttributes<HTMLTytoQrCodeElement>;
            "tyto-regenerate-qr": LocalJSX.TytoRegenerateQr & JSXBase.HTMLAttributes<HTMLTytoRegenerateQrElement>;
            "tyto-setup-wifi": LocalJSX.TytoSetupWifi & JSXBase.HTMLAttributes<HTMLTytoSetupWifiElement>;
            "tyto-stepper": LocalJSX.TytoStepper & JSXBase.HTMLAttributes<HTMLTytoStepperElement>;
        }
    }
}

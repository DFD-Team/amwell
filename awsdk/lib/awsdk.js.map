{"version":3,"sources":["webpack://awsdk/webpack/universalModuleDefinition","webpack://awsdk/webpack/bootstrap","webpack://awsdk/./node_modules/@babel/runtime/helpers/getPrototypeOf.js","webpack://awsdk/./node_modules/@babel/runtime/helpers/classCallCheck.js","webpack://awsdk/./node_modules/@babel/runtime/helpers/createClass.js","webpack://awsdk/./node_modules/@babel/runtime/helpers/inherits.js","webpack://awsdk/./node_modules/@babel/runtime/helpers/possibleConstructorReturn.js","webpack://awsdk/./node_modules/awcoresdk/lib/util/deprecated.js","webpack://awsdk/./node_modules/awcoresdk/lib/awcoresdk_video_participant_type.js","webpack://awsdk/./node_modules/awcoresdk/lib/util/replace.js","webpack://awsdk/./node_modules/awcoresdk/lib/awcoresdk_base_event_handler.js","webpack://awsdk/./node_modules/@babel/runtime/helpers/typeof.js","webpack://awsdk/./node_modules/awcoresdk/lib/util/empty.js","webpack://awsdk/./node_modules/qrcode/lib/core/utils.js","webpack://awsdk/./node_modules/qrcode/lib/core/mode.js","webpack://awsdk/./node_modules/awcoresdk/lib/i18n/index.js","webpack://awsdk/./node_modules/awcoresdk/lib/awcoresdk_vendor.js","webpack://awsdk/./node_modules/qrcode/lib/utils/typedarray-buffer.js","webpack://awsdk/./node_modules/awcoresdk/lib/test_my_computer/steps/Base.js","webpack://awsdk/./node_modules/loglevel/lib/loglevel.js","webpack://awsdk/./node_modules/@babel/runtime/helpers/get.js","webpack://awsdk/./node_modules/awcoresdk/lib/util/media_devices.js","webpack://awsdk/./node_modules/awcoresdk/lib/visit_configuration.js","webpack://awsdk/./node_modules/awcoresdk/lib/visit_logging_data_object.js","webpack://awsdk/./node_modules/awcoresdk/lib/participant.js","webpack://awsdk/./node_modules/awcoresdk/lib/video_configuration.js","webpack://awsdk/(webpack)/buildin/global.js","webpack://awsdk/./node_modules/isarray/index.js","webpack://awsdk/./node_modules/qrcode/lib/core/error-correction-level.js","webpack://awsdk/./node_modules/detect-browser/index.js","webpack://awsdk/./node_modules/awcoresdk/lib/awcoresdk_operation_type.js","webpack://awsdk/./node_modules/awcoresdk/lib/util/rtc_supported.js","webpack://awsdk/./node_modules/awcoresdk/lib/video_metrics.js","webpack://awsdk/./node_modules/@babel/runtime/helpers/setPrototypeOf.js","webpack://awsdk/./node_modules/@babel/runtime/helpers/unsupportedIterableToArray.js","webpack://awsdk/./node_modules/@babel/runtime/helpers/arrayLikeToArray.js","webpack://awsdk/./node_modules/qrcode/lib/core/error-correction-code.js","webpack://awsdk/./node_modules/qrcode/lib/core/version-check.js","webpack://awsdk/./node_modules/qrcode/lib/core/regex.js","webpack://awsdk/./node_modules/qrcode/lib/renderer/utils.js","webpack://awsdk/./node_modules/awcoresdk/lib/internal_video_console.js","webpack://awsdk/./node_modules/awcoresdk/lib/util/attach.js","webpack://awsdk/./node_modules/awcoresdk/lib/util/logger.js","webpack://awsdk/./node_modules/awcoresdk/lib/util/event.js","webpack://awsdk/./node_modules/awcoresdk/lib/error/error.js","webpack://awsdk/./node_modules/awcoresdk/lib/util/performance.js","webpack://awsdk/./node_modules/awcoresdk/lib/awcoresdk_base_event_mapper.js","webpack://awsdk/./node_modules/awcoresdk/lib/awcoresdk_visit_end_details.js","webpack://awsdk/./node_modules/awcoresdk/lib/util/pubsub.js","webpack://awsdk/./node_modules/awcoresdk/lib/test_my_computer/monitor_stream.js","webpack://awsdk/./node_modules/awcoresdk/lib/version.js","webpack://awsdk/./node_modules/uuid/v4.js","webpack://awsdk/./node_modules/compare-versions/index.js","webpack://awsdk/./node_modules/@babel/runtime/helpers/construct.js","webpack://awsdk/./node_modules/url-search-params/build/url-search-params.node.js","webpack://awsdk/./node_modules/@babel/runtime/helpers/slicedToArray.js","webpack://awsdk/./node_modules/qrcode/lib/browser.js","webpack://awsdk/./node_modules/awcoresdk/lib/external_video_console.js","webpack://awsdk/./node_modules/@babel/runtime/helpers/toConsumableArray.js","webpack://awsdk/./node_modules/awcoresdk/lib/test_my_computer/mini.js","webpack://awsdk/./node_modules/awcoresdk/lib/test_my_computer/Wizard.js","webpack://awsdk/./node_modules/awcoresdk/lib/util/get_object.js","webpack://awsdk/./node_modules/awcoresdk/lib/i18n/en.js","webpack://awsdk/./node_modules/awcoresdk/lib/i18n/iw.js","webpack://awsdk/./node_modules/awcoresdk/lib/i18n/es.js","webpack://awsdk/./node_modules/uuid/lib/rng-browser.js","webpack://awsdk/./node_modules/uuid/lib/bytesToUuid.js","webpack://awsdk/./node_modules/@babel/runtime/helpers/assertThisInitialized.js","webpack://awsdk/./node_modules/he/he.js","webpack://awsdk/(webpack)/buildin/module.js","webpack://awsdk/./node_modules/@babel/runtime/helpers/isNativeReflectConstruct.js","webpack://awsdk/./node_modules/@babel/runtime/helpers/superPropBase.js","webpack://awsdk/./node_modules/@babel/runtime/helpers/arrayWithHoles.js","webpack://awsdk/./node_modules/@babel/runtime/helpers/iterableToArrayLimit.js","webpack://awsdk/./node_modules/@babel/runtime/helpers/nonIterableRest.js","webpack://awsdk/./node_modules/qrcode/lib/can-promise.js","webpack://awsdk/./node_modules/qrcode/lib/core/qrcode.js","webpack://awsdk/./node_modules/qrcode/lib/core/bit-buffer.js","webpack://awsdk/./node_modules/qrcode/lib/core/bit-matrix.js","webpack://awsdk/./node_modules/qrcode/lib/core/alignment-pattern.js","webpack://awsdk/./node_modules/qrcode/lib/core/finder-pattern.js","webpack://awsdk/./node_modules/qrcode/lib/core/mask-pattern.js","webpack://awsdk/./node_modules/qrcode/lib/core/reed-solomon-encoder.js","webpack://awsdk/./node_modules/qrcode/lib/core/polynomial.js","webpack://awsdk/./node_modules/qrcode/lib/core/galois-field.js","webpack://awsdk/./node_modules/node-libs-browser/node_modules/buffer/index.js","webpack://awsdk/./node_modules/base64-js/index.js","webpack://awsdk/./node_modules/ieee754/index.js","webpack://awsdk/./node_modules/node-libs-browser/node_modules/isarray/index.js","webpack://awsdk/./node_modules/qrcode/lib/core/version.js","webpack://awsdk/./node_modules/qrcode/lib/core/format-info.js","webpack://awsdk/./node_modules/qrcode/lib/core/segments.js","webpack://awsdk/./node_modules/qrcode/lib/core/numeric-data.js","webpack://awsdk/./node_modules/qrcode/lib/core/alphanumeric-data.js","webpack://awsdk/./node_modules/qrcode/lib/core/byte-data.js","webpack://awsdk/./node_modules/qrcode/lib/core/kanji-data.js","webpack://awsdk/./node_modules/dijkstrajs/dijkstra.js","webpack://awsdk/./node_modules/qrcode/lib/renderer/canvas.js","webpack://awsdk/./node_modules/qrcode/lib/renderer/svg-tag.js","webpack://awsdk/./node_modules/awcoresdk/lib/vidyo/vidyo_video_console.js","webpack://awsdk/./node_modules/process/browser.js","webpack://awsdk/./node_modules/awcoresdk/lib/util/fullscreen.js","webpack://awsdk/./node_modules/awcoresdk/lib/templates/videoconsole_template.html","webpack://awsdk/./node_modules/awcoresdk/lib/error/error_code.js","webpack://awsdk/./node_modules/awcoresdk/lib/spinner/spinner_manager.js","webpack://awsdk/./node_modules/awcoresdk/lib/templates/spinner_template.html","webpack://awsdk/./node_modules/awcoresdk/lib/spinner/view_renderer.js","webpack://awsdk/./node_modules/awcoresdk/lib/util/retrieve_messages.js","webpack://awsdk/./node_modules/awcoresdk/lib/external/vidyo/vidyo.client.js","webpack://awsdk/./node_modules/awcoresdk/lib/external/vidyo/vidyo.client.messages.js","webpack://awsdk/./node_modules/awcoresdk/lib/vidyo/awcoresdk_vidyo_event_mapper.js","webpack://awsdk/./node_modules/awcoresdk/lib/vidyo/awcoresdk_vidyo_visit_state.js","webpack://awsdk/./node_modules/awcoresdk/lib/visit_state.js","webpack://awsdk/./node_modules/awcoresdk/lib/awcoresdk_participants_changed_result.js","webpack://awsdk/./node_modules/awcoresdk/lib/vidyo/awcoresdk_vidyo_sendRequest_response.js","webpack://awsdk/./node_modules/awcoresdk/lib/pexip/pexip_video_console.js","webpack://awsdk/./node_modules/awcoresdk/lib/pexip/awcoresdk_pexip_event_mapper.js","webpack://awsdk/./node_modules/awcoresdk/lib/util/mobile_browser_detector.js","webpack://awsdk/./node_modules/load-script/index.js","webpack://awsdk/./node_modules/awcoresdk/lib/console/plugins/screenshare/index.js","webpack://awsdk/./node_modules/awcoresdk/lib/console/plugin.js","webpack://awsdk/./node_modules/awcoresdk/lib/util/attach_event.js","webpack://awsdk/./node_modules/awcoresdk/lib/util/is_electron.js","webpack://awsdk/./node_modules/awcoresdk/lib/console/plugins/screenshare/template.html","webpack://awsdk/./node_modules/@babel/runtime/helpers/arrayWithoutHoles.js","webpack://awsdk/./node_modules/@babel/runtime/helpers/iterableToArray.js","webpack://awsdk/./node_modules/@babel/runtime/helpers/nonIterableSpread.js","webpack://awsdk/./node_modules/awcoresdk/lib/test_my_computer/TMCLite.html","webpack://awsdk/./node_modules/awcoresdk/lib/test_my_computer/steps/camera.js","webpack://awsdk/./node_modules/awcoresdk/lib/test_my_computer/steps/camera.html","webpack://awsdk/./node_modules/awcoresdk/lib/test_my_computer/steps/microphone.js","webpack://awsdk/./node_modules/awcoresdk/lib/test_my_computer/steps/microphone.html","webpack://awsdk/./node_modules/awcoresdk/lib/test_my_computer/steps/speaker.js","webpack://awsdk/./node_modules/awcoresdk/lib/test_my_computer/steps/speaker.html","webpack://awsdk/./node_modules/awcoresdk/lib/test_my_computer/steps/internet.js","webpack://awsdk/./node_modules/awcoresdk/lib/test_my_computer/steps/internet.html","webpack://awsdk/./node_modules/awcoresdk/lib/test_my_computer/steps/get_started.js","webpack://awsdk/./node_modules/awcoresdk/lib/test_my_computer/steps/get_started.html","webpack://awsdk/./node_modules/awcoresdk/lib/test_my_computer/steps/summary.js","webpack://awsdk/./node_modules/awcoresdk/lib/test_my_computer/steps/summary-pass.html","webpack://awsdk/./node_modules/awcoresdk/lib/test_my_computer/steps/summary-fail.html","webpack://awsdk/./node_modules/awcoresdk/lib/test_my_computer/Wizard.html","webpack://awsdk/./node_modules/whatwg-fetch/fetch.js","webpack://awsdk/./src/awsdk/model/awsdk_dataobject.js","webpack://awsdk/./src/awsdk/error/awsdk_error_code.js","webpack://awsdk/./src/awsdk/error/awsdk_error.js","webpack://awsdk/./src/awsdk/internal/parser/generic_parser.js","webpack://awsdk/./src/awsdk/internal/model/awsdk_entity_id.js","webpack://awsdk/./src/awsdk/model/awsdk_entity.js","webpack://awsdk/./src/awsdk/model/awsdk_state.js","webpack://awsdk/./src/awsdk/model/awsdk_address.js","webpack://awsdk/./src/awsdk/model/insurance/awsdk_payer_info.js","webpack://awsdk/./src/awsdk/model/insurance/awsdk_health_plan.js","webpack://awsdk/./src/awsdk/model/insurance/awsdk_relationship_to_subscriber_code.js","webpack://awsdk/./src/awsdk/model/insurance/awsdk_eligibility_check.js","webpack://awsdk/./src/awsdk/model/insurance/awsdk_subscription.js","webpack://awsdk/./src/awsdk/model/consumer/awsdk_gender.js","webpack://awsdk/./src/awsdk/model/consumer/awsdk_gender_identity.js","webpack://awsdk/./src/awsdk/model/consumer/awsdk_consumer.js","webpack://awsdk/./src/awsdk/model/awsdk_country.js","webpack://awsdk/./src/awsdk/model/device_integration/awsdk_device_integration_mode.js","webpack://awsdk/./src/awsdk/internal/model/awsdk_practice_base.js","webpack://awsdk/./src/awsdk/internal/validator/validator.js","webpack://awsdk/./src/awsdk/internal/logger/logger.js","webpack://awsdk/./src/awsdk/internal/util/util.js","webpack://awsdk/./src/awsdk/model/visit/awsdk_visit_modality_type.js","webpack://awsdk/./src/awsdk/model/awsdk_modality.js","webpack://awsdk/./src/awsdk/model/practice/awsdk_practice.js","webpack://awsdk/./src/awsdk/model/practice/awsdk_practice_info.js","webpack://awsdk/./src/awsdk/model/provider/awsdk_provider_visibility.js","webpack://awsdk/./src/awsdk/model/awsdk_resource.js","webpack://awsdk/./src/awsdk/model/provider/awsdk_provider_type.js","webpack://awsdk/./src/awsdk/model/provider/awsdk_provider.js","webpack://awsdk/./src/awsdk/model/awsdk_disclaimer_entity_type.js","webpack://awsdk/./src/awsdk/model/awsdk_disclaimer.js","webpack://awsdk/./src/awsdk/model/provider/awsdk_provider_details.js","webpack://awsdk/./src/awsdk/model/appointment/awsdk_reminder_option.js","webpack://awsdk/./src/awsdk/model/consumer/awsdk_consumer_middle_name_handling.js","webpack://awsdk/./src/awsdk/model/awsdk_system_configuration.js","webpack://awsdk/./src/awsdk/model/billing/awsdk_credit_card_type.js","webpack://awsdk/./src/awsdk/internal/model/response/awsdk_response.js","webpack://awsdk/./src/awsdk/internal/model/awsdk_server_log_param.js","webpack://awsdk/./src/awsdk/model/authentication/awsdk_authentication.js","webpack://awsdk/./src/awsdk/model/authentication/awsdk_recover_email_status.js","webpack://awsdk/./src/awsdk/model/authentication/awsdk_recover_email.js","webpack://awsdk/./src/awsdk/internal/model/response/awsdk_recover_email_response.js","webpack://awsdk/./src/awsdk/version.js","webpack://awsdk/./src/awsdk/internal/form/form.js","webpack://awsdk/./src/awsdk/internal/parser/response_parser.js","webpack://awsdk/./src/awsdk/service/service.js","webpack://awsdk/./src/awsdk/service/authentication_service.js","webpack://awsdk/./src/awsdk/internal/model/response/awsdk_consumer_response.js","webpack://awsdk/./src/awsdk/model/health/awsdk_health_summary_record.js","webpack://awsdk/./src/awsdk/model/health/awsdk_health_summary_prescription_record.js","webpack://awsdk/./src/awsdk/model/consumer/awsdk_health_summary.js","webpack://awsdk/./src/awsdk/internal/model/response/awsdk_health_summary_response.js","webpack://awsdk/./src/awsdk/internal/model/response/awsdk_dependent_response.js","webpack://awsdk/./src/awsdk/model/consumer/awsdk_base_consumer_update.js","webpack://awsdk/./src/awsdk/model/consumer/awsdk_consumer_update.js","webpack://awsdk/./src/awsdk/model/registration/awsdk_consumer_registration.js","webpack://awsdk/./src/awsdk/model/registration/awsdk_dependent_registration.js","webpack://awsdk/./src/awsdk/internal/model/response/awsdk_registration_disclaimer_response.js","webpack://awsdk/./src/awsdk/model/billing/awsdk_payment_method.js","webpack://awsdk/./src/awsdk/internal/model/response/awsdk_payment_method_response.js","webpack://awsdk/./src/awsdk/model/visit/awsdk_topic.js","webpack://awsdk/./src/awsdk/awsdk_user_type.js","webpack://awsdk/./src/awsdk/model/chat/awsdk_chat_item.js","webpack://awsdk/./src/awsdk/model/chat/awsdk_chat_report.js","webpack://awsdk/./src/awsdk/model/health/awsdk_consumer_health_item.js","webpack://awsdk/./src/awsdk/internal/model/awsdk_term_entity.js","webpack://awsdk/./src/awsdk/model/health/awsdk_allergy.js","webpack://awsdk/./src/awsdk/model/health/awsdk_condition.js","webpack://awsdk/./src/awsdk/model/medication/awsdk_medication.js","webpack://awsdk/./src/awsdk/model/visit/awsdk_intake.js","webpack://awsdk/./src/awsdk/model/visit/awsdk_visit_schedule.js","webpack://awsdk/./src/awsdk/model/visit/awsdk_visit_rx.js","webpack://awsdk/./src/awsdk/model/visit/awsdk_visit_procedure.js","webpack://awsdk/./src/awsdk/model/visit/awsdk_visit_diagnosis.js","webpack://awsdk/./src/awsdk/model/visit/awsdk_agenda_item_follow_up_type.js","webpack://awsdk/./src/awsdk/model/visit/awsdk_agenda_item_follow_up.js","webpack://awsdk/./src/awsdk/model/post_visit_follow_up_items/awsdk_post_visit_follow_up_item_type.js","webpack://awsdk/./src/awsdk/model/post_visit_follow_up_items/awsdk_post_visit_follow_up_item_category.js","webpack://awsdk/./src/awsdk/model/post_visit_follow_up_items/awsdk_post_visit_follow_up_detail.js","webpack://awsdk/./src/awsdk/model/post_visit_follow_up_items/awsdk_post_visit_follow_up_item.js","webpack://awsdk/./src/awsdk/model/visit/awsdk_provider_entries.js","webpack://awsdk/./src/awsdk/model/pharmacy/awsdk_pharmacy.js","webpack://awsdk/./src/awsdk/model/visit/awsdk_triage_question.js","webpack://awsdk/./src/awsdk/model/visit/awsdk_disposition.js","webpack://awsdk/./src/awsdk/model/visit/awsdk_end_reason.js","webpack://awsdk/./src/awsdk/internal/model/response/awsdk_eligibility_suggested_response.js","webpack://awsdk/./src/awsdk/model/visit/awsdk_eligibility_request_status.js","webpack://awsdk/./src/awsdk/model/visit/awsdk_visit_cost.js","webpack://awsdk/./src/awsdk/model/visit/awsdk_visit_report_detail.js","webpack://awsdk/./src/awsdk/internal/model/response/awsdk_visit_report_detail_response.js","webpack://awsdk/./src/awsdk/model/billing/awsdk_payment_request.js","webpack://awsdk/./src/awsdk/model/visit/awsdk_visit_report.js","webpack://awsdk/./src/awsdk/model/visit/awsdk_visit_report_list.js","webpack://awsdk/./src/awsdk/internal/model/response/awsdk_conditions_response.js","webpack://awsdk/./src/awsdk/model/health/awsdk_vitals.js","webpack://awsdk/./src/awsdk/internal/model/response/awsdk_vitals_response.js","webpack://awsdk/./src/awsdk/model/medication/awsdk_medication_list.js","webpack://awsdk/./src/awsdk/internal/model/response/awsdk_allergies_response.js","webpack://awsdk/./src/awsdk/model/insurance/awsdk_subscription_update.js","webpack://awsdk/./src/awsdk/internal/model/response/awsdk_subscription_response.js","webpack://awsdk/./src/awsdk/model/awsdk_address_update.js","webpack://awsdk/./src/awsdk/internal/model/response/awsdk_address_response.js","webpack://awsdk/./src/awsdk/model/consumer/awsdk_dependent_update.js","webpack://awsdk/./src/awsdk/model/awsdk_sort_order.js","webpack://awsdk/./src/awsdk/model/health/awsdk_health_document_attachment.js","webpack://awsdk/./src/awsdk/model/health/awsdk_health_document_record.js","webpack://awsdk/./src/awsdk/model/health/awsdk_health_document_record_list.js","webpack://awsdk/./src/awsdk/internal/model/response/awsdk_health_document_record_response.js","webpack://awsdk/./src/awsdk/internal/model/response/awsdk_eligibility_response.js","webpack://awsdk/./src/awsdk/internal/model/response/awsdk_dependents_list_response.js","webpack://awsdk/./src/awsdk/model/consumer/awsdk_dependent_access_request.js","webpack://awsdk/./src/awsdk/internal/model/response/awsdk_dependent_access_request_response.js","webpack://awsdk/./src/awsdk/model/notifications/awsdk_notifications.js","webpack://awsdk/./src/awsdk/internal/model/response/awsdk_notifications_response.js","webpack://awsdk/./src/awsdk/model/consumer/awsdk_consumer_override_details.js","webpack://awsdk/./src/awsdk/model/visit/awsdk_first_available_status.js","webpack://awsdk/./src/awsdk/model/visit/awsdk_first_available_data.js","webpack://awsdk/./src/awsdk/model/visit/awsdk_consumer_initiated_ivr_status.js","webpack://awsdk/./src/awsdk/model/visit/awsdk_consumer_feedback_question.js","webpack://awsdk/./src/awsdk/model/visit/awsdk_visit_extension.js","webpack://awsdk/./src/awsdk/internal/model/conference/awsdk_conference_metrics.js","webpack://awsdk/./src/awsdk/internal/model/conference/awsdk_conference_modality_type.js","webpack://awsdk/./src/awsdk/internal/model/conference/awsdk_conference_role.js","webpack://awsdk/./src/awsdk/internal/model/conference/awsdk_conference_participant.js","webpack://awsdk/./src/awsdk/internal/model/conference/awsdk_conference_details.js","webpack://awsdk/./src/awsdk/model/visit/awsdk_connection_type.js","webpack://awsdk/./src/awsdk/model/integration/awsdk_integration_context.js","webpack://awsdk/./src/awsdk/model/integration/awsdk_integration_status.js","webpack://awsdk/./src/awsdk/model/integration/awsdk_integration.js","webpack://awsdk/./src/awsdk/model/visit/awsdk_visit.js","webpack://awsdk/./src/awsdk/model/tracker/awsdk_tracker_base_object.js","webpack://awsdk/./src/awsdk/model/tracker/awsdk_tracker_unit_of_measure.js","webpack://awsdk/./src/awsdk/model/tracker/awsdk_tracker_data_point.js","webpack://awsdk/./src/awsdk/model/tracker/awsdk_tracker_entry.js","webpack://awsdk/./src/awsdk/internal/model/response/awsdk_tracker_entries_list.js","webpack://awsdk/./src/awsdk/model/tracker/awsdk_tracker_component.js","webpack://awsdk/./src/awsdk/model/tracker/awsdk_tracker_data_point_request.js","webpack://awsdk/./src/awsdk/model/tracker/awsdk_tracker_template.js","webpack://awsdk/./src/awsdk/model/tracker/awsdk_tracker_entry_request.js","webpack://awsdk/./src/awsdk/model/tracker/awsdk_tracker_request.js","webpack://awsdk/./src/awsdk/model/tracker/awsdk_trackers_search_criteria.js","webpack://awsdk/./src/awsdk/model/device_integration/awsdk_exam_data_request.js","webpack://awsdk/./src/awsdk/model/device_integration/awsdk_device_integration_request.js","webpack://awsdk/./src/awsdk/model/post_visit_follow_up_items/awsdk_post_visit_follow_up_items_type_filter.js","webpack://awsdk/./src/awsdk/model/awsdk_paginated.js","webpack://awsdk/./src/awsdk/model/post_visit_follow_up_items/awsdk_paginated_post_visit_follow_up_items.js","webpack://awsdk/./src/awsdk/internal/model/response/awsdk_paginated_post_visit_follow_up_items_response.js","webpack://awsdk/./src/awsdk/model/visit/awsdk_paginated_visit_reports.js","webpack://awsdk/./src/awsdk/internal/model/response/awsdk_paginated_visit_reports_response.js","webpack://awsdk/./src/awsdk/model/health/awsdk_paginated_health_document_records.js","webpack://awsdk/./src/awsdk/internal/model/response/awsdk_paginated_health_document_records_response.js","webpack://awsdk/./src/awsdk/model/visit/awsdk_online_visit_follow_up_item.js","webpack://awsdk/./src/awsdk/model/visit/awsdk_paginated_online_visit_follow_up_items.js","webpack://awsdk/./src/awsdk/internal/model/response/awsdk_paginated_online_visit_follow_up_items_response.js","webpack://awsdk/./src/awsdk/service/consumer_service.js","webpack://awsdk/./src/awsdk/internal/model/response/awsdk_pharmacies_response.js","webpack://awsdk/./src/awsdk/internal/model/response/awsdk_pharmacy_response.js","webpack://awsdk/./src/awsdk/service/pharmacy_service.js","webpack://awsdk/./src/awsdk/model/practice/awsdk_availability_list.js","webpack://awsdk/./src/awsdk/model/awsdk_language.js","webpack://awsdk/./src/awsdk/model/practice/awsdk_practice_sub_category.js","webpack://awsdk/./src/awsdk/model/practice/awsdk_practice_category.js","webpack://awsdk/./src/awsdk/model/practice/awsdk_practice_list.js","webpack://awsdk/./src/awsdk/internal/model/response/awsdk_practice_response.js","webpack://awsdk/./src/awsdk/model/practice/awsdk_practice_search_criteria.js","webpack://awsdk/./src/awsdk/model/practice/awsdk_practice_search_result.js","webpack://awsdk/./src/awsdk/internal/model/response/awsdk_practice_search_response.js","webpack://awsdk/./src/awsdk/model/practice/awsdk_on_demand_specialty.js","webpack://awsdk/./src/awsdk/internal/model/response/awsdk_on_demand_specialties_response.js","webpack://awsdk/./src/awsdk/model/practice/awsdk_practice_future_availability_search_criteria.js","webpack://awsdk/./src/awsdk/service/practice_service.js","webpack://awsdk/./src/awsdk/internal/model/response/awsdk_provider_details_response.js","webpack://awsdk/./src/awsdk/model/provider/awsdk_provider_availability.js","webpack://awsdk/./src/awsdk/model/provider/awsdk_providers_availability.js","webpack://awsdk/./src/awsdk/internal/model/response/awsdk_providers_availability_response.js","webpack://awsdk/./src/awsdk/internal/model/response/awsdk_providers_response.js","webpack://awsdk/./src/awsdk/model/visit/awsdk_estimated_visit_cost.js","webpack://awsdk/./src/awsdk/internal/model/response/awsdk_estimated_visit_cost_response.js","webpack://awsdk/./src/awsdk/model/provider/awsdk_provider_future_availability_search_criteria.js","webpack://awsdk/./src/awsdk/model/provider/awsdk_provider_availability_criteria.js","webpack://awsdk/./src/awsdk/model/practice/awsdk_practice_search_type.js","webpack://awsdk/./src/awsdk/service/provider_service.js","webpack://awsdk/./src/awsdk/model/device_live_streaming/awsdk_device_pairing_details.js","webpack://awsdk/./src/awsdk/internal/model/response/awsdk_device_livestream_pairing_details_response.js","webpack://awsdk/./src/awsdk/model/device_live_streaming/awsdk_device_pairing_status_enum.js","webpack://awsdk/./src/awsdk/model/device_live_streaming/awsdk_device_pairing_status.js","webpack://awsdk/./src/awsdk/internal/model/response/awsdk_device_livestream_pairing_status_response.js","webpack://awsdk/./src/awsdk/model/device_live_streaming/awsdk_device_live_stream_type.js","webpack://awsdk/./src/awsdk/service/device_live_stream_service.js","webpack://awsdk/./src/awsdk/model/appointment/awsdk_check_in_status.js","webpack://awsdk/./src/awsdk/model/appointment/awsdk_appointment.js","webpack://awsdk/./src/awsdk/model/visit/awsdk_transfer.js","webpack://awsdk/./src/awsdk/model/visit/awsdk_visit_context.js","webpack://awsdk/./src/awsdk/model/visit/awsdk_state_formulary_restriction.js","webpack://awsdk/./src/awsdk/model/visit/awsdk_visit_summary.js","webpack://awsdk/./src/awsdk/internal/model/response/awsdk_visit_cost_response.js","webpack://awsdk/./src/awsdk/internal/model/request/awsdk_visit_request_body.js","webpack://awsdk/./src/awsdk/internal/model/response/awsdk_visit_response.js","webpack://awsdk/./src/awsdk/internal/model/response/awsdk_visit_context_response.js","webpack://awsdk/./src/awsdk/internal/model/response/awsdk_visit_summary_response.js","webpack://awsdk/./src/awsdk/internal/util/custom_protocol_handler.js","webpack://awsdk/./src/awsdk/internal/model/response/awsdk_chat_report_response.js","webpack://awsdk/./src/awsdk/internal/model/request/awsdk_first_available_request.js","webpack://awsdk/./src/awsdk/internal/model/response/awsdk_first_available_response.js","webpack://awsdk/./src/awsdk/model/visit/awsdk_video_invitation.js","webpack://awsdk/./src/awsdk/internal/model/response/awsdk_video_invitation_response.js","webpack://awsdk/./src/awsdk/model/visit/awsdk_conference_status.js","webpack://awsdk/./src/awsdk/model/visit/awsdk_video_participant.js","webpack://awsdk/./src/awsdk/internal/model/response/awsdk_video_participant_response.js","webpack://awsdk/./src/awsdk/model/visit/awsdk_speed_pass.js","webpack://awsdk/./src/awsdk/internal/model/response/awsdk_speed_pass_response.js","webpack://awsdk/./src/awsdk/model/visit/awsdk_video_context.js","webpack://awsdk/./src/awsdk/model/visit/awsdk_provider_note.js","webpack://awsdk/./src/awsdk/internal/model/response/awsdk_notes_response.js","webpack://awsdk/./src/awsdk/internal/logger/server_logger.js","webpack://awsdk/./src/awsdk/internal/logger/combined_logger.js","webpack://awsdk/./src/awsdk/internal/model/awsdk_visit_logging_data_object.js","webpack://awsdk/./src/awsdk/model/visit/awsdk_visit_search_criteria.js","webpack://awsdk/./src/awsdk/internal/model/response/awsdk_visits_response.js","webpack://awsdk/./src/awsdk/internal/model/awsdk_guest_logging_data_object.js","webpack://awsdk/./src/awsdk/internal/model/response/awsdk_video_invitation_list_response.js","webpack://awsdk/./src/awsdk/service/visit_service.js","webpack://awsdk/./src/awsdk/internal/model/response/awsdk_appointment_response.js","webpack://awsdk/./src/awsdk/model/awsdk_platform_type.js","webpack://awsdk/./src/awsdk/model/appointment/awsdk_appointment_readiness.js","webpack://awsdk/./src/awsdk/internal/model/response/awsdk_appointment_readiness_response.js","webpack://awsdk/./src/awsdk/internal/model/response/awsdk_appointments_response.js","webpack://awsdk/./src/awsdk/model/appointment/awsdk_appointment_update_request.js","webpack://awsdk/./src/awsdk/model/appointment/awsdk_appointment_readiness_request.js","webpack://awsdk/./src/awsdk/service/appointment_service.js","webpack://awsdk/./src/awsdk/model/awsdk_topic_type.js","webpack://awsdk/./src/awsdk/model/secure_message/awsdk_secure_message.js","webpack://awsdk/./src/awsdk/model/secure_message/awsdk_mailbox_message.js","webpack://awsdk/./src/awsdk/model/secure_message/awsdk_inbox_message.js","webpack://awsdk/./src/awsdk/model/secure_message/awsdk_mailbox.js","webpack://awsdk/./src/awsdk/model/secure_message/awsdk_inbox.js","webpack://awsdk/./src/awsdk/internal/model/response/awsdk_inbox_response.js","webpack://awsdk/./src/awsdk/model/awsdk_account.js","webpack://awsdk/./src/awsdk/model/secure_message/awsdk_message_type.js","webpack://awsdk/./src/awsdk/model/secure_message/awsdk_attachment.js","webpack://awsdk/./src/awsdk/model/secure_message/awsdk_detailed_message.js","webpack://awsdk/./src/awsdk/internal/model/response/awsdk_detailed_message_response.js","webpack://awsdk/./src/awsdk/model/secure_message/awsdk_sent_message.js","webpack://awsdk/./src/awsdk/model/secure_message/awsdk_sent_messages.js","webpack://awsdk/./src/awsdk/internal/model/response/awsdk_sent_messages_response.js","webpack://awsdk/./src/awsdk/model/secure_message/compose/awsdk_upload_attachment.js","webpack://awsdk/./src/awsdk/model/secure_message/compose/awsdk_message_draft.js","webpack://awsdk/./src/awsdk/model/secure_message/awsdk_secure_message_contact.js","webpack://awsdk/./src/awsdk/model/awsdk_named_entity.js","webpack://awsdk/./src/awsdk/model/secure_message/compose/awsdk_message_action_type.js","webpack://awsdk/./src/awsdk/model/secure_message/compose/awsdk_new_message_draft.js","webpack://awsdk/./src/awsdk/model/secure_message/compose/awsdk_reply_message_draft.js","webpack://awsdk/./src/awsdk/model/secure_message/compose/awsdk_forward_message_draft.js","webpack://awsdk/./src/awsdk/internal/model/response/awsdk_secure_message_contacts_response.js","webpack://awsdk/./src/awsdk/service/secure_message_service.js","webpack://awsdk/./src/awsdk/internal/model/response/awsdk_credit_card_types_response.js","webpack://awsdk/./src/awsdk/internal/model/response/awsdk_countries_response.js","webpack://awsdk/./src/awsdk/internal/model/response/awsdk_health_plans_response.js","webpack://awsdk/./src/awsdk/model/awsdk_modality_vendor.js","webpack://awsdk/./src/awsdk/internal/model/response/awsdk_initialization_response.js","webpack://awsdk/./src/awsdk/internal/model/response/awsdk_languages_response.js","webpack://awsdk/./src/awsdk/internal/model/response/awsdk_relationships_response.js","webpack://awsdk/./src/awsdk/internal/model/response/awsdk_system_configuration_response.js","webpack://awsdk/./src/awsdk/internal/model/response/validate_sdkapikey_response.js","webpack://awsdk/./src/awsdk/internal/model/response/awsdk_topic_types_response.js","webpack://awsdk/./src/awsdk/internal/model/response/awsdk_provider_types_response.js","webpack://awsdk/./src/awsdk/internal/model/response/awsdk_tracker_templates_list.js","webpack://awsdk/./src/awsdk/internal/model/response/awsdk_modalities_response.js","webpack://awsdk/./src/awsdk/internal/model/response/awsdk_platform_type_response.js","webpack://awsdk/./src/awsdk/internal/service/initialization_service.js","webpack://awsdk/./src/awsdk/service/ivr_service.js","webpack://awsdk/./src/awsdk/internal/model/awsdk_tech_check_url.js","webpack://awsdk/./src/awsdk/internal/model/response/awsdk_tech_check_url_response.js","webpack://awsdk/./src/awsdk/service/test_my_computer_service.js","webpack://awsdk/./src/awsdk/awsdk.js","webpack://awsdk/./src/awfre/model/awfre_dataobject.js","webpack://awsdk/./src/awfre/model/response/awfre_response.js","webpack://awsdk/./src/awfre/model/awfre_rest_link.js","webpack://awsdk/./src/awfre/model/healthplans/awfre_health_plan.js","webpack://awsdk/./src/awfre/model/awfre_service.js","webpack://awsdk/./src/awfre/model/response/awfre_initialization_response.js","webpack://awsdk/./src/awfre/internal/service/fre_initialization_service.js","webpack://awsdk/./src/awfre/error/awfre_error_code.js","webpack://awsdk/./src/awfre/error/awfre_error.js","webpack://awsdk/./src/awfre/model/recommendations/awfre_demographics.js","webpack://awsdk/./src/awfre/model/recommendations/awfre_recommendations_request.js","webpack://awsdk/./src/awfre/model/recommendations/awfre_visit_cost.js","webpack://awsdk/./src/awfre/model/recommendations/awfre_practice.js","webpack://awsdk/./src/awfre/model/recommendations/awfre_enterprise.js","webpack://awsdk/./src/awfre/model/response/awfre_recommendations_response.js","webpack://awsdk/./src/awfre/model/recommendations/awfre_recommendations_additional_data_request.js","webpack://awsdk/./src/awfre/service/fre_service.js","webpack://awsdk/./src/awfre/awfre.js","webpack://awsdk/./src/awfre/awfre_factory.js","webpack://awsdk/./src/awsdk/awsdk_factory.js","webpack://awsdk/./src/index.js"],"names":["root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","_getPrototypeOf","setPrototypeOf","getPrototypeOf","__proto__","instance","Constructor","TypeError","_defineProperties","target","props","length","descriptor","configurable","writable","protoProps","staticProps","subClass","superClass","constructor","_typeof","assertThisInitialized","self","__deprecationCache","default","behavior","extra","removal","message","push","out","join","console","warn","AWCoreSDKVideoParticipantType","CONSUMER","PROVIDER","GUEST","freeze","obj","_get_object","_get_object2","_pattern","template","map","pattern","mapper","_","k","replace","iterator","_createClass","defineProperties","AWCoreSDKBaseEventHandler","data","_classCallCheck","this","Array","isArray","Error","type","handler","__data","node","domNode","document","getElementById","lastChild","removeChild","toSJISFunction","CODEWORDS_COUNT","getSymbolSize","version","getSymbolTotalCodewords","getBCHDigit","digit","setToSJISFunction","f","isKanjiModeEnabled","toSJIS","kanji","VersionCheck","Regex","NUMERIC","id","bit","ccBits","ALPHANUMERIC","BYTE","KANJI","MIXED","getCharCountIndicator","isValid","getBestModeForData","dataStr","testNumeric","testAlphanumeric","testKanji","toString","from","defaultValue","string","toLowerCase","fromString","e","_en2","_interopRequireDefault","_iw2","_es2","en","en_US","iw","iw_IL","es","es_US","_error","_error2","AWCoreSDKVendor","PEXIP","VIDYO","vendorName","result","toUpperCase","GenericError","Buffer","TYPED_ARRAY_SUPPORT","arr","Uint8Array","foo","typedArraySupport","K_MAX_LENGTH","arg","offset","allocUnsafe","that","ArrayBuffer","array","byteOffset","byteLength","RangeError","buf","undefined","fromArrayLike","fromArrayBuffer","createBuffer","actual","write","slice","isBuffer","len","checked","copy","buffer","val","fromObject","size","utf8ToBytes","units","codePoint","Infinity","leadSurrogate","bytes","charCodeAt","isView","species","isFinite","remaining","src","dst","blitBuffer","utf8Write","start","end","newBuf","subarray","sliceLen","targetStart","set","fill","code","concat","list","pos","_isBuffer","b","alloc","_empty","_empty2","BaseStep","wizard","__wizard","messages","drawerDOMNode","classList","remove","drawerDOMFragment","createRange","createContextualFragment","getDrawerHTMLTemplate","appendChild","stepTitleDOMNode","innerText","getTitle","setupDOMEventHandlers","_this","passButton","querySelector","onclick","event","preventDefault","finishStep","stepDone","skipButton","failButton","add","retryButton","passed","deviceId","deviceName","stringifedCurrentDevices","localStorage","getItem","currentDevices","JSON","parse","setItem","stringify","definition","noop","isIE","navigator","test","userAgent","logMethods","bindMethod","methodName","method","Function","apply","arguments","traceForIE","log","trace","realMethod","replaceLoggingMethods","level","loggerName","methodFactory","debug","enableLoggingWhenConsoleArrives","defaultMethodFactory","Logger","defaultLevel","currentLevel","storageKey","getPersistedLevel","storedLevel","ignore","cookie","location","indexOf","encodeURIComponent","exec","levels","getLevel","setLevel","persist","SILENT","levelNum","levelName","persistLevelIfPossible","setDefaultLevel","enableAll","TRACE","disableAll","initialLevel","defaultLogger","_loggersByName","getLogger","logger","_log","noConflict","getLoggers","superPropBase","_get","receiver","Reflect","base","desc","getOwnPropertyDescriptor","reject","msg","Promise","polyfill","forEach","meth","_navigator$mediaDevic","mediaDevices","defaults","visitPollingInterval","AWCoreSDKVisitConfiguration","args","assign","AWCoreSDKVisitLoggingDataObject","_awcoresdk_video_participant_type","_awcoresdk_video_participant_type2","AWCoreSDKVideoParticipant","participant","__participant","participantType","videoNode","nameNode","subtitleNode","multiwayParticipantNode","participantNode","AWCoreSDKVideoConfiguration","config","__config","attachPoints","visitConfig","portalUri","roomKey","roomPin","sessionManager","localParticipant","remoteParticipants","loopbackMode","requiredHandlers","handlers","consumer","isConsumer","filter","participantFilter","isProvider","visit","fullName","assignedProvider","displayNameOverride","endDetailsCallback","callback","checkForConnectivityCallback","pollForConnectionCallback","visitLoggingData","locale","vendor","serviceUrl","audioDeviceId","videoDeviceId","endButtonPressedCallback","cancelButtonPressedCallback","videoConsoleContainer","systemConfiguration","turnServerConfiguration","isIVRCallbackEnabled","plugins","g","L","M","Q","H","__spreadArrays","il","a","j","jl","BrowserInfo","os","NodeInfo","process","platform","BotInfo","bot","userAgentRules","operatingSystemRules","parseUserAgent","ua","matchedRule","reduce","matched","_a","browser","regex","uaMatch","match","versionParts","split","count","output","ii","createVersionParts","detectOS","getNodeVersion","detect","ADD","DROP","some","item","AWCoreSDKVideoMetrics","visitId","isSignedIn","isJoined","isEndRequested","videoFailureReason","manualRetryCount","autoRetryCount","_setPrototypeOf","arrayLikeToArray","minLen","arr2","ECLevel","EC_BLOCKS_TABLE","EC_CODEWORDS_TABLE","getBlocksCount","errorCorrectionLevel","getTotalCodewordsCount","isNaN","byte","RegExp","BYTE_KANJI","TEST_KANJI","TEST_NUMERIC","TEST_ALPHANUMERIC","str","hex2rgba","hex","hexCode","hexValue","parseInt","getOptions","options","color","margin","width","scale","dark","light","rendererOpts","getScale","qrSize","opts","getImageWidth","Math","floor","qrToImageData","imgData","qr","symbolSize","scaledMargin","palette","posDst","pxColor","_detectBrowser","_participant2","_awcoresdk_base_event_handler2","_video_metrics2","_visit_configuration2","_attach2","_replace2","_fullscreen2","_logger2","_event","_videoconsole_template2","_awcoresdk_vendor2","_spinner_manager2","_view_renderer2","_retrieve_messages2","AWCoreSDKInternalVideoConsole","videoConfig","__videoConfig","__events","__requiredEventsToHandle","__verifyConfig","__registeredHandlers","__currentDevices","persistentId","stringifiedMetrics","stringifiedState","sessionStorage","existingMetrics","existingState","__state","IVRCallbackRetryCount","pageRefreshCount","metrics","__saveState","visitPollingDelegate","updateMetrics","showSelfView","__showSelfView","__refreshInProgress","HTMLElement","__verifyRequiredHandlers","eventType","stopImmediatePropagation","isInFullScreenMode","toggleFullScreen","endVisitModalTitle","endVisitDescription","cancelVisitModalTitle","cancelVisitDescription","__toggleProviderEndVisitOptions","disableProviderCancelDuringVisit","__showEndVisitContent","__openExitVisitModal","selfVideoContainer","hideSelfVideo","selfVideoParentContainer","which","keyCode","exitVisitModalProviderBody","exitVisitModalProviderFooter","exitVisitModalFooter","__setupVideoControllersListeners","camera","__logger","info","toggleCamera","onkeypress","_isEnterKeyPressed","mic","toggleMic","toggleSelfView","switchCameraButton","toggleSwitchCamera","leave","innerHTML","webrtc_end_visit","leaveCall","refreshButton","refresh","fullScreen","callMe","hasAttribute","__callMe","cancelVisitButton","_handleCancelVisitButton","spinnerRefreshButton","permissionIvrButton","__onSpinnerIVRClick","spinnerIvrButton","endVisitLink","__onEndVisitButtonHandler","endVisitButton","__connect","CHANGE","isFullScreen","__toggleClass","currentNode","head","createShadowRoot","attachShadow","ShadowRoot","parentNode","__documentClick","displayMessageEle","waitDisplayMessage","connecting_with_remote","isTypeOfUserAllowedCancel","providerAllowedToCancel","consumerAllowedToCancel","disableConsumerCancelDuringVisit","__startCancelTimer","viewRenderer","context","isRefresh","__spinnerManager","__startInactiveTimer","disconnect","stop","__updateRetryMetrics","__shouldRefresh","success","failure","eventHandler","_this2","__replaceOrAddHandler","existingIndex","wasUserRequested","kind","selfVideo","srcObject","getSettings","_setNodeAttribute","off","rootContainer","topPaneWrapper","mutedIcon","toggle","videoContainer","videoControlsContainer","spinnerContainer","participant_connection_issue","addEventListener","__resetInactiveTimer","__timeoutID","setTimeout","__goInactive","clearTimeout","__goActive","cancelVisitButtonParent","providerConnected","cancelVisitButtonSubText","timeout","__cancelTimer","__showCancelVisitWaitingButton","media_permission_denied","hideSwitchToPhone","user","activeSpeakerNameNode","activeSpeakerSubtitleNode","specialty","age","consumer_subtitle_age","spacer","htmlStr","hideConsumerStateEnabled","getGenderDisplay","legalResidence","__clearOutSubtitleNode","genderIdentity","genderText","gender_unspecified","biologicalSex","localizedGender","genderDisplay","genderSupportEnabled","updateRemoteParticipantLabels","uuid","fallback","matchingParticipant","participantById","__videoConsoleDOMFragment","error","keys","currentFunction","videoConsoleContent","__setupAttachPoints","__setupVideoParticipants","__setupExitModal","__restoreSelfView","toggleCallMeDisabled","isGuest","webrtc_guest_leave_visit","permissionsCallMeContainer","__buildBrowserClassString","_videoConfig$attachP","localViewName","rootParticipantSubtitle","participant0","mainVideo","__createWebRTCVideoParticipant","consumerFullName","providerFullName","webrtc_guest_name_default","_this3","_videoConfig","exitVisitModalContinueExit","confirmEnd","endVisitRadioButton","__onExitRadioButtonClicked","cancelVisitRadioButton","_this4","__setupProviderExitModal","exitVisitModal","endVisitModal","disregardEnd","closeModal","dismissModal","__closeExitVisitModal","exitVisit","__exitVisit","exitVisitModalProviderComments","then","finally","exitVisitModalGoBack","exitType","comments","exitVisitHandler","__findHandler","millisecondsRemaining","timeRemainingMilliseconds","timeRemaining","webrtc_end_visit_confirmation_singular","webrtc_end_visit_confirmation_plural","inProgress","isInProgress","endVisitRadio","__showCancelVisitContent","exitVisitModalProviderCancelContainer","webrtc_cancel_visit","_videoConfig$localPa","participantRole","role","activeCall","pendingCall","selfDisconnected","unsuccessfulCall","conferenceDetails","participants","participantStatus","status","modalityType","isCurrentUser","__participantIsCurrentUser","ivr","__updateUiCallState","allowsVisitAddPhone","__disableSwitchToPhone","__enableSwitchToPhone","__enterPhoneOnlyMode","__transitionToSwitchToPhoneState","talk_via_phone_calling","call_me_active","__phoneOnlyConnected","removeAttribute","getElementsByClassName","connected","setAttribute","cameraSection","settingsContentCamera","header","__createNode","settings_camera_list_header","micSection","settingsContentMic","settings_microphone_list_header","speakerSection","settingsContentSpeaker","settings_speaker_list_header","resolve","__eventMapper","mapFromType","find","settingsContent","contains","settings","__settingsConfig","createElement","_node$classList","_len","rest","_key","el","fn","handle","connect","show","__delegateToHandler","_videoConfig$attachP2","phoneOnly","phoneOnlySub","_videoConfig$localPa2","participantPhone","formattedInitiatorEngagementOverridePhone","formattedPhone","phone_only_sub","phone_only_provider","phone_only_guest","phone_video_ended","_videoConfig$attachP3","phone_only_success","enable","_videoConfig$attachP4","newState","newCurrentDevices","selector","getAttribute","nodes","querySelectorAll","methods","every","removeEventListener","_error_code","_error_code2","AWCoreSDKError","reason","recoverySuggestion","httpResponseCode","__errorCode","otherError","__error","__reason","__recoverySuggestion","__httpResponseCode","genericError","firstMark","mark","dump","performance","measure","duration","reset","AWCoreSDKBaseEventMapper","FAILED_TO_COMMUNICATE_WITH_AMERICAN_WELL_TELEHEALTH_PLATFORM","VIDYO_FAILED","INITIATION_FAILED","PROVIDER_DISCONNECT","CONSUMER_DISCONNECT","_slicedToArray","_arr","_n","_d","_e","_s","_i","next","done","err","sliceIterator","cache","subscribe","topic","cb","publish","unsubscribe","_handle","splice","AudioContext","webkitAudioContext","stream","audioContext","analyser","createAnalyser","microphone","createMediaStreamSource","scriptProcessorNode","createScriptProcessor","smoothingTimeConstant","fftSize","destination","onaudioprocess","frequencies","frequencyBinCount","getByteFrequencyData","totalAmplitude","volume","close","state","sdkVersion","rng","bytesToUuid","rnds","random","semver","v","q","patchIndex","substring","tryParse","Number","validate","compareVersions","v1","v2","s1","s2","max","n1","n2","sp1","sp2","p1","p2","allowedOperators","operatorResMap","compare","operator","op","validateOperator","res","isNativeReflectConstruct","_construct","Parent","Class","construct","URLSearchParams","query","index","pairs","dict","secret","charAt","appendTo","decode","URLSearchParamsProto","plus","replacer","decodeURIComponent","encode","append","delete","getAll","has","thisArg","getOwnPropertyNames","toJSON","iterable","names","items","shift","values","entries","sort","entry","global","arrayWithHoles","iterableToArrayLimit","unsupportedIterableToArray","nonIterableRest","canPromise","QRCode","CanvasRenderer","SvgRenderer","renderCanvas","renderFunc","canvas","text","argsNum","isLastArgCb","getContext","toCanvas","render","toDataURL","renderToDataURL","_vidyo_video_console2","_video_configuration2","_awcoresdk_visit_end_details2","_visit_logging_data_object2","_pexip_video_console2","_rtc_supported2","_screenshare2","AWCoreSDKVideoConsole","_videoConfig$require","__visitEndDetails","__handleEndDetails","__checkConnectivity","__pollForConnection","_toConsumableArray","__eventHandlers","__isValidVisitConfig","__visitConfig","delegate","updateMetricsCallback","currentVisit","internalVideoConsole","__createInternalVideoConsole","__builtinPlugins","__registerPlugins","__initializeInternalState","__logWebRTCVisitInformation","interval","pollForVisit","updateConfigVisit","__waitForVisitToFinish","__localParticipantJoined","stopRetries","onVisitError","__runPlugins","catch","body","userRequested","showPermissionDeniedMessage","enabled","stub","__hasProcessedVisitEnd","connectionErrorCount","finished","onVisitUpdated","__isVisitEnded","cancelTokenRefresh","onVisitEnd","includes","errorCode","handleInternetDisconnection","numberOfRetries","clearCancelTimer","updateConnectionStatus","participantVendorId","_this5","refreshInProgress","_this6","onCallMeSelected","_this7","isRetry","onIVRCallback","onExitVisitRequested","endDetails","language","providerId","consumerId","disposition","pollForVisitLowTimeout","_this8","connectivityPoll","updatedVisit","_this9","registerPlugin","Plugin","it","Ctor","_Plugin","predicate","dunder","plugin","__rtcSupported","__onConferenceEnded","__onConferenceActive","__onCallMeSelected","__initiateIVRCallback","__onExitVisitRequested","arrayWithoutHoles","iterableToArray","nonIterableSpread","_media_devices2","_TMCLite2","_i18n2","_monitor_stream2","retryClickHandler","reload","TMCLite","preppedTemplate","videoDOMNode","cameraSelectDOMNode","onchange","__handleCameraChange","microphoneSelectionAreaDOMNode","microphoneSelectDOMNode","__handleMicrophoneChange","__useFauxMicrophoneSelection","selectFaux","option","settings_default","selected","cameraErrorDOMNode","microphoneErrorDOMNode","microphoneMeterDOMNode","container","__checkCamera","__checkMicrophone","__stopVideoStreams","getUserMedia","audio","video","exact","AWVideoStream","videoTrack","getVideoTracks","cameraDeviceId","cameraName","label","__selectedCameraId","__selectedCameraLabel","__storeDevice","__reportState","enumerateDevices","devices","__writeCameraError","__stopAudioStreams","AWAudioStream","audioTrack","getAudioTracks","microphoneDeviceId","microphoneName","__selectedMicrophoneId","__selectedMicrophoneName","__fireUpDaMeter","__writeMicrophoneError","sub","__normalizeError","textContent","tmc_lite_camera_no_permission_header","tmc_lite_camera_no_permission_sub","tmc_lite_camera_not_available_header","tmc_lite_camera_not_available_sub","tmc_lite_camera_no_devices_header","tmc_lite_camera_no_devices_sub","tmc_lite_unknown_header","tmc_lite_unknown_sub","tmc_lite_microphone_no_permission_header","tmc_lite_microphone_no_permission_sub","tmc_lite_microphone_not_available_header","tmc_lite_microphone_not_available_sub","tmc_lite_microphone_no_devices_header","tmc_lite_microphone_no_devices_sub","partialState","onStatus","getTracks","__monitorStream","pendingAudioTimer","__showMicrophoneError","__onMonitorStream","audioActive","__colorMeterBars","__detectAudio","bars","numberLit","round","litBars","_camera2","_microphone2","_speaker2","_internet2","_get_started2","_summary2","_Wizard2","_defineProperty","AWCoreSDKTestMyComputerWizard","__container","__microphones","__speakers","__cameras","__testMyComputerResult","__setupWizardSteps","stepName","__currentStepName","step","__wizardSteps","__updateProgressTracker","drawDOM","__updateTechCheck","__teardownCurrentStepDOM","nextStepName","runStep","doneCallback","__getDevices","__teardownDOM","__drawSharedDOM","stepNames","GET_STARTED","__videoStream","__videoDOMNode","__microphoneStream","__internetDOMNode","__noVideoDOMNode","__showNoVideoContent","techCheckPassed","cameraPassed","microphonePassed","speakerPassed","datePassedTechCheck","Date","_wizardSteps","__stepNames","CAMERA","MICROPHONE","SPEAKER","INTERNET","SUMMARY","previousStepName","device","__progressTrackerDOMNode","_loop","fragment","getProgressTrackerHTMLTemplate","firstElementChild","__progressTrackerBackDOMNode","documentFragment","createDocumentFragment","divElement","imgElement","textElement","createTextNode","getProgressTrackerTitle","stepIconPrefix","hasPassed","getStepTooltip","spantextElement","spanElement","sharedDOMFragment","__getSharedDOMString","__drawerDOMNode","__contentDOMNode","__stepTitleDOMNode","showVideoContent","teardownDOM","speedTestConfig","videoStream","microphoneStream","parts","trim","getProp","accept_permission","call_me","call_me_video_problems","camera_failed_help","camera_failed","camera_troubleshoot_0","camera_troubleshoot_1","camera_troubleshoot_2","camera_troubleshoot_3","camera_troubleshoot_4","camera_troubleshoot_5","can_cancel_rejoin","can_cancel","connecting_guest","connecting_guest_subtext","connecting_remote_extended","connecting_remote_extended_subtext","connecting_remote_extended_subtext_ivr","connecting_screen_1_header","connecting_screen_2_header","connecting_screen_3_header","connecting_screen_1_subtext","connecting_screen_2_subtext","connecting_screen_3_subtext","connecting_your_video","connecting_your_video_extended","connecting_your_video_subtext_extended","connecting_your_video_subtext_extended_ivr","consumer_reconnecting","continue","end_visit_confirmation_title","full_screen","get_started_detail","get_started","header_browser_permission","internet_troubleshoot_0","internet_troubleshoot_1","internet_troubleshoot_2","microphone_troubleshoot_0","microphone_troubleshoot_1","microphone_troubleshoot_2","microphone_troubleshoot_3","microphone_troubleshoot_4","microphone_troubleshoot_5","no","participant_type_label_consumer","participant_type_label_guest","participant_type_label_provider","phone_only","provider_reconnecting","reconnecting_remote","reconnecting_remote_as_guest_subtext","reconnecting_consumer_subtext","reconnecting_provider_subtext","reconnecting_your_video_main","reconnecting_your_video_extended","reconnecting_your_video_extended_subtext","reconnecting_your_video_extended_subtext_ivr","reconnecting_your_video_subtext","reconnecting_your_video_subtext_extended","screenshare","screenshare_disabled","select_camera","select_microphone","select_speaker","settings_details","speaker_troubleshoot_0","speaker_troubleshoot_1","speaker_troubleshoot_2","speaker_troubleshoot_3","start_test","step_camera_title","step_get_started_progress_title","step_get_started_title","step_internet_fail","step_internet_fail_help","step_internet_heading","step_internet_pass","step_internet_skip","step_internet_title","step_microphone_details","step_microphone_fail","step_microphone_heading","step_microphone_title","step_retry","step_skip","step_speaker_failed_help","step_speaker_failed","step_speaker_intro","step_speaker_title","step_summary_fail_details","step_summary_fail_details_no_phone","step_summary_fail","step_summary_pass","step_summary_title","switch","talk_via_phone_pretext","talk_via_phone","test_camera_tooltip","test_internet_tooltip","test_microphone_tooltip","test_speaker_tooltip","troubleshoot_tips","try_again","video_no_access","video_no_access_details","video_prompt","webrtc_additional_comments","webrtc_back","webrtc_cancel_visit_confirmation","webrtc_cancel_visit_sub","webrtc_confirm_end","webrtc_disregard_end","webrtc_end_visit_confirmation","webrtc_refresh_visit","webrtc_visit_report_note","yes","self_video","tmc_lite_retry","tmc_lite_camera_description","tmc_lite_microphone_meter_description","getRandomValues","crypto","msCrypto","rnds8","byteToHex","substr","bth","ReferenceError","freeExports","freeGlobal","regexAstralSymbols","regexAsciiWhitelist","regexBmpWhitelist","regexEncodeNonAscii","encodeMap","'","regexEscape","escapeMap","regexInvalidEntity","regexInvalidRawCodePoint","regexDecode","decodeMap","decodeMapLegacy","decodeMapNumeric","invalidReferenceCodePoints","stringFromCharCode","String","fromCharCode","propertyName","merge","codePointToSymbol","strict","parseError","hexEscape","decEscape","encodeEverything","useNamedReferences","allowUnsafeSymbols","escapeCodePoint","decimal","escapeBmpSymbol","symbol","$0","high","low","html","$1","$2","$3","$4","$5","$6","$7","$8","semicolon","decDigits","hexDigits","reference","isAttributeValue","he","webpackPolyfill","deprecate","paths","children","sham","Proxy","BufferUtil","Utils","BitBuffer","BitMatrix","AlignmentPattern","FinderPattern","MaskPattern","ECCode","ReedSolomonEncoder","Version","FormatInfo","Mode","Segments","setupFormatInfo","matrix","maskPattern","mod","bits","getEncodedBits","createData","segments","put","getLength","dataTotalCodewordsBits","getLengthInBits","putBit","remainingByte","bitBuffer","totalCodewords","ecTotalCodewords","dataTotalCodewords","ecTotalBlocks","blocksInGroup1","totalCodewordsInGroup1","dataCodewordsInGroup1","dataCodewordsInGroup2","ecCount","rs","dcData","ecData","maxDataSize","dataSize","createCodewords","createSymbol","fromArray","estimatedVersion","rawSegments","rawSplit","getBestVersionForData","bestVersion","dataBits","moduleCount","getPositions","row","col","setupFinderPattern","setupTimingPattern","setupAlignmentPattern","setupVersionInfo","inc","bitIndex","byteIndex","isReserved","setupData","getBestMask","applyMask","mask","toSJISFunc","bufIndex","num","reservedBit","reserved","xor","getRowColCoords","posCount","intervals","ceil","positions","reverse","coords","posLength","Patterns","PATTERN000","PATTERN001","PATTERN010","PATTERN011","PATTERN100","PATTERN101","PATTERN110","PATTERN111","PenaltyScores","getMaskAt","getPenaltyN1","points","sameCountCol","sameCountRow","lastCol","lastRow","getPenaltyN2","last","getPenaltyN3","bitsCol","bitsRow","getPenaltyN4","darkCount","modulesCount","abs","setupFormatFunc","numPatterns","bestPattern","lowerPenalty","penalty","Polynomial","degree","genPoly","initialize","generateECPolynomial","pad","paddedData","remainder","buff","GF","mul","coeff","divident","divisor","poly","exp","EXP_TABLE","LOG_TABLE","x","y","base64","ieee754","kMaxLength","encodingOrOffset","encoding","isEncoding","assertSize","loweredCase","base64ToBytes","slowToString","hexSlice","utf8Slice","asciiSlice","latin1Slice","base64Slice","utf16leSlice","swap","bidirectionalIndexOf","dir","arrayIndexOf","lastIndexOf","indexSize","arrLength","valLength","read","readUInt16BE","foundIndex","found","hexWrite","strLen","parsed","asciiWrite","byteArray","asciiToBytes","latin1Write","base64Write","ucs2Write","hi","lo","utf16leToBytes","fromByteArray","min","secondByte","thirdByte","fourthByte","tempCodePoint","firstByte","bytesPerSequence","codePoints","decodeCodePointsArray","SlowBuffer","INSPECT_MAX_BYTES","poolSize","_augment","allocUnsafeSlow","swap16","swap32","swap64","equals","inspect","thisStart","thisEnd","thisCopy","targetCopy","ret","toHex","checkOffset","ext","checkInt","objectWriteUInt16","littleEndian","objectWriteUInt32","checkIEEE754","writeFloat","noAssert","writeDouble","readUIntLE","readUIntBE","readUInt8","readUInt16LE","readUInt32LE","readUInt32BE","readIntLE","pow","readIntBE","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readFloatLE","readFloatBE","readDoubleLE","readDoubleBE","writeUIntLE","writeUIntBE","writeUInt8","writeUInt16LE","writeUInt16BE","writeUInt32LE","writeUInt32BE","writeIntLE","limit","writeIntBE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","writeFloatLE","writeFloatBE","writeDoubleLE","writeDoubleBE","INVALID_BASE64_RE","toByteArray","stringtrim","base64clean","b64","lens","getLens","validLen","placeHoldersLen","tmp","Arr","_byteLength","curByte","revLookup","uint8","extraBytes","len2","encodeChunk","lookup","isLE","mLen","nBytes","eLen","eMax","eBias","nBits","NaN","rt","LN2","G18_BCH","getReservedBitsCount","getTotalBitsFromDataArray","totalBits","reservedBits","getBitsLength","getCapacity","usableBits","seg","ecl","currentVersion","getBestVersionForMixedData","getBestVersionForDataLength","G15_BCH","NumericData","AlphanumericData","ByteData","KanjiData","dijkstra","getStringByteLength","unescape","getSegments","getSegmentsFromString","byteSegs","kanjiSegs","numSegs","alphaNumSegs","getSegmentBitsLength","buildSingleSegment","modesHint","bestMode","acc","graph","table","prevNodeIds","nodeGroup","currentNodeIds","lastCount","prevNodeId","buildGraph","segs","buildNodes","path","find_path","optimizedSegs","curr","prevSeg","mergeSegments","group","remainingNum","ALPHA_NUM_CHARS","single_source_shortest_paths","predecessors","costs","closest","u","cost_of_s_to_u","adjacent_nodes","cost_of_s_to_u_plus_cost_of_e","cost_of_s_to_v","open","PriorityQueue","make","empty","pop","cost","extract_shortest_path_from_predecessor_list","T","queue","sorter","default_sorter","qrData","canvasEl","getCanvasElement","ctx","image","createImageData","clearRect","height","style","clearCanvas","putImageData","quality","getColorAttrib","attrib","alpha","toFixed","svgCmd","cmd","qrcodesize","bg","moveBy","newRow","lineLength","qrToPath","viewBox","svgTag","_internal_video_console2","_vidyo2","_awcoresdk_vidyo_event_mapper2","_awcoresdk_vidyo_visit_state2","_awcoresdk_operation_type2","_awcoresdk_vidyo_sendRequest_response2","AWCoreSDKVidyoConsole","_AWCoreSDKInternalVid","_possibleConstructorReturn","__setupVideoConsole","__visitState","__endDetailsCallback","__checkForConnectivityCallback","__pollForConnectionCallback","__setIds","_inherits","__isFullScreen","__participantsCount","__createVidyoClient","__setupConsoleEventHandlers","__startVidyoClient","parent","successfullySent","__vidyoClientObj","sendEvent","leaveEvent","leaveHandler","tempState","isAudioMuted","micEvent","willMute","isVideoMuted","camEvent","__sendRequest","participantRequest","sendRequest","updatedParticipants","uniqueList","Set","participantsChangedResult","checkUpdateParticipantList","multiwayParticipantContainer","__updateMultiway","changedParticipant","numberOfRemoteParticipants","__addMultiwayParticipantBox","__showMultiwayParticipantContainer","__hideMultiwayParticipantContainer","__removeMultiwayParticipantBox","boxElement","nameElement","typeElement","__createMultiwayParticipantTypeLabel","multiwayParticipant","participantTypeLabel","guestNumber","numberOfParticipantsOfType","eventObj","guestName","__sendGuestLogin","addParticipant","activeEid","updateRemoteParticipantLabelsFromConfig","__sendEndDetails","streamCount","checkParticipantsChanged","handleParticipantChange","indicateLocalVideoActive","request","stringifiedRequest","ERROR_OK","inEvent","typeRequest","requestId","pin","__waitingOnReconnectName","settingsConfig","__renderSettings","sections","cameras","__addElementToNode","currentCamera","mics","microphones","currentMicrophone","speakers","currentSpeaker","currentMediaIndex","deviceType","select","__settingsChangedListener","selectedIndex","__removeDuplicateDefaultMediaTypes","__settingsCreated","mediaTypeArray","settingRequest","__createSettingRequestFor","devType","hangTightMessage","isReturn","getParticipant","connectionMessage","reconnectingMessage","showDisconnectOption","removedParticipant","isCoreParticipant","handleReconnectingDisplay","handleWaitingForReturn","updateWaitingDisplayInterval","handleReconnectedDisplay","determineWhoToWaitFor","handleWaitingForParticipant","handleParticipantRemoved","_this10","__setupDOMEventHandlers","__handleSettingsClick","__providerKey","__consumerKey","stopPropagation","mediaConfigurations","__populateSettings","vidyo","setDefaultOutEventCallbackMethod","setOutEventCallbackObject","setLogCallback","setSessionManager","_this11","__setupVidyoClientEventHandlers","startSucceeded","remoteVideo1","participant1","remoteVideo2","participant2","remoteVideo3","participant3","__countScreen","_this12","configRequest","cachedSetTimeout","cachedClearTimeout","defaultSetTimout","defaultClearTimeout","runTimeout","fun","currentQueue","draining","queueIndex","cleanUpNextTick","drainQueue","run","marker","runClearTimeout","Item","nextTick","title","env","argv","versions","on","addListener","once","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","listeners","binding","cwd","chdir","umask","prefix","openers","eventName","_name$split","_name$split2","pre","exitFullscreen","webkitIsFullScreen","webkitExitFullscreen","mozFullScreen","mozCancelFullScreen","isOn","outerHeight","innerHeight","AWCoreSDKErrorCode","_spinner_template2","_performance2","supportedStates","stateMap","START","CONNECTING","CONNECTED","RECONNECTING","REMOTE_CONNECTING","messageMap","connecting_screen_1","main","main_sub","connecting_screen_2","connecting_screen_3","connecting","connectGuest","connectExtended","connectExtendedIVR","reconnect","reconnectRemoteGuest","reconnectRemoteProvider","reconnectRemoteConsumer","reconnectExt","reconnectExtIVR","connectRemoteExt","connectRemoteExtIVR","SpinnerManager","__currentState","__self","__remoteParticipants","__messages","__context","__viewRenderer","__isRefresh","__isIVRCallbackEnabled","__timeoutHandles","__init","__clear","__contexts","participantName","remoteName","transition","spinnerEvent","__showSpinnerBackground","__createViewForSimpleTemplate","__replace","__createViewForNestedTemplate","delay","time","__showCallMeSectionIfAllowed","__startTimer","selfUuid","__connectParticipant","__hasConferenceStarted","__displaySpinnerView","__reconnectSelf","__getType","__reconnectRemote","__hideSpinnerBackground","waitSpinnerButtonsParent","__clearTimers","view","reconnectRemote","showButtons","__hideControlButtons","__showCancelOrEndVisitButton","__showCallButton","__findMatchInVisit","prev","_context$attachPoint","_context$attachPoint2","__clearButtonNodes","SpinnerViewRenderer","__node","_i18n","_split","vcMessages","newObj","_interopRequireWildcard","webrtcPlugin","outEventCallbackObject","defaultOutEventCallbackMethod","logCallback","outEventCallbackMethods","setConfig","dispatchOutEvent","outEventCallbackObjectArg","defaultOutEventCallbackMethodArg","logCallbackArg","setOutEventCallbackMethod","outEventType","callbackMethod","sessionManagerArg","retVal","url","protocol","webRTCServer","oReq","XMLHttpRequest","onload","resp","responseText","ip","onerror","send","getWebRTCServer","webrtcServer","adapterLoaded","attachMediaStream","pluginLoaded","adapterjs","getElementsByTagName","pluginjs","loadPlugin","useCallbackForOutEvents","outEventCallbackMethod","propertyIsEnumerable","isStarted","isLoaded","vidyoClientMessages","params","previewMode","inEventMute","numPreferred","uri","numberMicrophones","numberSpeakers","numberCameras","enableFeccEndpoint","enableFeccController","vidyoProxies","numberVidyoProxies","currentVidyoProxy","userID","password","serverAddress","serverPort","vidyoProxyAddress","vidyoProxyPort","webProxyAddress","webProxyPort","webProxyUsername","webProxyPassword","webProxyIeAddress","webProxyIePort","portalAddress","ringtoneDeviceName","verifyCertPortalAcct","webProxyScriptUrl","webProxyIeScriptUrl","mediaLowPort","mediaHighPort","proxySettings","videoPreferences","enableLogging","enableAutoAnswer","enableForceProxy","enableLogWindow","enableEntryTone","enableEchoDetection","enableEchoCancellation","enableFullScreenVideo","showToolbarInFullScreenVideo","enableAudioAGC","enableAutoStart","enableShowConfParticipantName","enableMuteMicrophoneOnJoin","enableHideCameraOnJoin","enableMuteSpeakerOnJoin","enableEulaAgreed","enableRendering","enableBackgrounding","enableFullDisplaySharing","selfViewLoopbackPolicy","requestConfiguration","requestVolumeAudio","requestType","remoteAppUri","remoteAppName","numApp","currApp","eventUri","newApp","requestWindowShares","sessionDisplayContext","sessionDisplayText","numParticipants","videoResolution","videoKBitsPerSecRecv","audioKBitsPerSecRecv","firs","nacks","videoFrameRate","videoDecodedFrameRate","videoDisplayedFrameRate","numApplicationWindows","appWindowName","appWindowAppName","appWindowId","numSystemDesktops","sysDesktopName","sysDesktopId","isMuted","currentUserID","currentUserDisplay","recording","webcasting","callState","rect","xPos","yPos","captureFrameRate","encodeFrameRate","sendFrameRate","numIFrames","numFirs","numNacks","mediaRTT","_awcoresdk_base_event_mapper","AWCoreSDKVidyoEventMapper","_AWCoreSDKBaseEventMa","_visit_state2","_awcoresdk_participants_changed_result2","AWCoreSDKVidyoVisitState","_AWCoreSDKVisitState","newList","keyArray","__participantMap","operationType","newParticipants","removedParticipants","removeParticipant","determineParticipantType","AWCoreSDKVisitState","providerKey","consumerKey","videoConsole","Map","__videoConsole","participantChangeResult","AWCoreSDKCheckParticipantsChangedResult","ERROR_INVALID_REQUEST","_awcoresdk_pexip_event_mapper2","_pubsub","_mobile_browser_detector2","load","AWCoreSDKPexipConsole","__adapterUrl","__getPexipUrl","__retryTimeout","__maxRetryTimeout","__retries","__maxRetries","__pexipParticipants","__isConnected","__allLocalMediaStreams","__remoteStream","__speakingParticipant","__stopMediaTracks","__unsyncedPexipParticipants","startPromise","__hideBrowserPermissionDialog","__createPexipClient","pexRTC","turn_server","__setupPexRTCEventHandlers","__setupDeviceIds","__makeCall","__showBrowserPermissionDialog","__setPermissionTimeout","ex","mediaStream","track","defaultLabel","localAudioSettings","__getCurrentTrackSettings","localVideoSettings","currentAudioOutputId","sinkId","__constructMediaOptions","currentDeviceId","deviceSelect","selectDevice","deviceOption","pexipInfo","modalityVendors","clientApiUrl","setSinkId","speakerDeviceId","speakerDeviceLabel","__setDevices","cameraDeviceLabel","microphoneDeviceLabel","__renegotiate","renegotiate","__syncConsoleMute","currentVideoSettings","newSelectId","_state","muteVideo","muteAudio","__handleSettingsButtonAction","__OnunloadEventHandler","__preselectFrontDevice","__processDevice","frontDevices","frontDevice","__updateCurrentDevices","audio_source","video_source","onSetup","buttonsContainer","__localStream","localVideoElement","poster","accessCode","onConnect","__verifyAllParticipants","onRemoteStream","onParticipantCreate","onParticipantDelete","onLayoutUpdate","layout","numberOfParticipants","onError","hideBrowserPermissionDialog","trans","ERROR_USER_MEDIA","__makeCallWithExponentialBackOff","onDisconnect","onStageUpdate","stage","firstStage","stage_index","participant_uuid","updateLabelForCurrentRemoteSpeaker","updateActiveSpeaker","display_name","PexRTC","return_media_stream","ice_timeout","iceWebTimeoutSeconds","_this13","__noPermissionTimeout","__isShowingPermissionDialog","promptForBrowserPermissionsModal","bandwidth","__determineBandwidth","makeCall","serviceURL","roomId","_videoConfig$systemC","maxMobileVideoBandwidthKbps","maxWebVideoBandwidthKbps","_this14","__retryTimer","__reconcileUnsyncedParticipants","_this15","_this16","phoneOnlyContainer","__isParticipantTypeInPexip","AWCoreSDKPexipEventMapper","absurdPrefixRegex","absurdMobileRegex","opera","stdOnEnd","script","ieOnEnd","onreadystatechange","readyState","charset","async","attrs","attr","setAttributes","_plugin2","_is_electron2","_template2","Screenshare","showScreenShareButton","disableScreenShareButton","screenSharingBrowserFilteringDisabled","__supportedBrowsers","CHROME","FIREFOX","EDGE","SAFARI","providerCanShare","provider","providerParsedUserAgent","__browserCanShare","providerCanReceive","__browserCanReceive","consumerCanShare","consumerParsedUserAgent","consumerCanReceive","canRemoteReceive","__setScreenShareDisplayState","__sharingState","attachTo","refs","button","currentCanShare","remoteCanReceiveShare","currentType","parsedUserAgent","userAgentString","supportedBrowsers","__isSupportedBrowserForSharing","__matchesElectron","__isSupportedMobileBrowser","parseFloat","__isSafariOniOS","__isChromeOnAndroid","__registerVendor","__registerElectronScreenSharingListener","onPresentation","onPresentationConnected","onPresentationDisconnected","onScreenshareConnected","onScreenshareStopped","is_electron","postMessage","origin","api","captureDesktop","desktopSourceId","sourceId","startSharing","stopSharing","__getCurrentUserTypeString","present","stopPresentation","setting","presenter","getPresentation","adapter","addTrack","practice","screenSharingEnabled","_attach_event2","__topics","__connections","__buildDom","init","__loadState","dom","createDom","_console","_len2","_key2","replaceChild","_id","removeItem","json","iter","_Base2","CameraStep","_Step","testMyComputerResult","cameraDeviceName","__cameraSelect","MicrophoneStep","_BaseStep","microphoneDeviceName","__microphoneSelect","__audioContext","__microphoneMeter","__getMicrophoneStream","microphoneId","SpeakerStep","audio_test_url","audioFileUriForTestMyComputerTest","speakerDeviceName","__speakerSelect","__audioDOMNode","pause","__audioControls","__playPause","__audioProgress","speaker","speakerId","paused","ended","play","currentTime","onloadedmetadata","ontimeupdate","InternetStep","__speedTestConfig","iframeDOMNode","internetDOMNode","__stepInternetTestDOMNode","__stepInternetResultsSuccessDOMNode","__stepInternetResultsFailDOMNode","showInternetContent","speedTestComplete","startsWith","__internetPassed","evaluateSpeedTestResult","tmcResult","downloadSpeedMbps","download","uploadSpeedMbps","upload","latencyMs","latency","minimum","jitter","minimumDownload","minimumUpload","minimumLatency","GetStartedStep","__getStartedPassed","_summaryPass2","_summaryFail2","SummaryStep","retry","formattedCustomerSupportPhone","globalThis","support","Blob","viewClasses","isArrayBufferView","normalizeName","normalizeValue","iteratorFor","headers","consumed","bodyUsed","fileReaderReady","reader","readBlobAsArrayBuffer","blob","FileReader","promise","readAsArrayBuffer","bufferClone","Body","_initBody","_bodyInit","_bodyText","isPrototypeOf","_bodyBlob","FormData","_bodyFormData","DataView","_bodyArrayBuffer","rejected","arrayBuffer","isConsumed","readAsText","chars","readArrayBufferAsText","formData","oldValue","Request","input","upcased","credentials","signal","referrer","reParamSearch","getTime","form","Response","bodyInit","ok","statusText","clone","response","redirectStatuses","redirect","DOMException","stack","aborted","xhr","abortXhr","abort","rawHeaders","getAllResponseHeaders","line","responseURL","ontimeout","onabort","href","fixUrl","withCredentials","responseType","setRequestHeader","fetch","Headers","AWSDKDataObject","AWSDKErrorCode","authenticationAccessDenied","authenticationSessionExpired","certificatePinningError","consumerAlreadyInVisit","consumerBusy","consumerNotAuthenticated","consumerNotFound","costCalculationNotFinishedError","creditCardDeclinedError","creditCardInvalidCVV","creditCardInvalidZipCode","creditCardValidationError","dependentNotFound","dependentOverage","dependentDobInFuture","dependentMatchFound","emptyResponseError","feedbackNotSubmittedError","fieldValidationError","illegalArgument","internalError","invalidCouponError","invalidDate","invalidDateFormat","invalidEnum","invalidEnumFormat","invalidPassword","invalidReminderOption","invalidServiceKeyError","localeNotSupported","noPaymentInformationFound","parsingError","partiallyRegisteredUser","privacyPolicyDisclaimerMissing","providerBusy","providerNotAvailable","providerNotFound","providerNotLicensedForConsumerLocation","providerVideoNotEnabled","ratingNotSubmittedError","responseError","scheduleAppointmentFailed","startVisitFailed","appointmentNotFound","uninitialized","updateConsumerAuthKeyFailed","validationConsumerAlreadyRegistered","validationConsumerUnderage","validationEmailInUse","validationSourceIdInUse","validationError","validationIncompleteAddress","validationErrors","validationRequiredParameterMissing","visitConsumerCallbackInvalid","visitExpired","visitInvalid","visitSummaryNotSentError","visitNotFound","waitingRoomAccessDenied","medicationSearchTextTooShort","consumerAlreadyRegistered","attachmentSizeTooLarge","unsupportedMimeType","failedVirusScan","fileExists","fileReadError","healthPlanIsFeedControlled","inaccurateSubscriberInfo","healthPlanSubscriptionEnrollmentError","eligibilityCheckError","noProvidersAvailable","pollingTimeout","onDemandSpecialtyNotFound","illegalUsage","consumerRecipientError","doesNotAcceptSecureMessages","emailAddressNotFound","versionIncompatible","modifiedProtectedField","noPreferredPharmacyFound","noShippingAddressFound","speedPassDisabled","consumerNotEligibleForSpeedPass","invalidTimeZone","invalidParameter","guestEmailAlreadyInvited","unsupportedVideoPlatform","__codes","AWSDKError","stackTrace","__errors","errors","__fieldName","fieldName","__fieldValue","fieldValue","objectType","errorMessage","olcError","statusCode","parameterName","objectName","objectValue","parameterValue","maxLen","descriptionOfIllegalUse","descriptionOfCorrectUse","modifiedFields","GenericParser","Klass","AWSDKEmptyResponseError","AWSDKParsingError","enumType","adjustedVal","mappedEnum","enumValue","AWSDKEntityId","encryptedId","AWSDKEntity","parseObject","links","AWSDKState","country","rxServiceStatus","parseBoolean","legalAddress","AWSDKAddress","address1","address2","city","deprecated","formattedDisplayValue","zipCode","AWSDKPayerInfo","subscriberIdPattern","subscriberIdPatternErrorMessage","suppressCharge","showPrimarySubscriberQuestion","AWSDKHealthPlan","qualifier","usesSuffix","feedControlled","payerInfo","AWSDKRelationshipToSubscriberCode","displayName","translatedDisplayName","localizedDisplayName","warehouseValue","isValidForMinorAccount","AWSDKEligibilityCheck","eligibilityRequestId","eligibilityCheckRequired","eligibilityCheckCompleted","eligibilityError","AWSDKSubscription","healthPlan","subscriberId","subscriberSuffix","parseDate","startDate","endDate","relationshipToSubscriberCode","primarySubscriberFirstName","primarySubscriberLastName","primarySubscriberDateOfBirth","eligibilityResponse","AWSDKGender","FEMALE","MALE","UNKNOWN","AWSDKGenderIdentity","genderKey","genderTexts","AWSDKConsumer","address","subscription","preferredLocale","dob","email","firstName","lastName","middleInitial","middleName","enrolled","gender","localizedGenderDisplayName","parseEnum","genderEnum","phone","memberType","appointmentReminderTextsEnabled","feedType","formularyRestriction","patientMrnId","__dependents","dependentsList","dependents","lastLogin","eligibleForVisit","__parent","AWSDKIllegalArgument","proxies","element","timeZone","brandings","sdkUserId","AWSDKCountry","states","AWSDKDeviceIntegrationMode","TYTO_LIVESTREAM","TYTO_STOREANDFORWARD","DISABLED","AWSDKPracticeBase","practiceType","acceptInsuranceEnabled","deviceIntegrationMode","_anyOneCharNonLineTerminator","_anySingleChar","_phoneRegex","_emailRegex","_zipRegex","_threeDigitRegex","_fourDigitRegex","Validator","isWhitespaceOnlyValid","isStringType","link","isValidString","hasValidFormat","hasMatch","phoneNumber","isRequired","regexToUse","stringExpr","date1","date2","isValidDate","cvvNumber","cvvExpectedLength","isInt","isValidStringEnumValue","namedConstant","parseAndConvertEnumValue","toISOString","__log","logMessage","optionalParams","fatal","require","Util","linkName","isValidLink","date","isoDateTimeString","decodeString","bin2String","urlSafeDecoding","base64DecodeUnicodeURI","tab","connection","normalize","textToDisplay","isInteger","separator","direction","sep","unshift","AWSDKVisitModalityType","VIDEO","PHONE","CHAT","AWSDKModality","AWSDKPractice","hasSmallLogo","hasLogo","hours","welcomeMessage","fax","paymentRequiredForScheduledVisits","paymentRequiredForScheduledVisitsText","showAvailableNow","showScheduling","findNamedLinkUrl","subCategoryId","subCategoryIds","specialtyColor","subtitle","availableModalities","hideProviderVisitCostEstimate","hideCancelAppointmentLink","hasOnDemandSpecialties","AWSDKPracticeInfo","AWSDKProviderVisibility","OFFLINE","PHONE_BUSY","PHONE_AVAILABLE","WEB_BUSY","WEB_AVAILABLE","AWSDKResource","resourceKey","AWSDKProviderType","AWSDKProvider","canPrescribe","waitingRoomCount","rating","visibility","hasImage","isNTN","AWSDKDisclaimerEntityType","Disclaimer","LegalEntity","SpecialtyLegalEntity","AWSDKDisclaimer","entityType","entityTypeEnum","legalText","required","AWSDKProviderDetails","fellowships","internship","appointmentDuration","deferredBillingText","graduatingYear","getFullYear","showTriageQuestions","missedVisitEmail","totalRatings","statesLicensedIn","residency","textGreeting","yearsExperience","deferredBillingEnabled","isPCP","schoolName","spokenLanguages","boardCertificates","AWSDKReminderOption","minutes","AWSDKConsumerMiddleNameHandling","FULLNAME","INITIAL","NONE","AWSDKSystemConfiguration","consumerMiddleNameHandling","memberAddressRequired","memberHealthInsuranceCollected","loginAgeRestriction","serviceKeyCollected","secureMessageAttachmentMaxSizeKB","attachmentExtensionRejectList","scheduledEngagementMarginMs","multipleVideoParticipantsEnabled","maxVideoInvites","showProviderRating","endVisitRatingsOptional","supportedLocales","currencyCode","mimeTypeWhitelist","otherTopicEnabled","isMultiCountry","cancelAppointmentEnabled","optionalCancelAppointmentText","appointmentReadinessEnabled","reminderOptions","protectedFieldNames","passwordContainsInvalidCharactersMessage","passwordMustContainLetters","passwordRequiresLettersMessage","passwordMustContainNumbers","passwordRequiresNumbersMessage","minimumNumberOfSpecialCharactersInPassword","specialCharacterSetAllowedInPassword","passwordRequiresSpecialCharactersMessage","passwordResetExpirationTime","minPasswordLength","maxPasswordLength","passwordTooLongMessage","passwordTooShortMessage","passwordRegularExpression","speedPassActive","electronicFaxEnabled","speedTestConfiguration","showOptionToSendVisitSummary","alwaysHideChatTabEnabled","alwaysHideNotesTabEnabled","__modalityVendors","webRTCEnabled","electronDownloadUrl","electronVideoTestUri","genderIdentities","AWSDKCreditCardType","cvvLength","AWSDKResponse","authToken","AWSDKServerLogParam","AWSDKAuthentication","dataClone","authentication","sdkUserAuthKey","partiallySdkEnrolled","credentialsSystemGenerated","member","outstandingDisclaimer","AWSDKRecoverEmailStatus","EMAIL_RECOVERED","USERNAME_EMAILED","AWSDKRecoverEmail","AWSDKRecoverEmailResponse","recoverEmail","supportedOnlineCareVersion","Form","__params","pointer","ResponseParser","parsedResponse","parseValidResponseBody","parseEmptyResponseBody","parseErrorResponse","contentType","clientVersion","amWellPlatformVersion","parsedError","generateAWSDKErrorResponse","AWSDKCreditCardDeclinedError","AWSDKCreditCardInvalidCVV","AWSDKCreditCardInvalidZipCode","AWSDKCreditCardValidationError","AWSDKInvalidDate","AWSDKInvalidDateFormat","AWSDKInvalidEnum","AWSDKInvalidEnumFormat","AWSDKInvalidServiceKeyError","AWSDKInvalidPassword","AWSDKValidationRequiredParameterMissing","AWSDKUpdateConsumerAuthKeyFailed","AWSDKValidationConsumerUnderage","AWSDKEmailAddressNotFound","AWSDKDependentOverage","AWSDKDependentDobInFuture","AWSDKVersionIncompatible","AWSDKAttachmentSizeTooLarge","AWSDKUnsupportedMimeType","AWSDKFailedVirusScan","AWSDKFileReadError","AWSDKInaccurateSubscriberInfo","AWSDKInvalidParameter","AWSDKHealthPlanSubscriptionEnrollmentError","AWSDKInvalidTimeZone","AWSDKGuestEmailAlreadyInvited","AWSDKAuthenticationSessionExpired","AWSDKAuthenticationAccessDenied","AWSDKDependentNotFound","AWSDKConsumerNotFound","AWSDKProviderNotFound","AWSDKVisitNotFound","AWSDKOnDemandSpecialtyNotFound","AWSDKNoPaymentInformationFound","AWSDKNoPreferredPharmacyFound","AWSDKNoShippingAddressFound","AWSDKConsumerNotEligibleForSpeedPass","AWSDKStartVisitFailed","AWSDKVisitConsumerCallbackInvalid","AWSDKScheduleAppointmentFailed","AWSDKConsumerAlreadyInVisit","AWSDKConsumerBusy","AWSDKProviderBusy","AWSDKProviderNotLicensedForConsumerLocation","AWSDKValidationEmailInUse","AWSDKValidationSourceIdInUse","AWSDKWaitingRoomAccessDenied","AWSDKFileExists","AWSDKDependentMatchFound","AWSDKVisitExpired","AWSDKVisitInvalid","AWSDKPrivacyPolicyDisclaimerMissing","AWSDKResponseError","AWSDKProviderNotAvailable","Service","__links","__authKeys","authKeys","__serverLogger","serverLogger","useForm","snapshotVersionSuffix","Accept","internalBuild","__isCallerIdSupported","__localeToAcceptLanguage","__isAmWellPlatformVersionNewerThan","compareVersion","trimmedAmWellPlatformVersion","encodedUserPass","btoa","sdkApiKey","authEntry","getUserAuthEntry","auth","token","__fetchAuthConsumerPersistentId","findNamedLink","authenticate","updateUserAuthEntry","removeIndex","findNamedLinkIndex","parentId","__fetchParentId","mappedEntries","proxy","optHeaders","requestHeaders","pageSize","generateOptions","getUserAuth","AWSDKConsumerNotAuthenticated","formatISODateTime","AuthenticationService","username","consumerAuthKey","AWSDKInternalError","getSdkAuth","executeRequest","logToServer","getServerLogParam","addUserAuthEntry","removeUserAuthEntry","AWSDKFieldValidationError","AWSDKValidationErrors","formatISODate","recoverEmailResponse","isEmailValid","accountId","AWSDKConsumerResponse","AWSDKHealthSummaryRecord","selfReported","term","description","firstOccurrence","lastOccurrence","AWSDKHealthSummaryPrescriptionRecord","dispenseAsWritten","asNeeded","stopWhenDirected","dosage","frequency","instructions","quantityToDispense","refillTotal","measurementUnitQualifier","AWSDKHealthSummary","allergies","diagnoses","prescriptions","procedures","AWSDKHealthSummaryResponse","healthSummary","AWSDKDependentResponse","dependent","AWSDKBaseConsumerUpdate","genderIdentityKey","__toRequestObject","brandingArr","AWSDKConsumerUpdate","ignorePropagation","currentPassword","currentLocationState","currentLocationCountry","legalResidenceCountryCode","patientMrn","addressState","stateCode","addressCountry","countryCode","isAppointmentReminderTextsEnabled","AWSDKConsumerRegistration","sendWelcomeEmail","acceptedMemberDisclaimer","hasAcceptedDisclaimer","consumerAddressRequired","AWSDKDependentRegistration","performDependentCheck","memberId","encryptedMemberId","AWSDKRegistrationDisclaimerResponse","LegalTextEntity","AWSDKPaymentMethod","billingName","billingAddress","lastDigits","expired","AWSDKPaymentMethodResponse","payment","AWSDKTopic","AWSDKUserType","ADMIN","ASSISTANT","SDK","AWSDKChatItem","b64DecodeUnicode","isSelf","timeStamp","ordinal","messageType","userType","AWSDKChatReport","lastOrdinal","chatItems","AWSDKConsumerHealthItem","current","isCurrent","termId","AWSDKAllergy","AWSDKCondition","AWSDKMedication","AWSDKIntake","conditions","topics","AWSDKVisitScheduled","scheduledStartTime","actualStartTime","allotedDurationMs","allotedExtensionDurationMins","isScheduled","initialPreVisitStartTime","postVisitStartTime","postVisitEndTime","waitingRoomEntryTime","allotedBufferMs","waitDurationSec","actualDurationMs","cancelledEventTime","AWSDKVisitRx","createDate","addlInstr","pharmacyNote","quantity","refills","hasBeenReported","rxInstructions","AWSDKVisitProcedure","procedure","priority","billable","modifiers","AWSDKVisitDiagnosis","diagnosis","AWSDKAgendaItemFollowUpType","Visit","AdministeredIntake","TrackerReminder","Media","AWSDKAgendaItemFollowUp","recurring","AWSDKPostVisitFollowUpItemType","APPOINTMENT","REFERRAL","SICKSLIP","AWSDKPostVisitFollowUpItemCategory","VISIT_REFERRAL","IMAGING_REFERRAL","LAB_REFERRAL","AWSDKPostVisitFollowUpDetail","facilityName","providerName","AWSDKPostVisitFollowUpItem","category","notes","specialtyName","detail","resolved","createdDate","AWSDKProviderEntries","followUpAgendaItems","postVisitFollowUpItems","AWSDKPharmacy","formattedFax","isActive","longitude","latitude","distance","AWSDKTriageQuestion","question","answer","AWSDKDisposition","Unpublished","Unscheduled","Scheduled","Parked","ConsumerCanceled","Declined","ProviderResponseTimeout","PreVisitScreening","InProgress","PostVisitConversation","Bailed","ProviderDisconnected","ProviderWrapup","ConsultingProviderWrappedUp","Completed","CollapseDeleted","Deleted","ProviderCanceled","ConsumerDisconnected","Expired","__dispositions","AWSDKEndReason","VISIT_EXPIRED","CONSUMER_DISCONNECT_POST_THRESHOLD","CONSUMER_DISCONNECT_PRE_THRESHOLD","CONSUMER_FORCED_DISCONNECT","CONSUMER_CANCEL","CONSUMER_IVR_AUTH_FAILED","CONSUMER_END","INITIATOR_LOGOUT_PRE_VISIT","INITIATOR_LOGOUT_AFTER_START","PROVIDER_END","PROVIDER_DECLINE","PROVIDER_DECLINE_AND_TRANSFER","PROVIDER_BAIL","PROVIDER_RESPONSE_TIMEOUT","PROVIDER_LOGOUT","PROVIDER_IVR_AUTH_FAILED","ASSISTANT_DECLINE","ASSISTANT_DECLINE_AND_TRANSFER","WAITING_ROOM_EXPIRED","ASYNC_COST_CALC_EXCEPTION","CONSUMER_TRANSFER","AWSDKEligibilitySuggestedResponse","suggestion","AWSDKEligibilityRequestStatus","COVERED","NOT_COVERED","REQUEST_VALIDATION_RESPONSE","FAILED","CANCELLED","AWSDKVisitCost","costCalculationStatus","couponCode","proposedCouponCode","eligibilityRequestErrorSuggestion","deferredBillingWrapUpText","extensionCost","baseCost","zeroCostVisit","totalCostWaived","paymentMessage","eligibilityRequestStatus","expectedMemberCopayCost","canApplyCouponCode","deferredBillingInEffect","hasCostChangedWithVisitTransfer","eligibilityRequestError","eligibilityExceptionReason","AWSDKVisitReportDetail","engagementId","acceptedDisclaimers","transferredFromProviderName","transferredFromSpecialty","transferNote","memberBillingAddress","paymentType","paymentAmount","memberSummaryTopics","visitRating","providerRating","chatReport","intake","schedule","triageQuestions","triageQuestion","triageAnswers","providerEntries","pharmacy","endReason","modality","AWSDKVisitReportDetailResponse","visitReportData","AWSDKPaymentRequest","nameOnCard","creditCardNumber","creditCardZip","creditCardSecCode","creditCardMonth","creditCardYear","AWSDKVisitReport","AWSDKVisitSchedule","memberName","completed","memberProxyName","initiatorEngagementOverridePhone","AWSDKVisitReportList","visitReports","AWSDKConditionsResponse","AWSDKVitals","systolic","diastolic","temperature","weight","AWSDKVitalsResponse","vitals","AWSDKMedicationList","medications","AWSDKAllergiesResponse","AWSDKSubscriptionUpdate","ignoreEligibilityChecks","heathPlan","AWSDKSubscriptionResponse","AWSDKAddressUpdate","geographicalState","AWSDKAddressResponse","AWSDKDependentUpdate","AWSDKSortOrder","ASC","DESC","AWSDKHealthDocumentAttachment","AWSDKHealthDocumentRecord","attachment","uploadDate","AWSDKHealthDocumentRecordList","documentRecords","AWSDKHealthDocumentRecordResponse","documentRecord","AWSDKEligibilityResponse","eligibilityCheck","AWSDKDependentsListResponse","AWSDKDependentAccessRequest","guardian","requestor","AWSDKDependentAccessRequestResponse","dependentAccessRequest","AWSDKNotifications","totalInboxCount","unreadInboxCount","dependentAccessRequestCount","appointmentCount","isTimeForNextAppointment","AWSDKNotificationsResponse","notifications","AWSDKConsumerOverrideDetails","__dob","__genderIdentityKey","mrnId","__mrnId","__firstName","__lastName","__middleNameOrInitial","__gender","__email","__address1","__address2","__city","__zipCode","__phone","__brandings","middleNameOrInitial","AWSDKFirstAvailableStatus","CREATED","AWAITING_CONTACT_PERMISSION","CONTACTING_PROVIDER","PROVIDER_ACCEPTED","TICKET_ACQUIRED","COOL_DOWN","PROVIDER_LIST_EXHAUSTED","AWSDKFirstAvailableData","firstAvailableSearchStartTime","firstAvailableSearchEndTime","firstAvailableProviderAskCount","matchmaking","AWSDKConsumerInitiatedIVRStatus","IVR_REQUESTED","IVR_TIMEOUT","IVR_DIALING_CONSUMER","IVR_CONSUMER_UNREACHABLE","IVR_CONSUMER_FAILED","IVR_DIALING_PROVIDER","IVR_PROVIDER_UNREACHABLE","IVR_PROVIDER_FAILED","IVR_CONNECTED","AWSDKConsumerFeedbackQuestion","questionText","respOptions","responseOptions","AWSDKVisitExtension","extensionTime","engagementExtendedType","AWSDKConferenceMetrics","hasAProviderAndMemberConnected","membersConnected","facilitatorsConnected","providersConnected","translatorsConnected","disconnected","failed","inflightCount","allConnected","AWSDKConferenceModalityType","SUPPORT_PHONE","OUTBOUND_PHONE","INBOUND_PHONE","TEST_OUTBOUND_PHONE","TEST_INBOUND_PHONE","PEXIP_RTC_VIDEO","TEST_VIDEO","AWSDKConferenceRole","TESTER","TRANSLATOR","FACILITATOR","CONSUMER_GUEST","PROVIDER_GUEST","AWSDKConferenceParticipant","addDate","joined","vendorId","AWSDKConferenceDetails","selectedModalityType","AWSDKConnectionType","MOBILE","MULTIPLE","WEB","WEB_AND_PHONE","WEB_SDK","WEB_SDK_AND_PHONE","KIOSK","TELEMED","AWSDKIntegrationContext","ORBITA","AWSDKIntegrationStatus","QUEUED","READY","INPROGRESS","COMPLETED","BAILED","INTERRUPTED","ERROR","RE_QUEUED","AWSDKIntegration","contextIdentifier","AWSDKVisit","foundParticipant","memberInitiatedIVRStatus","hidePatientTimer","multiwayVideoEnabled","videoInvitesSent","patientsAheadOfYou","isProviderForManualTransferEligibleForQuickTransfer","isSuggestedProviderEligibleForQuickTransfer","ivrretryCount","paidExtensionOffered","memberProxy","providerSuggestedEnd","suggestedProviderForTransfer","suggestedProviderForAskMeTransfer","possibleFirstAvailableTransferAcceptedByMember","providerForManualTransfer","initiatorConnectionType","providerConnectionType","providerProxy","noExtensionEntity","shortExtensionEntity","longExtensionEntity","consumerElectronStarted","declineAndTransfer","suggestedTransfer","postVisitTransfer","providerForTransfer","onDemandSpecialtyId","firstAvailableData","isMatchmaking","guestInvitationEmails","consumerFeedbackQuestion","invitedGuestEmails","conference","integration","integrations","tytoLiveStreamingEnabled","hideVisitAddPhoneOptionForEngagement","AWSDKTrackerBaseObject","AWSDKTrackerUnitOfMeasure","unitOfMeasureShortDescription","unitOfMeasureFullDescription","AWSDKTrackerDataPoint","measurementDate","AWSDKTrackerEntry","source","AWSDKTrackerEntriesList","trackers","AWSDKTrackerComponent","maximum","AWSDKTrackerDataPointRequest","__trackerComponent","__value","trackerComponent","AWSDKTrackerTemplate","components","AWSDKTrackerEntryRequest","__trackerTemplate","__getAsRequestBody","__toRequestElement","trackerTemplate","AWSDKTrackerRequest","__measurementDateTime","measurementDateTime","canonicalTimeZone","__canonicalTimeZone","__entries","now","AWSDKTrackersSearchCriteria","criteria","__timeZone","__startDate","__endDate","AWSDKExamDataRequest","dateTime","__id","__type","__dateTime","AWSDKDeviceIntegrationRequest","examDataEntries","__validate","__examDataEntries","__visit","examDataEntry","AWSDKValidationError","AWSDKPostVisitFollowUpItemsTypeFilter","all","imagingReferral","labReferral","visitReferral","referral","sickSlip","appointment","AWSDKPaginated","startIndex","nextPageRequest","previousPageRequest","AWSDKPaginatedPostVisitFollowUpItems","AWSDKPaginatedPostVisitFollowUpItemsResponse","AWSDKPaginatedVisitReports","AWSDKPaginatedVisitReportsResponse","AWSDKPaginatedHealthDocumentRecords","AWSDKPaginatedHealthDocumentRecordsResponse","AWSDKOnlineVisitFollowUpItem","assignedProviderType","referringProvider","AWSDKPaginatedOnlineVisitFollowUpItems","AWSDKPaginatedOnlineVisitFollowUpItemsResponse","ConsumerService","__systemConfiguration","__countries","countries","__creditCardTypes","creditCardTypes","eligibilityPollingInterval","eligibilityPollingTimeout","__minValueVitals","__maxTemperatureValue","__maxWeightValue","__maxSystolicValue","__maxDiastolicValue","authenticationLinks","consumerResponse","isDependent","dependentResponse","registrationDisclaimerResponse","registrationDisclaimer","consumerRegistration","errArrayResult","__validateConsumerUpdate","consumerUpdate","dependentRegistration","__validateBaseConsumerUpdate","dependentUpdate","modifiedProtectedFields","__checkModifiedField","isFieldProtected","__checkModifiedAddress","__checkBaseConsumerProtectedFields","areDatesEqual","originalValue","newValue","fieldsRequired","sysConfig","isPhoneNumberValid","isAddressValid","isZipCodeValid","__validateCountryState","consumerBaseUpdate","isFirstNameValid","isMiddleInitialValid","isMiddleNameValid","isLastNameValid","checkAddress","checkResidence","errArray","validateRegistration","__toRequestBody","legalResidenceState","legalResidenceCountry","newUsername","newPassword","needsToCompleteRegistration","AWSDKConsumerAlreadyRegistered","validateConsumerUpdate","__checkConsumerProtectedFields","AWSDKModifiedProtectedField","validateDependentRegistration","validateDependentUpdate","dependentsResponse","notificationsResponse","otherParentEmail","accessRequest","scheduledOnly","completedOnly","since","visitReportListResponse","termIds","condition","validateVitals","__validateVitals","vitalsResponse","paymentMethodResponse","paymentMethod","medicationSearchText","AWSDKMedicationSearchTextTooShort","medicationsResponse","indexOfErr","medicationIds","paymentRequest","validatePaymentRequest","paymentResponse","__validateCreditCardAndCvv","currentDate","year","currentMonth","getMonth","currentYear","cardNumber","cardType","cc","isCVV","allergiesResponse","subscriptionResponse","insuranceDetails","subscriptionUpdate","currentHealthPlan","AWSDKHealthPlanIsFeedControlled","validateSubscriptionUpdate","__waitForEligibilityCheckToFinish","eligibilityCheckResult","AWSDKEligibilityCheckError","newUpdate","updateInsuranceSubscription","endTime","errorCount","checkCondition","__checkEligibility","AWSDKPollingTimeout","eligbilityCheck","allergyIds","__validateSubscriptionUpdate","relationship","serviceKey","healthSummaryResponse","visitReport","getVisitReportPDF","visitReportDetailResponse","visitReportDetail","sortOrder","healthDocumentRecordList","healthDocRecord","mimeType","currAccHeader","fileName","comment","File","maxSizeInKb","fd","shippingAddress","trackerRequest","__validateTrackerRequest","entryRequest","dataPointRequest","trackersSearchCriteria","__uuid","validateTrackerRequest","searchCriteria","deviceIntegrationRequest","__validateDeviceIntegrationRequest","validateDeviceIntegrationRequest","paginatedOnlineVisitFollowUpItems","__buildPaginatedRequest","paginatedPostVisitFollowUpItems","postVisitFollowUpItem","onlineVisitFollowUpItem","dispositions","isValidEnumValue","paginatedVisitReports","sortAsc","paginatedHealthDocumentRecords","AWSDKPharmaciesResponse","pharmacies","AWSDKPharmacyResponse","PharmacyService","pharmacyType","radius","excludeMailOrderPharmacies","AWSDKAvailabilityList","availability","AWSDKLanguage","AWSDKPracticeSubCategory","practiceCount","AWSDKPracticeCategory","subCategories","AWSDKPracticeList","practiceList","practices","categories","AWSDKPracticeResponse","AWSDKPracticeSearchCriteria","__practiceType","__sourceId","__language","__consumer","__maxResults","maxResults","AWSDKPracticeSearchResult","AWSDKPracticeSearchResponse","practiceSearchResults","AWSDKOnDemandSpecialty","intakeConditionEnabled","intakeAllergiesEnabled","intakeMedicationsEnabled","intakeVitalsEnabled","providersAvailable","providerTypes","AWSDKOnDemandSpecialtiesResponse","specialties","AWSDKPracticeFutureAvailabilitySearchCriteria","__practiceOrSubCategory","practiceOrSubCategory","__searchTerm","searchTerm","__languageSpoken","languageSpoken","__appointmentDate","appointmentDate","PracticeService","practiceResponse","practiceDetails","practiceFutureAvailabilitySearchCriteria","availablilityList","findPractices","getNewPracticeSearchCriteria","practiceSearchCriteria","practiceSearchResponse","practiceCategory","AWSDKProviderDetailsResponse","AWSDKProviderAvailability","providerSearchResult","availableAppointmentTimeSlots","AWSDKProvidersAvailability","futureAvailableProviders","AWSDKProvidersAvailabilityResponse","providers","AWSDKProvidersResponse","AWSDKEstimatedVisitCost","formattedCost","formattedExtensionCost","deferredBillingSupported","AWSDKEstimatedVisitCostResponse","estimatedCost","AWSDKProviderFutureAvailabilitySearchCriteria","__limitInDays","limitInDays","AWSDKProviderAvailabilityCriteria","__providerDetails","providerDetails","AWSDKPracticeSearchType","searchType","ProviderService","providersResponse","providerDetailsResponse","providerFutureAvailabilitySearchCriteria","providersAvailablilityResponse","providerAvailabilityCriteria","practiceSearchType","requestOptions","searchPastProviders","onDemandSpecialty","sourceIds","licensedInState","pt","estimatedCostResponse","AWSDKDevicePairingDetails","pairingCode","applicationServerUrl","AWSDKDevicePairingDetailsResponse","deviceLiveStreamPairingResponse","AWSDKDevicePairingStatusEnum","PAIRED","NOT_PAIRED","PREVIOUSLY_PAIRED","AWSDKDevicePairingStatus","devicePairingStatus","isDeviceOnline","AWSDKDevicePairingStatusResponse","AWSDKDeviceLiveStreamType","DeviceLiveStreamService","pairingDetailsObj","devicePairingDetails","pairingDetailsJson","sanitizedSSIdPwd","SSIDPassword","sanitizedSSId","SSID","sanitizedSSIdLength","sanitizedSSIdPwdLength","UTCTime","encodedSSID","encodedSSIDLength","buildQRCodeString","qrCodeString","ssId","ssIdPwd","qrCodeContainer","appendQRCode","AWSDKCheckInStatus","ON_TIME","EARLY","LATE","NO_PROVIDER","AWSDKAppointment","proxyProvider","checkInStatus","practiceName","noteToPatient","__proxies","initiatorOverridePhoneNumber","AWSDKTransfer","visitContext","__visitContext","AWSDKVisitContext","timeThisWasCreated","transferFromVisitId","isQuickConnect","isProviderForTransferEligibleForQuickTransfer","requireResidencyCheck","intakeId","requireAddress","showConditionsQuestion","showAllergiesQuestion","showMedicationsQuestion","showVitalsQuestion","hasHealthHistory","shareHealthSummary","disclaimers","triageQuestionList","triageQs","triageQL","otherTopic","callbackNumber","answers","questions","answ","isMatchmakerVisit","consumerOverrideDetails","modalityValue","AWSDKStateFormularyRestriction","isStateFormularyActive","isRestrictedToOtc","AWSDKVisitSummary","memberLocation","triageQA","temp","videoInviteEmails","hipaaNoticeText","additionalHipaaNoticeText","AWSDKVisitCostResponse","AWSDKVisitRequestBody","connectionType","networkType","getNetworkType","getFormattedStartTime","getFormattedEndTime","firstAvailableSearchProviderAskCount","transferFromEngagementId","topicIds","arrayOfIds","disclaimerIds","triageIntakeId","triageIntakeAnswerList","triageQuestionAnswers","AWSDKVisitResponse","AWSDKVisitContextResponse","visitConfigurations","AWSDKVisitSummaryResponse","wrapUp","CustomProtocolHandler","__timeout","attachEvent","detachEvent","iframe","display","failCb","successCb","_createHiddenIframe","focus","_registerEvent","contentWindow","ieVersion","getInternetExplorerVersion","openUriUsingIE10InWindows7","openUriWithHiddenFrame","openUriInNewWindowHack","myWindow","isOpera","isFirefox","InstallTrigger","isSafari","isChrome","chrome","documentMode","rv","appName","failCallback","successCallback","msLaunchUri","checkBrowser","openUriUsingFirefox","openUriWithTimeoutHack","openUriUsingIEInOlderWindows","AWSDKChatReportResponse","GerericParser","AWSDKFirstAvailableRequest","practiceId","__specialtyId","__practiceId","__providerTypes","content","specialtyId","AWSDKFirstAvailableResponse","AWSDKVideoInvitation","inviter","AWSDKVideoInvitationResponse","videoInvitation","AWSDKConferenceStatus","Waiting","Started","Ended","Cancelled","Disabled","AWSDKVideoParticipant","remainingMins","conferenceStatus","conferenceId","memberEntityId","providerEntityId","videoParticipant","AWSDKSpeedPass","accountKey","consumerProxy","previousEngagementIdForSpeedPass","AWSDKSpeedPassResponse","speedPassEligibility","AWSDKVideoContext","errorCallback","consoleWrapperAttachPoints","updatedCallback","AWSDKProviderNote","AWSDKProviderNotesResponse","ServerLogger","visitLoggingDataObject","__buildMessageBody","__buildParams","stringifiedMessage","preparedMessage","__addParameterPlaceholdersToMessage","numOfParams","modifiedMessage","CombinedLogger","localLog","remoteLog","__remoteLog","__logToRemote","WARN","INFO","DEBUG","getLevelString","AWSDKVisitLoggingDataObject","_language","_sdkVersion","_visit","AWSDKVisitSearchCriteria","AWSDKVisitsResponse","AWSDKGuestLoggingDataObject","_participant","AWSDKVideoInvitationListResponse","videoInvitations","VisitService","visitCostPollingInterval","visitCostPollingTimeout","firstAvailablePollingInterval","firstAvailablePollingTimeout","__customProtocolHandler","launchTelehealthVideoClientTimeout","videoContext","getVisit","__updateConsoleWrapper","race","__pollForVisit","getVideoParticipant","visitEndDetails","__cleanUpAppendedContent","endVisit","cancelVisit","addPhoneToVisit","providerNotesDOMNode","chatDOMNode","inviteGuestDOMNode","menuDetailsWrapperDOMNode","notesDetailsDOMNode","noteDetailsDOMNode","chatDetailsDOMNode","chatMsgAreaDOMNode","chatDetailsMessageAreaDOMNode","inviteGuestDetailsDOMNode","chatDetailsInputButtonDOMNode","chatDetailsInputDOMNode","inviteGuestButtonDOMNode","inviteGuestInputDOMNode","closeMenuDOMNode","__removeClass","__addClass","scrollTop","scrollHeight","addChatMessage","__lastOrdinal","__processChatMessages","onkeydown","click","validationResult","__validateGuestInvites","inviteGuestErrorTextDOMNode","inviteGuestToVisit","__processSendGuestInvite","invite_guests_already_invited","__cleanUpChildren","providerNotesContentDOMNode","inviteGuestDetailsInvitedDOMNode","__lastNoteMessage","DOMNode","firstChild","__updateRemainingTime","__processProviderNotes","allowsChatWithProvider","__refreshInvitedGuestsEmailList","remainingMessage","timeRemainingNode","timerDOMNode","existingMessages","timeRemainingFromServerInMillis","timeLeft","formattedTime","getMinutes","getSeconds","padStart","__lastPolledTime","__currentPolledTime","chatIcon","chatMessageArea","chatDiv","chatContentDiv","msgSpan","msgText","providerNotesIcon","providerNotesContent","notesBodyElement","newContent","notesDocumentFragment","maxInviteeDOMNode","inviteGuestInputWrapperDOMNode","invitedGuestsEmailCount","guestEmailsDocumentFragment","guestEmailAddress","guestEmailAddressNode","emailAddress","validation_email_invalid","chatDetailsTitleDOMNode","chat_window_title","chatDetailsIntroTextDOMNode","chat_visit_begun","chat_input_placeholder_text","chatTabTitleDOMNode","tab_chat","providerNotesDetailTitleDOMNode","visit_notes_title","notesTabTitleDOMNode","tab_notes","time_remaining","inviteGuestDetailsTitleDOMNode","invite_guests_title","inviteGuestLabelDOMNode","invite_guests_small_title","invite_guests_email_placeholder","oninput","invite_guests_send_invite","inviteGuestIntroTextDOMNode","invite_guests_prompt","invite_guests_max_guests_prompt","inviteTabTitleDOMNode","tab_invite","klass","nameDOMNode","validParticipantTypes","defaultMessages","AWSDKUnsupportedVideoPlatform","__initializeDisplayContainers","__setClickableEvents","__pollForVisitWithTimeout","__updateMetrics","__onVisitEnd","__onVisitError","__updateConnectionStatus","__onVisitUpdated","remoteLogger","combinedLogger","encoded","videoParticipantType","__startWebRTCConsole","__videoParticipant","__pollForGuestParticipant","updateVideoParticipantConnectionStatus","__onGuestExitVisitRequested","providerOrOnDemandSpecialty","consumerEncryptedId","providerEncryptedId","onDemandSpecialtyEncryptedId","visitContextResponse","AWSDKSpeedPassDisabled","speedPassResponse","speedPass","engagementEncryptedId","hasAppointment","updateVisit","createVisit","hasOnDemandSpecialty","validateConsumerOverrideDetails","AWSDKValidationIncompleteAddress","visitRequestBody","getAsJSONString","visitResponse","visitSearchCriteria","stringDispositions","ignored","visitsResponse","visits","buildVisitRequestJson","costLink","visitCostResponse","getVisitCost","visitCost","AWSDKIllegalUsage","prov","telehealthVideoStarted","alwaysRetrieveChatMessages","leaveVisit","launchUri","visitSummaryResponse","visitSummary","AWSDKCostCalculationNotFinishedError","AWSDKInvalidCouponError","hipaaNoticeAccepted","emailAddresses","faxNumbers","faxNumber","AWSDKVisitSummaryNotSentError","visitOrVisitSummary","AWSDKFeedbackNotSubmittedError","AWSDKRatingNotSubmittedError","lastPolledChatOrdinal","chatReportResponse","providerReadyAlert","movedUpInQueueAlert","optionForFindFirstAvailableTransferAvailable","dontSuggestTransferAgain","getVisitContext","setupTransfer","createdVisit","newVisit","waitForVisitCostCalculationToFinish","newVisitWithCost","applyCouponCode","visitInfo","firstAvailableSearchStatusResponse","__checkFirstAvailableSearchStatus","AWSDKNoProvidersAvailable","firstAvailableSearchResponse","__pollForFirstAvailableSearchStatus","guestEmail","guestEmails","invalidEmail","videoInviteId","AWSDKVideoParticipantResponse","waitCondition","conferenceHasEnded","acceptExtension","__validateConsumerOverrideDetails","telehealthVideoInstallUrlForMac","telehealthVideoInstallUrlForWindows","AWSDKAppointmentResponse","AWSDKPlatformType","AWSDKAppointmentReadiness","techCheckEnabled","readyForAppointment","__speakerPassed","platformVersion","platformType","AWSDKAppointmentReadinessResponse","appointmentReadiness","AWSDKAppointmentsResponse","appointments","AWSDKAppointmentUpdateRequest","__appointment","__initiatorOverridePhoneNumber","AWSDKAppointmentReadinessRequest","__datePassedTechCheck","__downloadSpeedMbps","__uploadSpeedMbps","__latencyMs","__jitter","__microphoneDeviceName","__speakerDeviceName","__cameraDeviceName","datePassed","__microphonePassed","isMicTestPassed","isSpeakerTestPassed","__cameraPassed","isCameraTestPassed","downloadSpeed","uploadSpeed","micName","speakerName","__techCheckPassed","AppointmentService","appointmentResponse","reminder","consumerReminder","providerReminder","reconnectFromVisit","consumerReminderOption","__resolveReminderOption","AWSDKInvalidReminderOption","providerReminderOption","__getEngagementId","reminderOption","__findReminderOption","__findAppointment","appointmentUpdateRequest","appointmentReadinessRequest","validateAppointmentReadinessRequest","__validateAppointmentReadinessRequest","AWSDKTopicType","AWSDKSecureMessage","subject","topicType","isLastMessageInThread","isSystemNotification","isDeleted","AWSDKMailboxMessage","memberRecipients","nonMemberRecipients","senderName","bodyPreview","hasAttachment","isReplied","AWSDKInboxMessage","selfRecipient","isUnread","AWSDKMailbox","otherMailbox","timestamp","total","messageProcessedIds","combinedMessages","AWSDKInbox","unread","AWSDKInboxResponse","mailbox","AWSDKAccount","AWSDKMessageType","Inbox","Sent","AWSDKAttachment","AWSDKDetailedMessage","canReply","attachmentCount","attachments","threadOpen","sender","recipients","recipient","AWSDKDetailedMessageResponse","AWSDKSentMessage","AWSDKSentMessages","AWSDKSentMessagesResponse","AWSDKUploadAttachment","__name","AWSDKMessageDraft","__subject","__body","__topicType","__actionType","__recipientEncryptedId","__recipientName","__sourceMessageType","__sourceMessageId","__sourceIsSystemNotification","__attachHealthSummary","attachHealthSummary","uploadAttachment","__uploadAttachment","AWSDKSecureMessageContact","acceptsSecureMessage","AWSDKMessageActionType","New","Forward","Reply","AWSDKNewMessageDraft","__recipient","AWSDKReplyMessageDraft","sourceMessage","AWSDKForwardMessageDraft","AWSDKSecureMessageContactsResponse","contacts","SecureMessageService","detailedMessage","potentialError","__validateGetMessagesRequest","getMilliseconds","inbox","sentMessages","secureMessage","messageDraft","sourceIsSystemNotification","actionType","AWSDKConsumerRecipientError","AWSDKDoesNotAcceptSecureMessages","__validateUploadAttachment","recipientEncryptedId","sourceMessageType","sourceMessageId","inboxOrDetailedMessage","__assimilate","AWSDKCreditCardTypesResponse","creditCards","AWSDKCountriesResponse","AWSDKHealthPlansResponse","healthPlans","AWSDKModalityVendor","AWSDKInitializationResponse","initialization","languages","relationshipsToSubscriber","practiceSearchTypes","AWSDKLanguagesResponse","AWSDKRelationshipsResponse","relationships","AWSDKSystemConfigurationResponse","configuration","AWSDKValidateSdkApiKeyResponse","sdkAuthentication","valid","AWSDKTopicTypesResponse","AWSDKProviderTypesResponse","AWSDKTrackerTemplatesList","trackerTemplates","AWSDKModalitiesResponse","AWSDKPlatformTypeResponse","platformTypes","InitializationService","validationResponse","resolvedError","AWSDKInitializationError","systemConfigurationResponse","languagesResponse","providerTypesResponse","topicTypesResponse","topicTypes","creditCardTypesResponse","healthPlansResponse","relationshipsResponse","countriesResponse","modalitiesResponse","platformTypeList","trackerTemplatesResponse","IVRService","overridePhoneNumber","AWSDKTechCheckURL","URL","AWSDKTechCheckURLResponse","techCheck","TestMyComputerService","__appointmentService","appointmentService","__getTelehealthClientPropertyName","__getAuthenticatedElectronURL","Element","userProvidedCallback","updateReadiness","readiness","TMCMini","techCheckUrlResponse","techCheckURL","AWSDK","loggerConfig","__initialized","__initializationService","baseUrl","versionLog","commonVersion","validateSdkKeyUrl","validateSdkApiKey","initSDKResponse","setLinks","initializationResponse","__platformTypes","__availableModalities","__practiceSearchTypes","AWSDKLocaleNotSupported","__authenticationService","__consumerService","__pharmacyService","__practiceService","__providerService","__deviceLiveStreamService","__visitService","__secureMessageService","__IVRService","__TestMyComputerService","getCreditCardTypes","__languages","getLanguages","getCountries","__healthPlans","getHealthPlans","__relationships","getRelationshipsToSubscriber","__topicTypes","getTopicTypes","getProviderTypes","getPlatformTypes","searchTrackerTemplates","__trackerTemplates","getAvailableModalities","authenticationOrDependent","initialized","AWFREDataObject","AWFREResponse","AWFRERestLink","AWFREHealthPlan","healthPlanName","healthPlanQualifier","healthPlanDisplayName","AWFREService","AWFREInitializationResponse","services","FreInitializationService","initializationUrl","freBaseUrl","initializationBody","cfgId","__services","freConfig","AWFREErrorCode","initializationError","AWFREError","AWFREDemographics","dateOfBirth","AWFRERecommendationsRequest","__cfgId","__requestId","__healthPlanQualifier","serviceId","__serviceId","__subscriberId","suffix","__suffix","demographics","__demographics","AWFREVisitCost","costLow","costHigh","AWFREPractice","practiceSourceId","practiceLogoUrl","practiceSmallLogoUrl","AWFREEnterprise","installationId","likelyCovered","webSdkKey","logoURL","serverURL","AWFRERecommendationsResponse","trackingId","enterprises","AWFRERecommendationsAdditionalDataRequest","__trackingId","FreService","recommendationsRequest","recommendationsResponse","recommendationsAdditionalDataRequest","recommendationsPollingInterval","recommendationsPollingTimeout","getRecommendationsAdditionalData","AWFRE","__freInitializationService","awfreInitializationResponse","AWFREInitializationError","__freService","AWFREFactory","AWSDKFactory","stringifiedConsumer","stringifiedAuthentication","stringifiedPractice","stringifiedProviderDetails","stringifiedVisitContext","stringifiedVisit","stringifiedVisitSummary","stringifiedPaymentMethod","stringifiedAppointment","stringifiedOnDemandSpecialty","stringifiedVideoParticipant","stringifiedTrackerTemplate","stringifiedOnlineVisitFollowUpItem","utils","WebRTCHelper","isWebRTCSupported","i18n"],"mappings":";;;;;;;;;;;;CAAA,SAA2CA,EAAMC,GAC1B,iBAAZC,SAA0C,iBAAXC,OACxCA,OAAOD,QAAUD,IACQ,mBAAXG,QAAyBA,OAAOC,IAC9CD,OAAO,QAAS,GAAIH,GACM,iBAAZC,QACdA,QAAe,MAAID,IAEnBD,EAAY,MAAIC,IARlB,CASGK,QAAQ,WACX,O,YCTE,IAAIC,EAAmB,GAGvB,SAASC,EAAoBC,GAG5B,GAAGF,EAAiBE,GACnB,OAAOF,EAAiBE,GAAUP,QAGnC,IAAIC,EAASI,EAAiBE,GAAY,CACzCC,EAAGD,EACHE,GAAG,EACHT,QAAS,IAUV,OANAU,EAAQH,GAAUI,KAAKV,EAAOD,QAASC,EAAQA,EAAOD,QAASM,GAG/DL,EAAOQ,GAAI,EAGJR,EAAOD,QA0Df,OArDAM,EAAoBM,EAAIF,EAGxBJ,EAAoBO,EAAIR,EAGxBC,EAAoBQ,EAAI,SAASd,EAASe,EAAMC,GAC3CV,EAAoBW,EAAEjB,EAASe,IAClCG,OAAOC,eAAenB,EAASe,EAAM,CAAEK,YAAY,EAAMC,IAAKL,KAKhEV,EAAoBgB,EAAI,SAAStB,GACX,oBAAXuB,QAA0BA,OAAOC,aAC1CN,OAAOC,eAAenB,EAASuB,OAAOC,YAAa,CAAEC,MAAO,WAE7DP,OAAOC,eAAenB,EAAS,aAAc,CAAEyB,OAAO,KAQvDnB,EAAoBoB,EAAI,SAASD,EAAOE,GAEvC,GADU,EAAPA,IAAUF,EAAQnB,EAAoBmB,IAC/B,EAAPE,EAAU,OAAOF,EACpB,GAAW,EAAPE,GAA8B,iBAAVF,GAAsBA,GAASA,EAAMG,WAAY,OAAOH,EAChF,IAAII,EAAKX,OAAOY,OAAO,MAGvB,GAFAxB,EAAoBgB,EAAEO,GACtBX,OAAOC,eAAeU,EAAI,UAAW,CAAET,YAAY,EAAMK,MAAOA,IACtD,EAAPE,GAA4B,iBAATF,EAAmB,IAAI,IAAIM,KAAON,EAAOnB,EAAoBQ,EAAEe,EAAIE,EAAK,SAASA,GAAO,OAAON,EAAMM,IAAQC,KAAK,KAAMD,IAC9I,OAAOF,GAIRvB,EAAoB2B,EAAI,SAAShC,GAChC,IAAIe,EAASf,GAAUA,EAAO2B,WAC7B,WAAwB,OAAO3B,EAAgB,SAC/C,WAA8B,OAAOA,GAEtC,OADAK,EAAoBQ,EAAEE,EAAQ,IAAKA,GAC5BA,GAIRV,EAAoBW,EAAI,SAASiB,EAAQC,GAAY,OAAOjB,OAAOkB,UAAUC,eAAe1B,KAAKuB,EAAQC,IAGzG7B,EAAoBgC,EAAI,GAIjBhC,EAAoBA,EAAoBiC,EAAI,K,gBClFrD,SAASC,EAAgBvB,GAIvB,OAHAhB,EAAOD,QAAUwC,EAAkBtB,OAAOuB,eAAiBvB,OAAOwB,eAAiB,SAAyBzB,GAC1G,OAAOA,EAAE0B,WAAazB,OAAOwB,eAAezB,IAEvCuB,EAAgBvB,GAGzBhB,EAAOD,QAAUwC,G,cCDjBvC,EAAOD,QANP,SAAyB4C,EAAUC,GACjC,KAAMD,aAAoBC,GACxB,MAAM,IAAIC,UAAU,uC,cCFxB,SAASC,EAAkBC,EAAQC,GACjC,IAAK,IAAIzC,EAAI,EAAGA,EAAIyC,EAAMC,OAAQ1C,IAAK,CACrC,IAAI2C,EAAaF,EAAMzC,GACvB2C,EAAW/B,WAAa+B,EAAW/B,aAAc,EACjD+B,EAAWC,cAAe,EACtB,UAAWD,IAAYA,EAAWE,UAAW,GACjDnC,OAAOC,eAAe6B,EAAQG,EAAWpB,IAAKoB,IAUlDlD,EAAOD,QANP,SAAsB6C,EAAaS,EAAYC,GAG7C,OAFID,GAAYP,EAAkBF,EAAYT,UAAWkB,GACrDC,GAAaR,EAAkBF,EAAaU,GACzCV,I,gBCbT,IAAIJ,EAAiB,EAAQ,IAiB7BxC,EAAOD,QAfP,SAAmBwD,EAAUC,GAC3B,GAA0B,mBAAfA,GAA4C,OAAfA,EACtC,MAAM,IAAIX,UAAU,sDAGtBU,EAASpB,UAAYlB,OAAOY,OAAO2B,GAAcA,EAAWrB,UAAW,CACrEsB,YAAa,CACXjC,MAAO+B,EACPH,UAAU,EACVD,cAAc,KAGdK,GAAYhB,EAAee,EAAUC,K,gBCd3C,IAAIE,EAAU,EAAQ,GAElBC,EAAwB,EAAQ,IAUpC3D,EAAOD,QARP,SAAoC6D,EAAMlD,GACxC,OAAIA,GAA2B,WAAlBgD,EAAQhD,IAAsC,mBAATA,EAI3CiD,EAAsBC,GAHpBlD,I,6BCJXO,OAAOC,eAAenB,EAAS,aAAc,CAC3CyB,OAAO;;;;;;;;;;;AAaT,IAAIqC,EAAqB,GA0BzB9D,EAAQ+D,QAhBS,SAAoBC,EAAUC,EAAOC,GACpD,IAAIC,EAAU,CAAC,cAAeH,GAC1BC,GACFE,EAAQC,KAAKH,GAEXC,GACFC,EAAQC,KAAK,iCAAkCF,GAEjD,IAAIG,EAAMF,EAAQG,KAAK,KAClBR,EAAmBO,KACtBP,EAAmBO,GAAO,EAE1BE,QAAQC,KAAKH,M,6BCpCjBnD,OAAOC,eAAenB,EAAS,aAAc,CAC3CyB,OAAO;;;;;;;;;;;AAmBT,IAAIgD,EAAgC,CAClCC,SAAU,WACVC,SAAU,WACVC,MAAO,SAGT1D,OAAO2D,OAAOJ,GACdzE,EAAQ+D,QAAUU,G,6BC3BlBvD,OAAOC,eAAenB,EAAS,aAAc,CAC3CyB,OAAO,IAGT,IAIgCqD,EAJ5BC,EAAc,EAAQ,IAEtBC,GAE4BF,EAFUC,IAEWD,EAAIlD,WAAakD,EAAM,CAAEf,QAASe,GAGvF,IAAIG,EAAW;;;;;;;;;;GA4BfjF,EAAQ+D,QAPM,SAAiBmB,EAAUC,EAAKC,GAC5C,IAAIC,EAAwB,mBAARF,EAAqBA,EAAM,SAAUG,EAAGC,GAC1D,OAAO,EAAIP,EAAajB,SAASwB,GAAG,EAAOJ,IAE7C,OAAOD,EAASM,QAAQJ,GAAWH,EAAUI,K,6BCpC/CnE,OAAOC,eAAenB,EAAS,aAAc,CAC3CyB,OAAO,IAGT,IAAIkC,EAA4B,mBAAXpC,QAAoD,iBAApBA,OAAOkE,SAAwB,SAAUX,GAAO,cAAcA,GAAS,SAAUA,GAAO,OAAOA,GAAyB,mBAAXvD,QAAyBuD,EAAIpB,cAAgBnC,QAAUuD,IAAQvD,OAAOa,UAAY,gBAAkB0C,GAElQY,EAAe,WAAc,SAASC,EAAiB3C,EAAQC,GAAS,IAAK,IAAIzC,EAAI,EAAGA,EAAIyC,EAAMC,OAAQ1C,IAAK,CAAE,IAAI2C,EAAaF,EAAMzC,GAAI2C,EAAW/B,WAAa+B,EAAW/B,aAAc,EAAO+B,EAAWC,cAAe,EAAU,UAAWD,IAAYA,EAAWE,UAAW,GAAMnC,OAAOC,eAAe6B,EAAQG,EAAWpB,IAAKoB,IAAiB,OAAO,SAAUN,EAAaS,EAAYC,GAAiJ,OAA9HD,GAAYqC,EAAiB9C,EAAYT,UAAWkB,GAAiBC,GAAaoC,EAAiB9C,EAAaU,GAAqBV,GAA7gB;;;;;;;;;;;AAkBnB,IAAI+C,EAA4B,WAQ9B,SAASA,EAA0BC,GAGjC,GA3BJ,SAAyBjD,EAAUC,GAAe,KAAMD,aAAoBC,GAAgB,MAAM,IAAIC,UAAU,qCAyB5GgD,CAAgBC,KAAMH,IAEjBC,GAAwE,iBAA/C,IAATA,EAAuB,YAAclC,EAAQkC,KAAuBG,MAAMC,QAAQJ,GACrG,MAAMK,MAAM,0CACP,GAAyB,iBAAdL,EAAKM,KACrB,MAAMD,MAAM,iDACP,GAA4B,mBAAjBL,EAAKO,QACrB,MAAMF,MAAM,sDAEdH,KAAKM,OAASR,EA6BhB,OAnBAH,EAAaE,EAA2B,CAAC,CACvC7D,IAAK,OACLV,IAAK,WACH,OAAO0E,KAAKM,OAAOF,OASpB,CACDpE,IAAK,UACLV,IAAK,WACH,OAAO0E,KAAKM,OAAOD,YAIhBR,EA/CuB,GAkDhC5F,EAAQ+D,QAAU6B,G,cC5ElB,SAASjC,EAAQmB,GAaf,MAVsB,mBAAXvD,QAAoD,iBAApBA,OAAOkE,SAChDxF,EAAOD,QAAU2D,EAAU,SAAiBmB,GAC1C,cAAcA,GAGhB7E,EAAOD,QAAU2D,EAAU,SAAiBmB,GAC1C,OAAOA,GAAyB,mBAAXvD,QAAyBuD,EAAIpB,cAAgBnC,QAAUuD,IAAQvD,OAAOa,UAAY,gBAAkB0C,GAItHnB,EAAQmB,GAGjB7E,EAAOD,QAAU2D,G,6BCdjBzC,OAAOC,eAAenB,EAAS,aAAc,CAC3CyB,OAAO;;;;;;;;;;;AAoBTzB,EAAQ+D,QAAU,SAAUuC,GAG1B,IAFA,IAESzF,EAFL0F,EAA0B,iBAATD,EAAoBE,SAASC,eAAeH,GAAQA,EAE7DzF,EAAI0F,EAAQG,WAEtBH,EAAQI,YAAY9F,K,cC5BxB,IAAI+F,EACAC,EAAkB,CACpB,EACA,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC1C,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAC7C,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KACtD,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,MASxD7G,EAAQ8G,cAAgB,SAAwBC,GAC9C,IAAKA,EAAS,MAAM,IAAIb,MAAM,yCAC9B,GAAIa,EAAU,GAAKA,EAAU,GAAI,MAAM,IAAIb,MAAM,6CACjD,OAAiB,EAAVa,EAAc,IASvB/G,EAAQgH,wBAA0B,SAAkCD,GAClE,OAAOF,EAAgBE,IASzB/G,EAAQiH,YAAc,SAAUpB,GAG9B,IAFA,IAAIqB,EAAQ,EAEI,IAATrB,GACLqB,IACArB,KAAU,EAGZ,OAAOqB,GAGTlH,EAAQmH,kBAAoB,SAA4BC,GACtD,GAAiB,mBAANA,EACT,MAAM,IAAIlB,MAAM,yCAGlBU,EAAiBQ,GAGnBpH,EAAQqH,mBAAqB,WAC3B,YAAiC,IAAnBT,GAGhB5G,EAAQsH,OAAS,SAAiBC,GAChC,OAAOX,EAAeW,K,gBC7DxB,IAAIC,EAAe,EAAQ,IACvBC,EAAQ,EAAQ,IASpBzH,EAAQ0H,QAAU,CAChBC,GAAI,UACJC,IAAK,EACLC,OAAQ,CAAC,GAAI,GAAI,KAYnB7H,EAAQ8H,aAAe,CACrBH,GAAI,eACJC,IAAK,EACLC,OAAQ,CAAC,EAAG,GAAI,KAQlB7H,EAAQ+H,KAAO,CACbJ,GAAI,OACJC,IAAK,EACLC,OAAQ,CAAC,EAAG,GAAI,KAYlB7H,EAAQgI,MAAQ,CACdL,GAAI,QACJC,IAAK,EACLC,OAAQ,CAAC,EAAG,GAAI,KASlB7H,EAAQiI,MAAQ,CACdL,KAAM,GAWR5H,EAAQkI,sBAAwB,SAAgCvG,EAAMoF,GACpE,IAAKpF,EAAKkG,OAAQ,MAAM,IAAI3B,MAAM,iBAAmBvE,GAErD,IAAK6F,EAAaW,QAAQpB,GACxB,MAAM,IAAIb,MAAM,oBAAsBa,GAGxC,OAAIA,GAAW,GAAKA,EAAU,GAAWpF,EAAKkG,OAAO,GAC5Cd,EAAU,GAAWpF,EAAKkG,OAAO,GACnClG,EAAKkG,OAAO,IASrB7H,EAAQoI,mBAAqB,SAA6BC,GACxD,OAAIZ,EAAMa,YAAYD,GAAiBrI,EAAQ0H,QACtCD,EAAMc,iBAAiBF,GAAiBrI,EAAQ8H,aAChDL,EAAMe,UAAUH,GAAiBrI,EAAQgI,MACtChI,EAAQ+H,MAStB/H,EAAQyI,SAAW,SAAmB9G,GACpC,GAAIA,GAAQA,EAAKgG,GAAI,OAAOhG,EAAKgG,GACjC,MAAM,IAAIzB,MAAM,iBASlBlG,EAAQmI,QAAU,SAAkBxG,GAClC,OAAOA,GAAQA,EAAKiG,KAAOjG,EAAKkG,QAsClC7H,EAAQ0I,KAAO,SAAejH,EAAOkH,GACnC,GAAI3I,EAAQmI,QAAQ1G,GAClB,OAAOA,EAGT,IACE,OAnCJ,SAAqBmH,GACnB,GAAsB,iBAAXA,EACT,MAAM,IAAI1C,MAAM,yBAKlB,OAFY0C,EAAOC,eAGjB,IAAK,UACH,OAAO7I,EAAQ0H,QACjB,IAAK,eACH,OAAO1H,EAAQ8H,aACjB,IAAK,QACH,OAAO9H,EAAQgI,MACjB,IAAK,OACH,OAAOhI,EAAQ+H,KACjB,QACE,MAAM,IAAI7B,MAAM,iBAAmB0C,IAkB9BE,CAAWrH,GAClB,MAAOsH,GACP,OAAOJ,K,6BClKXzH,OAAOC,eAAenB,EAAS,aAAc,CAC3CyB,OAAO,IAGT,IAEIuH,EAAOC,EAFD,EAAQ,KAMdC,EAAOD,EAFD,EAAQ,KAMdE,EAAOF,EAFD,EAAQ,KAIlB,SAASA,EAAuBnE,GAAO,OAAOA,GAAOA,EAAIlD,WAAakD,EAAM,CAAEf,QAASe,GAEvF9E,EAAQ+D,QAAU,CAChBqF,GAAIJ,EAAKjF,QACT,QAASiF,EAAKjF,QACdsF,MAAOL,EAAKjF,QACZuF,GAAIJ,EAAKnF,QACT,QAASmF,EAAKnF,QACdwF,MAAOL,EAAKnF,QACZ,QAASmF,EAAKnF,QACdyF,GAAIL,EAAKpF,QACT,QAASoF,EAAKpF,QACd0F,MAAON,EAAKpF,U,6BC5Bd7C,OAAOC,eAAenB,EAAS,aAAc,CAC3CyB,OAAO,IAGT,IAIgCqD,EAJ5B4E,EAAS,EAAQ,IAEjBC,GAE4B7E,EAFK4E,IAEgB5E,EAAIlD,WAAakD,EAAM,CAAEf,QAASe,GAQvF,IAAI8E,EAAkB,CAIpBC,MAAO,QAIPC,MAAO,QASPzI,IAAK,SAAa0I,GAChB,GAA0B,iBAAfA,EAAyB,CAClC,IAAIC,EAASjE,KAAKgE,EAAWE,eAC7B,GAAID,EAAQ,OAAOA,EAErB,MAAML,EAAQ5F,QAAQmG,aAAa;;;;;;;;;;MAavChJ,OAAO2D,OAAO+E,GACd5J,EAAQ+D,QAAU6F,G,6BC7ClB,IAAI3D,EAAU,EAAQ,IAatBkE,EAAOC,oBAXP,WAEE,IACE,IAAIC,EAAM,IAAIC,WAAW,GAEzB,OADAD,EAAI1H,UAAY,CAACA,UAAW2H,WAAWlI,UAAWmI,IAAK,WAAc,OAAO,KACvD,KAAdF,EAAIE,MACX,MAAOxB,GACP,OAAO,GAIkByB,GAE7B,IAAIC,EAAeN,EAAOC,oBACpB,WACA,WAEN,SAASD,EAAQO,EAAKC,EAAQzH,GAC5B,OAAKiH,EAAOC,qBAAyBrE,gBAAgBoE,EAIlC,iBAARO,EACFE,EAAY7E,KAAM2E,GAmQ7B,SAAeG,EAAMpJ,EAAOkJ,EAAQzH,GAClC,GAAqB,iBAAVzB,EACT,MAAM,IAAIqB,UAAU,yCAGtB,GAA2B,oBAAhBgI,aAA+BrJ,aAAiBqJ,YACzD,OA/KJ,SAA0BD,EAAME,EAAOC,EAAY9H,GACjD,GAAI8H,EAAa,GAAKD,EAAME,WAAaD,EACvC,MAAM,IAAIE,WAAW,6BAGvB,GAAIH,EAAME,WAAaD,GAAc9H,GAAU,GAC7C,MAAM,IAAIgI,WAAW,6BAGvB,IAAIC,EAEFA,OADiBC,IAAfJ,QAAuCI,IAAXlI,EACxB,IAAIoH,WAAWS,QACDK,IAAXlI,EACH,IAAIoH,WAAWS,EAAOC,GAEtB,IAAIV,WAAWS,EAAOC,EAAY9H,GAGtCiH,EAAOC,oBAETe,EAAIxI,UAAYwH,EAAO/H,UAGvB+I,EAAME,EAAcR,EAAMM,GAG5B,OAAOA,EAqJEG,CAAgBT,EAAMpJ,EAAOkJ,EAAQzH,GAG9C,GAAqB,iBAAVzB,EACT,OA5MJ,SAAqBoJ,EAAMjC,GACzB,IAAI1F,EAA8B,EAArB+H,EAAWrC,GACpBuC,EAAMI,EAAaV,EAAM3H,GAEzBsI,EAASL,EAAIM,MAAM7C,GAEnB4C,IAAWtI,IAIbiI,EAAMA,EAAIO,MAAM,EAAGF,IAGrB,OAAOL,EA+LErC,CAAW+B,EAAMpJ,GAG1B,OAzJF,SAAqBoJ,EAAM/F,GACzB,GAAIqF,EAAOwB,SAAS7G,GAAM,CACxB,IAAI8G,EAA4B,EAAtBC,EAAQ/G,EAAI5B,QAClBiI,EAAMI,EAAaV,EAAMe,GAE7B,OAAmB,IAAfT,EAAIjI,QAIR4B,EAAIgH,KAAKX,EAAK,EAAG,EAAGS,GAHXT,EAOX,GAAIrG,EAAK,CACP,GAA4B,oBAAhBgG,aACRhG,EAAIiH,kBAAkBjB,aAAgB,WAAYhG,EACpD,MAA0B,iBAAfA,EAAI5B,SAvGL8I,EAuGkClH,EAAI5B,SAtGrC8I,EAuGFT,EAAaV,EAAM,GAErBQ,EAAcR,EAAM/F,GAG7B,GAAiB,WAAbA,EAAIqB,MAAqBH,MAAMC,QAAQnB,EAAIe,MAC7C,OAAOwF,EAAcR,EAAM/F,EAAIe,MA9GrC,IAAgBmG,EAkHd,MAAM,IAAIlJ,UAAU,sFA8HbmJ,CAAWpB,EAAMpJ,GA7QjBiH,CAAK3C,KAAM2E,EAAKC,EAAQzH,GAPtB,IAAIiH,EAAOO,EAAKC,EAAQzH,GA0BnC,SAAS2I,EAAS3I,GAGhB,GAAIA,GAAUuH,EACZ,MAAM,IAAIS,WAAW,0DACaT,EAAahC,SAAS,IAAM,UAEhE,OAAgB,EAATvF,EAOT,SAASqI,EAAcV,EAAM3H,GAC3B,IAAIiI,EAaJ,OAZIhB,EAAOC,qBACTe,EAAM,IAAIb,WAAWpH,IACjBP,UAAYwH,EAAO/H,WAIX,QADZ+I,EAAMN,KAEJM,EAAM,IAAIhB,EAAOjH,IAEnBiI,EAAIjI,OAASA,GAGRiI,EAGT,SAASP,EAAaC,EAAMqB,GAC1B,IAAIf,EAAMI,EAAaV,EAAMqB,EAAO,EAAI,EAAoB,EAAhBL,EAAQK,IAEpD,IAAK/B,EAAOC,oBACV,IAAK,IAAI5J,EAAI,EAAGA,EAAI0L,IAAQ1L,EAC1B2K,EAAI3K,GAAK,EAIb,OAAO2K,EAmBT,SAASE,EAAeR,EAAME,GAG5B,IAFA,IAAI7H,EAAS6H,EAAM7H,OAAS,EAAI,EAA4B,EAAxB2I,EAAQd,EAAM7H,QAC9CiI,EAAMI,EAAaV,EAAM3H,GACpB1C,EAAI,EAAGA,EAAI0C,EAAQ1C,GAAK,EAC/B2K,EAAI3K,GAAgB,IAAXuK,EAAMvK,GAEjB,OAAO2K,EA8DT,SAASgB,EAAavD,EAAQwD,GAE5B,IAAIC,EADJD,EAAQA,GAASE,IAMjB,IAJA,IAAIpJ,EAAS0F,EAAO1F,OAChBqJ,EAAgB,KAChBC,EAAQ,GAEHhM,EAAI,EAAGA,EAAI0C,IAAU1C,EAAG,CAI/B,IAHA6L,EAAYzD,EAAO6D,WAAWjM,IAGd,OAAU6L,EAAY,MAAQ,CAE5C,IAAKE,EAAe,CAElB,GAAIF,EAAY,MAAQ,EAEjBD,GAAS,IAAM,GAAGI,EAAMpI,KAAK,IAAM,IAAM,KAC9C,SACK,GAAI5D,EAAI,IAAM0C,EAAQ,EAEtBkJ,GAAS,IAAM,GAAGI,EAAMpI,KAAK,IAAM,IAAM,KAC9C,SAIFmI,EAAgBF,EAEhB,SAIF,GAAIA,EAAY,MAAQ,EACjBD,GAAS,IAAM,GAAGI,EAAMpI,KAAK,IAAM,IAAM,KAC9CmI,EAAgBF,EAChB,SAIFA,EAAkE,OAArDE,EAAgB,OAAU,GAAKF,EAAY,YAC/CE,IAEJH,GAAS,IAAM,GAAGI,EAAMpI,KAAK,IAAM,IAAM,KAMhD,GAHAmI,EAAgB,KAGZF,EAAY,IAAM,CACpB,IAAKD,GAAS,GAAK,EAAG,MACtBI,EAAMpI,KAAKiI,QACN,GAAIA,EAAY,KAAO,CAC5B,IAAKD,GAAS,GAAK,EAAG,MACtBI,EAAMpI,KACJiI,GAAa,EAAM,IACP,GAAZA,EAAmB,UAEhB,GAAIA,EAAY,MAAS,CAC9B,IAAKD,GAAS,GAAK,EAAG,MACtBI,EAAMpI,KACJiI,GAAa,GAAM,IACnBA,GAAa,EAAM,GAAO,IACd,GAAZA,EAAmB,SAEhB,MAAIA,EAAY,SASrB,MAAM,IAAInG,MAAM,sBARhB,IAAKkG,GAAS,GAAK,EAAG,MACtBI,EAAMpI,KACJiI,GAAa,GAAO,IACpBA,GAAa,GAAM,GAAO,IAC1BA,GAAa,EAAM,GAAO,IACd,GAAZA,EAAmB,MAOzB,OAAOG,EAGT,SAASvB,EAAYrC,GACnB,OAAIuB,EAAOwB,SAAS/C,GACXA,EAAO1F,OAEW,oBAAhB4H,aAA6D,mBAAvBA,YAAY4B,SACxD5B,YAAY4B,OAAO9D,IAAWA,aAAkBkC,aAC5ClC,EAAOqC,YAEM,iBAAXrC,IACTA,EAAS,GAAKA,GAIJ,IADFA,EAAO1F,OACK,EAEfiJ,EAAYvD,GAAQ1F,QA9OzBiH,EAAOC,sBACTD,EAAO/H,UAAUO,UAAY2H,WAAWlI,UACxC+H,EAAOxH,UAAY2H,WAGG,oBAAX/I,QAA0BA,OAAOoL,SACxCxC,EAAO5I,OAAOoL,WAAaxC,GAC7BjJ,OAAOC,eAAegJ,EAAQ5I,OAAOoL,QAAS,CAC5ClL,MAAO,KACP2B,cAAc,EACdhC,YAAY,EACZiC,UAAU,KAkQhB8G,EAAO/H,UAAUqJ,MAAQ,SAAgB7C,EAAQ+B,EAAQzH,QAExCkI,IAAXT,QAIkBS,IAAXlI,GAA0C,iBAAXyH,GAHxCzH,EAAS6C,KAAK7C,OACdyH,EAAS,GAMAiC,SAASjC,KAClBA,GAAkB,EACdiC,SAAS1J,GACXA,GAAkB,EAElBA,OAASkI,GAIb,IAAIyB,EAAY9G,KAAK7C,OAASyH,EAG9B,SAFeS,IAAXlI,GAAwBA,EAAS2J,KAAW3J,EAAS2J,GAEpDjE,EAAO1F,OAAS,IAAMA,EAAS,GAAKyH,EAAS,IAAOA,EAAS5E,KAAK7C,OACrE,MAAM,IAAIgI,WAAW,0CAGvB,OA9CF,SAAoBC,EAAKvC,EAAQ+B,EAAQzH,GACvC,OATF,SAAqB4J,EAAKC,EAAKpC,EAAQzH,GACrC,IAAK,IAAI1C,EAAI,EAAGA,EAAI0C,KACb1C,EAAImK,GAAUoC,EAAI7J,QAAY1C,GAAKsM,EAAI5J,UADhB1C,EAE5BuM,EAAIvM,EAAImK,GAAUmC,EAAItM,GAExB,OAAOA,EAIAwM,CAAWb,EAAYvD,EAAQuC,EAAIjI,OAASyH,GAASQ,EAAKR,EAAQzH,GA6ClE+J,CAAUlH,KAAM6C,EAAQ+B,EAAQzH,IAGzCiH,EAAO/H,UAAUsJ,MAAQ,SAAgBwB,EAAOC,GAC9C,IAoBIC,EApBAxB,EAAM7F,KAAK7C,OAqBf,IApBAgK,IAAUA,GAGE,GACVA,GAAStB,GACG,IAAGsB,EAAQ,GACdA,EAAQtB,IACjBsB,EAAQtB,IANVuB,OAAc/B,IAAR+B,EAAoBvB,IAAQuB,GASxB,GACRA,GAAOvB,GACG,IAAGuB,EAAM,GACVA,EAAMvB,IACfuB,EAAMvB,GAGJuB,EAAMD,IAAOC,EAAMD,GAGnB/C,EAAOC,qBACTgD,EAASrH,KAAKsH,SAASH,EAAOC,IAEvBxK,UAAYwH,EAAO/H,cACrB,CACL,IAAIkL,EAAWH,EAAMD,EACrBE,EAAS,IAAIjD,EAAOmD,OAAUlC,GAC9B,IAAK,IAAI5K,EAAI,EAAGA,EAAI8M,IAAY9M,EAC9B4M,EAAO5M,GAAKuF,KAAKvF,EAAI0M,GAIzB,OAAOE,GAGTjD,EAAO/H,UAAU0J,KAAO,SAAe9I,EAAQuK,EAAaL,EAAOC,GAQjE,GAPKD,IAAOA,EAAQ,GACfC,GAAe,IAARA,IAAWA,EAAMpH,KAAK7C,QAC9BqK,GAAevK,EAAOE,SAAQqK,EAAcvK,EAAOE,QAClDqK,IAAaA,EAAc,GAC5BJ,EAAM,GAAKA,EAAMD,IAAOC,EAAMD,GAG9BC,IAAQD,EAAO,OAAO,EAC1B,GAAsB,IAAlBlK,EAAOE,QAAgC,IAAhB6C,KAAK7C,OAAc,OAAO,EAGrD,GAAIqK,EAAc,EAChB,MAAM,IAAIrC,WAAW,6BAEvB,GAAIgC,EAAQ,GAAKA,GAASnH,KAAK7C,OAAQ,MAAM,IAAIgI,WAAW,6BAC5D,GAAIiC,EAAM,EAAG,MAAM,IAAIjC,WAAW,2BAG9BiC,EAAMpH,KAAK7C,SAAQiK,EAAMpH,KAAK7C,QAC9BF,EAAOE,OAASqK,EAAcJ,EAAMD,IACtCC,EAAMnK,EAAOE,OAASqK,EAAcL,GAGtC,IACI1M,EADAoL,EAAMuB,EAAMD,EAGhB,GAAInH,OAAS/C,GAAUkK,EAAQK,GAAeA,EAAcJ,EAE1D,IAAK3M,EAAIoL,EAAM,EAAGpL,GAAK,IAAKA,EAC1BwC,EAAOxC,EAAI+M,GAAexH,KAAKvF,EAAI0M,QAEhC,GAAItB,EAAM,MAASzB,EAAOC,oBAE/B,IAAK5J,EAAI,EAAGA,EAAIoL,IAAOpL,EACrBwC,EAAOxC,EAAI+M,GAAexH,KAAKvF,EAAI0M,QAGrC5C,WAAWlI,UAAUoL,IAAI7M,KACvBqC,EACA+C,KAAKsH,SAASH,EAAOA,EAAQtB,GAC7B2B,GAIJ,OAAO3B,GAGTzB,EAAO/H,UAAUqL,KAAO,SAAezB,EAAKkB,EAAOC,GAEjD,GAAmB,iBAARnB,GAOT,GANqB,iBAAVkB,GACTA,EAAQ,EACRC,EAAMpH,KAAK7C,QACa,iBAARiK,IAChBA,EAAMpH,KAAK7C,QAEM,IAAf8I,EAAI9I,OAAc,CACpB,IAAIwK,EAAO1B,EAAIS,WAAW,GACtBiB,EAAO,MACT1B,EAAM0B,QAGc,iBAAR1B,IAChBA,GAAY,KAId,GAAIkB,EAAQ,GAAKnH,KAAK7C,OAASgK,GAASnH,KAAK7C,OAASiK,EACpD,MAAM,IAAIjC,WAAW,sBAGvB,GAAIiC,GAAOD,EACT,OAAOnH,KAQT,IAAIvF,EACJ,GANA0M,KAAkB,EAClBC,OAAc/B,IAAR+B,EAAoBpH,KAAK7C,OAASiK,IAAQ,EAE3CnB,IAAKA,EAAM,GAGG,iBAARA,EACT,IAAKxL,EAAI0M,EAAO1M,EAAI2M,IAAO3M,EACzBuF,KAAKvF,GAAKwL,MAEP,CACL,IAAIQ,EAAQrC,EAAOwB,SAASK,GACxBA,EACA,IAAI7B,EAAO6B,GACXJ,EAAMY,EAAMtJ,OAChB,IAAK1C,EAAI,EAAGA,EAAI2M,EAAMD,IAAS1M,EAC7BuF,KAAKvF,EAAI0M,GAASV,EAAMhM,EAAIoL,GAIhC,OAAO7F,MAGToE,EAAOwD,OAAS,SAAiBC,EAAM1K,GACrC,IAAK+C,EAAQ2H,GACX,MAAM,IAAI9K,UAAU,+CAGtB,GAAoB,IAAhB8K,EAAK1K,OACP,OAAOqI,EAAa,KAAM,GAG5B,IAAI/K,EACJ,QAAe4K,IAAXlI,EAEF,IADAA,EAAS,EACJ1C,EAAI,EAAGA,EAAIoN,EAAK1K,SAAU1C,EAC7B0C,GAAU0K,EAAKpN,GAAG0C,OAItB,IAAI6I,EAASnB,EAAY,KAAM1H,GAC3B2K,EAAM,EACV,IAAKrN,EAAI,EAAGA,EAAIoN,EAAK1K,SAAU1C,EAAG,CAChC,IAAI2K,EAAMyC,EAAKpN,GACf,IAAK2J,EAAOwB,SAASR,GACnB,MAAM,IAAIrI,UAAU,+CAEtBqI,EAAIW,KAAKC,EAAQ8B,GACjBA,GAAO1C,EAAIjI,OAEb,OAAO6I,GAGT5B,EAAOc,WAAaA,EAEpBd,EAAO/H,UAAU0L,WAAY,EAC7B3D,EAAOwB,SAAW,SAAmBoC,GACnC,QAAe,MAALA,IAAaA,EAAED,YAG3B7N,EAAOD,QAAQgO,MAAQ,SAAU9B,GAC/B,IAAIH,EAAS,IAAI5B,EAAO+B,GAExB,OADAH,EAAO0B,KAAK,GACL1B,GAGT9L,EAAOD,QAAQ0I,KAAO,SAAU7C,GAC9B,OAAO,IAAIsE,EAAOtE,K,6BCpgBpB3E,OAAOC,eAAenB,EAAS,aAAc,CAC3CyB,OAAO,IAGT,IAegCqD,EAf5BY,EAAe,WAAc,SAASC,EAAiB3C,EAAQC,GAAS,IAAK,IAAIzC,EAAI,EAAGA,EAAIyC,EAAMC,OAAQ1C,IAAK,CAAE,IAAI2C,EAAaF,EAAMzC,GAAI2C,EAAW/B,WAAa+B,EAAW/B,aAAc,EAAO+B,EAAWC,cAAe,EAAU,UAAWD,IAAYA,EAAWE,UAAW,GAAMnC,OAAOC,eAAe6B,EAAQG,EAAWpB,IAAKoB,IAAiB,OAAO,SAAUN,EAAaS,EAAYC,GAAiJ,OAA9HD,GAAYqC,EAAiB9C,EAAYT,UAAWkB,GAAiBC,GAAaoC,EAAiB9C,EAAaU,GAAqBV,GAA7gB,GAWfoL,EAAS,EAAQ,IAEjBC,GAE4BpJ,EAFKmJ,IAEgBnJ,EAAIlD,WAAakD,EAAM,CAAEf,QAASe;;;;;;;;;;wjBAOvF,IAAIqJ,EAAW,WACb,SAASA,EAASC,IANpB,SAAyBxL,EAAUC,GAAe,KAAMD,aAAoBC,GAAgB,MAAM,IAAIC,UAAU,qCAO5GgD,CAAgBC,KAAMoI,GAEtBpI,KAAKsI,SAAWD,EAEhBrI,KAAKuI,SAAWF,EAAOE,SAqLzB,OAzKA5I,EAAayI,EAAU,CAAC,CACtBpM,IAAK,cACLN,MAAO,WAELsE,KAAKsI,SAASE,cAAcC,UAAUC,OAAO,sBAG7C,EAAIP,EAAQnK,SAASgC,KAAKsI,SAASE,iBAUpC,CACDxM,IAAK,UACLN,MAAO,WACL,IAAIiN,EAAoBlI,SAASmI,cAAcC,yBAAyB7I,KAAK8I,yBAC7E9I,KAAKsI,SAASE,cAAcO,YAAYJ,GACxC3I,KAAKsI,SAASU,iBAAiBC,UAAYjJ,KAAKkJ,WAChDlJ,KAAKmJ,0BAUN,CACDnN,IAAK,wBACLN,MAAO,WACL,MAAM,IAAIyE,MAAM,4DAUjB,CACDnE,IAAK,WACLN,MAAO,WACL,MAAM,IAAIyE,MAAM,+CAUjB,CACDnE,IAAK,0BACLN,MAAO,WACL,OAAOsE,KAAKkJ,aAUb,CACDlN,IAAK,iBACLN,MAAO,WACL,OAAO,OAER,CACDM,IAAK,wBACLN,MAAO,WACL,IAAI0N,EAAQpJ,KAERqJ,EAAarJ,KAAKsI,SAASE,cAAcc,cAAc,gCACvDD,IACFA,EAAWE,QAAU,SAAUC,GAC7BA,EAAMC,iBACNL,EAAMM,YAAW,GACjBN,EAAMd,SAASqB,aAInB,IAAIC,EAAa5J,KAAKsI,SAASE,cAAcc,cAAc,gCACvDM,IACFA,EAAWL,QAAU,SAAUC,GAC7BA,EAAMC,iBACNL,EAAMM,YAAW,GAEjBN,EAAMd,SAASqB,aAInB,IAAIE,EAAa7J,KAAKsI,SAASE,cAAcc,cAAc,gCACvDO,IACFA,EAAWN,QAAU,SAAUC,GAC7BA,EAAMC,iBACNL,EAAMd,SAASE,cAAcC,UAAUqB,IAAI,uBAI/C,IAAIC,EAAc/J,KAAKsI,SAASE,cAAcc,cAAc,iCACxDS,IACFA,EAAYR,QAAU,SAAUC,GAC9BA,EAAMC,iBACNL,EAAMd,SAASE,cAAcC,UAAUC,OAAO,yBAanD,CACD1M,IAAK,aACLN,MAAO,SAAoBsO,MAc1B,CACDhO,IAAK,YACLN,MAAO,WACL,OAAO,OAaR,CACDM,IAAK,gBACLN,MAAO,SAAuB0E,EAAM6J,EAAUC,GAC5C,IAAIC,EAA2BC,aAAaC,QAAQ,oBAChDC,EAAiBH,GAA4BI,KAAKC,MAAML,IAA6B,GACzFG,EAAelK,EAAO,YAAc6J,EACpCK,EAAelK,EAAO,cAAgB8J,EACtCE,aAAaK,QAAQ,mBAAoBF,KAAKG,UAAUJ,QAIrDlC,EA3LM,GA8LfnO,EAAQ+D,QAAUoK,G,gBC1NlB,SAMC,SAAUrO,EAAM4Q,GACb,kBAEqB,0BAAjB,EAMA,WAIJ,IAAIC,EAAO,aAEPC,EADgB,oBACDxQ,aADC,IACoCA,OAAOyQ,WAC3D,kBAAkBC,KAAK1Q,OAAOyQ,UAAUE,WAGxCC,EAAa,CACb,QACA,QACA,OACA,OACA,SAIJ,SAASC,EAAWnM,EAAKoM,GACrB,IAAIC,EAASrM,EAAIoM,GACjB,GAA2B,mBAAhBC,EAAOnP,KACd,OAAOmP,EAAOnP,KAAK8C,GAEnB,IACI,OAAOsM,SAAShP,UAAUJ,KAAKrB,KAAKwQ,EAAQrM,GAC9C,MAAOiE,GAEL,OAAO,WACH,OAAOqI,SAAShP,UAAUiP,MAAMA,MAAMF,EAAQ,CAACrM,EAAKwM,cAOpE,SAASC,IACDhN,QAAQiN,MACJjN,QAAQiN,IAAIH,MACZ9M,QAAQiN,IAAIH,MAAM9M,QAAS+M,WAG3BF,SAAShP,UAAUiP,MAAMA,MAAM9M,QAAQiN,IAAK,CAACjN,QAAS+M,aAG1D/M,QAAQkN,OAAOlN,QAAQkN,QAK/B,SAASC,EAAWR,GAKhB,MAJmB,UAAfA,IACAA,EAAa,OA/CD,oBAkDL3M,UAEe,UAAf2M,GAA0BN,EAC1BW,OACwBnG,IAAxB7G,QAAQ2M,GACRD,EAAW1M,QAAS2M,QACJ9F,IAAhB7G,QAAQiN,IACRP,EAAW1M,QAAS,OAEpBoM,GAMf,SAASgB,EAAsBC,EAAOC,GAElC,IAAK,IAAIrR,EAAI,EAAGA,EAAIwQ,EAAW9N,OAAQ1C,IAAK,CACxC,IAAI0Q,EAAaF,EAAWxQ,GAC5BuF,KAAKmL,GAAe1Q,EAAIoR,EACpBjB,EACA5K,KAAK+L,cAAcZ,EAAYU,EAAOC,GAI9C9L,KAAKyL,IAAMzL,KAAKgM,MAKpB,SAASC,EAAgCd,EAAYU,EAAOC,GACxD,OAAO,WAjFS,oBAkFDtN,UACPoN,EAAsBhR,KAAKoF,KAAM6L,EAAOC,GACxC9L,KAAKmL,GAAYG,MAAMtL,KAAMuL,aAOzC,SAASW,EAAqBf,EAAYU,EAAOC,GAE7C,OAAOH,EAAWR,IACXc,EAAgCX,MAAMtL,KAAMuL,WAGvD,SAASY,EAAOnR,EAAMoR,EAAcpS,GAClC,IACIqS,EADAvO,EAAOkC,KAGPsM,EAAa,WAyBjB,SAASC,IACL,IAAIC,EAEJ,GAjIc,oBAiIHnS,QAA6BiS,EAAxC,CAEA,IACIE,EAAcnS,OAAO+P,aAAakC,GACpC,MAAOG,IAGT,QAxIc,IAwIHD,EACP,IACI,IAAIE,EAASrS,OAAOoG,SAASiM,OACzBC,EAAWD,EAAOE,QAClBC,mBAAmBP,GAAc,MACnB,IAAdK,IACAH,EAAc,WAAWM,KAAKJ,EAAO/G,MAAMgH,IAAW,IAE5D,MAAOF,IAQb,YAJiCpH,IAA7BvH,EAAKiP,OAAOP,KACZA,OAAcnH,GAGXmH,GAlDS,iBAATxR,EACTsR,GAAc,IAAMtR,EACK,iBAATA,IAChBsR,OAAajH,GAwDfvH,EAAK9C,KAAOA,EAEZ8C,EAAKiP,OAAS,CAAE,MAAS,EAAG,MAAS,EAAG,KAAQ,EAAG,KAAQ,EACvD,MAAS,EAAG,OAAU,GAE1BjP,EAAKiO,cAAgB/R,GAAWkS,EAEhCpO,EAAKkP,SAAW,WACZ,OAAOX,GAGXvO,EAAKmP,SAAW,SAAUpB,EAAOqB,GAI7B,GAHqB,iBAAVrB,QAA2DxG,IAArCvH,EAAKiP,OAAOlB,EAAM3H,iBAC/C2H,EAAQ/N,EAAKiP,OAAOlB,EAAM3H,kBAET,iBAAV2H,GAAsBA,GAAS,GAAKA,GAAS/N,EAAKiP,OAAOI,QAUhE,KAAM,6CAA+CtB,EAJrD,GALAQ,EAAeR,GACC,IAAZqB,GAtEZ,SAAgCE,GAC5B,IAAIC,GAAapC,EAAWmC,IAAa,UAAUlJ,cAEnD,GA/Gc,oBA+GH7J,QAA6BiS,EAAxC,CAGA,IAEI,YADAjS,OAAO+P,aAAakC,GAAce,GAEpC,MAAOZ,IAGT,IACIpS,OAAOoG,SAASiM,OACdG,mBAAmBP,GAAc,IAAMe,EAAY,IACvD,MAAOZ,MAwDDa,CAAuBzB,GAE3BD,EAAsBhR,KAAKkD,EAAM+N,EAAO7Q,GArL9B,oBAsLCwD,SAA6BqN,EAAQ/N,EAAKiP,OAAOI,OACxD,MAAO,oCAOnBrP,EAAKyP,gBAAkB,SAAU1B,GACxBU,KACDzO,EAAKmP,SAASpB,GAAO,IAI7B/N,EAAK0P,UAAY,SAASN,GACtBpP,EAAKmP,SAASnP,EAAKiP,OAAOU,MAAOP,IAGrCpP,EAAK4P,WAAa,SAASR,GACvBpP,EAAKmP,SAASnP,EAAKiP,OAAOI,OAAQD,IAItC,IAAIS,EAAepB,IACC,MAAhBoB,IACAA,EAA+B,MAAhBvB,EAAuB,OAASA,GAEnDtO,EAAKmP,SAASU,GAAc,GAS9B,IAAIC,EAAgB,IAAIzB,EAEpB0B,EAAiB,GACrBD,EAAcE,UAAY,SAAmB9S,GACzC,GAAqB,iBAATA,GAAqC,iBAATA,GAA+B,KAATA,EAC5D,MAAM,IAAI+B,UAAU,kDAGtB,IAAIgR,EAASF,EAAe7S,GAK5B,OAJK+S,IACHA,EAASF,EAAe7S,GAAQ,IAAImR,EAClCnR,EAAM4S,EAAcZ,WAAYY,EAAc7B,gBAE3CgC,GAIX,IAAIC,EA3OgB,oBA2OD3T,OAA4BA,OAAOoR,SAAMpG,EAiB5D,OAhBAuI,EAAcK,WAAa,WAMvB,MAlPgB,oBA6OL5T,QACJA,OAAOoR,MAAQmC,IAClBvT,OAAOoR,IAAMuC,GAGVJ,GAGXA,EAAcM,WAAa,WACvB,OAAOL,GAIXD,EAAuB,QAAIA,EAEpBA,IAvQc,kCAHzB,I,gBCNA,IAAIO,EAAgB,EAAQ,IAE5B,SAASC,EAAKnR,EAAQb,EAAUiS,GAiB9B,MAhBuB,oBAAZC,SAA2BA,QAAQhT,IAC5CpB,EAAOD,QAAUmU,EAAOE,QAAQhT,IAEhCpB,EAAOD,QAAUmU,EAAO,SAAcnR,EAAQb,EAAUiS,GACtD,IAAIE,EAAOJ,EAAclR,EAAQb,GACjC,GAAKmS,EAAL,CACA,IAAIC,EAAOrT,OAAOsT,yBAAyBF,EAAMnS,GAEjD,OAAIoS,EAAKlT,IACAkT,EAAKlT,IAAIV,KAAKyT,GAGhBG,EAAK9S,QAIT0S,EAAKnR,EAAQb,EAAUiS,GAAYpR,GAG5C/C,EAAOD,QAAUmU,G,6BCpBjBjT,OAAOC,eAAenB,EAAS,aAAc,CAC3CyB,OAAO;;;;;;;;;;;AAaT,IAAIgT,EAAS,SAAgBC,GAC3B,OAAOC,QAAQF,OAAO,IAAIvO,MAAMwO,KAG9BE,EAAW,GAEf,CAAC,eAAgB,oBAAoBC,SAAQ,SAAUC,GACrDF,EAASE,GAAQ,WACf,IAAIC,EAEJ,OAAOlE,UAAUmE,eAAiBD,EAAwBlE,UAAUmE,cAAcF,GAAMzD,MAAM0D,EAAuBzD,YAAcmD,EAAO,iCAAmCK,OAIjL9U,EAAQ+D,QAAU6Q,G,6BC5BlB1T,OAAOC,eAAenB,EAAS,aAAc,CAC3CyB,OAAO;;;;;;;;;;;AAgBT,IAAIwT,EAAW,CACbC,qBAAsB,KAkBxBlV,EAAQ+D,QAN0B,SAASoR,EAA4BC,IA1BvE,SAAyBxS,EAAUC,GAAe,KAAMD,aAAoBC,GAAgB,MAAM,IAAIC,UAAU,qCA2B9GgD,CAAgBC,KAAMoP,GAEtBjU,OAAOmU,OAAOtP,KAAMkP,EAAUG,K,6BCjChClU,OAAOC,eAAenB,EAAS,aAAc,CAC3CyB,OAAO,IAGT,IAAIiE,EAAe,WAAc,SAASC,EAAiB3C,EAAQC,GAAS,IAAK,IAAIzC,EAAI,EAAGA,EAAIyC,EAAMC,OAAQ1C,IAAK,CAAE,IAAI2C,EAAaF,EAAMzC,GAAI2C,EAAW/B,WAAa+B,EAAW/B,aAAc,EAAO+B,EAAWC,cAAe,EAAU,UAAWD,IAAYA,EAAWE,UAAW,GAAMnC,OAAOC,eAAe6B,EAAQG,EAAWpB,IAAKoB,IAAiB,OAAO,SAAUN,EAAaS,EAAYC,GAAiJ,OAA9HD,GAAYqC,EAAiB9C,EAAYT,UAAWkB,GAAiBC,GAAaoC,EAAiB9C,EAAaU,GAAqBV,GAA7gB;;;;;;;;;;;AAoBnB,IAAIyS,EAAkC,WACpC,SAASA,KAnBX,SAAyB1S,EAAUC,GAAe,KAAMD,aAAoBC,GAAgB,MAAM,IAAIC,UAAU,qCAoB5GgD,CAAgBC,KAAMuP,GA8BxB,OA3BA5P,EAAa4P,EAAiC,CAAC,CAC7CvT,IAAK,cACLV,IAAK,WACH,MAAM,IAAI6E,MAAM,8DAEjB,CACDnE,IAAK,aACLV,IAAK,WACH,MAAM,IAAI6E,MAAM,6DAEjB,CACDnE,IAAK,aACLV,IAAK,WACH,MAAM,IAAI6E,MAAM,6DAEjB,CACDnE,IAAK,UACLV,IAAK,WACH,MAAM,IAAI6E,MAAM,0DAEjB,CACDnE,IAAK,aACLV,IAAK,WACH,MAAM,IAAI6E,MAAM,+DAIboP,EAhC6B,GAmCtCtV,EAAQ+D,QAAUuR,G,6BC3DlBpU,OAAOC,eAAenB,EAAS,aAAc,CAC3CyB,OAAO,IAGT,IAegCqD,EAf5BY,EAAe,WAAc,SAASC,EAAiB3C,EAAQC,GAAS,IAAK,IAAIzC,EAAI,EAAGA,EAAIyC,EAAMC,OAAQ1C,IAAK,CAAE,IAAI2C,EAAaF,EAAMzC,GAAI2C,EAAW/B,WAAa+B,EAAW/B,aAAc,EAAO+B,EAAWC,cAAe,EAAU,UAAWD,IAAYA,EAAWE,UAAW,GAAMnC,OAAOC,eAAe6B,EAAQG,EAAWpB,IAAKoB,IAAiB,OAAO,SAAUN,EAAaS,EAAYC,GAAiJ,OAA9HD,GAAYqC,EAAiB9C,EAAYT,UAAWkB,GAAiBC,GAAaoC,EAAiB9C,EAAaU,GAAqBV,GAA7gB,GAWf0S,EAAoC,EAAQ,GAE5CC,GAE4B1Q,EAFgCyQ,IAEXzQ,EAAIlD,WAAakD,EAAM,CAAEf,QAASe;;;;;;;;;;wjBAavF,IAAI2Q,EAA4B,WAC9B,SAASA,EAA0BC,IAZrC,SAAyB9S,EAAUC,GAAe,KAAMD,aAAoBC,GAAgB,MAAM,IAAIC,UAAU,qCAa5GgD,CAAgBC,KAAM0P,GAEtB1P,KAAK4P,cAAgBD,EAqDvB,OAlDAhQ,EAAa+P,EAA2B,CAAC,CACvC1T,IAAK,OACLV,IAAK,WACH,OAAO0E,KAAK4P,cAAc5U,OAE3B,CACDgB,IAAK,kBACLV,IAAK,WACH,OAAO0E,KAAK4P,cAAcC,kBAE3B,CACD7T,IAAK,YACLV,IAAK,WACH,OAAO0E,KAAK4P,cAAcE,YAE3B,CACD9T,IAAK,WACLV,IAAK,WACH,OAAO0E,KAAK4P,cAAcG,WAE3B,CACD/T,IAAK,eACLV,IAAK,WACH,OAAO0E,KAAK4P,cAAcI,eAE3B,CACDhU,IAAK,0BACLV,IAAK,WACH,OAAO0E,KAAK4P,cAAcK,yBAE5BxI,IAAK,SAAayI,GAChBlQ,KAAK4P,cAAcK,wBAA0BC,IAE9C,CACDlU,IAAK,aACLV,IAAK,WACH,OAAO0E,KAAK6P,iBAAmB7P,KAAK6P,kBAAoBJ,EAAmCzR,QAAQY,WAEpG,CACD5C,IAAK,aACLV,IAAK,WACH,OAAO0E,KAAK6P,iBAAmB7P,KAAK6P,kBAAoBJ,EAAmCzR,QAAQW,WAEpG,CACD3C,IAAK,UACLV,IAAK,WACH,OAAO0E,KAAK6P,iBAAmB7P,KAAK6P,kBAAoBJ,EAAmCzR,QAAQa,UAIhG6Q,EAzDuB,GA4DhCzV,EAAQ+D,QAAU0R,G,6BC5FlBvU,OAAOC,eAAenB,EAAS,aAAc,CAC3CyB,OAAO,IAGT,IAAIiE,EAAe,WAAc,SAASC,EAAiB3C,EAAQC,GAAS,IAAK,IAAIzC,EAAI,EAAGA,EAAIyC,EAAMC,OAAQ1C,IAAK,CAAE,IAAI2C,EAAaF,EAAMzC,GAAI2C,EAAW/B,WAAa+B,EAAW/B,aAAc,EAAO+B,EAAWC,cAAe,EAAU,UAAWD,IAAYA,EAAWE,UAAW,GAAMnC,OAAOC,eAAe6B,EAAQG,EAAWpB,IAAKoB,IAAiB,OAAO,SAAUN,EAAaS,EAAYC,GAAiJ,OAA9HD,GAAYqC,EAAiB9C,EAAYT,UAAWkB,GAAiBC,GAAaoC,EAAiB9C,EAAaU,GAAqBV,GAA7gB;;;;;;;;;;;AAqBnB,IAAIqT,EAA8B,WAmChC,SAASA,EAA4BC,IAtDvC,SAAyBvT,EAAUC,GAAe,KAAMD,aAAoBC,GAAgB,MAAM,IAAIC,UAAU,qCAuD5GgD,CAAgBC,KAAMmQ,GAEtBnQ,KAAKqQ,SAAWD,EA2RlB,OAhRAzQ,EAAawQ,EAA6B,CAAC,CACzCnU,IAAK,eACLV,IAAK,WACH,OAAO0E,KAAKqQ,SAASC,eAEtB,CACDtU,IAAK,cACLV,IAAK,WACH,OAAO0E,KAAKqQ,SAASE,cAEtB,CACDvU,IAAK,YACLV,IAAK,WACH,OAAO0E,KAAKqQ,SAASG,YAEtB,CACDxU,IAAK,UACLV,IAAK,WACH,OAAO0E,KAAKqQ,SAASI,UAEtB,CACDzU,IAAK,UACLV,IAAK,WACH,OAAO0E,KAAKqQ,SAASK,UAEtB,CACD1U,IAAK,iBACLV,IAAK,WACH,OAAO0E,KAAKqQ,SAASM,iBAUtB,CACD3U,IAAK,mBACLV,IAAK,WACH,OAAO0E,KAAKqQ,SAASO,mBAUtB,CACD5U,IAAK,qBACLV,IAAK,WACH,OAAO0E,KAAKqQ,SAASQ,qBAEtB,CACD7U,IAAK,eACLV,IAAK,WACH,OAAsC,IAA/B0E,KAAKqQ,SAASS,eAEtB,CACD9U,IAAK,mBACLV,IAAK,WACH,OAAO0E,KAAKqQ,SAASU,kBAEvBtJ,IAAK,SAAauJ,GAChBhR,KAAKqQ,SAASU,iBAAmBC,IAElC,CACDhV,IAAK,WACLV,IAAK,WACH,IAAI2V,EAAWjR,KAAKqQ,SAASO,iBAM7B,OALKK,GAAaA,EAASC,aACzBD,EAAWjR,KAAKqQ,SAASQ,mBAAmBM,QAAO,SAAUC,GAC3D,OAAOA,EAAkBF,cACxB,IAEED,IAER,CACDjV,IAAK,WACLV,IAAK,WACH,IAAIqU,EAAc3P,KAAKqQ,SAASO,iBAMhC,OALKjB,GAAgBA,EAAY0B,aAC/B1B,EAAc3P,KAAKqQ,SAASQ,mBAAmBM,QAAO,SAAUC,GAC9D,OAAOA,EAAkBC,cACxB,IAEE1B,IAUR,CACD3T,IAAK,mBACLV,IAAK,WACH,OAAO0E,KAAKqQ,SAASE,YAAYe,MAAML,UAAWjR,KAAKqQ,SAASE,YAAYe,MAAML,SAASM,UAAyB,aAUrH,CACDvV,IAAK,mBACLV,IAAK,WACH,OAAO0E,KAAKqQ,SAASE,YAAYe,MAAME,kBAAmBxR,KAAKqQ,SAASE,YAAYe,MAAME,iBAAiBD,UAAyB,aAUrI,CACDvV,IAAK,sBACLV,IAAK,WACH,OAAO0E,KAAKqQ,SAASoB,sBAEtB,CACDzV,IAAK,qBACLV,IAAK,WACH,OAAO0E,KAAKqQ,SAASqB,oBAEvBjK,IAAK,SAAakK,GAChB3R,KAAKqQ,SAASqB,mBAAqBC,IAEpC,CACD3V,IAAK,+BACLV,IAAK,WACH,OAAO0E,KAAKqQ,SAASuB,8BAEvBnK,IAAK,SAAakK,GAChB3R,KAAKqQ,SAASuB,6BAA+BD,IAE9C,CACD3V,IAAK,4BACLV,IAAK,WACH,OAAO0E,KAAKqQ,SAASwB,2BAEvBpK,IAAK,SAAakK,GAChB3R,KAAKqQ,SAASwB,0BAA4BF,IAE3C,CACD3V,IAAK,SACLV,IAAK,WACH,OAAO0E,KAAKqQ,SAAStC,SAEtB,CACD/R,IAAK,mBACLV,IAAK,WACH,OAAO0E,KAAKqQ,SAASyB,mBAEtB,CACD9V,IAAK,SACLV,IAAK,WACH,OAAO0E,KAAKqQ,SAAS0B,QAAU,OAEhC,CACD/V,IAAK,WACLV,IAAK,WACH,OAAO0E,KAAKqQ,SAAS9H,WAEtB,CACDvM,IAAK,SACLV,IAAK,WACH,OAAO0E,KAAKqQ,SAAS2B,SAEtB,CACDhW,IAAK,aACLV,IAAK,WACH,OAAO0E,KAAKqQ,SAAS4B,aAEtB,CACDjW,IAAK,gBACLV,IAAK,WACH,OAAO0E,KAAKqQ,SAAS6B,eAEvBzK,IAAK,SAAayK,GAChBlS,KAAKqQ,SAAS6B,cAAgBA,IAE/B,CACDlW,IAAK,gBACLV,IAAK,WACH,OAAO0E,KAAKqQ,SAAS8B,eAEvB1K,IAAK,SAAa0K,GAChBnS,KAAKqQ,SAAS8B,cAAgBA,IAE/B,CACDnW,IAAK,2BACLV,IAAK,WACH,OAAO0E,KAAKqQ,SAAS+B,2BAEtB,CACDpW,IAAK,8BACLV,IAAK,WACH,OAAO0E,KAAKqQ,SAASgC,8BAUtB,CACDrW,IAAK,wBACLV,IAAK,WACH,OAAO0E,KAAKqQ,SAASiC,wBAUtB,CACDtW,IAAK,kBACLV,IAAK,WACH,OAAO0E,KAAKqQ,SAASR,kBAUtB,CACD7T,IAAK,sBACLV,IAAK,WACH,OAAO0E,KAAKqQ,SAASkC,sBAEtB,CACDvW,IAAK,0BACLV,IAAK,WACH,OAAO0E,KAAKqQ,SAASmC,0BAKtB,CACDxW,IAAK,uBACLV,IAAK,WACH,MAAqD,kBAAvC0E,KAAKqQ,SAASoC,sBAAqCzS,KAAKqQ,SAASoC,sBAEjFhL,IAAK,SAAagL,GAChBzS,KAAKqQ,SAASoC,qBAAuBA,IAEtC,CACDzW,IAAK,UACLV,IAAK,WACH,OAAO0E,KAAKqQ,SAASqC,YAIlBvC,EAjUyB,GAoUlClW,EAAQ+D,QAAUmS,G,cC/VlB,IAAIwC,EAGJA,EAAI,WACH,OAAO3S,KADJ,GAIJ,IAEC2S,EAAIA,GAAK,IAAItH,SAAS,cAAb,GACR,MAAOrI,GAEc,iBAAX3I,SAAqBsY,EAAItY,QAOrCH,EAAOD,QAAU0Y,G,cCnBjB,IAAIjQ,EAAW,GAAGA,SAElBxI,EAAOD,QAAUgG,MAAMC,SAAW,SAAUoE,GAC1C,MAA6B,kBAAtB5B,EAAS9H,KAAK0J,K,cCHvBrK,EAAQ2Y,EAAI,CAAE/Q,IAAK,GACnB5H,EAAQ4Y,EAAI,CAAEhR,IAAK,GACnB5H,EAAQ6Y,EAAI,CAAEjR,IAAK,GACnB5H,EAAQ8Y,EAAI,CAAElR,IAAK,GA+BnB5H,EAAQmI,QAAU,SAAkByJ,GAClC,OAAOA,QAA8B,IAAdA,EAAMhK,KAC3BgK,EAAMhK,KAAO,GAAKgK,EAAMhK,IAAM,GAGlC5H,EAAQ0I,KAAO,SAAejH,EAAOkH,GACnC,GAAI3I,EAAQmI,QAAQ1G,GAClB,OAAOA,EAGT,IACE,OAxCJ,SAAqBmH,GACnB,GAAsB,iBAAXA,EACT,MAAM,IAAI1C,MAAM,yBAKlB,OAFY0C,EAAOC,eAGjB,IAAK,IACL,IAAK,MACH,OAAO7I,EAAQ2Y,EAEjB,IAAK,IACL,IAAK,SACH,OAAO3Y,EAAQ4Y,EAEjB,IAAK,IACL,IAAK,WACH,OAAO5Y,EAAQ6Y,EAEjB,IAAK,IACL,IAAK,OACH,OAAO7Y,EAAQ8Y,EAEjB,QACE,MAAM,IAAI5S,MAAM,qBAAuB0C,IAelCE,CAAWrH,GAClB,MAAOsH,GACP,OAAOJ,K,8BC/CX,YACA,IAAIoQ,EAAkBhT,MAAQA,KAAKgT,gBAAmB,WAClD,IAAK,IAAIxW,EAAI,EAAG/B,EAAI,EAAGwY,EAAK1H,UAAUpO,OAAQ1C,EAAIwY,EAAIxY,IAAK+B,GAAK+O,UAAU9Q,GAAG0C,OACxE,IAAI5B,EAAI0E,MAAMzD,GAAIgD,EAAI,EAA3B,IAA8B/E,EAAI,EAAGA,EAAIwY,EAAIxY,IACzC,IAAK,IAAIyY,EAAI3H,UAAU9Q,GAAI0Y,EAAI,EAAGC,EAAKF,EAAE/V,OAAQgW,EAAIC,EAAID,IAAK3T,IAC1DjE,EAAEiE,GAAK0T,EAAEC,GACjB,OAAO5X,GAEXJ,OAAOC,eAAenB,EAAS,aAAc,CAAEyB,OAAO,IACtD,IAAI2X,EACA,SAAqBrY,EAAMgG,EAASsS,GAChCtT,KAAKhF,KAAOA,EACZgF,KAAKgB,QAAUA,EACfhB,KAAKsT,GAAKA,GAIlBrZ,EAAQoZ,YAAcA,EACtB,IAAIE,EACA,SAAkBvS,GACdhB,KAAKgB,QAAUA,EACfhB,KAAKhF,KAAO,OACZgF,KAAKsT,GAAKE,EAAQC,UAI1BxZ,EAAQsZ,SAAWA,EACnB,IAAIG,EACA,WACI1T,KAAK2T,KAAM,EACX3T,KAAKhF,KAAO,MACZgF,KAAKgB,QAAU,KACfhB,KAAKsT,GAAK,MAIlBrZ,EAAQyZ,QAAUA,EAElB,IAGIE,EAAiB,CACjB,CAAC,MAAO,0BACR,CAAC,OAAQ,qBACT,CAAC,WAAY,uBACb,CAAC,gBAAiB,0BAClB,CAAC,UAAW,uBACZ,CAAC,YAAa,yBACd,CAAC,UAAW,8BACZ,CAAC,OAAQ,yBACT,CAAC,OAAQ,4BACT,CAAC,SAAU,6BACX,CAAC,gBAAiB,mBAClB,CACI,mBACA,0DAEJ,CAAC,SAAU,oDACX,CAAC,YAAa,iCACd,CAAC,QAAS,6BACV,CAAC,UAAW,+BACZ,CAAC,QAAS,qBACV,CAAC,aAAc,mCACf,CAAC,QAAS,6BACV,CAAC,QAAS,2BACV,CAAC,KAAM,6CACP,CAAC,KAAM,uCACP,CAAC,KAAM,gBACP,CAAC,OAAQ,qCACT,CAAC,UAAW,uBACZ,CAAC,MAAO,0CACR,CAAC,SAAU,gCACX,CAAC,WAAY,oBACb,CAAC,YAAa,yBACd,CAAC,cAAe,mCAChB,CAAC,cAAe,qCAChB,CAAC,YAtCoB,iIAwCrBC,EAAuB,CACvB,CAAC,MAAO,kBACR,CAAC,aAAc,WACf,CAAC,gBAAiB,mBAClB,CAAC,iBAAkB,YACnB,CAAC,YAAa,UACd,CAAC,eAAgB,SACjB,CAAC,aAAc,qCACf,CAAC,aAAc,wBACf,CAAC,eAAgB,mCACjB,CAAC,aAAc,iCACf,CAAC,sBAAuB,oBACxB,CAAC,gBAAiB,oBAClB,CAAC,YAAa,oBACd,CAAC,YAAa,oBACd,CAAC,cAAe,oBAChB,CAAC,aAAc,qBACf,CAAC,aAAc,cACf,CAAC,WAAY,WACb,CAAC,SAAU,SACX,CAAC,YAAa,QACd,CAAC,QAAS,iBACV,CAAC,SAAU,6BACX,CAAC,MAAO,OACR,CAAC,OAAQ,QACT,CAAC,OAAQ,SACT,CAAC,aAjEoB,+FA6EzB,SAASC,EAAeC,GAKpB,IAAIC,EAAqB,KAAPD,GACdH,EAAeK,QAAO,SAAUC,EAASC,GACrC,IAAIC,EAAUD,EAAG,GAAIE,EAAQF,EAAG,GAChC,GAAID,EACA,OAAOA,EAEX,IAAII,EAAUD,EAAMvH,KAAKiH,GACzB,QAASO,GAAW,CAACF,EAASE,MAC/B,GACP,IAAKN,EACD,OAAO,KAEX,IAAIhZ,EAAOgZ,EAAY,GAAIO,EAAQP,EAAY,GAC/C,GAAa,cAAThZ,EACA,OAAO,IAAI0Y,EAEf,IAAIc,EAAeD,EAAM,IAAMA,EAAM,GAAGE,MAAM,QAAQ9O,MAAM,EAAG,GAS/D,OARI6O,EACIA,EAAarX,OAnGI,IAoGjBqX,EAAexB,EAAewB,EAyB1C,SAA4BE,GAExB,IADA,IAAIC,EAAS,GACJC,EAAK,EAAGA,EAAKF,EAAOE,IACzBD,EAAOtW,KAAK,KAEhB,OAAOsW,EA9B6CE,CApG3B,EAoGuEL,EAAarX,UAIzGqX,EAAe,GAEZ,IAAInB,EAAYrY,EAAMwZ,EAAajW,KAAK,KAAMuW,EAASf,IAGlE,SAASe,EAASf,GACd,IAAK,IAAIa,EAAK,EAAGF,EAAQb,EAAqB1W,OAAQyX,EAAKF,EAAOE,IAAM,CACpE,IAAIT,EAAKN,EAAqBe,GAAKtB,EAAKa,EAAG,GAE3C,GAFuDA,EAAG,GACxCpJ,KAAKgJ,GAEnB,OAAOT,EAGf,OAAO,KAGX,SAASyB,IAEL,YADgC,IAAZvB,GAA2BA,EAAQxS,QACvC,IAAIuS,EAASC,EAAQxS,QAAQ2E,MAAM,IAAM,KA/C7D1L,EAAQ+a,OATR,SAAgBhK,GACZ,OAAMA,EACK8I,EAAe9I,GAED,oBAAdF,UACAgJ,EAAehJ,UAAUE,WAE7B+J,KAmCX9a,EAAQ6Z,eAAiBA,EAWzB7Z,EAAQ6a,SAAWA,EAKnB7a,EAAQ8a,eAAiBA,I,+CClKzB5Z,OAAOC,eAAenB,EAAS,aAAc,CAC3CyB,OAAO,IAsBTzB,EAAQ+D,QALqB,CAC3BiX,IAAK,MACLC,KAAM,S,6BCpBR/Z,OAAOC,eAAenB,EAAS,aAAc,CAC3CyB,OAAO,IAyBTzB,EAAQ+D,QANgB,WACtB,MAAO,CAAC,oBAAqB,0BAA2B,uBAAwB,kBAAkBmX,MAAK,SAAUC,GAC/G,OAAOA,KAAQ/a,Y,6BCtBnBc,OAAOC,eAAenB,EAAS,aAAc,CAC3CyB,OAAO,IAyCTzB,EAAQ+D,QAZR,SAASqX,KA1BT,SAAyBxY,EAAUC,GAAe,KAAMD,aAAoBC,GAAgB,MAAM,IAAIC,UAAU;;;;;;;;;;GA2B9GgD,CAAgBC,KAAMqV,GAEtBrV,KAAKsV,aAAUjQ,EACfrF,KAAKuV,YAAa,EAClBvV,KAAKwV,UAAW,EAChBxV,KAAKyV,gBAAiB,EACtBzV,KAAK0V,wBAAqBrQ,EAC1BrF,KAAK2V,iBAAmB,EACxB3V,KAAK4V,eAAiB,I,cCzCxB,SAASC,EAAgB3a,EAAGqB,GAM1B,OALArC,EAAOD,QAAU4b,EAAkB1a,OAAOuB,gBAAkB,SAAyBxB,EAAGqB,GAEtF,OADArB,EAAE0B,UAAYL,EACPrB,GAGF2a,EAAgB3a,EAAGqB,GAG5BrC,EAAOD,QAAU4b,G,gBCTjB,IAAIC,EAAmB,EAAQ,IAW/B5b,EAAOD,QATP,SAAqCiB,EAAG6a,GACtC,GAAK7a,EAAL,CACA,GAAiB,iBAANA,EAAgB,OAAO4a,EAAiB5a,EAAG6a,GACtD,IAAI7Z,EAAIf,OAAOkB,UAAUqG,SAAS9H,KAAKM,GAAGyK,MAAM,GAAI,GAEpD,MADU,WAANzJ,GAAkBhB,EAAEyC,cAAazB,EAAIhB,EAAEyC,YAAY3C,MAC7C,QAANkB,GAAqB,QAANA,EAAoB+D,MAAM0C,KAAKzH,GACxC,cAANgB,GAAqB,2CAA2C6O,KAAK7O,GAAW4Z,EAAiB5a,EAAG6a,QAAxG,K,cCEF7b,EAAOD,QAVP,SAA2BqK,EAAKuB,IACnB,MAAPA,GAAeA,EAAMvB,EAAInH,UAAQ0I,EAAMvB,EAAInH,QAE/C,IAAK,IAAI1C,EAAI,EAAGub,EAAO,IAAI/V,MAAM4F,GAAMpL,EAAIoL,EAAKpL,IAC9Cub,EAAKvb,GAAK6J,EAAI7J,GAGhB,OAAOub,I,gBCPT,IAAIC,EAAU,EAAQ,IAElBC,EAAkB,CAEpB,EAAG,EAAG,EAAG,EACT,EAAG,EAAG,EAAG,EACT,EAAG,EAAG,EAAG,EACT,EAAG,EAAG,EAAG,EACT,EAAG,EAAG,EAAG,EACT,EAAG,EAAG,EAAG,EACT,EAAG,EAAG,EAAG,EACT,EAAG,EAAG,EAAG,EACT,EAAG,EAAG,EAAG,EACT,EAAG,EAAG,EAAG,EACT,EAAG,EAAG,EAAG,GACT,EAAG,EAAG,GAAI,GACV,EAAG,EAAG,GAAI,GACV,EAAG,EAAG,GAAI,GACV,EAAG,GAAI,GAAI,GACX,EAAG,GAAI,GAAI,GACX,EAAG,GAAI,GAAI,GACX,EAAG,GAAI,GAAI,GACX,EAAG,GAAI,GAAI,GACX,EAAG,GAAI,GAAI,GACX,EAAG,GAAI,GAAI,GACX,EAAG,GAAI,GAAI,GACX,EAAG,GAAI,GAAI,GACX,GAAI,GAAI,GAAI,GACZ,GAAI,GAAI,GAAI,GACZ,GAAI,GAAI,GAAI,GACZ,GAAI,GAAI,GAAI,GACZ,GAAI,GAAI,GAAI,GACZ,GAAI,GAAI,GAAI,GACZ,GAAI,GAAI,GAAI,GACZ,GAAI,GAAI,GAAI,GACZ,GAAI,GAAI,GAAI,GACZ,GAAI,GAAI,GAAI,GACZ,GAAI,GAAI,GAAI,GACZ,GAAI,GAAI,GAAI,GACZ,GAAI,GAAI,GAAI,GACZ,GAAI,GAAI,GAAI,GACZ,GAAI,GAAI,GAAI,GACZ,GAAI,GAAI,GAAI,GACZ,GAAI,GAAI,GAAI,IAGVC,EAAqB,CAEvB,EAAG,GAAI,GAAI,GACX,GAAI,GAAI,GAAI,GACZ,GAAI,GAAI,GAAI,GACZ,GAAI,GAAI,GAAI,GACZ,GAAI,GAAI,GAAI,GACZ,GAAI,GAAI,GAAI,IACZ,GAAI,GAAI,IAAK,IACb,GAAI,GAAI,IAAK,IACb,GAAI,IAAK,IAAK,IACd,GAAI,IAAK,IAAK,IACd,GAAI,IAAK,IAAK,IACd,GAAI,IAAK,IAAK,IACd,IAAK,IAAK,IAAK,IACf,IAAK,IAAK,IAAK,IACf,IAAK,IAAK,IAAK,IACf,IAAK,IAAK,IAAK,IACf,IAAK,IAAK,IAAK,IACf,IAAK,IAAK,IAAK,IACf,IAAK,IAAK,IAAK,IACf,IAAK,IAAK,IAAK,IACf,IAAK,IAAK,IAAK,IACf,IAAK,IAAK,IAAK,IACf,IAAK,IAAK,IAAK,IACf,IAAK,IAAK,IAAK,IACf,IAAK,IAAK,IAAK,KACf,IAAK,IAAK,IAAK,KACf,IAAK,IAAK,KAAM,KAChB,IAAK,IAAK,KAAM,KAChB,IAAK,IAAK,KAAM,KAChB,IAAK,IAAK,KAAM,KAChB,IAAK,IAAK,KAAM,KAChB,IAAK,IAAK,KAAM,KAChB,IAAK,IAAK,KAAM,KAChB,IAAK,KAAM,KAAM,KACjB,IAAK,KAAM,KAAM,KACjB,IAAK,KAAM,KAAM,KACjB,IAAK,KAAM,KAAM,KACjB,IAAK,KAAM,KAAM,KACjB,IAAK,KAAM,KAAM,KACjB,IAAK,KAAM,KAAM,MAWnBlc,EAAQmc,eAAiB,SAAyBpV,EAASqV,GACzD,OAAQA,GACN,KAAKJ,EAAQrD,EACX,OAAOsD,EAAgC,GAAflV,EAAU,GAAS,GAC7C,KAAKiV,EAAQpD,EACX,OAAOqD,EAAgC,GAAflV,EAAU,GAAS,GAC7C,KAAKiV,EAAQnD,EACX,OAAOoD,EAAgC,GAAflV,EAAU,GAAS,GAC7C,KAAKiV,EAAQlD,EACX,OAAOmD,EAAgC,GAAflV,EAAU,GAAS,GAC7C,QACE,SAYN/G,EAAQqc,uBAAyB,SAAiCtV,EAASqV,GACzE,OAAQA,GACN,KAAKJ,EAAQrD,EACX,OAAOuD,EAAmC,GAAfnV,EAAU,GAAS,GAChD,KAAKiV,EAAQpD,EACX,OAAOsD,EAAmC,GAAfnV,EAAU,GAAS,GAChD,KAAKiV,EAAQnD,EACX,OAAOqD,EAAmC,GAAfnV,EAAU,GAAS,GAChD,KAAKiV,EAAQlD,EACX,OAAOoD,EAAmC,GAAfnV,EAAU,GAAS,GAChD,QACE,U,cC9HN/G,EAAQmI,QAAU,SAAkBpB,GAClC,OAAQuV,MAAMvV,IAAYA,GAAW,GAAKA,GAAW,K,cCPvD,IAEIQ,EAAQ,mNAMRgV,EAAO,8BAFXhV,EAAQA,EAAM/B,QAAQ,KAAM,QAEsB,kBAElDxF,EAAQgI,MAAQ,IAAIwU,OAAOjV,EAAO,KAClCvH,EAAQyc,WAAa,IAAID,OAAO,wBAAyB,KACzDxc,EAAQ+H,KAAO,IAAIyU,OAAOD,EAAM,KAChCvc,EAAQ0H,QAAU,IAAI8U,OAbR,SAawB,KACtCxc,EAAQ8H,aAAe,IAAI0U,OAbR,oBAa6B,KAEhD,IAAIE,EAAa,IAAIF,OAAO,IAAMjV,EAAQ,KACtCoV,EAAe,IAAIH,OAAO,YAC1BI,EAAoB,IAAIJ,OAAO,0BAEnCxc,EAAQwI,UAAY,SAAoBqU,GACtC,OAAOH,EAAW5L,KAAK+L,IAGzB7c,EAAQsI,YAAc,SAAsBuU,GAC1C,OAAOF,EAAa7L,KAAK+L,IAG3B7c,EAAQuI,iBAAmB,SAA2BsU,GACpD,OAAOD,EAAkB9L,KAAK+L,K,cC7BhC,SAASC,EAAUC,GAKjB,GAJmB,iBAARA,IACTA,EAAMA,EAAItU,YAGO,iBAARsU,EACT,MAAM,IAAI7W,MAAM,yCAGlB,IAAI8W,EAAUD,EAAIrR,QAAQlG,QAAQ,IAAK,IAAIgV,MAAM,IACjD,GAAIwC,EAAQ9Z,OAAS,GAAwB,IAAnB8Z,EAAQ9Z,QAAgB8Z,EAAQ9Z,OAAS,EACjE,MAAM,IAAIgD,MAAM,sBAAwB6W,GAInB,IAAnBC,EAAQ9Z,QAAmC,IAAnB8Z,EAAQ9Z,SAClC8Z,EAAUhX,MAAM5D,UAAUuL,OAAO0D,MAAM,GAAI2L,EAAQ7X,KAAI,SAAUtE,GAC/D,MAAO,CAACA,EAAGA,QAKQ,IAAnBmc,EAAQ9Z,QAAc8Z,EAAQ5Y,KAAK,IAAK,KAE5C,IAAI6Y,EAAWC,SAASF,EAAQ1Y,KAAK,IAAK,IAE1C,MAAO,CACLhD,EAAI2b,GAAY,GAAM,IACtBvE,EAAIuE,GAAY,GAAM,IACtBlP,EAAIkP,GAAY,EAAK,IACrBhE,EAAc,IAAXgE,EACHF,IAAK,IAAMC,EAAQtR,MAAM,EAAG,GAAGpH,KAAK,KAIxCtE,EAAQmd,WAAa,SAAqBC,GACnCA,IAASA,EAAU,IACnBA,EAAQC,QAAOD,EAAQC,MAAQ,IAEpC,IAAIC,OAAmC,IAAnBF,EAAQE,QACP,OAAnBF,EAAQE,QACRF,EAAQE,OAAS,EAAI,EAAIF,EAAQE,OAE/BC,EAAQH,EAAQG,OAASH,EAAQG,OAAS,GAAKH,EAAQG,WAAQnS,EAC/DoS,EAAQJ,EAAQI,OAAS,EAE7B,MAAO,CACLD,MAAOA,EACPC,MAAOD,EAAQ,EAAIC,EACnBF,OAAQA,EACRD,MAAO,CACLI,KAAMX,EAASM,EAAQC,MAAMI,MAAQ,aACrCC,MAAOZ,EAASM,EAAQC,MAAMK,OAAS,cAEzCvX,KAAMiX,EAAQjX,KACdwX,aAAcP,EAAQO,cAAgB,KAI1C3d,EAAQ4d,SAAW,SAAmBC,EAAQC,GAC5C,OAAOA,EAAKP,OAASO,EAAKP,OAASM,EAAuB,EAAdC,EAAKR,OAC7CQ,EAAKP,OAASM,EAAuB,EAAdC,EAAKR,QAC5BQ,EAAKN,OAGXxd,EAAQ+d,cAAgB,SAAwBF,EAAQC,GACtD,IAAIN,EAAQxd,EAAQ4d,SAASC,EAAQC,GACrC,OAAOE,KAAKC,OAAOJ,EAAuB,EAAdC,EAAKR,QAAcE,IAGjDxd,EAAQke,cAAgB,SAAwBC,EAASC,EAAIN,GAQ3D,IAPA,IAAI5R,EAAOkS,EAAG1d,QAAQwL,KAClBrG,EAAOuY,EAAG1d,QAAQmF,KAClB2X,EAAQxd,EAAQ4d,SAAS1R,EAAM4R,GAC/BO,EAAaL,KAAKC,OAAO/R,EAAqB,EAAd4R,EAAKR,QAAcE,GACnDc,EAAeR,EAAKR,OAASE,EAC7Be,EAAU,CAACT,EAAKT,MAAMK,MAAOI,EAAKT,MAAMI,MAEnCjd,EAAI,EAAGA,EAAI6d,EAAY7d,IAC9B,IAAK,IAAI0Y,EAAI,EAAGA,EAAImF,EAAYnF,IAAK,CACnC,IAAIsF,EAAgC,GAAtBhe,EAAI6d,EAAanF,GAC3BuF,EAAUX,EAAKT,MAAMK,MAEzB,GAAIld,GAAK8d,GAAgBpF,GAAKoF,GAC5B9d,EAAI6d,EAAaC,GAAgBpF,EAAImF,EAAaC,EAGlDG,EAAUF,EAAQ1Y,EAFPmY,KAAKC,OAAOzd,EAAI8d,GAAgBd,GAEbtR,EADnB8R,KAAKC,OAAO/E,EAAIoF,GAAgBd,IACE,EAAI,GAGnDW,EAAQK,KAAYC,EAAQnd,EAC5B6c,EAAQK,KAAYC,EAAQ/F,EAC5ByF,EAAQK,KAAYC,EAAQ1Q,EAC5BoQ,EAAQK,GAAUC,EAAQxF,K,6BC3FhC/X,OAAOC,eAAenB,EAAS,aAAc,CAC3CyB,OAAO,IAGT,IAAIiE,EAAe,WAAc,SAASC,EAAiB3C,EAAQC,GAAS,IAAK,IAAIzC,EAAI,EAAGA,EAAIyC,EAAMC,OAAQ1C,IAAK,CAAE,IAAI2C,EAAaF,EAAMzC,GAAI2C,EAAW/B,WAAa+B,EAAW/B,aAAc,EAAO+B,EAAWC,cAAe,EAAU,UAAWD,IAAYA,EAAWE,UAAW,GAAMnC,OAAOC,eAAe6B,EAAQG,EAAWpB,IAAKoB,IAAiB,OAAO,SAAUN,EAAaS,EAAYC,GAAiJ,OAA9HD,GAAYqC,EAAiB9C,EAAYT,UAAWkB,GAAiBC,GAAaoC,EAAiB9C,EAAaU,GAAqBV,GAA7gB,GAWf6b,EAAiB,EAAQ,IAIzBC,EAAgB1V,EAFD,EAAQ,KAMvB2V,EAAiC3V,EAFD,EAAQ,IAMxC4V,EAAkB5V,EAFD,EAAQ,KAMzBuM,EAAqCvM,EAFD,EAAQ,IAM5C6V,EAAwB7V,EAFD,EAAQ,KAM/B8V,EAAW9V,EAFD,EAAQ,KAMlBiF,EAAUjF,EAFD,EAAQ,KAMjB+V,EAAY/V,EAFD,EAAQ,IAMnBgW,EAAehW,EAFD,EAAQ,MAMtBiW,EAAWjW,EAFD,EAAQ,KAIlBkW,EAAS,EAAQ,IAIjBC,EAA0BnW,EAFD,EAAQ,MAMjCoW,EAAqBpW,EAFD,EAAQ,KAM5BqW,EAAoBrW,EAFD,EAAQ,MAM3BsW,EAAkBtW,EAFD,EAAQ,MAMzBuW,EAAsBvW,EAFD,EAAQ;;;;;;;;;;wjBAIjC,SAASA,EAAuBnE,GAAO,OAAOA,GAAOA,EAAIlD,WAAakD,EAAM,CAAEf,QAASe,GAQvF,IAAI2a,EAAgC,WA4BlC,SAASA,EAA8BC,IAlCzC,SAAyB9c,EAAUC,GAAe,KAAMD,aAAoBC,GAAgB,MAAM,IAAIC,UAAU,qCAmC5GgD,CAAgBC,KAAM0Z,GAEtB1Z,KAAK4Z,cAAgBD,GACrB,EAAIR,EAASnb,SAASgC,KAAMA,KAAK4Z,cAAc7L,OAAQ/N,KAAK4Z,cAAc9H,kBAG1E9R,KAAKuI,SAAWpN,OAAOmU,OAAO,IAAI,EAAImK,EAAoBzb,SAASgC,KAAK4Z,cAAc7H,QAAS/R,KAAK4Z,cAAcrR,UAMlHvI,KAAK6Z,SAAW,GAEhB7Z,KAAK8Z,yBAA2B,CAAC,8BAA+B,4BAA6B,+BAAgC,6BAA8B,uBAAwB,wBACnL9Z,KAAK+Z,iBACL/Z,KAAKga,qBAAuBha,KAAK4Z,cAAc7I,iBAG/C,IAAI5G,EAA2BC,aAAaC,QAAQ,oBACpDrK,KAAKia,iBAAmB9P,GAA4BI,KAAKC,MAAML,IAA6B,GAG5F,IAAImL,EAAUtV,KAAK4Z,cAAcrJ,YAAYe,MAAM1P,GAAGsY,aAGlDC,EAAqB/P,aAAaC,QAAQ,aAC1C+P,EAAmBC,eAAehQ,QAAQ,iBAC1CiQ,EAAkBH,GAAsB5P,KAAKC,MAAM2P,GACnDI,EAAgBH,GAAoB7P,KAAKC,MAAM4P,GAGnDpa,KAAKwa,QAAU,CAAEC,sBAAuB,EAAGC,iBAAkB,GAGzDJ,GAAmBA,EAAgBhF,UAAYA,GACjDtV,KAAK2a,QAAUxf,OAAOmU,OAAO,IAAIwJ,EAAgB9a,QAAWsc,GAC5Dnf,OAAOmU,OAAOtP,KAAKwa,QAASD,GAG5Bva,KAAK4a,YAAY,CAAEF,iBAAkB1a,KAAKwa,QAAQE,iBAAmB,IACrE1a,KAAK2a,QAAQhF,kBAAoB,EACjC3V,KAAK4Z,cAAcrJ,YAAYsK,qBAAqBC,cAAc9a,KAAK4Z,cAAcrJ,YAAYe,MAAOtR,KAAK2a,WAI7G3a,KAAK2a,QAAU,IAAI7B,EAAgB9a,QACnCgC,KAAK2a,QAAQrF,QAAUA,GAGpBiF,QAAgDlV,IAA/BkV,EAAcQ,aAGlC/a,KAAKgb,eAAiBT,EAAcQ,aAFpC/a,KAAKgb,gBAAiB,EAIxBhb,KAAKib,qBAAsB,EAkkD7B,OA5jDAtb,EAAa+Z,EAA+B,CAAC,CAC3C1d,IAAK,iBACLN,MAAO,WACL,IAAIie,EAAc3Z,KAAK4Z,cACvB,IAAKD,EACH,MAAMxZ,MAAM,8DAEd,IAAKwZ,EAAY9J,gBACf,MAAM1P,MAAM,+EAEd,KAAKwZ,EAAYpJ,aAAiBoJ,EAAYpJ,uBAAuBwI,EAAsB/a,SACzF,MAAMmC,MAAM,+GAEd,IAAKwZ,EAAYpJ,YAAYe,MAC3B,MAAMnR,MAAM,oFAEd,IAAKH,KAAK4Z,cAAc7I,iBACtB,MAAM5Q,MAAM,2EAEd,IAAKwZ,EAAYpJ,YAAYsK,qBAC3B,MAAM1a,MAAM,mGAEd,KAAKwZ,EAAYrH,uBAA2BqH,EAAYrH,iCAAiC4I,aACvF,MAAM/a,MAAM,yGAEd,IAAKwZ,EAAY5I,iBACf,MAAM5Q,MAAM,gFAGdH,KAAKmb,6BAKN,CACDnf,IAAK,2BACLN,MAAO,WACL,IAAKuE,MAAMC,QAAQF,KAAK4Z,cAAc7I,kBACpC,MAAM5Q,MAAM,mEAEd,IAAI6Q,EAAWhR,KAAK4Z,cAAc7I,iBAClB/Q,KAAK8Z,yBACXhL,SAAQ,SAAUsM,GAI1B,GAAwB,IAHTpK,EAASG,QAAO,SAAU9Q,GACvC,OAAO+a,IAAc/a,EAAQD,QAElBjD,OACX,MAAMgD,MAAM,+BAAiCib,QAIlD,CACDpf,IAAK,4BACLN,MAAO,SAAmC8N,GACxCA,EAAM6R,2BAEqD,mBAAhDrb,KAAK4Z,cAAcxH,yBAC5BpS,KAAK4Z,cAAcxH,yBAAyBxX,QAGxCoF,KAAKsb,oBACPtb,KAAKub,mBAEPvb,KAAK4Z,cAActJ,aAAakL,mBAAmB/S,UAAUC,OAAO,iBACpE1I,KAAK4Z,cAActJ,aAAamL,oBAAoBhT,UAAUC,OAAO,iBACrE1I,KAAK4Z,cAActJ,aAAaoL,sBAAsBjT,UAAUqB,IAAI,iBACpE9J,KAAK4Z,cAActJ,aAAaqL,uBAAuBlT,UAAUqB,IAAI,iBACjE9J,KAAK4Z,cAAc/J,kBAAoBJ,EAAmCzR,QAAQY,UAEpFoB,KAAK4b,iCAAiC5b,KAAK4Z,cAAcrH,oBAAoBsJ,kCAC7E7b,KAAK8b,yBAEL9b,KAAK4b,kCAEP5b,KAAK+b,0BAGR,CACD/f,IAAK,oBACLN,MAAO,WACAsE,KAAKgb,gBAKRhb,KAAK4Z,cAActJ,aAAa0L,mBAAmBvT,UAAUC,OAAO,iBACpE1I,KAAK4Z,cAActJ,aAAa2L,cAAcxT,UAAUC,OAAO,oBAC/D1I,KAAK4Z,cAActJ,aAAa4L,yBAAyBzT,UAAUqB,IAAI,YANvE9J,KAAK4Z,cAActJ,aAAa0L,mBAAmBvT,UAAUqB,IAAI,iBACjE9J,KAAK4Z,cAActJ,aAAa2L,cAAcxT,UAAUqB,IAAI,oBAC5D9J,KAAK4Z,cAActJ,aAAa4L,yBAAyBzT,UAAUC,OAAO,aAO7E,CACD1M,IAAK,qBACLN,MAAO,SAA4B8N,GACjC,OAAuB,KAAhBA,EAAM2S,OAAkC,KAAlB3S,EAAM4S,UAEpC,CACDpgB,IAAK,2BACLN,MAAO,SAAkC8N,GAEvCA,EAAM6R,2BAEwD,mBAAnDrb,KAAK4Z,cAAcvH,4BAC5BrS,KAAK4Z,cAAcvH,4BAA4BzX,QAE/CoF,KAAK4Z,cAActJ,aAAakL,mBAAmB/S,UAAUqB,IAAI,iBACjE9J,KAAK4Z,cAActJ,aAAamL,oBAAoBhT,UAAUqB,IAAI,iBAClE9J,KAAK4Z,cAActJ,aAAaoL,sBAAsBjT,UAAUC,OAAO,iBACvE1I,KAAK4Z,cAActJ,aAAaqL,uBAAuBlT,UAAUC,OAAO,iBACxE1I,KAAK4Z,cAActJ,aAAa+L,2BAA2B5T,UAAUqB,IAAI,iBACzE9J,KAAK4Z,cAActJ,aAAagM,6BAA6B7T,UAAUqB,IAAI,iBAC3E9J,KAAK4Z,cAActJ,aAAaiM,qBAAqB9T,UAAUC,OAAO,iBACtE1I,KAAK+b,0BAMR,CACD/f,IAAK,0BACLN,MAAO,WACL,IAAI0N,EAAQpJ,KAEZA,KAAKwc,mCAELxc,KAAK4Z,cAActJ,aAAamM,OAAOlT,QAAU,SAAUC,GACzDJ,EAAMsT,SAASC,KAAKnT,GACpBA,EAAMC,iBACNL,EAAMwT,gBAGR5c,KAAK4Z,cAActJ,aAAamM,OAAOI,WAAa,SAAUrT,GACvDJ,EAAM0T,mBAAmBtT,KAC9BJ,EAAMsT,SAASC,KAAKnT,GACpBA,EAAMC,iBACNL,EAAMwT,iBAGR5c,KAAK4Z,cAActJ,aAAayM,IAAIxT,QAAU,SAAUC,GACtDJ,EAAMsT,SAAS1Q,MAAMxC,GACrBA,EAAMC,iBACNL,EAAM4T,aAGRhd,KAAK4Z,cAActJ,aAAayM,IAAIF,WAAa,SAAUrT,GACpDJ,EAAM0T,mBAAmBtT,KAC9BJ,EAAMsT,SAAS1Q,MAAMxC,GACrBA,EAAMC,iBACNL,EAAM4T,cAGRhd,KAAK4Z,cAActJ,aAAa2L,cAAc1S,QAAU,SAAUC,GAChEJ,EAAMsT,SAAS1Q,MAAMxC,GACrBA,EAAMC,iBACNL,EAAM6T,kBAGRjd,KAAK4Z,cAActJ,aAAa2L,cAAcY,WAAa,SAAUrT,GAC9DJ,EAAM0T,mBAAmBtT,KAC9BJ,EAAMsT,SAAS1Q,MAAMxC,GACrBA,EAAMC,iBACNL,EAAM6T,mBAIJjd,KAAK4Z,cAActJ,aAAa4M,qBAClCld,KAAK4Z,cAActJ,aAAa4M,mBAAmB3T,QAAU,SAAUC,GACrEJ,EAAMsT,SAAS1Q,MAAMxC,GACrBA,EAAMC,iBACkC,mBAA7BL,EAAM+T,oBACf/T,EAAM+T,sBAIVnd,KAAK4Z,cAActJ,aAAa4M,mBAAmBL,WAAa,SAAUrT,GACnEJ,EAAM0T,mBAAmBtT,KAC9BJ,EAAMsT,SAAS1Q,MAAMxC,GACrBA,EAAMC,iBACkC,mBAA7BL,EAAM+T,oBACf/T,EAAM+T,wBAKRnd,KAAK4Z,cAActJ,aAAa8M,QAClCpd,KAAK4Z,cAActJ,aAAa8M,MAAMC,UAAYrd,KAAKuI,SAAS+U,iBAChEtd,KAAK4Z,cAActJ,aAAa8M,MAAM7T,QAAU,SAAUC,GACxDJ,EAAMsT,SAAS1Q,MAAMxC,GACrBA,EAAMC,iBACNL,EAAMmU,WAAU,IAElBvd,KAAK4Z,cAActJ,aAAa8M,MAAMP,WAAa,SAAUrT,GACtDJ,EAAM0T,mBAAmBtT,KAC9BJ,EAAMsT,SAAS1Q,MAAMxC,GACrBA,EAAMC,iBACNL,EAAMmU,WAAU,MAIhBvd,KAAK4Z,cAActJ,aAAakN,gBAClCxd,KAAK4Z,cAActJ,aAAakN,cAAcjU,QAAU,SAAUC,GAChEJ,EAAMsT,SAAS1Q,MAAMxC,GACrBA,EAAMC,iBACNL,EAAMwQ,cAActJ,aAAakN,cAAc/U,UAAUqB,IAAI,0BAC7DV,EAAMqU,WAERzd,KAAK4Z,cAActJ,aAAakN,cAAcX,WAAa,SAAUrT,GAC9DJ,EAAM0T,mBAAmBtT,KAC9BJ,EAAMsT,SAAS1Q,MAAMxC,GACrBA,EAAMC,iBACNL,EAAMqU,aAIVzd,KAAK4Z,cAActJ,aAAaoN,WAAWnU,QAAU,SAAUC,GAC7DJ,EAAMsT,SAAS1Q,MAAMxC,GACrBA,EAAMC,iBACNL,EAAMmS,oBAGRvb,KAAK4Z,cAActJ,aAAaoN,WAAWb,WAAa,SAAUrT,GAC3DJ,EAAM0T,mBAAmBtT,KAC9BJ,EAAMsT,SAAS1Q,MAAMxC,GACrBA,EAAMC,iBACNL,EAAMmS,qBAGRvb,KAAK4Z,cAActJ,aAAaqN,OAAOpU,QAAU,SAAUC,GACpDJ,EAAMwQ,cAActJ,aAAaqN,OAAOC,aAAa,cACxDxU,EAAMsT,SAAS1Q,MAAMxC,GACrBA,EAAMC,iBACNL,EAAMyU,aAIV7d,KAAK4Z,cAActJ,aAAaqN,OAAOd,WAAa,SAAUrT,IACvDJ,EAAMwQ,cAActJ,aAAaqN,OAAOC,aAAa,aAAexU,EAAM0T,mBAAmBtT,KAChGJ,EAAMsT,SAAS1Q,MAAMxC,GACrBA,EAAMC,iBACNL,EAAMyU,aAIN7d,KAAK4Z,cAAc/J,kBAAoBJ,EAAmCzR,QAAQa,OAChFmB,KAAK4Z,cAActJ,aAAawN,oBAClC9d,KAAK4Z,cAActJ,aAAawN,kBAAkBvU,QAAU,SAAUC,GACpEJ,EAAM2U,yBAAyBvU,IAEjCxJ,KAAK4Z,cAActJ,aAAawN,kBAAkBvU,QAAU,SAAUC,GAC/DJ,EAAM0T,mBAAmBtT,IAC9BJ,EAAM2U,yBAAyBvU,KAG/BxJ,KAAK4Z,cAActJ,aAAa0N,uBAClChe,KAAK4Z,cAActJ,aAAa0N,qBAAqBzU,QAAU,SAAUC,GACvEJ,EAAMsT,SAAS1Q,MAAMxC,GACrBA,EAAMC,iBACNL,EAAMqU,WAERzd,KAAK4Z,cAActJ,aAAa0N,qBAAqBnB,WAAa,SAAUrT,GACrEJ,EAAM0T,mBAAmBtT,KAC9BJ,EAAMsT,SAAS1Q,MAAMxC,GACrBA,EAAMC,iBACNL,EAAMqU,aAKVzd,KAAK4Z,cAActJ,aAAa2N,oBAAoB1U,QAAUvJ,KAAKke,oBAAoBjiB,KAAK+D,MAC5FA,KAAK4Z,cAActJ,aAAa2N,oBAAoBpB,WAAa,SAAUrT,GACpEJ,EAAM0T,mBAAmBtT,IAC9BJ,EAAM8U,oBAAoB1U,IAG5BxJ,KAAK4Z,cAActJ,aAAa6N,iBAAiB5U,QAAUvJ,KAAKke,oBAAoBjiB,KAAK+D,MACzFA,KAAK4Z,cAActJ,aAAa6N,iBAAiBtB,WAAa,SAAUrT,GACjEJ,EAAM0T,mBAAmBtT,IAC9BJ,EAAM8U,oBAAoB1U,IAG5BxJ,KAAK4Z,cAActJ,aAAa8N,aAAa7U,QAAUvJ,KAAKqe,0BAA0BpiB,KAAK+D,MAC3FA,KAAK4Z,cAActJ,aAAa8N,aAAavB,WAAa,SAAUrT,GAC7DJ,EAAM0T,mBAAmBtT,IAC9BJ,EAAMiV,0BAA0B7U,KAIlCxJ,KAAK4Z,cAActJ,aAAaqN,OAAOlV,UAAUqB,IAAI,iBAGnD9J,KAAK4Z,cAActJ,aAAagO,iBAClCte,KAAK4Z,cAActJ,aAAagO,eAAe/U,QAAUvJ,KAAKqe,0BAA0BpiB,KAAK+D,OAK/FA,KAAKue,UAAU9d,SAAUyY,EAAalb,QAAQwgB,QAAQ,WACpDpV,EAAMqV,cAAgBrV,EAAMqV,aAC5BrV,EAAMsV,cAActV,EAAMwQ,cAActJ,aAAaoN,WAAY,gBAQnE,IADA,IAAIiB,EAAc3e,KAAK4Z,cAActH,sBAC9BqM,MACAle,SAASme,KAAKC,kBAAoBpe,SAASme,KAAKE,eAAiBH,aAAuBI,aAG7FJ,EAAcA,EAAYK,WAGxBL,EACF3e,KAAKue,UAAUI,EAAa,QAAS3e,KAAKif,iBAE1Cjf,KAAKue,UAAU9d,SAAU,QAAST,KAAKif,iBAGzC,IAAIC,EAAoBlf,KAAK4Z,cAActJ,aAAa6O,oBAExD,EAAIhX,EAAQnK,SAASkhB,GAErB,IAAIlkB,EAAOgF,KAAK4Z,cAAc/I,mBAAmB,GAAG7V,KACpD,GAAIgF,KAAK4Z,cAAc5H,SAAWsH,EAAmBtb,QAAQ+F,MAAO,CAClEmb,EAAkB7B,UAAYrd,KAAKuI,SAAS6W,uBAAuB3f,QAAQ,eAAgBzE,GAC3F,IAAIqkB,EAA4Brf,KAAK4Z,cAAc/J,kBAAoBJ,EAAmCzR,QAAQa,MAC9GygB,EAA0Btf,KAAK4Z,cAAc/J,kBAAoBJ,EAAmCzR,QAAQY,WAAaoB,KAAK4Z,cAAcrH,oBAAoBsJ,iCAChK0D,EAA0Bvf,KAAK4Z,cAAc/J,kBAAoBJ,EAAmCzR,QAAQW,WAAaqB,KAAK4Z,cAAcrH,oBAAoBiN,iCAC9IH,IAA8BC,GAA2BC,IAE7Evf,KAAKyf,yBAEF,CACL,IAAI1R,EAAS/N,KAAK0c,SACdgD,EAAe,IAAIlG,EAAgBxb,QAAQkhB,GAC3CS,EAAU3f,KAAK4Z,cACfgG,IAAc5f,KAAKwa,QAAQE,iBAC/B1a,KAAK6f,iBAAmB,IAAItG,EAAkBvb,QAAQ,CACpD4S,iBAAkB5Q,KAAK4Z,cAAchJ,iBACrCC,mBAAoB7Q,KAAK4Z,cAAc/I,mBACvCtI,SAAUvI,KAAKuI,SACfwF,OAAQA,EACR2R,aAAcA,EACdC,QAASA,EACTC,UAAWA,EACXnN,qBAAsBzS,KAAK4Z,cAAcnH,uBAG7CzS,KAAK8f,yBASN,CACD9jB,IAAK,QACLN,MAAO,WACL,MAAM,IAAIyE,MAAM,4CAEjB,CACDnE,IAAK,qBACLN,MAAO,cAQN,CACDM,IAAK,OACLN,MAAO,WACLsE,KAAK6Z,SAAS/K,QAAQsK,EAAO2G,YACzB/f,KAAK6f,kBACP7f,KAAK6f,iBAAiBG,SAUzB,CACDhkB,IAAK,UACLN,MAAO,WACLsE,KAAKib,qBAAsB,EAC3Bjb,KAAKigB,uBAELjgB,KAAKud,WAAU,GACfvd,KAAKggB,OACLhgB,KAAKkgB,iBAAkB,EACvBlgB,KAAKmH,UAaN,CACDnL,IAAK,uBACLN,MAAO,WAGL,OAFAsE,KAAK2a,QAAQhF,kBAAoB,EAClB3V,KAAK4Z,cAAcrJ,YAAYsK,qBAC9BC,cAAc9a,KAAK4Z,cAAcrJ,YAAYe,MAAOtR,KAAK2a,WAwB1E,CACD3e,IAAK,YACLN,MAAO,SAAmB8N,EAAO2W,EAASC,MA4BzC,CACDpkB,IAAK,kBACLN,MAAO,SAAyB2kB,GAC9B,IAAIC,EAAStgB,KAETC,MAAMC,QAAQmgB,GAChBA,EAAavR,SAAQ,SAAUzO,GAE7BigB,EAAOC,sBAAsBlgB,MAG/BL,KAAKugB,sBAAsBF,KAY9B,CACDrkB,IAAK,wBACLN,MAAO,SAA+B2E,GACpC,KAAMA,aAAmBwY,EAA+B7a,SACtD,MAAMmC,MAAM,6BAA+BE,EAAU,6CAEvD,IAAImgB,EAAgBxgB,KAAKga,qBAAqBpN,SAAQ,SAAUwI,GAC9D,OAAOA,EAAKhV,OAASC,EAAQD,SAER,IAAnBogB,EACFxgB,KAAKga,qBAAqBwG,GAAiBngB,EAE3CL,KAAKga,qBAAqB3b,KAAKgC,KAWlC,CACDrE,IAAK,YACLN,MAAO,SAAmB+kB,GACxB,MAAM,IAAItgB,MAAM,gDASjB,CACDnE,IAAK,YACLN,MAAO,WACL,MAAM,IAAIyE,MAAM,gDASjB,CACDnE,IAAK,eACLN,MAAO,WACL,MAAM,IAAIyE,MAAM,mDAUjB,CACDnE,IAAK,qBACLN,MAAO,cAMN,CACDM,IAAK,4BACLN,MAAO,SAAmCglB,GAExC,OADU1gB,KAAK4Z,cAActJ,aAAaqQ,UAAUC,UAChC,UAATF,EAAmB,iBAAmB,oBAAoB,GAAGG,gBASzE,CACD7kB,IAAK,mBACLN,MAAO,WACLsE,KAAK8gB,kBAAkB9gB,KAAK4Z,cAActJ,aAAaoN,WAAY,gBAAiB1d,KAAKye,cACpFze,KAAKye,aAIRvF,EAAalb,QAAQ+iB,OAFrB,EAAI7H,EAAalb,SAASgC,KAAK4Z,cAActJ,aAAa0Q,iBAa7D,CACDhlB,IAAK,8BACLN,MAAO,WACLsE,KAAK4Z,cAActJ,aAAa2Q,eAAexY,UAAUC,OAAO,sBAChE1I,KAAK4Z,cAActJ,aAAa4Q,UAAUzY,UAAU0Y,OAAO,iBAC3DnhB,KAAK4Z,cAActJ,aAAa8Q,eAAe3Y,UAAUC,OAAO,sBAChE1I,KAAK4Z,cAActJ,aAAa+Q,uBAAuB5Y,UAAUC,OAAO,sBACxE1I,KAAK4Z,cAActJ,aAAagR,iBAAiB7Y,UAAUC,OAAO,sBAClE1I,KAAK4Z,cAAc/I,mBAAmB,GAAGf,UAAUrH,UAAUqB,IAAI,iBACjE9J,KAAK4Z,cAActJ,aAAaqQ,UAAUlY,UAAU0Y,OAAO,iBAC3DnhB,KAAK4Z,cAActJ,aAAa6O,mBAAmB9B,UAAYrd,KAAKuI,SAASgZ,+BAE9E,CACDvlB,IAAK,mCACLN,MAAO,WACLsE,KAAK4Z,cAActJ,aAAa0Q,cAAcQ,iBAAiB,YAAaxhB,KAAKyhB,qBAAqBxlB,KAAK+D,OAAO,GAClHA,KAAK4Z,cAActJ,aAAa0Q,cAAcQ,iBAAiB,aAAcxhB,KAAKyhB,qBAAqBxlB,KAAK+D,OAAO,GACnHA,KAAK4Z,cAActJ,aAAa0Q,cAAcQ,iBAAiB,YAAaxhB,KAAKyhB,qBAAqBxlB,KAAK+D,OAAO,KAEnH,CACDhE,IAAK,uBACLN,MAAO,WACLsE,KAAK0hB,YAAcrnB,OAAOsnB,WAAW3hB,KAAK4hB,aAAa3lB,KAAK+D,MAAO,OAEpE,CACDhE,IAAK,uBACLN,MAAO,WACLrB,OAAOwnB,aAAa7hB,KAAK0hB,aACzB1hB,KAAK8hB,eAEN,CACD9lB,IAAK,aACLN,MAAO,WACLsE,KAAK4Z,cAActJ,aAAa0Q,cAAcvY,UAAUC,OAAO,4BAC/D1I,KAAK8f,yBAEN,CACD9jB,IAAK,eACLN,MAAO,WACLsE,KAAK4Z,cAActJ,aAAa0Q,cAAcvY,UAAUqB,IAAI,8BAE7D,CACD9N,IAAK,iCACLN,MAAO,WACLsE,KAAK4Z,cAActJ,aAAayR,wBAAwBtZ,UAAUC,OAAO,kBAGrE1I,KAAK4Z,cAAc/J,kBAAoBJ,EAAmCzR,QAAQY,UAAYoB,KAAK4Z,cAAcrJ,YAAYe,MAAM0Q,oBACrIhiB,KAAK4Z,cAActJ,aAAa2R,yBAAyBxZ,UAAUqB,IAAI,mBAG1E,CACD9N,IAAK,qBACLN,MAAO,WACL,IAAIwmB,EAAU3W,UAAUpO,OAAS,QAAsBkI,IAAjBkG,UAAU,GAAmBA,UAAU,GAAK,IAElFvL,KAAKmiB,cAAgB9nB,OAAOsnB,WAAW3hB,KAAKoiB,+BAA+BnmB,KAAK+D,MAAOkiB,KAExF,CACDlmB,IAAK,mBACLN,MAAO,WACLrB,OAAOwnB,aAAa7hB,KAAKmiB,iBAS1B,CACDnmB,IAAK,cAQLN,MAAO,cAQN,CACDM,IAAK,8BAQLN,MAAO,WACDsE,KAAK4Z,cAActJ,cAAgBtQ,KAAK4Z,cAActJ,aAAa6O,qBACrEnf,KAAK4Z,cAActJ,aAAa6O,mBAAmB9B,UAAYrd,KAAKuI,SAAS8Z,2BAWhF,CACDrmB,IAAK,oBACLN,MAAO,SAA2B4V,GAChCtR,KAAK4Z,cAAcrJ,YAAYe,MAAQA,EAEnCA,EAAMgR,kBACRtiB,KAAK4Z,cAActJ,aAAaqN,OAAOlV,UAAUqB,IAAI,iBAErD9J,KAAK4Z,cAActJ,aAAaqN,OAAOlV,UAAUC,OAAO,mBAa3D,CACD1M,IAAK,gCACLN,MAAO,SAAuC6mB,EAAMniB,GAClD,GAAImiB,EAAM,CACR,IAAIC,EAAwBxiB,KAAK4Z,cAAc/I,mBAAmB,GAAGd,SACjE0S,EAA4BziB,KAAK4Z,cAAc/I,mBAAmB,GAAGb,aAEzE,GADAwS,EAAsBnF,UAAYkF,EAAKhR,SACnCnR,IAASqP,EAAmCzR,QAAQY,SAEtD6jB,EAA0BpF,UAAYkF,EAAKG,UAAUhnB,OAAS6mB,EAAKG,eAC9D,GAAItiB,IAASqP,EAAmCzR,QAAQW,SAAU,CACvE,IAAIgkB,GAAM,EAAI1J,EAAUjb,SAASgC,KAAKuI,SAASqa,sBAAuBL,GAClEM,EAAS,8DAETC,OAAU,EAEZA,EADE9iB,KAAK4Z,cAAcrH,oBAAoBwQ,yBAC/BJ,EAAM,IAAME,EAAS,IAAM7iB,KAAKgjB,iBAAiBT,GAEjDI,EAAM,IAAME,EAAS,IAAM7iB,KAAKgjB,iBAAiBT,GAAQ,IAAMM,EAAS,IAAMN,EAAKU,eAAetb,KAE9G8a,EAA0BpF,UAAYyF,OAGtC9iB,KAAKkjB,uBAAuBT,MAIjC,CACDzmB,IAAK,mBACLN,MAAO,SAA0B6mB,GAC/B,IAAIY,EAAiBZ,EAAKY,gBAAkBZ,EAAKY,eAAeC,YAAcpjB,KAAKuI,SAAS8a,mBACxFC,EAAgBf,EAAKgB,iBAAmBvjB,KAAKuI,SAAS8a,mBACtDG,EAAgBjB,EAAKgB,gBAOzB,OAJIvjB,KAAK4Z,cAAcrH,oBAAoBkR,sBAAwBH,EAAcxgB,gBAAkBqgB,EAAergB,gBAChH0gB,EAAgBL,EAAiB,KAAOG,EAAgB,KAGnDE,IAER,CACDxnB,IAAK,0CACLN,MAAO,WACL,IAAI6mB,OAAO,EACPniB,EAAOJ,KAAK4Z,cAAchJ,iBAAiBf,kBAAoBJ,EAAmCzR,QAAQW,SAAW8Q,EAAmCzR,QAAQY,SAAW6Q,EAAmCzR,QAAQW,SACtN2S,EAAQtR,KAAK4Z,cAAcrJ,YAAYe,MAEzCiR,EADEniB,IAASqP,EAAmCzR,QAAQW,SAC/C2S,EAAML,SAENK,EAAME,iBAGfxR,KAAK0jB,8BAA8BnB,EAAMniB,KAE1C,CACDpE,IAAK,sBACLN,MAAO,SAA6BioB,EAAMC,GACxC,IAAItS,EAAQtR,KAAK4Z,cAAcrJ,YAAYe,MAEvCkR,EAAwBxiB,KAAK4Z,cAAc/I,mBAAmB,GAAGd,SAEjE0S,EAA4BziB,KAAK4Z,cAAc/I,mBAAmB,GAAGb,aACrE6T,EAAsBvS,EAAMwS,gBAAgBH,GAC5CE,GAAuBA,EAAoBtB,KAC7CviB,KAAK0jB,8BAA8BG,EAAoBtB,KAAMsB,EAAoBzjB,OAEjFoiB,EAAsBnF,UAAYuG,EAClC5jB,KAAKkjB,uBAAuBT,MAG/B,CACDzmB,IAAK,2BACLN,MAAO,WACLsE,KAAK4Z,cAActJ,aAAa4L,yBAAyBzT,UAAUqB,IAAI,SAAU,YASlF,CACD9N,IAAK,sBAULN,MAAO,WAELsE,KAAK0c,SAAS1Q,MADQ,4CACe,WACrC,IAAIgT,EAAahf,KAAK+jB,0BACtB,IAAI/E,EAMF,MADAhf,KAAK0c,SAASsH,MARM,4CAQiB,sDAC/B7jB,MAAM,qEAJZH,KAAK4Z,cAAcvJ,SAASC,cAAe,EAAI0I,EAAShb,SAASghB,GACjEhf,KAAK0c,SAAS1Q,MAAM,sCAAuC7Q,OAAO8oB,KAAKjkB,KAAK4Z,cAActJ,iBAe7F,CACDtU,IAAK,sBACLN,MAAO,WACL,IAAIwoB,EAAkB,oDACtBlkB,KAAK0c,SAAS1Q,MAAMkY,EAAiB,WACrC,IACE,IAAIC,GAAsB,EAAIlL,EAAUjb,SAASqb,EAAwBrb,QAASgC,MAClF,IAAImkB,EAqBF,MADAnkB,KAAK0c,SAASsH,MAAME,EAAiB,sDAC/B/jB,MAAM,sEAnBZ,EAAIgI,EAAQnK,SAASgC,KAAK4Z,cAActH,uBAGxCtS,KAAK+jB,0BAA4BtjB,SAASmI,cAAcC,yBAAyBsb,GACjFnkB,KAAKokB,sBACLpkB,KAAKqkB,2BACLrkB,KAAKskB,mBACLtkB,KAAKukB,oBACLvkB,KAAKwkB,qBAAqBxkB,KAAK4Z,cAAcrJ,YAAYe,OACzDtR,KAAK4Z,cAActH,sBAAsBvJ,YAAY/I,KAAK+jB,2BAC1D/jB,KAAK0c,SAAS1Q,MAAM,mEAAoEhM,KAAK4Z,cAActH,uBACvGtS,KAAK4Z,cAAchJ,iBAAiB6T,UACtCzkB,KAAK4Z,cAActJ,aAAagO,eAAejB,UAAYrd,KAAKuI,SAASmc,yBACzE1kB,KAAK4Z,cAActJ,aAAaqU,2BAA2Blc,UAAUqB,IAAI,iBACzE9J,KAAK4Z,cAActJ,aAAaqN,OAAOlV,UAAUqB,IAAI,kBAEvD9J,KAAK4Z,cAActJ,aAAa0Q,cAAcvY,UAAUqB,IAAI9J,KAAK4kB,6BAKnE,MAAOZ,GAEP,MADAhkB,KAAK0c,SAASsH,MAAME,EAAiB,QAASF,GACxC7jB,MAAM,0DAYf,CACDnE,IAAK,2BACLN,MAAO,WAELsE,KAAK0c,SAAS1Q,MADQ,yDACe,WACrChM,KAAK0c,SAAS1Q,MAAM,oDAAqDhM,KAAK4Z,cAAc/J,iBAC5F,IAAIgV,EAAuB7kB,KAAK4Z,cAActJ,aAC1CwU,EAAgBD,EAAqBC,cACrCC,EAA0BF,EAAqBE,wBAC/CC,EAAeH,EAAqBG,aACpCrE,EAAYkE,EAAqBlE,UACjCsE,EAAYJ,EAAqBI,UAGrC,OAAQjlB,KAAK4Z,cAAc/J,iBACzB,KAAKJ,EAAmCzR,QAAQW,SAC9CqB,KAAK4Z,cAAcvJ,SAASO,iBAAmB5Q,KAAKklB,+BAA+BllB,KAAK4Z,cAAcuL,iBAAkBxE,EAAWmE,EAAerV,EAAmCzR,QAAQW,UAC7LqB,KAAK4Z,cAAcvJ,SAASQ,mBAAqB,CAAC7Q,KAAKklB,+BAA+BllB,KAAK4Z,cAAcwL,iBAAkBH,EAAWD,EAAcvV,EAAmCzR,QAAQY,SAAUmmB,IACzM,MACF,KAAKtV,EAAmCzR,QAAQY,SAC9CoB,KAAK4Z,cAAcvJ,SAASO,iBAAmB5Q,KAAKklB,+BAA+BllB,KAAK4Z,cAAcwL,iBAAkBzE,EAAWmE,EAAerV,EAAmCzR,QAAQY,UAC7LoB,KAAK4Z,cAAcvJ,SAASQ,mBAAqB,CAAC7Q,KAAKklB,+BAA+BllB,KAAK4Z,cAAcuL,iBAAkBF,EAAWD,EAAcvV,EAAmCzR,QAAQW,SAAUomB,IACzM,MACF,QACE/kB,KAAK4Z,cAAcvJ,SAASO,iBAAmB5Q,KAAKklB,+BAA+BllB,KAAK4Z,cAAcnI,qBAAuBzR,KAAKuI,SAAS8c,0BAA2B1E,EAAWmE,EAAerV,EAAmCzR,QAAQa,OAC3OmB,KAAK4Z,cAAcvJ,SAASQ,mBAAqB,CAAC7Q,KAAKklB,+BAA+BllB,KAAK4Z,cAAcwL,iBAAkBH,EAAWD,EAAcvV,EAAmCzR,QAAQY,SAAUmmB,IACzM/kB,KAAK4Z,cAAcvJ,SAASQ,mBAAmBxS,KAAK2B,KAAKklB,+BAA+BllB,KAAK4Z,cAAcuL,iBAAkBF,EAAWD,EAAcvV,EAAmCzR,QAAQW,SAAUomB,IAE/M/kB,KAAK0c,SAAS1Q,MAAM,uDAAwDhM,KAAK4Z,iBAelF,CACD5d,IAAK,iCACLN,MAAO,SAAwCV,EAAM8U,EAAWC,EAAUF,EAAiBG,GACzF,OAAO,IAAI4I,EAAc5a,QAAQ,CAC/BhD,KAAMA,EAAM6U,gBAAiBA,EAAiBC,UAAWA,EAAWC,SAAUA,EAAUC,aAAcA,MAYzG,CACDhU,IAAK,2BACLN,MAAO,WACL,IAAI4pB,EAAStlB,KAETkkB,EAAkB,yDACtBlkB,KAAK0c,SAAS1Q,MAAMkY,EAAiB,WACrC,IAAIqB,EAAevlB,KAAK4Z,cACpBtJ,EAAeiV,EAAajV,aAC5BiC,EAAsBgT,EAAahT,oBAEvCjC,EAAakV,2BAA2BnI,UAAYrd,KAAKuI,SAAS+U,iBAC9D/K,EAAoBsJ,iCAKtBvL,EAAamV,WAAW/pB,MAAQ,OAEhC4U,EAAaoV,oBAAoBnc,QAAU,SAAUC,GACnD,OAAO8b,EAAOK,2BAA2Bnc,IAE3C8G,EAAasV,uBAAuBrc,QAAU,SAAUC,GACtD,OAAO8b,EAAOK,2BAA2Bnc,KAG7CxJ,KAAK0c,SAAS1Q,MAAMkY,EAAiB,cAWtC,CACDloB,IAAK,mBACLN,MAAO,WACL,IAAImqB,EAAS7lB,KAETkkB,EAAkB,iDACtBlkB,KAAK0c,SAAS1Q,MAAMkY,EAAiB,WACjClkB,KAAK4Z,cAAc/J,kBAAoBJ,EAAmCzR,QAAQY,UACpFoB,KAAK8lB,2BAEP9lB,KAAK+lB,eAAiB/lB,KAAK4Z,cAActJ,aAAa0V,cACtD,IAAIP,EAAazlB,KAAK4Z,cAActJ,aAAamV,WAC7CQ,EAAejmB,KAAK4Z,cAActJ,aAAa2V,aAC/CC,EAAalmB,KAAK4Z,cAActJ,aAAa4V,WAC7CC,EAAe,SAAsB3c,GACnCA,GACFA,EAAMC,iBAERoc,EAAOO,yBAELC,EAAY,SAAmB7c,GACjCA,EAAMC,iBACNoc,EAAOS,YAAY9c,EAAMvM,OAAOvB,MAAOmqB,EAAOjM,cAActJ,aAAaiW,+BAA+B7qB,OAAO8qB,MAAK,SAAUlV,GAC5HuU,EAAOnJ,SAAS1Q,MAAM,gCAAiCsF,GACnDuU,EAAOvK,oBACTuK,EAAOtK,sBAERkL,SAAQ,WACT,OAAON,QAGXV,EAAWlc,QAAU8c,EACrBJ,EAAa1c,QAAU4c,EACvBD,EAAW3c,QAAU4c,EACrBnmB,KAAK4Z,cAActJ,aAAakV,2BAA2Bjc,QAAU8c,EACrErmB,KAAK4Z,cAActJ,aAAaoW,qBAAqBnd,QAAU4c,EAC/DnmB,KAAK0c,SAAS1Q,MAAMkY,EAAiB,uCAatC,CACDloB,IAAK,cACLN,MAAO,SAAqBirB,EAAUC,GACpC,IAAIC,EAAmB7mB,KAAK8mB,cAAc,wBAC1C,OAAID,EACKA,EAAiBxmB,QAAQsmB,EAAUC,GAErChY,QAAQF,OAAO,IAAIvO,MAAM,gDAWjC,CACDnE,IAAK,uBACLN,MAAO,WACL,GAAIsE,KAAK+lB,eAAgB,CACvB,GAAI/lB,KAAK4Z,cAAc/J,kBAAoBJ,EAAmCzR,QAAQY,SAAU,CAC9F,IAAImoB,EAAwB/mB,KAAK4Z,cAAcrJ,YAAYe,MAAM0V,0BAC7DC,EAAgBF,EAAwB,IAAQ9O,KAAKC,MAAM6O,EAAwB,KAAS,EAGhG,GAAIE,EAAgB,EAAG,CACrB,IAAI7oB,EAA4B,IAAlB6oB,EAAsBjnB,KAAKuI,SAAS2e,wCAAyC,EAAIjO,EAAUjb,SAASgC,KAAKuI,SAAS4e,qCAAsC,CAAEF,cAAeA,IAEvLjnB,KAAK4Z,cAActJ,aAAamL,oBAAoB4B,UAAYjf,EAIlE,IAAIgpB,EAAapnB,KAAK4Z,cAAcrJ,YAAYe,MAAM+V,aACtDrnB,KAAK4Z,cAActJ,aAAagX,cAAc7e,UAAU0Y,OAAO,iBAAkBiG,GAC5EA,GACHpnB,KAAKunB,2BAITvnB,KAAK+lB,eAAetd,UAAUC,OAAO,oBAYxC,CACD1M,IAAK,wBACLN,MAAO,WACDsE,KAAK+lB,gBACP/lB,KAAK+lB,eAAetd,UAAUqB,IAAI,mBAarC,CACD9N,IAAK,6BACLN,MAAO,SAAoC8N,GACd,QAAvBA,EAAMvM,OAAOvB,MACfsE,KAAK8b,wBAEL9b,KAAKunB,6BAYR,CACDvrB,IAAK,wBACLN,MAAO,WACLsE,KAAK4Z,cAActJ,aAAakV,2BAA2BnI,UAAYrd,KAAKuI,SAAS+U,iBACrFtd,KAAK4Z,cAActJ,aAAakV,2BAA2B9pB,MAAQ,MACnEsE,KAAK4Z,cAActJ,aAAaoV,oBAAoB5f,SAAU,EAC9D9F,KAAK4Z,cAActJ,aAAakX,sCAAsC/e,UAAUqB,IAAI,mBAWrF,CACD9N,IAAK,2BACLN,MAAO,WACAsE,KAAK4Z,cAAcrH,oBAAoBsJ,mCAC1C7b,KAAK4Z,cAActJ,aAAakV,2BAA2BnI,UAAYrd,KAAKuI,SAASkf,oBACrFznB,KAAK4Z,cAActJ,aAAakV,2BAA2B9pB,MAAQ,SACnEsE,KAAK4Z,cAActJ,aAAakX,sCAAsC/e,UAAUC,OAAO,oBAG1F,CACD1M,IAAK,6BACLN,MAAO,SAAoCiU,GACzC,IAAI+X,EAAuB1nB,KAAK4Z,cAAchJ,iBAC1CM,EAAawW,EAAqBxW,WAClCG,EAAaqW,EAAqBrW,WAElCsW,EAAkBhY,EAAYiY,KAClC,OAAO1W,IAAmC,WAApByW,GAAoD,aAApBA,IAAmCtW,GAAkC,aAApBsW,IAUxG,CACD3rB,IAAK,uBACLN,MAAO,SAA8B4V,GAOnC,IANA,IAAIuW,GAAa,EACbC,GAAc,EACdC,GAAmB,EAEnBC,GAAmB,EAEdvtB,EAAI,EAAGA,EAAI6W,EAAM2W,kBAAkBC,aAAa/qB,OAAQ1C,IAAK,CACpE,IAAIkV,EAAc2B,EAAM2W,kBAAkBC,aAAaztB,GAEnDktB,EAAkBhY,EAAYiY,KAC9BO,EAAoBxY,EAAYyY,OAChCC,EAAe1Y,EAAY0Y,aAC3BC,EAAgBtoB,KAAKuoB,2BAA2B5Y,GAEhDA,EAAY6Y,KAAwB,mBAAjBH,IACK,cAAtBF,GAAqCG,GACvCT,GAAa,EACb7nB,KAAK0c,SAAS1Q,MAAM,gBAAkBvR,EAAGktB,EAAiBU,EAAcF,IACzC,iBAAtBA,IACLG,EACFP,GAAmB,GAEC,EAEtB/nB,KAAK0c,SAAS1Q,MAAM,gBAAkBvR,EAAGktB,EAAiBU,EAAcF,KAGtEG,GAAwC,cAAtBH,GAA2D,WAAtBA,GAGhDG,GAAwC,iBAAtBH,GAA8D,uBAAtBA,IACnEH,GAAmB,EACnBhoB,KAAK0c,SAASsH,MAAM,gBAAkBvpB,EAAI,iCAAkCktB,KAJ5EG,GAAc,EACd9nB,KAAK0c,SAAS1Q,MAAM,gBAAkBvR,EAAGktB,EAAiBU,EAAcF,KAQ9EnoB,KAAKyoB,oBAAoBT,EAAkBF,EAAaD,EAAYE,EAAkBzW,EAAMoX,uBAe7F,CACD1sB,IAAK,sBACLN,MAAO,SAA6BssB,EAAkBF,EAAaD,EAAYE,EAAkBW,IAC3FA,IAAwBX,IAAoBC,GAAsBH,GAAeC,EAEzEY,GACV1oB,KAAK2oB,yBAFL3oB,KAAK4oB,wBAKHd,GAEF9nB,KAAK6oB,uBACL7oB,KAAK8oB,iCAAiC9oB,KAAKuI,SAASwgB,wBACpD/oB,KAAK2oB,wBAAuB,IACnBd,IAET7nB,KAAK6oB,uBACL7oB,KAAK8oB,iCAAiC9oB,KAAKuI,SAASygB,gBACpDhpB,KAAK2oB,wBAAuB,GAC5B3oB,KAAKipB,0BAUR,CACDjtB,IAAK,wBACLN,MAAO,WACLsE,KAAK4Z,cAActJ,aAAaqN,OAAOlV,UAAUC,OAAO,iBAExD1I,KAAK4Z,cAActJ,aAAaqN,OAAOlV,UAAUC,OAAO,2BACxD1I,KAAK4Z,cAActJ,aAAaqN,OAAOlV,UAAUC,OAAO,yBACxD1I,KAAK4Z,cAActJ,aAAaqN,OAAOuL,gBAAgB,YAEvDlpB,KAAK4Z,cAActJ,aAAaqN,OAAOwL,uBAAuB,wBAAwB/T,KAAK,GAAG3M,UAAUC,OAAO,iBAC/G1I,KAAK4Z,cAActJ,aAAaqN,OAAOwL,uBAAuB,eAAe/T,KAAK,GAAG3M,UAAUC,OAAO,iBACtG1I,KAAK4Z,cAActJ,aAAaqN,OAAOwL,uBAAuB,WAAW/T,KAAK,GAAG3M,UAAUqB,IAAI,iBAC/F9J,KAAK4Z,cAActJ,aAAaqN,OAAOwL,uBAAuB,aAAa/T,KAAK,GAAG3M,UAAUqB,IAAI,mBAWlG,CACD9N,IAAK,yBACLN,MAAO,SAAgC0tB,GACrCppB,KAAK4Z,cAActJ,aAAaqN,OAAOlV,UAAUqB,IAAI,2BACrD9J,KAAK4Z,cAActJ,aAAaqN,OAAOlV,UAAUqB,IAAI,yBACrD9J,KAAK4Z,cAActJ,aAAaqN,OAAO0L,aAAa,WAAY,IAEhErpB,KAAK4Z,cAActJ,aAAaqN,OAAOwL,uBAAuB,wBAAwB/T,KAAK,GAAG3M,UAAUqB,IAAI,iBAC5G9J,KAAK4Z,cAActJ,aAAaqN,OAAOwL,uBAAuB,eAAe/T,KAAK,GAAG3M,UAAUqB,IAAI,iBAC/Fsf,GACFppB,KAAK4Z,cAActJ,aAAaqN,OAAOwL,uBAAuB,WAAW/T,KAAK,GAAG3M,UAAUqB,IAAI,iBAC/F9J,KAAK4Z,cAActJ,aAAaqN,OAAOwL,uBAAuB,aAAa/T,KAAK,GAAG3M,UAAUC,OAAO,mBAEpG1I,KAAK4Z,cAActJ,aAAaqN,OAAOwL,uBAAuB,WAAW/T,KAAK,GAAG3M,UAAUC,OAAO,iBAClG1I,KAAK4Z,cAActJ,aAAaqN,OAAOwL,uBAAuB,aAAa/T,KAAK,GAAG3M,UAAUqB,IAAI,oBAUpG,CACD9N,IAAK,iBACLN,MAAO,WACLsE,KAAKgb,gBAAkBhb,KAAKgb,eAC5Bhb,KAAK0c,SAAS1Q,MAAM,yBAA0BhM,KAAKgb,gBACnDhb,KAAK8gB,kBAAkB9gB,KAAK4Z,cAActJ,aAAa0L,mBAAoB,eAAgBhc,KAAKgb,gBAChGhb,KAAK4Z,cAActJ,aAAa0L,mBAAmBvT,UAAU0Y,OAAO,iBACpEnhB,KAAK4Z,cAActJ,aAAa2L,cAAcxT,UAAU0Y,OAAO,oBAC/DnhB,KAAK4Z,cAActJ,aAAa4L,yBAAyBzT,UAAU0Y,OAAO,UAC1EnhB,KAAK4a,YAAY,CAAEG,aAAc/a,KAAKgb,mBAEvC,CACDhf,IAAK,mBACLN,MAAO,WAEL,IAAKsE,KAAK4Z,cAActJ,aAAaqQ,UAAUC,UAC7C,OAAOhS,QAAQF,SAGjB,IAAI4B,EAAetQ,KAAK4Z,cAActJ,aAElCgZ,EAAgBhZ,EAAaiZ,uBACjC,EAAIphB,EAAQnK,SAASsrB,GACrB,IAAIE,EAASxpB,KAAKypB,aAAa,SAC/BD,EAAOnM,UAAYrd,KAAKuI,SAASmhB,4BACjCF,EAAO/gB,UAAUqB,IAAI,wCACrBwf,EAAcvgB,YAAYygB,GAE1B,IAAIG,EAAarZ,EAAasZ,oBAC9B,EAAIzhB,EAAQnK,SAAS2rB,IACrBH,EAASxpB,KAAKypB,aAAa,UACpBpM,UAAYrd,KAAKuI,SAASshB,gCACjCL,EAAO/gB,UAAUqB,IAAI,wCACrB6f,EAAW5gB,YAAYygB,GAEvB,IAAIM,EAAiBxZ,EAAayZ,uBAQlC,OAPA,EAAI5hB,EAAQnK,SAAS8rB,IACrBN,EAASxpB,KAAKypB,aAAa,UACpBpM,UAAYrd,KAAKuI,SAASyhB,6BACjCR,EAAO/gB,UAAUqB,IAAI,wCACrBggB,EAAe/gB,YAAYygB,GAGpB5a,QAAQqb,QAAQ,CACrBX,cAAeA,EACfK,WAAYA,EACZG,eAAgBA,MAMnB,CACD9tB,IAAK,sBACLN,MAAO,SAA6B8N,GAClC,IAAInJ,EAAUL,KAAK8mB,cAAc9mB,KAAKkqB,cAAcC,YAAY3gB,EAAMpJ,OAClEC,EACFA,EAAQA,UAERL,KAAK0c,SAASje,KAAK,+BAAiC8L,KAAKG,UAAUlB,MAMtE,CACDxN,IAAK,gBACLN,MAAO,SAAuB0E,GAC5B,OAAOJ,KAAKga,qBAAqBoQ,MAAK,SAAU/pB,GAC9C,OAAOD,IAASC,EAAQD,UAG3B,CACDpE,IAAK,kBACLN,MAAO,SAAyB8N,GACZxJ,KAAK4Z,cAActJ,aAAa+Z,gBACjCC,SAAS9gB,EAAMvM,UAC9B+C,KAAK4Z,cAActJ,aAAa+Z,gBAAgB5hB,UAAUqB,IAAI,iBAC9D9J,KAAK4Z,cAActJ,aAAaia,SAAS9hB,UAAUC,OAAO,QAC1D1I,KAAKwqB,iBAAmB,QAG3B,CACDxuB,IAAK,eACLN,MAAO,SAAsB0E,GAC3B,OAAOK,SAASgqB,cAAcrqB,KAE/B,CACDpE,IAAK,gBACLN,MAAO,SAAuB6E,GAG5B,IAFA,IAAImqB,EAEKC,EAAOpf,UAAUpO,OAAQytB,EAAO3qB,MAAM0qB,EAAO,EAAIA,EAAO,EAAI,GAAIE,EAAO,EAAGA,EAAOF,EAAME,IAC9FD,EAAKC,EAAO,GAAKtf,UAAUsf,IAG5BH,EAAkBnqB,EAAKkI,WAAW0Y,OAAO7V,MAAMof,EAAiBE,KAElE,CACD5uB,IAAK,oBACLN,MAAO,SAA2B6E,EAAMvF,EAAMiL,GAC5C1F,EAAK8oB,aAAaruB,EAAMiL,KAEzB,CACDjK,IAAK,YACLN,MAAO,SAAmBovB,EAAIthB,EAAOuhB,GACnC,IAAIC,GAAS,EAAI5R,EAAO6R,SAASH,EAAIthB,EAAOuhB,EAAG9uB,KAAK+D,OAEpD,OADAA,KAAK6Z,SAASxb,KAAK2sB,GACZA,IAER,CACDhvB,IAAK,yBACLN,MAAO,SAAgC6E,GAEjCA,IACFA,EAAK8c,UAAY,MAYpB,CACDrhB,IAAK,kCACLN,MAAO,SAAyCwvB,GAC9C,IAAI5a,EAAetQ,KAAK4Z,cAActJ,aAElC4a,GACF5a,EAAa+L,2BAA2B5T,UAAUC,OAAO,iBACzD4H,EAAagM,6BAA6B7T,UAAUC,OAAO,iBAC3D4H,EAAaiM,qBAAqB9T,UAAUqB,IAAI,mBAEhDwG,EAAa+L,2BAA2B5T,UAAUqB,IAAI,iBACtDwG,EAAagM,6BAA6B7T,UAAUqB,IAAI,iBACxDwG,EAAaiM,qBAAqB9T,UAAUC,OAAO,oBAGtD,CACD1M,IAAK,sBACLN,MAAO,SAA6B8N,GAClCxJ,KAAK2oB,yBACL3oB,KAAK8oB,iCAAiC9oB,KAAKuI,SAASwgB,wBAEpDvf,EAAMC,iBAEFzJ,KAAK4Z,cAAcrJ,YAAYe,MAAMoX,oBACvC1oB,KAAKmrB,oBAAoB,CAAE/qB,KAAM,iBAEjCJ,KAAK4a,YAAY,CACfH,sBAAuBza,KAAKwa,QAAQC,sBAAwB,IAE9Dza,KAAKmrB,oBAAoB,CAAE/qB,KAAM,sBAEnCJ,KAAK6oB,yBASN,CACD7sB,IAAK,uBACLN,MAAO,WAIL,IAAI0vB,EAAwBprB,KAAK4Z,cAActJ,aAC3C+a,EAAYD,EAAsBC,UAClCC,EAAeF,EAAsBE,aACrCtK,EAAgBoK,EAAsBpK,cACtCuK,EAAwBvrB,KAAK4Z,cAAchJ,iBAC3CM,EAAaqa,EAAsBra,WACnCG,EAAaka,EAAsBla,WAGnCma,OAAmB,EACnBta,IAEFsa,EAAmBxrB,KAAK4Z,cAAcrJ,YAAYe,MAAMma,2CAA6CzrB,KAAK4Z,cAAcrJ,YAAYe,MAAML,SAASya,gBAYjJxa,GAAcG,EAEhBia,EAAajO,UAAYmO,GAAmB,EAAIvS,EAAUjb,SAASgC,KAAKuI,SAASojB,eAAgB,CAAEH,iBAAkBA,IAAsBxrB,KAAKuI,SAASqjB,qBAGzJN,EAAajO,UAAYrd,KAAKuI,SAASsjB,iBACvCR,EAAUhO,UAAYrd,KAAKuI,SAASujB,mBAGtC9K,EAAcvY,UAAUqB,IAAI,0BAE5B9J,KAAK2oB,yBACL3oB,KAAK8oB,iCAAiC9oB,KAAKuI,SAASwgB,0BASrD,CACD/sB,IAAK,uBACLN,MAAO,WACL,IAAIqwB,EAAwB/rB,KAAK4Z,cAActJ,aAC3C+a,EAAYU,EAAsBV,UACnBU,EAAsBT,aAE5BjO,UAAY,GACzBgO,EAAUhO,UAAYrd,KAAKuI,SAASyjB,qBAErC,CACDhwB,IAAK,mCACLN,MAAO,SAA0C0C,EAAS6tB,GACxD,IAAIC,EAAwBlsB,KAAK4Z,cAActJ,aAC3C6N,EAAmB+N,EAAsB/N,iBACzCF,EAAsBiO,EAAsBjO,oBAE3CgO,IACH9N,EAAiB1V,UAAUqB,IAAI,mBAC/BmU,EAAoBxV,UAAUqB,IAAI,oBAEpCqU,EAAiBd,UAAYjf,EAC7B6f,EAAoBZ,UAAYjf,IAEjC,CACDpC,IAAK,4BACLN,MAAO,WACL,IAAI0Y,GAAU,EAAIuE,EAAe3D,UACjC,OAAOZ,GAAW,UAAYA,EAAQpZ,KAAK8H,gBAQ5C,CACD9G,IAAK,cACLN,MAAO,SAAqBywB,GAC1BhxB,OAAOmU,OAAOtP,KAAKwa,QAAS2R,GAC5B9R,eAAe5P,QAAQ,gBAAiBF,KAAKG,UAAU1K,KAAKwa,YAE7D,CACDxe,IAAK,yBACLN,MAAO,SAAgC0wB,GACrCjxB,OAAOmU,OAAOtP,KAAKia,iBAAkBmS,GACrChiB,aAAaK,QAAQ,mBAAoBF,KAAKG,UAAU1K,KAAKia,qBAE9D,CACDje,IAAK,qBACLV,IAAK,WACH,MAAM,IAAI6E,MAAM,+DASjB,CACDnE,IAAK,sBACLV,IAAK,WACH,MAAM,IAAI6E,MAAM,+DAEjB,CACDnE,IAAK,sBACLV,IAAK,cAUJ,CACDU,IAAK,wBACLV,IAAK,WACH,OAAO0E,KAAKwa,QAAQC,wBAErB,CACDze,IAAK,oBACLV,IAAK,WACH,OAAO0E,KAAKib,wBAITvB,EAtpD2B,GAypDpCzf,EAAQ+D,QAAU0b,G,6BChvDlBve,OAAOC,eAAenB,EAAS,aAAc,CAC3CyB,OAAO;;;;;;;;;;;AAaT,IAAIwT,EAAW,CACbmd,SAAU,mBACVrwB,IAAK,SAAauE,GAChB,OAAOA,EAAK+rB,aAAa,oBAsB7BryB,EAAQ+D,QATK,SAAgBjE,EAAMge,GACjC,IAAIwU,EAAQ,GACRnc,EAASjV,OAAOmU,OAAO,GAAIJ,EAAU6I,GAIzC,OAHA9X,MAAM5D,UAAUsJ,MAAM/K,KAAKb,EAAKyyB,iBAAiBpc,EAAOic,WAAWvd,SAAQ,SAAUvO,GACnFgsB,EAAMnc,EAAOpU,IAAIuE,IAASA,KAErBgsB,I,6BCpCTpxB,OAAOC,eAAenB,EAAS,aAAc,CAC3CyB,OAAO;;;;;;;;;;;AAaT,IAAI+wB,EAAU,CAAC,QAAS,OAAQ,OAAQ,QAAS,SAyCjDxyB,EAAQ+D,QAxBW,SAAsBe,EAAKgP,EAAQ+D,GAG1C2a,EAAQC,OAAM,SAAU3d,GAChC,OAAOhB,GAAU5S,OAAOkB,UAAUC,eAAe1B,KAAKmT,EAAQgB,OAO9DhQ,EAAI2d,SAAW,GACf+P,EAAQ3d,SAAQ,SAAUC,GACxBhQ,EAAI2d,SAAS3N,GAAQ,WACnB,IAAK,IAAI4b,EAAOpf,UAAUpO,OAAQkS,EAAOpP,MAAM0qB,GAAOE,EAAO,EAAGA,EAAOF,EAAME,IAC3Exb,EAAKwb,GAAQtf,UAAUsf,GAGzB9c,EAAOgB,GAAMzD,MAAMyC,EAAQ,CAAC+D,GAAkBlK,OAAOyH,UAVzD7Q,QAAQwlB,MAAM,oGACdjlB,EAAI2d,SAAWle,W,6BCxCnBrD,OAAOC,eAAenB,EAAS,aAAc,CAC3CyB,OAAO;;;;;;;;;;;AAqBT,IAAIuvB,EAAUhxB,EAAQgxB,QAAU,SAAiBH,EAAIthB,EAAOuhB,GAE1D,OADAD,EAAGtJ,iBAAiBhY,EAAOuhB,GAAI,GACxB,CAAED,GAAIA,EAAIthB,MAAOA,EAAOuhB,GAAIA,IASjChL,EAAa9lB,EAAQ8lB,WAAa,SAAoBiL,GACxD,IAAIF,EAAKE,EAAOF,GACZthB,EAAQwhB,EAAOxhB,MACfuhB,EAAKC,EAAOD,GAEhBD,EAAG6B,oBAAoBnjB,EAAOuhB,IAGhC9wB,EAAQ+D,QAAU,CAChBitB,QAASA,EACTlL,WAAYA,I,6BC3Cd5kB,OAAOC,eAAenB,EAAS,aAAc,CAC3CyB,OAAO,IAGT,IAgBgCqD,EAhB5BY,EAAe,WAAc,SAASC,EAAiB3C,EAAQC,GAAS,IAAK,IAAIzC,EAAI,EAAGA,EAAIyC,EAAMC,OAAQ1C,IAAK,CAAE,IAAI2C,EAAaF,EAAMzC,GAAI2C,EAAW/B,WAAa+B,EAAW/B,aAAc,EAAO+B,EAAWC,cAAe,EAAU,UAAWD,IAAYA,EAAWE,UAAW,GAAMnC,OAAOC,eAAe6B,EAAQG,EAAWpB,IAAKoB,IAAiB,OAAO,SAAUN,EAAaS,EAAYC,GAAiJ,OAA9HD,GAAYqC,EAAiB9C,EAAYT,UAAWkB,GAAiBC,GAAaoC,EAAiB9C,EAAaU,GAAqBV,GAA7gB,GAYf8vB,EAAc,EAAQ,KAEtBC,GAE4B9tB,EAFU6tB,IAEW7tB,EAAIlD,WAAakD,EAAM,CAAEf,QAASe;;;;;;;;;;wjBAIvF,IAAI+tB,EAAiB,WACnB,SAASA,EAAe9I,EAAO5lB,EAAS2uB,EAAQC,EAAoBC,IAHtE,SAAyBpwB,EAAUC,GAAe,KAAMD,aAAoBC,GAAgB,MAAM,IAAIC,UAAU,qCAI5GgD,CAAgBC,KAAM8sB,GAElB9I,aAAiB7jB,OACnBH,KAAKktB,YAAcL,EAAa7uB,QAAQmvB,WACxCntB,KAAKotB,QAAUpJ,GACNA,GACThkB,KAAKktB,YAAclJ,EACnBhkB,KAAKotB,QAAU,IAAIjtB,MAAM/B,KAEzB4B,KAAKktB,YAAcL,EAAa7uB,QAAQmvB,WACxCntB,KAAKotB,QAAU,IAAIjtB,MAAM/B,IAE3B4B,KAAKqtB,SAAWN,EAChB/sB,KAAKstB,qBAAuBN,EAC5BhtB,KAAKutB,mBAAqBN,EAmC5B,OAhCAttB,EAAamtB,EAAgB,CAAC,CAC5B9wB,IAAK,YACLV,IAAK,WACH,OAAO0E,KAAKktB,cAEb,CACDlxB,IAAK,UACLV,IAAK,WACH,OAAO0E,KAAKotB,QAAQhvB,UAErB,CACDpC,IAAK,SACLV,IAAK,WACH,OAAO0E,KAAKqtB,WAEb,CACDrxB,IAAK,qBACLV,IAAK,WACH,OAAO0E,KAAKstB,uBAEb,CACDtxB,IAAK,mBACLV,IAAK,WACH,OAAO0E,KAAKutB,sBAEZ,CAAC,CACHvxB,IAAK,eACLN,MAAO,SAAsBqxB,GAC3B,OAAO,IAAID,EAAeD,EAAa7uB,QAAQwvB,aAAc,8BAA+BT,EAAQ,GAAI,SAIrGD,EAnDY,GAsDrB7yB,EAAQ+D,QAAU8uB,G,6BC9ElB3xB,OAAOC,eAAenB,EAAS,aAAc,CAC3CyB,OAAO;;;;;;;;;;;AAaT,IAAI+xB,OAAY,EAUZC,EAAO,SAASA,EAAK1xB,EAAK2xB,GAC5B,IAOE,GANAC,YAAYF,KAAK1xB,GACZyxB,IAEHA,EAAYzxB,GAGV2xB,GAAQD,EAAK3f,OAAQ,CACvB,IAAIlT,EAAI+yB,YAAYC,QAAQ,KAAMJ,EAAWzxB,GAC7C0xB,EAAK3f,OAAO,sBAAwB/R,EAAM,MAAQnB,EAAEizB,SAAW,QAEjE,MAAO9qB,MAKX0qB,EAAKK,MAAQ,WACXN,EAAY,MAGdxzB,EAAQ+D,QAAU0vB,G,6BC7ClBvyB,OAAOC,eAAenB,EAAS,aAAc,CAC3CyB,OAAO,IAGT,IAAIiE,EAAe,WAAc,SAASC,EAAiB3C,EAAQC,GAAS,IAAK,IAAIzC,EAAI,EAAGA,EAAIyC,EAAMC,OAAQ1C,IAAK,CAAE,IAAI2C,EAAaF,EAAMzC,GAAI2C,EAAW/B,WAAa+B,EAAW/B,aAAc,EAAO+B,EAAWC,cAAe,EAAU,UAAWD,IAAYA,EAAWE,UAAW,GAAMnC,OAAOC,eAAe6B,EAAQG,EAAWpB,IAAKoB,IAAiB,OAAO,SAAUN,EAAaS,EAAYC,GAAiJ,OAA9HD,GAAYqC,EAAiB9C,EAAYT,UAAWkB,GAAiBC,GAAaoC,EAAiB9C,EAAaU,GAAqBV,GAA7gB;;;;;;;;;;;AAqBnB,IAAIkxB,EAA2B,WAC7B,SAASA,KApBX,SAAyBnxB,EAAUC,GAAe,KAAMD,aAAoBC,GAAgB,MAAM,IAAIC,UAAU,qCAqB5GgD,CAAgBC,KAAMguB,GAkBxB,OAfAruB,EAAaquB,EAA0B,CAAC,CACtChyB,IAAK,cASLN,MAAO,SAAqB0f,GAC1B,MAAMjb,MAAM,gCAIT6tB,EApBsB,GAuB/B/zB,EAAQ+D,QAAUgwB,G,6BChDlB7yB,OAAOC,eAAenB,EAAS,aAAc,CAC3CyB,OAAO,IA6CTzB,EAAQ+D,QA5BuB,CAK7BiwB,6DAA8D,+DAK9DC,aAAc,eAKdC,kBAAmB,oBAKnBC,oBAAqB,sBAKrBC,oBAAqB,wB,6BC3CvBlzB,OAAOC,eAAenB,EAAS,aAAc,CAC3CyB,OAAO,IAGT,IAAI4yB,EAAgb,SAAUhqB,EAAK7J,GAAK,GAAIwF,MAAMC,QAAQoE,GAAQ,OAAOA,EAAY,GAAI9I,OAAOkE,YAAYvE,OAAOmJ,GAAQ,OAAxf,SAAuBA,EAAK7J,GAAK,IAAI8zB,EAAO,GAAQC,GAAK,EAAUC,GAAK,EAAWC,OAAKrpB,EAAW,IAAM,IAAK,IAAiCspB,EAA7BC,EAAKtqB,EAAI9I,OAAOkE,cAAmB8uB,GAAMG,EAAKC,EAAGC,QAAQC,QAAoBP,EAAKlwB,KAAKswB,EAAGjzB,QAAYjB,GAAK8zB,EAAKpxB,SAAW1C,GAA3D+zB,GAAK,IAAoE,MAAOO,GAAON,GAAK,EAAMC,EAAKK,EAAO,QAAU,KAAWP,GAAMI,EAAW,QAAGA,EAAW,SAAO,QAAU,GAAIH,EAAI,MAAMC,GAAQ,OAAOH,EAA6HS,CAAc1qB,EAAK7J,GAAa,MAAM,IAAIsC,UAAU,yDAcllBkyB,EAAQ,GASRC,EAAYj1B,EAAQi1B,UAAY,SAAmBC,EAAOC,GAM5D,OALKH,EAAME,KACTF,EAAME,GAAS,IAGjBF,EAAME,GAAO9wB,KAAK+wB,GACX,CAACD,EAAOC,IAUbC,EAAUp1B,EAAQo1B,QAAU,SAAiBF,GAC/C,IAAK,IAAIxE,EAAOpf,UAAUpO,OAAQkS,EAAOpP,MAAM0qB,EAAO,EAAIA,EAAO,EAAI,GAAIE,EAAO,EAAGA,EAAOF,EAAME,IAC9Fxb,EAAKwb,EAAO,GAAKtf,UAAUsf,GAGzBoE,EAAME,IACRF,EAAME,GAAOrgB,SAAQ,SAAUsgB,GAC7B,IACEA,EAAG9jB,WAAMjG,EAAWgK,GACpB,MAAOrM,SAaXssB,EAAcr1B,EAAQq1B,YAAc,WACtC,IAAItE,EAASzf,UAAUpO,OAAS,QAAsBkI,IAAjBkG,UAAU,GAAmBA,UAAU,GAAK,GAE7EgkB,EAAUjB,EAAetD,EAAQ,GACjCmE,EAAQI,EAAQ,GAChBxE,EAAKwE,EAAQ,GAEbJ,GAASF,EAAME,IACjBF,EAAME,GAAOrgB,SAAQ,SAAUsgB,EAAI30B,GAC7BswB,IAAOqE,GACTH,EAAME,GAAOK,OAAO/0B,EAAG;;;;;;;;;;GAM/BR,EAAQ+D,QAAU,CAChBqxB,QAASA,EACTH,UAAWA,EACXI,YAAaA,I,6BCpFfn0B,OAAOC,eAAenB,EAAS,aAAc,CAC3CyB,OAAO;;;;;;;;;;;AAaT,IAAI+zB,EAAep1B,OAAOo1B,cAAgBp1B,OAAOq1B,mBAgDjDz1B,EAAQ+D,QAvCY,SAAuB2xB,EAAQhe,GACjD,IAAIie,EAAe,IAAIH,EACnBI,EAAWD,EAAaE,iBACxBC,EAAaH,EAAaI,wBAAwBL,GAClDM,EAAsBL,EAAaM,sBAAsB,IAAK,EAAG,GAyBrE,OAvBAL,EAASM,sBAAwB,GACjCN,EAASO,QAAU,IAEnBL,EAAW9E,QAAQ4E,GACnBA,EAAS5E,QAAQgF,GACjBA,EAAoBhF,QAAQ2E,EAAaS,aAEzCJ,EAAoBK,eAAiB,WAEnC,IAAIC,EAAc,IAAIhsB,WAAWsrB,EAASW,mBAC1CX,EAASY,qBAAqBF,GAG9B,IADA,IAAIG,EAAiB,EACZj2B,EAAI,EAAGA,EAAI81B,EAAYpzB,OAAQ1C,IACtCi2B,GAAkBH,EAAY91B,GAGhC,IAAIk2B,EAASD,EAAiBH,EAAYpzB,OAG1CwU,EAASgf,EAFSD,EAAiB,IAK9B,CACLE,MAAO,WACsB,WAAvBhB,EAAaiB,QACfjB,EAAagB,QACbX,EAAoBK,eAAiB,U,6BCxD7Cn1B,OAAOC,eAAenB,EAAS,aAAc,CAC3CyB,OAAO;;;;;;;;;;;AAaTzB,EAAQ+D,QAAU,CAAE8yB,WAAY,U,gBChBhC,IAAIC,EAAM,EAAQ,IACdC,EAAc,EAAQ,IA2B1B92B,EAAOD,QAzBP,SAAYod,EAASjS,EAAKR,GACxB,IAAInK,EAAI2K,GAAOR,GAAU,EAEF,iBAAb,IACRQ,EAAkB,WAAZiS,EAAuB,IAAIpX,MAAM,IAAM,KAC7CoX,EAAU,MAIZ,IAAI4Z,GAFJ5Z,EAAUA,GAAW,IAEF6Z,SAAW7Z,EAAQ0Z,KAAOA,KAO7C,GAJAE,EAAK,GAAgB,GAAVA,EAAK,GAAa,GAC7BA,EAAK,GAAgB,GAAVA,EAAK,GAAa,IAGzB7rB,EACF,IAAK,IAAIwP,EAAK,EAAGA,EAAK,KAAMA,EAC1BxP,EAAI3K,EAAIma,GAAMqc,EAAKrc,GAIvB,OAAOxP,GAAO4rB,EAAYC,K,gBCzB5B,UAII,EAAO,QAAW,0BAAP,EAMP,WAEN,IAAIE,EAAS,qIAMb,SAAS1c,EAAM2c,GACb,IALkBta,EAAKua,EAKnBv2B,EAAIs2B,EAAE3xB,QAAQ,KAAM,IAAIA,QAAQ,QAAS,IACzC6xB,GANmBD,EAMQ,KALJ,KADTva,EAMUhc,GALjB8R,QAAQykB,GAAYva,EAAI3Z,OAAS2Z,EAAIlK,QAAQykB,IAMpD/sB,EAAMxJ,EAAEy2B,UAAU,EAAGD,GAAY7c,MAAM,KAE3C,OADAnQ,EAAIjG,KAAKvD,EAAEy2B,UAAUD,EAAa,IAC3BhtB,EAGT,SAASktB,EAASJ,GAChB,OAAO7a,MAAMkb,OAAOL,IAAMA,EAAIK,OAAOL,GAGvC,SAASM,EAAS1wB,GAChB,GAAuB,iBAAZA,EACT,MAAM,IAAIjE,UAAU,oCAEtB,IAAKo0B,EAAOpmB,KAAK/J,GACf,MAAM,IAAIb,MAAM,uCAAwCa,EAAQ,eAIpE,SAAS2wB,EAAgBC,EAAIC,GAC3B,CAACD,EAAIC,GAAI/iB,QAAQ4iB,GAKjB,IAHA,IAAII,EAAKrd,EAAMmd,GACXG,EAAKtd,EAAMod,GAENp3B,EAAI,EAAGA,EAAIwd,KAAK+Z,IAAIF,EAAG30B,OAAS,EAAG40B,EAAG50B,OAAS,GAAI1C,IAAK,CAC/D,IAAIw3B,EAAK9a,SAAS2a,EAAGr3B,IAAM,EAAG,IAC1By3B,EAAK/a,SAAS4a,EAAGt3B,IAAM,EAAG,IAE9B,GAAIw3B,EAAKC,EAAI,OAAO,EACpB,GAAIA,EAAKD,EAAI,OAAQ,EAGvB,IAAIE,EAAML,EAAGA,EAAG30B,OAAS,GACrBi1B,EAAML,EAAGA,EAAG50B,OAAS,GAEzB,GAAIg1B,GAAOC,EAAK,CACd,IAAIC,EAAKF,EAAI1d,MAAM,KAAKrV,IAAIoyB,GACxBc,EAAKF,EAAI3d,MAAM,KAAKrV,IAAIoyB,GAE5B,IAAK/2B,EAAI,EAAGA,EAAIwd,KAAK+Z,IAAIK,EAAGl1B,OAAQm1B,EAAGn1B,QAAS1C,IAAK,CACnD,QAAc4K,IAAVgtB,EAAG53B,IAAqC,iBAAV63B,EAAG73B,IAAoC,iBAAV43B,EAAG53B,GAAiB,OAAQ,EAC3F,QAAc4K,IAAVitB,EAAG73B,IAAqC,iBAAV43B,EAAG53B,IAAoC,iBAAV63B,EAAG73B,GAAiB,OAAO,EAE1F,GAAI43B,EAAG53B,GAAK63B,EAAG73B,GAAI,OAAO,EAC1B,GAAI63B,EAAG73B,GAAK43B,EAAG53B,GAAI,OAAQ,QAExB,GAAI03B,GAAOC,EAChB,OAAOD,GAAO,EAAI,EAGpB,OAAO,EAGT,IAAII,EAAmB,CACrB,IACA,KACA,IACA,IACA,MAGEC,EAAiB,CACnB,IAAK,CAAC,GACN,KAAM,CAAC,EAAG,GACV,IAAK,CAAC,GACN,KAAM,EAAE,EAAG,GACX,IAAK,EAAE,IA0BT,OAdAb,EAAgBD,SAAW,SAAS1wB,GAClC,MAA0B,iBAAZA,GAAwBmwB,EAAOpmB,KAAK/J,IAGpD2wB,EAAgBc,QAAU,SAAUb,EAAIC,EAAIa,IAb5C,SAA0BC,GACxB,GAAkB,iBAAPA,EACT,MAAM,IAAI51B,UAAU,yDAA2D41B,GAEjF,IAAsC,IAAlCJ,EAAiB3lB,QAAQ+lB,GAC3B,MAAM,IAAI51B,UAAU,qCAAuCw1B,EAAiBh0B,KAAK,MAUnFq0B,CAAiBF,GAIjB,IAAIG,EAAMlB,EAAgBC,EAAIC,GAC9B,OAAOW,EAAeE,GAAU9lB,QAAQimB,IAAQ,GAG3ClB,IA7Ga,gC,gBCJtB,IAAIj1B,EAAiB,EAAQ,IAEzBo2B,EAA2B,EAAQ,IAEvC,SAASC,EAAWC,EAAQ3jB,EAAM4jB,GAchC,OAbIH,IACF54B,EAAOD,QAAU84B,EAAazkB,QAAQ4kB,UAEtCh5B,EAAOD,QAAU84B,EAAa,SAAoBC,EAAQ3jB,EAAM4jB,GAC9D,IAAI/f,EAAI,CAAC,MACTA,EAAE7U,KAAKiN,MAAM4H,EAAG7D,GAChB,IACIxS,EAAW,IADGwO,SAASpP,KAAKqP,MAAM0nB,EAAQ9f,IAG9C,OADI+f,GAAOv2B,EAAeG,EAAUo2B,EAAM52B,WACnCQ,GAIJk2B,EAAWznB,MAAM,KAAMC,WAGhCrR,EAAOD,QAAU84B,G,8BCrBjB;;;;;;;;;;;;;;;;;;;;;;;AAwBA,SAASI,EAAgBC,GACvB,IACEC,EAAOr3B,EAAKN,EACZ43B,EAAO74B,EAAG0C,EACVo2B,EAAOp4B,OAAOY,OAAO,MAGvB,GADAiE,KAAKwzB,GAAUD,EACVH,EACL,GAAqB,iBAAVA,EAIT,IAHwB,MAApBA,EAAMK,OAAO,KACfL,EAAQA,EAAMztB,MAAM,IAIpBlL,EAAI,EACJ0C,GAFAm2B,EAAQF,EAAM3e,MAAM,MAELtX,OAAQ1C,EAAI0C,EAAQ1C,KAI9B,GADL44B,GADA33B,EAAQ43B,EAAM74B,IACAmS,QAAQ,MAEpB8mB,EACEH,EACAI,EAAOj4B,EAAMiK,MAAM,EAAG0tB,IACtBM,EAAOj4B,EAAMiK,MAAM0tB,EAAQ,KAEpB33B,EAAMyB,QACfu2B,EACEH,EACAI,EAAOj4B,GACP,SAKN,GAAIwE,EAAQkzB,GACV,IACE34B,EAAI,EACJ0C,EAASi2B,EAAMj2B,OAAQ1C,EAAI0C,EAAQ1C,IAGnCi5B,EAASH,GADT73B,EAAQ03B,EAAM34B,IACO,GAAIiB,EAAM,SAGjC,IAAKM,KAAOo3B,EACTM,EAASH,EAAMv3B,EAAKo3B,EAAMp3B,IAMnC,IACEkE,EAAUD,MAAMC,QAChB0zB,EAAuBT,EAAgB92B,UACvC+tB,EAAO,qBACPyJ,EAAO,MACPp0B,EAAU,CACR,IAAK,MACL,IAAK,MACL,IAAK,MACL,IAAK,MACL,IAAK,MACL,MAAO,IACP,MAAO,MAETq0B,EAAW,SAAUvf,GACnB,OAAO9U,EAAQ8U,IAEjBif,EAAS,uBAAyBvb,KAAKiZ,SAGzC,SAASwC,EAASH,EAAMv4B,EAAMU,GACxBV,KAAQu4B,EACVA,EAAKv4B,GAAMqD,KAAK,GAAK3C,GAErB63B,EAAKv4B,GAAQkF,EAAQxE,GAASA,EAAQ,CAAC,GAAKA,GAIhD,SAASi4B,EAAO7c,GACd,OAAOid,mBAAmBjd,EAAIrX,QAAQo0B,EAAM,MAG9C,SAASG,EAAOld,GACd,OAAOjK,mBAAmBiK,GAAKrX,QAAQ2qB,EAAM0J,GAG/CF,EAAqBK,OAAS,SAAgBj5B,EAAMU,GAClDg4B,EAAS1zB,KAAKwzB,GAASx4B,EAAMU,IAG/Bk4B,EAAqBM,OAAS,SAAal5B,UAClCgF,KAAKwzB,GAAQx4B,IAGtB44B,EAAqBt4B,IAAM,SAAaN,GACtC,IAAIu4B,EAAOvzB,KAAKwzB,GAChB,OAAOx4B,KAAQu4B,EAAOA,EAAKv4B,GAAM,GAAK,MAGxC44B,EAAqBO,OAAS,SAAgBn5B,GAC5C,IAAIu4B,EAAOvzB,KAAKwzB,GAChB,OAAOx4B,KAAQu4B,EAAOA,EAAKv4B,GAAM2K,MAAM,GAAK,IAG9CiuB,EAAqBQ,IAAM,SAAap5B,GACtC,OAAOA,KAAQgF,KAAKwzB,IAGtBI,EAAqBnsB,IAAM,SAAazM,EAAMU,GAC5CsE,KAAKwzB,GAAQx4B,GAAQ,CAAC,GAAKU,IAG7Bk4B,EAAqB9kB,QAAU,SAAiB6C,EAAU0iB,GACxD,IAAId,EAAOvzB,KAAKwzB,GAChBr4B,OAAOm5B,oBAAoBf,GAAMzkB,SAAQ,SAAS9T,GAChDu4B,EAAKv4B,GAAM8T,SAAQ,SAASpT,GAC1BiW,EAAS/W,KAAKy5B,EAAS34B,EAAOV,EAAMgF,QACnCA,QACFA,OAYL4zB,EAAqBW,OAAS,WAC5B,MAAO,IAGTX,EAAqBlxB,SAAW,WAC9B,IAAqCjI,EAAGuB,EAAKhB,EAAMU,EAA/C63B,EAAOvzB,KAAKwzB,GAASJ,EAAQ,GACjC,IAAKp3B,KAAOu3B,EAEV,IADAv4B,EAAOg5B,EAAOh4B,GAEZvB,EAAI,EACJiB,EAAQ63B,EAAKv3B,GACbvB,EAAIiB,EAAMyB,OAAQ1C,IAElB24B,EAAM/0B,KAAKrD,EAAO,IAAMg5B,EAAOt4B,EAAMjB,KAGzC,OAAO24B,EAAM70B,KAAK,MAKnB,SAAUq1B,GAET,IAAIY,EAAY,WACd,IACE,QAASh5B,OAAOkE,SAChB,MAAMskB,GACN,OAAO,GAJI,GAST,YAAa4P,IACjBA,EAAqB9kB,QAAU,SAAiB6C,EAAU0iB,GACxD,IAAII,EAAQt5B,OAAOY,OAAO,MAC1BiE,KAAK0C,WACAjD,QAAQ,oBAAqB,KAC7BgV,MAAM,KACN3F,SAAQ,SAAU9T,GACZA,EAAKmC,UAAUnC,KAAQy5B,KAC3BA,EAAMz5B,GAAQgF,KAAKm0B,OAAOn5B,IAAO8T,SAAQ,SAASpT,GACjDiW,EAAS/W,KAAKy5B,EAAS34B,EAAOV,EAAMgF,QACnCA,QACFA,QAIL,SAAU4zB,IACdA,EAAqB3P,KAAO,WAC1B,IAAIyQ,EAAQ,GACZ10B,KAAK8O,SAAQ,SAASpT,EAAOV,GAAQ05B,EAAMr2B,KAAKrD,MAChD,IAAI0E,EAAW,CACbmvB,KAAM,WACJ,IAAInzB,EAAQg5B,EAAMC,QAClB,MAAO,CAAC7F,UAAgBzpB,IAAV3J,EAAqBA,MAAOA,KAU9C,OANI84B,IACF90B,EAASlE,OAAOkE,UAAY,WAC1B,OAAOA,IAIJA,IAIL,WAAYk0B,IAChBA,EAAqBgB,OAAS,WAC5B,IAAIF,EAAQ,GACZ10B,KAAK8O,SAAQ,SAASpT,GAASg5B,EAAMr2B,KAAK3C,MAC1C,IAAIgE,EAAW,CACbmvB,KAAM,WACJ,IAAInzB,EAAQg5B,EAAMC,QAClB,MAAO,CAAC7F,UAAgBzpB,IAAV3J,EAAqBA,MAAOA,KAU9C,OANI84B,IACF90B,EAASlE,OAAOkE,UAAY,WAC1B,OAAOA,IAIJA,IAIL,YAAak0B,IACjBA,EAAqBiB,QAAU,WAC7B,IAAIH,EAAQ,GACZ10B,KAAK8O,SAAQ,SAASpT,EAAOV,GAAQ05B,EAAMr2B,KAAK,CAACrD,EAAMU,OACvD,IAAIgE,EAAW,CACbmvB,KAAM,WACJ,IAAInzB,EAAQg5B,EAAMC,QAClB,MAAO,CAAC7F,UAAgBzpB,IAAV3J,EAAqBA,MAAOA,KAU9C,OANI84B,IACF90B,EAASlE,OAAOkE,UAAY,WAC1B,OAAOA,IAIJA,IAIP80B,KAAch5B,OAAOkE,YAAYk0B,KACnCA,EAAqBp4B,OAAOkE,UAAYk0B,EAAqBiB,SAGzD,SAAUjB,IACdA,EAAqBkB,KAAO,WAS1B,IARA,IAMEr6B,EAAGuB,EAAKN,EALRm5B,EAAU70B,KAAK60B,UACfE,EAAQF,EAAQhG,OAChBC,EAAOiG,EAAMjG,KACb7K,EAAO,GACP2Q,EAASz5B,OAAOY,OAAO,OAGjB+yB,GAEN9yB,GADAN,EAAQq5B,EAAMr5B,OACF,GACZuoB,EAAK5lB,KAAKrC,GACJA,KAAO44B,IACXA,EAAO54B,GAAO,IAEhB44B,EAAO54B,GAAKqC,KAAK3C,EAAM,IAEvBozB,GADAiG,EAAQF,EAAQhG,QACHC,KAKf,IADA7K,EAAK6Q,OACAr6B,EAAI,EAAGA,EAAIwpB,EAAK9mB,OAAQ1C,IAC3BuF,KAAKk0B,OAAOjQ,EAAKxpB,IAEnB,IAAKA,EAAI,EAAGA,EAAIwpB,EAAK9mB,OAAQ1C,IAC3BuB,EAAMioB,EAAKxpB,GACXuF,KAAKi0B,OAAOj4B,EAAK44B,EAAO54B,GAAK24B,WA1HrC,EAFAxB,EAAmBj5B,EAAOD,QAAU+6B,EAAO7B,iBAAmBA,GAiI5C92B,a,kCC9SlB,IAAI44B,EAAiB,EAAQ,IAEzBC,EAAuB,EAAQ,IAE/BC,EAA6B,EAAQ,IAErCC,EAAkB,EAAQ,IAM9Bl7B,EAAOD,QAJP,SAAwBqK,EAAK7J,GAC3B,OAAOw6B,EAAe3wB,IAAQ4wB,EAAqB5wB,EAAK7J,IAAM06B,EAA2B7wB,EAAK7J,IAAM26B,M,gBCRtG,IAAIC,EAAa,EAAQ,IAErBC,EAAS,EAAQ,IACjBC,EAAiB,EAAQ,IACzBC,EAAc,EAAQ,IAE1B,SAASC,EAAcC,EAAYC,EAAQC,EAAM7d,EAAMqX,GACrD,IAAI/f,EAAO,GAAG1J,MAAM/K,KAAK2Q,UAAW,GAChCsqB,EAAUxmB,EAAKlS,OACf24B,EAA2C,mBAAtBzmB,EAAKwmB,EAAU,GAExC,IAAKC,IAAgBT,IACnB,MAAM,IAAIl1B,MAAM,sCAGlB,IAAI21B,EAoBG,CACL,GAAID,EAAU,EACZ,MAAM,IAAI11B,MAAM,8BAYlB,OATgB,IAAZ01B,GACFD,EAAOD,EACPA,EAAS5d,OAAO1S,GACK,IAAZwwB,GAAkBF,EAAOI,aAClChe,EAAO6d,EACPA,EAAOD,EACPA,OAAStwB,GAGJ,IAAIuJ,SAAQ,SAAUqb,EAASvb,GACpC,IACE,IAAI5O,EAAOw1B,EAAOv5B,OAAO65B,EAAM7d,GAC/BkS,EAAQyL,EAAW51B,EAAM61B,EAAQ5d,IACjC,MAAO/U,GACP0L,EAAO1L,OAtCX,GAAI6yB,EAAU,EACZ,MAAM,IAAI11B,MAAM,8BAGF,IAAZ01B,GACFzG,EAAKwG,EACLA,EAAOD,EACPA,EAAS5d,OAAO1S,GACK,IAAZwwB,IACLF,EAAOI,iBAA4B,IAAP3G,GAC9BA,EAAKrX,EACLA,OAAO1S,IAEP+pB,EAAKrX,EACLA,EAAO6d,EACPA,EAAOD,EACPA,OAAStwB,IA2Bf,IACE,IAAIvF,EAAOw1B,EAAOv5B,OAAO65B,EAAM7d,GAC/BqX,EAAG,KAAMsG,EAAW51B,EAAM61B,EAAQ5d,IAClC,MAAO/U,GACPosB,EAAGpsB,IAIP/I,EAAQ8B,OAASu5B,EAAOv5B,OACxB9B,EAAQ+7B,SAAWP,EAAax5B,KAAK,KAAMs5B,EAAeU,QAC1Dh8B,EAAQi8B,UAAYT,EAAax5B,KAAK,KAAMs5B,EAAeY,iBAG3Dl8B,EAAQyI,SAAW+yB,EAAax5B,KAAK,MAAM,SAAU6D,EAAMP,EAAGwY,GAC5D,OAAOyd,EAAYS,OAAOn2B,EAAMiY,O,6BCxElC5c,OAAOC,eAAenB,EAAS,aAAc,CAC3CyB,OAAO,IAGT,IAAI4yB,EAAgb,SAAUhqB,EAAK7J,GAAK,GAAIwF,MAAMC,QAAQoE,GAAQ,OAAOA,EAAY,GAAI9I,OAAOkE,YAAYvE,OAAOmJ,GAAQ,OAAxf,SAAuBA,EAAK7J,GAAK,IAAI8zB,EAAO,GAAQC,GAAK,EAAUC,GAAK,EAAWC,OAAKrpB,EAAW,IAAM,IAAK,IAAiCspB,EAA7BC,EAAKtqB,EAAI9I,OAAOkE,cAAmB8uB,GAAMG,EAAKC,EAAGC,QAAQC,QAAoBP,EAAKlwB,KAAKswB,EAAGjzB,QAAYjB,GAAK8zB,EAAKpxB,SAAW1C,GAA3D+zB,GAAK,IAAoE,MAAOO,GAAON,GAAK,EAAMC,EAAKK,EAAO,QAAU,KAAWP,GAAMI,EAAW,QAAGA,EAAW,SAAO,QAAU,GAAIH,EAAI,MAAMC,GAAQ,OAAOH,EAA6HS,CAAc1qB,EAAK7J,GAAa,MAAM,IAAIsC,UAAU,yDAEllBa,EAA4B,mBAAXpC,QAAoD,iBAApBA,OAAOkE,SAAwB,SAAUX,GAAO,cAAcA,GAAS,SAAUA,GAAO,OAAOA,GAAyB,mBAAXvD,QAAyBuD,EAAIpB,cAAgBnC,QAAUuD,IAAQvD,OAAOa,UAAY,gBAAkB0C,GAElQY,EAAe,WAAc,SAASC,EAAiB3C,EAAQC,GAAS,IAAK,IAAIzC,EAAI,EAAGA,EAAIyC,EAAMC,OAAQ1C,IAAK,CAAE,IAAI2C,EAAaF,EAAMzC,GAAI2C,EAAW/B,WAAa+B,EAAW/B,aAAc,EAAO+B,EAAWC,cAAe,EAAU,UAAWD,IAAYA,EAAWE,UAAW,GAAMnC,OAAOC,eAAe6B,EAAQG,EAAWpB,IAAKoB,IAAiB,OAAO,SAAUN,EAAaS,EAAYC,GAAiJ,OAA9HD,GAAYqC,EAAiB9C,EAAYT,UAAWkB,GAAiBC,GAAaoC,EAAiB9C,EAAaU,GAAqBV,GAA7gB,GAafs5B,EAAwBlzB,EAFD,EAAQ,KAM/B6V,EAAwB7V,EAFD,EAAQ,KAM/BmzB,EAAwBnzB,EAFD,EAAQ,KAM/BU,EAAUV,EAFD,EAAQ,KAMjB2V,EAAiC3V,EAFD,EAAQ,IAMxCozB,EAAgCpzB,EAFD,EAAQ,KAMvCqzB,EAA8BrzB,EAFD,EAAQ,KAMrCszB,EAAwBtzB,EAFD,EAAQ,MAM/BuzB,EAAkBvzB,EAFD,EAAQ,KAMzBoW,EAAqBpW,EAFD,EAAQ,KAM5BiW,EAAWjW,EAFD,EAAQ,KAMlBwzB,EAAgBxzB,EAFD,EAAQ,MAI3B,SAASA,EAAuBnE,GAAO,OAAOA,GAAOA,EAAIlD,WAAakD,EAAM,CAAEf,QAASe,GAYvF,IAAI43B,EAAwB,WAO1B,SAASA,EAAsBhd,IAfjC,SAAyB9c,EAAUC,GAAe,KAAMD,aAAoBC,GAAgB,MAAM,IAAIC,UAAU,qCAgB5GgD,CAAgBC,KAAM22B,GAEtB,IAYMC,EAXN,KAAMjd,aAAuB0c,EAAsBr4B,SACjD,MAAM4F,EAAQ5F,QAAQmG,aAAa,qEAGrCnE,KAAK4Z,cAAgBD,GACrB,EAAIR,EAASnb,SAASgC,KAAMA,KAAK4Z,cAAc7L,OAAQ/N,KAAK4Z,cAAc9H,kBAC1E9R,KAAK62B,kBAAoB,KACzB72B,KAAK4Z,cAAclI,mBAAqB1R,KAAK82B,mBAAmB76B,KAAK+D,MACrEA,KAAK4Z,cAAchI,6BAA+B5R,KAAK+2B,oBAAoB96B,KAAK+D,MAChFA,KAAK4Z,cAAc/H,0BAA4B7R,KAAKg3B,oBAAoB/6B,KAAK+D,MACzEA,KAAK4Z,cAAc7I,oBAGpB6lB,EAAuB52B,KAAK4Z,cAAc7I,kBAAkB1S,KAAKiN,MAAMsrB,EAlC9E,SAA4BtyB,GAAO,GAAIrE,MAAMC,QAAQoE,GAAM,CAAE,IAAK,IAAI7J,EAAI,EAAGub,EAAO/V,MAAMqE,EAAInH,QAAS1C,EAAI6J,EAAInH,OAAQ1C,IAAOub,EAAKvb,GAAK6J,EAAI7J,GAAM,OAAOub,EAAe,OAAO/V,MAAM0C,KAAK2B,GAkCtF2yB,CAAmBj3B,KAAKk3B,kBAExH,IAAKl3B,KAAKm3B,qBAAqBxd,EAAYpJ,aAAc,CACvD,IAAIyT,EAAQpgB,EAAQ5F,QAAQmG,aAAa,4BAEzC,MADAnE,KAAK0c,SAASsH,MAlBM,oCAkBiB,2BAA4BrK,EAAYpJ,aACvEyT,EAERhkB,KAAKo3B,cAAgBzd,EAAYpJ,YAEjC,IAAI8mB,EAAWr3B,KAAKo3B,cAAcvc,qBAG9Byc,EAAwBD,EAASvc,cACrCuc,EAASvc,cAAgB,SAAUxJ,EAAOqJ,GAExC,OADAvQ,aAAaK,QAAQ,YAAaF,KAAKG,UAAUiQ,IAC1C2c,EAAsBhmB,EAAOqJ,IAGtC3a,KAAKu3B,aAAev3B,KAAKo3B,cAAc9lB,MACvCtR,KAAKw3B,qBAAuBx3B,KAAKy3B,+BAEjCz3B,KAAK03B,iBAAmB,CAAChB,EAAc14B,SAEvCgC,KAAK23B,oBACL33B,KAAK0c,SAAS1Q,MAtCQ,oCAsCe,SAAWpO,EAAQoC,KAAKw3B,sBAAwB,mCA2oBvF,OAhoBA73B,EAAag3B,EAAuB,CAAC,CACnC36B,IAAK,+BACLN,MAAO,WACL,OAAQsE,KAAK4Z,cAAc5H,QACzB,KAAKsH,EAAmBtb,QAAQ+F,MAC9B,OAAO,IAAIqyB,EAAsBp4B,QAAQgC,KAAK4Z,eAChD,KAAKN,EAAmBtb,QAAQ8F,MAChC,QACE,OAAO,IAAI0yB,EAAsBx4B,QAAQgC,KAAK4Z,kBAqBnD,CACD5d,IAAK,QACLN,MAAO,WACL,IAAI0N,EAAQpJ,KAEZA,KAAK43B,4BACL53B,KAAK63B,8BACL,IACIR,EAAWr3B,KAAKo3B,cAAcvc,qBAC9Bid,EAAW93B,KAAKo3B,cAAcjoB,qBAElC,OAAOkoB,EAASU,aAAa/3B,KAAKu3B,cAAc/Q,MAAK,SAAUlV,GAI7D,OAHAlI,EAAMmuB,aAAejmB,EACrBlI,EAAMouB,qBAAqBQ,kBAAkB1mB,GAC7CqQ,WAAWvY,EAAM6uB,uBAAuBh8B,KAAKmN,GAAQ0uB,GAC9C1uB,EAAMouB,qBAAqBrwB,WACjCqf,MAAK,WAYN,OAXApd,EAAMsT,SAASC,KAVK,8BAUiB,4CAErCgF,YAAW,WACJvY,EAAM8uB,0BACTb,EAASvc,cAAc1R,EAAMmuB,aAAcnuB,EAAMouB,qBAAqB7c,SAAS8L,SAAQ,WACrFrd,EAAMouB,qBAAqBW,cAC3Bd,EAASe,aAAahvB,EAAMmuB,aAAcjB,EAA8Bt4B,QAAQiwB,6DAA8D,IAAI9tB,MAAM,iEAG3J,KACHiJ,EAAMivB,aAAa,SACZjvB,KACNkvB,OAAM,SAAUtU,GACjBqT,EAASe,aAAahvB,EAAMmuB,aAAc,IAAIp3B,MAAM,uBAAyBiJ,EAAMwQ,cAAc5H,OAAOlP,cAAgB,YAAawzB,EAA8Bt4B,QAAQmwB,mBAC3K/kB,EAAMsT,SAASsH,MAAME,gEAAwDF,GAC7E5a,EAAMsT,SAASsH,MAAMA,EAAMthB,iBAU9B,CACD1G,IAAK,OACLN,MAAO,WACLsE,KAAKw3B,qBAAqBxX,OAC1BhgB,KAAKq4B,aAAa,QAClB53B,SAAS83B,KAAK9vB,UAAUC,OAAO,2BAUhC,CACD1M,IAAK,UACLN,MAAO,WACLsE,KAAKw3B,qBAAqB/Z,YAW3B,CACDzhB,IAAK,aACLN,MAAO,SAAoB88B,GACzB,IAAIlY,EAAStgB,KAETq3B,EAAWr3B,KAAKo3B,cAAcvc,qBAC9BF,EAAU3a,KAAKw3B,qBAAqB7c,QAExC,OADAA,EAAQlF,eAAiB+iB,EAClBnB,EAASvc,cAAc9a,KAAKu3B,aAAc5c,GAAS6L,MAAK,WAC7D,OAAOlG,EAAOkX,qBAAqBja,UAAUib,QAWhD,CACDx8B,IAAK,mBACLN,MAAO,WACLsE,KAAKw3B,qBAAqBjc,qBAU3B,CACDvf,IAAK,8BACLN,MAAO,WACL,OAAOsE,KAAKw3B,qBAAqBiB,gCAUlC,CACDz8B,IAAK,uBACLN,MAAO,SAA8Bg9B,GACnC,OAAO14B,KAAKw3B,qBAAqBhT,qBAAqBkU,KAUvD,CACD18B,IAAK,2BAULN,MAAO,SAAkCi9B,GACvC34B,KAAKw3B,qBAAuBmB,IAU7B,CACD38B,IAAK,4BASLN,MAAO,WACLsE,KAAK0c,SAASC,KAAK,oDACnB3c,KAAKk4B,0BAA2B,EAChCl4B,KAAK44B,4BAAyBvzB,EAC9BrF,KAAK64B,qBAAuB,EAC5Bp4B,SAAS83B,KAAK9vB,UAAUqB,IAAI,2BAW7B,CACD9N,IAAK,iBACLN,MAAO,SAAwB4V,GAC7B,OAAOA,EAAMwnB,UAAuC,OAA3B94B,KAAK62B,oBAW/B,CACD76B,IAAK,yBACLN,MAAO,WACL,IAAI4pB,EAAStlB,KAETkkB,EAAkB,+CAClBmT,EAAWr3B,KAAKo3B,cAAcvc,qBAC9Bid,EAAW93B,KAAKo3B,cAAcjoB,qBAElCkoB,EAASU,aAAa/3B,KAAKu3B,cAAc/Q,MAAK,SAAUlV,GACtDgU,EAAOkS,qBAAqBhT,qBAAqBlT,GACjDgU,EAAOkS,qBAAqBQ,kBAAkB1mB,GAC9CgU,EAAOiS,aAAejmB,EACiB,mBAA5B+lB,EAAS0B,gBAClB1B,EAAS0B,eAAezT,EAAOiS,cAE7BjS,EAAO0T,eAAe1nB,IACnBgU,EAAOsT,uBASVtT,EAAO5I,SAASC,KAAKuH,EAAiB,kEAAmE5S,IARzGgU,EAAOkS,qBAAqByB,qBAC5B3T,EAAO5I,SAASC,KAAKuH,EAAiB,gDAAiDoB,EAAOiS,cAC9FjS,EAAOsT,wBAAyB,EAChCtT,EAAO5I,SAAS1Q,MAAM,8BAA+BsZ,EAAOuR,mBAC5DQ,EAASvc,cAAcwK,EAAOiS,aAAcjS,EAAOkS,qBAAqB7c,SAAS8L,SAAQ,WACvF4Q,EAAS6B,WAAW5T,EAAOiS,aAAcjS,EAAOuR,uBAOhDvR,EAAOhK,oBACTgK,EAAO/J,qBAGT+J,EAAO5I,SAAS1Q,MAAMkY,EAAiB,mBAAoB5S,GAC3DqQ,WAAW2D,EAAO2S,uBAAuBh8B,KAAKqpB,GAASwS,OAExDQ,OAAM,SAAUtU,GAEbA,IAAU,CAAC,2BAA2BmV,SAASnV,EAAMoV,YAAc,CAAC,kBAAmB,kBAAmB,kDAAkDD,SAASnV,EAAM5lB,WAC7KknB,EAAOkS,qBAAqB6B,8BAC5B/T,EAAO0R,sBAAsBxQ,MAAK,SAAU8S,GAE1C,OADAhU,EAAOkS,qBAAqB7c,QAAQ/E,gBAAkB0jB,EAC/CjC,EAASvc,cAAcwK,EAAOiS,aAAcjS,EAAOkS,qBAAqB7c,YAC9E6L,MAAK,WACFlB,EAAO0T,eAAe1T,EAAOiS,cAC/BF,EAAS6B,WAAW5T,EAAOiS,aAAcjS,EAAOuR,oBAEhDvR,EAAO7H,UACP6H,EAAO2S,8BAMXZ,EAASvc,cAAcwK,EAAOiS,aAAcjS,EAAOkS,qBAAqB7c,SAAS8L,SAAQ,WACvF4Q,EAASe,aAAa9S,EAAOiS,aAAcjB,EAA8Bt4B,QAAQiwB,6DAA8DjK,WAetJ,CACDhoB,IAAK,uBASLN,MAAO,WACL,IAAImqB,EAAS7lB,KAGbA,KAAKk4B,0BAA2B,EAEhC,IAAIb,EAAWr3B,KAAKo3B,cAAcvc,qBAC9BF,EAAU3a,KAAKw3B,qBAAqB7c,QACxCA,EAAQnF,UAAW,EACnB6hB,EAASvc,cAAc9a,KAAKu3B,aAAc5c,GAE1C3a,KAAKw3B,qBAAqB+B,mBAC1BlC,EAASmC,uBAAuBx5B,KAAKu3B,aAAcv3B,KAAKw3B,qBAAqBiC,qBAAqBjT,MAAK,SAAUviB,GAC/G4hB,EAAOnJ,SAASC,KAVI,oCAUkB,6CAA8C1Y,MACnFq0B,OAAM,SAAUtU,GACjB6B,EAAOnJ,SAASsH,MAZI,oCAYmB,yEAA0EA,GACjHqT,EAASvc,cAAc+K,EAAO0R,aAAc1R,EAAO2R,qBAAqB7c,SAAS8L,SAAQ,WACvF4Q,EAASe,aAAavS,EAAO0R,aAAcjB,EAA8Bt4B,QAAQiwB,6DAA8DjK,SAGnJhkB,KAAKq4B,aAAa,sBAWnB,CACDr8B,IAAK,sBACLN,MAAO,SAA6BsH,GAClC,IAAI02B,EAAS15B,KAEb,IAAIA,KAAKw3B,qBAAqBmC,kBAA9B,CAKA,IAAItC,EAAWr3B,KAAKo3B,cAAcvc,qBAC9BF,EAAU3a,KAAKw3B,qBAAqB7c,QAExC0c,EAASvc,cAAc9a,KAAKu3B,aAAc5c,GAAS8L,SAAQ,WACpDiT,EAAOd,uBAKVc,EAAOhd,SAASC,KAAK,kEAAmE3Z,IAJxF02B,EAAOd,wBAAyB,EAChCc,EAAOhd,SAASC,KAAK,8CAA+C3Z,GACpEq0B,EAAS6B,WAAWQ,EAAOnC,qBAchC,CACDv7B,IAAK,qBACLN,MAAO,WACL,IAAIk+B,EAAS55B,KAETq3B,EAAWr3B,KAAKo3B,cAAcvc,qBAClC7a,KAAK0c,SAASC,KAAK,4CAGnB3c,KAAKw3B,qBAAqB7O,yBAC1B0O,EAASvc,cAAc9a,KAAKu3B,aAAcv3B,KAAKw3B,qBAAqB7c,SAAS8L,SAAQ,WAGnFmT,EAAOpC,qBAAqB7O,yBAC5B0O,EAASwC,iBAAiBD,EAAOrC,mBAWpC,CACDv7B,IAAK,wBACLN,MAAO,WACL,IAAIo+B,EAAS95B,KAGT+5B,EAAU/5B,KAAKw3B,qBAAqB/c,sBAAwB,EAC5D4c,EAAWr3B,KAAKo3B,cAAcvc,qBAClC7a,KAAK0c,SAASC,KAAK,kDACnB0a,EAASvc,cAAc9a,KAAKu3B,aAAcv3B,KAAKw3B,qBAAqB7c,SAAS8L,SAAQ,WACnF4Q,EAAS2C,cAAcF,EAAOvC,aAAcwC,QAc/C,CACD/9B,IAAK,uBACLN,MAAO,SAA8B6U,GACnC,KAAMA,aAAuBwI,EAAsB/a,SACjD,OAAO,EAET,IAAIq5B,EAAW9mB,EAAYsK,qBAC3B,MAAwC,mBAA1Bwc,EAASU,cAAiE,mBAA3BV,EAASvc,eAA2E,mBAApCuc,EAASmC,wBAAwE,mBAAxBnC,EAAS6B,YAA8D,mBAA1B7B,EAASe,cAAwE,mBAAlCf,EAAS4C,uBAW5Q,CACDj+B,IAAK,qBACLN,MAAO,SAA4Bw+B,GACjCl6B,KAAK0c,SAASC,KAAK,8BAA+Bud,GAClDl6B,KAAK62B,kBAAoBqD,IAU1B,CACDl+B,IAAK,8BACLN,MAAO,WACLsE,KAAK0c,SAASC,KAAK,kDAAoDtiB,OAAOyQ,UAAUE,WACxFhL,KAAK0c,SAASC,KAAK,2DAA6DtiB,OAAOyQ,UAAUqvB,UACjGn6B,KAAK0c,SAASC,KAAK,2DAA6DtiB,OAAOyQ,UAAU2I,eAErDpO,IAAxCrF,KAAK4Z,cAAc9H,kBAAkC9R,KAAK4Z,cAAc9H,4BAA4BykB,EAA4Bv4B,UAClIgC,KAAK0c,SAASC,KAAK,sDAAwD3c,KAAK4Z,cAAc9H,iBAAiBgf,YAC/G9wB,KAAK0c,SAASC,KAAK,iEAAmE3c,KAAK4Z,cAAc9H,iBAAiBqoB,UAC1Hn6B,KAAK0c,SAASC,KAAK,mDAAqD3c,KAAK4Z,cAAc9H,iBAAiBwD,SAC5GtV,KAAK0c,SAASC,KAAK,sDAAwD3c,KAAK4Z,cAAc9H,iBAAiBsoB,YAC/Gp6B,KAAK0c,SAASC,KAAK,sDAAwD3c,KAAK4Z,cAAc9H,iBAAiBuoB,YAC/Gr6B,KAAK0c,SAASC,KAAK,sDAAwD3c,KAAK4Z,cAAc9H,iBAAiBwoB,gBAYlH,CACDt+B,IAAK,sBACLN,MAAO,SAA6BwmB,GAElC,OADeliB,KAAKo3B,cAAcvc,qBAClB0f,uBAAuBv6B,KAAKu3B,aAAcrV,KAU3D,CACDlmB,IAAK,sBACLN,MAAO,WACL,IAAI8+B,EAASx6B,KAGbA,KAAK64B,qBAAuB,EAiB5B,OAAO,IAAIjqB,SAfY,SAAS6rB,EAAiBxQ,EAASvb,GACxD8rB,EAAOzD,oBAAoB,KAAMvQ,MAAK,SAAUkU,GAC9CF,EAAOjD,aAAemD,EACtBzQ,EAAQuQ,EAAO3B,yBACdP,OAAM,SAAUvJ,GACjByL,EAAO3B,sBAAwB,EAC/B2B,EAAO9d,SAAS1Q,MAAM,kDAAmDwuB,EAAO3B,qBAAsB9J,GAClGyL,EAAO3B,sBAAwB,KACjC2B,EAAO9d,SAASsH,MAAM,oDAAqDwW,EAAO3B,sBAClFnqB,EAAOqgB,IAEPpN,WAAW8Y,EAdF,KAc8BxQ,EAASvb,WAgBvD,CACD1S,IAAK,yBACLN,MAAO,SAAgCirB,EAAUC,GAC/C,IAAI+T,EAAS36B,KAETkkB,EAAkB,+CACtBlkB,KAAK0c,SAAS1Q,MAAMkY,EAAiB,UAAWyC,GAEhD,IAAI0Q,EAAWr3B,KAAKo3B,cAAcvc,qBAGlC,OAFA7a,KAAKw3B,qBAAqBW,cAC1Bn4B,KAAKw3B,qBAAqBja,WAAU,GAC7B8Z,EAAS4C,qBAAqBj6B,KAAKu3B,aAAc5Q,EAAUC,GAAUJ,MAAK,SAAUlV,GAIzF,OAHAqpB,EAAOpD,aAAejmB,EACtB+lB,EAAS6B,WAAW5nB,GACpBqpB,EAAOje,SAAS1Q,MAAMkY,EAAiB,YAChC5S,KACNgnB,OAAM,SAAUtU,GACjB2W,EAAOje,SAASsH,MAAME,EAAiB,QAASF,GAChDqT,EAASe,aAAauC,EAAOpD,aAAcvT,QAY9C,CACDhoB,IAAK,oBACLN,MAAO,WACLsE,KAAK0S,QAAU,IACd1S,KAAK03B,kBAAoB,IAAI5oB,QAAQ9O,KAAK46B,eAAgB56B,OAC1DA,KAAK4Z,cAAclH,SAAW,IAAI5D,QAAQ9O,KAAK46B,eAAgB56B,QAUjE,CACDhE,IAAK,iBACLN,MAAO,SAAwBm/B,GAC7B,IAAIC,GAAK,EACLC,OAAO,EACP79B,OAAQ,EAIZ,GAAI+C,MAAMC,QAAQ26B,GAAS,CACzB,IAAIG,EAAU1M,EAAeuM,EAAQ,GAErCE,EAAOC,EAAQ,GACf99B,EAAQ89B,EAAQ,QAEhBD,EAAOF,EACP39B,EAAQ,GAUV,QALK69B,EAAKE,WAAaF,EAAKE,WAAuC,mBAAnBF,EAAKE,WAA4BF,EAAKE,UAAUj7B,KAAM9C,MACpG49B,EAAK,IAAIC,EAAK/6B,KAAM9C,GACpB8C,KAAK0S,QAAQrU,KAAKy8B,IAGbA,IAER,CACD9+B,IAAK,eACLN,MAAO,SAAsB0P,GAC3B,IAAK,IAAIuf,EAAOpf,UAAUpO,OAAQkS,EAAOpP,MAAM0qB,EAAO,EAAIA,EAAO,EAAI,GAAIE,EAAO,EAAGA,EAAOF,EAAME,IAC9Fxb,EAAKwb,EAAO,GAAKtf,UAAUsf,GAG7B,IAAIqQ,EAAS,KAAO9vB,EACpB,OAAOpL,KAAK0S,QAAQtT,KAAI,SAAU+7B,GAChC,OAAIA,EAAOD,GACFC,EAAOD,GAAQ5vB,MAAM6vB,EAAQ9rB,GAE/B8rB,EAAO/vB,IAAW+vB,EAAO/vB,GAAQE,MAAM6vB,EAAQ9rB,QAMzD,CACDrT,IAAK,aACLN,MAAO,WACLsE,KAAKq4B,aAAa,gBAEnB,CACDr8B,IAAK,qBACLV,IAAK,WACH,OAAO0E,KAAKw3B,qBAAqBlc,qBAElC,CACDtf,IAAK,oBACLV,IAAK,WAIH,YAH4B+J,IAAxBrF,KAAKo7B,iBACPp7B,KAAKo7B,gBAAiB,EAAI3E,EAAgBz4B,YAErCgC,KAAKo7B,iBAEb,CACDp/B,IAAK,kBACLV,IAAK,WACH,MAAO,CAAC,IAAIud,EAA+B7a,QAAQ,CAAEoC,KAAM,uBAAwBC,QAASL,KAAKq7B,oBAAoBp/B,KAAK+D,QAAU,IAAI6Y,EAA+B7a,QAAQ,CAAEoC,KAAM,+BAAgCC,QAASL,KAAKs7B,qBAAqBr/B,KAAK+D,QAAU,IAAI6Y,EAA+B7a,QAAQ,CAAEoC,KAAM,cAAeC,QAASL,KAAKu7B,mBAAmBt/B,KAAK+D,QAAU,IAAI6Y,EAA+B7a,QAAQ,CAAEoC,KAAM,mBAAoBC,QAASL,KAAKw7B,sBAAsBv/B,KAAK+D,QAAU,IAAI6Y,EAA+B7a,QAAQ,CAAEoC,KAAM,uBAAwBC,QAASL,KAAKy7B,uBAAuBx/B,KAAK+D,WAE3mB,CACDhE,IAAK,SACLV,IAAK,WACH,OAAO0E,KAAK4Z,kBAIT+c,EA3rBmB,GA8rB5B18B,EAAQ+D,QAAU24B,G,gBC/wBlB,IAAI+E,EAAoB,EAAQ,KAE5BC,EAAkB,EAAQ,KAE1BxG,EAA6B,EAAQ,IAErCyG,EAAoB,EAAQ,KAMhC1hC,EAAOD,QAJP,SAA4BqK,GAC1B,OAAOo3B,EAAkBp3B,IAAQq3B,EAAgBr3B,IAAQ6wB,EAA2B7wB,IAAQs3B,M,6BCP9FzgC,OAAOC,eAAenB,EAAS,aAAc,CAC3CyB,OAAO,IAGT,IAAIiE,EAAe,WAAc,SAASC,EAAiB3C,EAAQC,GAAS,IAAK,IAAIzC,EAAI,EAAGA,EAAIyC,EAAMC,OAAQ1C,IAAK,CAAE,IAAI2C,EAAaF,EAAMzC,GAAI2C,EAAW/B,WAAa+B,EAAW/B,aAAc,EAAO+B,EAAWC,cAAe,EAAU,UAAWD,IAAYA,EAAWE,UAAW,GAAMnC,OAAOC,eAAe6B,EAAQG,EAAWpB,IAAKoB,IAAiB,OAAO,SAAUN,EAAaS,EAAYC,GAAiJ,OAA9HD,GAAYqC,EAAiB9C,EAAYT,UAAWkB,GAAiBC,GAAaoC,EAAiB9C,EAAaU,GAAqBV,GAA7gB,GAWf6b,EAAiB,EAAQ,IAIzBkjB,EAAkB34B,EAFD,EAAQ,KAMzB44B,EAAY54B,EAFD,EAAQ,MAMnB+V,EAAY/V,EAFD,EAAQ,IAMnBiF,EAAUjF,EAFD,EAAQ,KAMjB64B,EAAS74B,EAFD,EAAQ,KAMhB84B,EAAmB94B,EAFD,EAAQ;;;;;;;;;;wjBAM9B,SAASA,EAAuBnE,GAAO,OAAOA,GAAOA,EAAIlD,WAAakD,EAAM,CAAEf,QAASe,GAFvF,EAAQ,KAMR,IAAImQ,EAAW,CACb6C,OAAQ,SAGNkqB,EAAoB,SAA2BzyB,GACjDA,EAAMC,iBACNpP,OAAOsS,SAASuvB,UAWdC,EAAU,WAUZ,SAASA,EAAQ9sB,IA7BnB,SAAyBxS,EAAUC,GAAe,KAAMD,aAAoBC,GAAgB,MAAM,IAAIC,UAAU,qCA8B5GgD,CAAgBC,KAAMm8B,GAEtBhhC,OAAOmU,OAAOtP,KAAMkP,EAAUG,GAC9BrP,KAAKuI,SAAWpN,OAAOmU,OAAO,GAAIysB,EAAO/9B,QAAQgC,KAAK+R,QAAS/R,KAAKuI,UACpEvI,KAAKoU,SAAU,EAAIuE,EAAe3D,UAClChV,KAAKwa,QAAU,CACbiC,OAAQ,GACRM,IAAK,IA2XT,OAlWApd,EAAaw8B,EAAS,CAAC,CACrBngC,IAAK,WACLN,MAAO,cAUN,CACDM,IAAK,QACLN,MAAO,WACL,IAAI0N,EAAQpJ,KAERo8B,EAAkB37B,SAASmI,cAAcC,0BAAyB,EAAIoQ,EAAUjb,SAAS89B,EAAU99B,QAASgC,OAUhH,GATAA,KAAKq8B,aAAeD,EAAgB9yB,cAAc,0BAClDtJ,KAAKs8B,oBAAsBF,EAAgB9yB,cAAc,4BACzDtJ,KAAKs8B,oBAAoBC,SAAWv8B,KAAKw8B,qBAAqBvgC,KAAK+D,MAEnEA,KAAKy8B,+BAAiCL,EAAgB9yB,cAAc,iCAEpEtJ,KAAK08B,wBAA0BN,EAAgB9yB,cAAc,gCAC7DtJ,KAAK08B,wBAAwBH,SAAWv8B,KAAK28B,yBAAyB1gC,KAAK+D,MAEvEA,KAAK48B,+BAAgC,CACvC58B,KAAK08B,wBAAwBj0B,UAAUqB,IAAI,iBAC3C,IAAI+yB,EAAap8B,SAASgqB,cAAc,UACpCqS,EAASr8B,SAASgqB,cAAc,UACpCqS,EAAOphC,MAAQ,iBACfohC,EAAOlH,KAAO51B,KAAKuI,SAASw0B,iBAC5BD,EAAOE,UAAW,EAClBH,EAAW9zB,YAAY+zB,GAEvB98B,KAAKy8B,+BAA+B1zB,YAAY8zB,GAiBlD,OAdA78B,KAAKi9B,mBAAqBb,EAAgB9yB,cAAc,qCACxDtJ,KAAKk9B,uBAAyBd,EAAgB9yB,cAAc,yCAE5DtJ,KAAKm9B,uBAAyBf,EAAgB9yB,cAAc,gCAE5DtJ,KAAKi9B,mBAAmB3zB,cAAc,2BAA2BC,QAAU0yB,EAC3Ej8B,KAAKk9B,uBAAuB5zB,cAAc,2BAA2BC,QAAU0yB,EAE/Ej8B,KAAKo9B,UAAUr0B,YAAYqzB,GAE3Bp8B,KAAKq9B,gBAAgB7W,MAAK,WACxB,OAAOpd,EAAMk0B,uBAGRt9B,OAaR,CACDhE,IAAK,+BACLN,MAAO,WACL,MAA2B,eAApBsE,KAAKoU,QAAQd,KAErB,CACDtX,IAAK,gBACLN,MAAO,SAAuBuO,GAC5B,IAAIqW,EAAStgB,KAGb,OADAA,KAAKu9B,qBACE1B,EAAgB79B,QAAQw/B,aAAa,CAC1CC,OAAO,EACPC,MAAO,CAAEzzB,SAAUA,EAAW,CAAE0zB,MAAO1zB,QAAa5E,KACnDmhB,MAAK,SAAUmJ,GAChBt1B,OAAOujC,cAAgBjO,EACvBrP,EAAO+b,aAAazb,UAAY+O,EAEhC,IAAIkO,EAAalO,EAAOmO,iBAAiB,GACrCC,EAAiBF,EAAWhd,cAAc5W,SAC1C+zB,EAAaH,EAAWI,MAC5B3d,EAAO4d,mBAAqBH,EAC5Bzd,EAAO6d,sBAAwBH,EAE/B1d,EAAO8d,cAAc,SAAUL,EAAgBC,GAC/C1d,EAAO+d,cAAc,CAAE5hB,OAAQ,CAAEuH,MAAO,WACvCwC,MAAK,WACN,OAAOqV,EAAgB79B,QAAQsgC,sBAC9B9X,MAAK,SAAU+X,IAChB,EAAIp2B,EAAQnK,SAASsiB,EAAOgc,qBAC5BiC,EAAQptB,QAAO,SAAUpW,GACvB,MAAkB,eAAXA,EAAE2lB,QACR5R,SAAQ,SAAU2N,GACnB,IAAIqgB,EAASr8B,SAASgqB,cAAc,UACpCqS,EAAOphC,MAAQ+gB,EAAOxS,SACtB6yB,EAAOlH,KAAOnZ,EAAOwhB,MACjBxhB,EAAOxS,WAAaqW,EAAO4d,oBAAsB5d,EAAO6d,wBAA0B1hB,EAAOwhB,QAC3FnB,EAAOE,UAAW,GAEpB1c,EAAOgc,oBAAoBvzB,YAAY+zB,SAExCxE,OAAM,SAAUt1B,GACjBsd,EAAO+d,cAAc,CAAE5hB,OAAQ,CAAEuH,MAAOhhB,KACxCsd,EAAOke,mBAAmBx7B,QAG7B,CACDhH,IAAK,oBACLN,MAAO,SAA2BuO,GAChC,IAAIqb,EAAStlB,KAGb,OADAA,KAAKy+B,qBACE5C,EAAgB79B,QAAQw/B,aAAa,CAC1CE,OAAO,EACPD,MAAO,CAAExzB,SAAUA,EAAW,CAAE0zB,MAAO1zB,QAAa5E,KACnDmhB,MAAK,SAAUmJ,GAChBt1B,OAAOqkC,cAAgB/O,EAEvB,IAAIgP,EAAahP,EAAOiP,iBAAiB,GACrCC,EAAqBF,EAAW9d,cAAc5W,SAC9C60B,EAAiBH,EAAWV,MAEhC3Y,EAAOyZ,uBAAyBF,EAChCvZ,EAAO0Z,yBAA2BF,EAClCxZ,EAAO8Y,cAAc,aAAcS,EAAoBC,GAEvDxZ,EAAO2Z,gBAAgBtP,MACtBnJ,MAAK,WACN,OAAOqV,EAAgB79B,QAAQsgC,sBAC9B9X,MAAK,SAAU+X,IAChB,EAAIp2B,EAAQnK,SAASsnB,EAAOoX,yBAC5B6B,EAAQptB,QAAO,SAAUpW,GACvB,MAAkB,eAAXA,EAAE2lB,QACR5R,SAAQ,SAAUihB,GACnB,IAAI+M,EAASr8B,SAASgqB,cAAc,UACpCqS,EAAOphC,MAAQq0B,EAAW9lB,SAC1B6yB,EAAOlH,KAAO7F,EAAWkO,MACrBlO,EAAW9lB,WAAaqb,EAAOyZ,wBAA0BzZ,EAAO0Z,2BAA6BjP,EAAWkO,QAC1GnB,EAAOE,UAAW,GAEpB1X,EAAOoX,wBAAwB3zB,YAAY+zB,MAEzCxX,EAAOsX,gCACTtX,EAAOoX,wBAAwBj0B,UAAUqB,IAAI,oBAE9CwuB,OAAM,SAAUt1B,GACjBsiB,EAAO+Y,cAAc,CAAEthB,IAAK,CAAEiH,MAAOhhB,KACrCsiB,EAAO4Z,uBAAuBl8B,QAGjC,CACDhH,IAAK,2BACLN,MAAO,SAAkC8N,GACvCxJ,KAAKs9B,kBAAkB9zB,EAAMvM,OAAOvB,SAErC,CACDM,IAAK,uBACLN,MAAO,SAA8B8N,GACnCxJ,KAAKq9B,cAAc7zB,EAAMvM,OAAOvB,SAKjC,CACDM,IAAK,qBACLN,MAAO,SAA4BsoB,GACjChkB,KAAKi9B,mBAAmBx0B,UAAUC,OAAO,iBACzC,IAAI8gB,EAASxpB,KAAKi9B,mBAAmB3zB,cAAc,iCAC/C61B,EAAMn/B,KAAKi9B,mBAAmB3zB,cAAc,8BAChD,OAAQtJ,KAAKo/B,iBAAiBpb,IAC5B,IAAK,aACHwF,EAAO6V,YAAcr/B,KAAKuI,SAAS+2B,qCACnCH,EAAIE,YAAcr/B,KAAKuI,SAASg3B,kCAChC,MACF,IAAK,gBACH/V,EAAO6V,YAAcr/B,KAAKuI,SAASi3B,qCACnCL,EAAIE,YAAcr/B,KAAKuI,SAASk3B,kCAChC,MACF,IAAK,aACHjW,EAAO6V,YAAcr/B,KAAKuI,SAASm3B,kCACnCP,EAAIE,YAAcr/B,KAAKuI,SAASo3B,+BAChC,MACF,QACEnW,EAAO6V,YAAcr/B,KAAKuI,SAASq3B,wBACnCT,EAAIE,YAAcr/B,KAAKuI,SAASs3B,wBAGrC,CACD7jC,IAAK,yBACLN,MAAO,SAAgCsoB,GACrChkB,KAAKk9B,uBAAuBz0B,UAAUC,OAAO,iBAC7C,IAAI8gB,EAASxpB,KAAKk9B,uBAAuB5zB,cAAc,iCACnD61B,EAAMn/B,KAAKk9B,uBAAuB5zB,cAAc,8BACpD,OAAQtJ,KAAKo/B,iBAAiBpb,IAC5B,IAAK,aACHwF,EAAO6V,YAAcr/B,KAAKuI,SAASu3B,yCACnCX,EAAIE,YAAcr/B,KAAKuI,SAASw3B,sCAChC,MACF,IAAK,gBACHvW,EAAO6V,YAAcr/B,KAAKuI,SAASy3B,yCACnCb,EAAIE,YAAcr/B,KAAKuI,SAAS03B,sCAChC,MACF,IAAK,aACHzW,EAAO6V,YAAcr/B,KAAKuI,SAAS23B,sCACnCf,EAAIE,YAAcr/B,KAAKuI,SAAS43B,mCAChC,MACF,QACE3W,EAAO6V,YAAcr/B,KAAKuI,SAASq3B,wBACnCT,EAAIE,YAAcr/B,KAAKuI,SAASs3B,wBAGrC,CACD7jC,IAAK,gBACLN,MAAO,SAAuB0kC,GAC5BjlC,OAAOmU,OAAOtP,KAAKwa,QAAS4lB,GAC5BpgC,KAAKqgC,SAASrgC,KAAKwa,WAUpB,CACDxe,IAAK,OACLN,MAAO,WACLsE,KAAKy+B,qBACLz+B,KAAKu9B,sBACL,EAAIp1B,EAAQnK,SAASgC,KAAKo9B,aAK3B,CACDphC,IAAK,qBACLN,MAAO,WACDrB,OAAOqkC,gBACTrkC,OAAOqkC,cAAc4B,YAAYxxB,SAAQ,SAAUnT,GACjD,OAAOA,EAAEqkB,UAEX3lB,OAAOqkC,cAAgB,MAErB1+B,KAAKugC,iBACPvgC,KAAKugC,gBAAgB3P,UAGxB,CACD50B,IAAK,qBACLN,MAAO,WACDrB,OAAOujC,gBACTvjC,OAAOujC,cAAc0C,YAAYxxB,SAAQ,SAAUnT,GACjD,OAAOA,EAAEqkB,UAEX3lB,OAAOujC,cAAgB,MAErB59B,KAAKq8B,eACPr8B,KAAKq8B,aAAazb,UAAY,QAGjC,CACD5kB,IAAK,mBACLN,MAAO,SAA0BsoB,GAC/B,OAAQA,EAAMhpB,MACZ,IAAK,wBACL,IAAK,kBACH,MAAO,aACT,IAAK,gBACH,MAAO,aACT,IAAK,yBACL,IAAK,uBACL,IAAK,mBACL,IAAK,aACH,MAAO,gBACT,QAGE,OADAwD,QAAQC,KAAK,4BAA6BulB,EAAMhpB,KAAMgpB,GAC/C,aAGZ,CACDhoB,IAAK,kBACLN,MAAO,SAAyBi0B,GAC1B3vB,KAAKugC,iBAEPvgC,KAAKugC,gBAAgB3P,QAIvB5wB,KAAKwgC,kBAAoB7e,WAAW3hB,KAAKygC,sBAAsBxkC,KAAK+D,MAAO,KAE3EA,KAAKugC,iBAAkB,EAAIvE,EAAiBh+B,SAAS2xB,EAAQ3vB,KAAK0gC,kBAAkBzkC,KAAK+D,SAE1F,CACDhE,IAAK,wBACLN,MAAO,WACL,IAAIsH,EAAI,CAAEhI,KAAM,oBAChBgF,KAAKq+B,cAAc,CAAEthB,IAAK,CAAEiH,MAAOhhB,KACnChD,KAAKk/B,uBAAuBl8B,KAE7B,CACDhH,IAAK,oBACLN,MAAO,SAA2Bi1B,EAAQgQ,GACxC3gC,KAAK4gC,iBAAiBjQ,GACtB3wB,KAAK6gC,cAAcF,KAEpB,CACD3kC,IAAK,gBACLN,MAAO,SAAuBilC,GACxB3gC,KAAKwgC,mBAAqBG,IAE5B9e,aAAa7hB,KAAKwgC,mBAClBxgC,KAAKwgC,kBAAoB,KACzBxgC,KAAKk9B,uBAAuBz0B,UAAUqB,IAAI,iBAC1C9J,KAAKq+B,cAAc,CAAEthB,IAAK,CAAEiH,MAAO,WAGtC,CACDhoB,IAAK,mBACLN,MAAO,SAA0Bi1B,GAQ/B,IAPA,IAAImQ,EAAO7gC,MAAM0C,KAAK3C,KAAKm9B,uBAAuB3Q,iBAAiB,qCAG/DuU,EAAY9oB,KAAK+oB,MAAe,IAATrQ,GACvBsQ,EAAUH,EAAKn7B,MAAM,EAAGo7B,GAGnBtmC,EAAI,EAAGA,EAAIqmC,EAAK3jC,OAAQ1C,IAC3BA,EAAIwmC,EAAQ9jC,OACd2jC,EAAKrmC,GAAGgO,UAAUqB,IAAI,uCAEtBg3B,EAAKrmC,GAAGgO,UAAUC,OAAO,yCAI9B,CACD1M,IAAK,gBACLN,MAAO,SAAuB0E,EAAM6J,EAAUC,GAC5C,IAAIC,EAA2BC,aAAaC,QAAQ,oBAChDC,EAAiBH,GAA4BI,KAAKC,MAAML,IAA6B,GACzFG,EAAelK,EAAO,YAAc6J,EACpCK,EAAelK,EAAO,cAAgB8J,EACtCI,EAAelK,EAAO,eAAiB8J,EACvCE,aAAaK,QAAQ,mBAAoBF,KAAKG,UAAUJ,QAIrD6xB,EA7YK,GAgZdliC,EAAQ+D,QAAUm+B,G,6BChdlBhhC,OAAOC,eAAenB,EAAS,aAAc,CAC3CyB,OAAO,IAGT,IAAIiE,EAAe,WAAc,SAASC,EAAiB3C,EAAQC,GAAS,IAAK,IAAIzC,EAAI,EAAGA,EAAIyC,EAAMC,OAAQ1C,IAAK,CAAE,IAAI2C,EAAaF,EAAMzC,GAAI2C,EAAW/B,WAAa+B,EAAW/B,aAAc,EAAO+B,EAAWC,cAAe,EAAU,UAAWD,IAAYA,EAAWE,UAAW,GAAMnC,OAAOC,eAAe6B,EAAQG,EAAWpB,IAAKoB,IAAiB,OAAO,SAAUN,EAAaS,EAAYC,GAAiJ,OAA9HD,GAAYqC,EAAiB9C,EAAYT,UAAWkB,GAAiBC,GAAaoC,EAAiB9C,EAAaU,GAAqBV,GAA7gB,GAafokC,EAAWh+B,EAFD,EAAQ,MAMlBi+B,EAAej+B,EAFD,EAAQ,MAMtBk+B,EAAYl+B,EAFD,EAAQ,MAMnBm+B,EAAan+B,EAFD,EAAQ,MAMpBo+B,EAAgBp+B,EAFD,EAAQ,MAMvBq+B,EAAYr+B,EAFD,EAAQ,MAMnBiF,EAAUjF,EAFD,EAAQ,KAMjB+V,EAAY/V,EAFD,EAAQ,IAMnB24B,EAAkB34B,EAFD,EAAQ,KAMzB64B,EAAS74B,EAFD,EAAQ,KAMhBs+B,EAAWt+B,EAFD,EAAQ;;;;;;;;;;wjBAMtB,SAASA,EAAuBnE,GAAO,OAAOA,GAAOA,EAAIlD,WAAakD,EAAM,CAAEf,QAASe,GAEvF,SAAS0iC,EAAgB1iC,EAAK/C,EAAKN,GAAiK,OAApJM,KAAO+C,EAAO5D,OAAOC,eAAe2D,EAAK/C,EAAK,CAAEN,MAAOA,EAAOL,YAAY,EAAMgC,cAAc,EAAMC,UAAU,IAAkByB,EAAI/C,GAAON,EAAgBqD,EAJ3M,EAAQ,KA0BR,IAAI2iC,EAAgC,WAWlC,SAASA,EAA8BtxB,IA/BzC,SAAyBvT,EAAUC,GAAe,KAAMD,aAAoBC,GAAgB,MAAM,IAAIC,UAAU,qCAgC5GgD,CAAgBC,KAAM0hC,GAEtB1hC,KAAKuI,SAAWpN,OAAOmU,OAAO,GAAIysB,EAAO/9B,QAAQoS,EAAO2B,QAAU,MAAO3B,EAAO7H,UAChFvI,KAAKqQ,SAAWD,EAChBpQ,KAAK2hC,YAAcvxB,EAAOgtB,UAC1Bp9B,KAAK4hC,cAAgB,GACrB5hC,KAAK6hC,WAAa,GAClB7hC,KAAK8hC,UAAY,GACjB9hC,KAAK+hC,uBAAyB,GAC9B/hC,KAAKgiC,qBAqgBP,OAzfAriC,EAAa+hC,EAA+B,CAAC,CAC3C1lC,IAAK,UACLN,MAAO,SAAiBumC,GACtBjiC,KAAKkiC,kBAAoBD,EACzB,IAAIE,EAAOniC,KAAKoiC,cAAcpiC,KAAKkiC,mBAAmBC,KAEtDniC,KAAKqiC,0BAELF,EAAKG,YAUN,CACDtmC,IAAK,WACLN,MAAO,WACLsE,KAAKuiC,oBACLviC,KAAKwiC,2BAEL,IAAIC,EAAeziC,KAAKoiC,cAAcpiC,KAAKkiC,mBAAmBO,aAC1DA,EACFziC,KAAK0iC,QAAQD,IAEbziC,KAAKggB,OACLhgB,KAAKqQ,SAASsyB,aAAa3iC,KAAK+hC,2BAWnC,CACD/lC,IAAK,QACLN,MAAO,WACL,IAAI0N,EAAQpJ,KAEZA,KAAK4iC,eAEJtK,OAAM,SAAUtU,GACf,OAAOxlB,QAAQiN,IAAIuY,EAAM5lB,YAE1BooB,MAAK,WAEJpd,EAAMy5B,gBACNz5B,EAAM05B,kBACN15B,EAAMs5B,QAAQt5B,EAAM25B,UAAUC,kBAyBjC,CACDhnC,IAAK,OASLN,MAAO,WACLsE,KAAK6iC,gBACD7iC,KAAKijC,gBACPjjC,KAAKijC,cAAc3C,YAAYxxB,SAAQ,SAAUnT,GAC/C,OAAOA,EAAEqkB,UAEXhgB,KAAKkjC,eAAetiB,UAAY,MAE9B5gB,KAAKmjC,oBACPnjC,KAAKmjC,mBAAmB7C,YAAYxxB,SAAQ,SAAUnT,GACpD,OAAOA,EAAEqkB,YAYd,CACDhkB,IAAK,sBACLN,MAAO,WACLsE,KAAKojC,kBAAkB36B,UAAUC,OAAO,iBACxC1I,KAAKqjC,iBAAiB56B,UAAUqB,IAAI,iBACpC9J,KAAKkjC,eAAez6B,UAAUqB,IAAI,mBAUnC,CACD9N,IAAK,mBACLN,MAAO,WACDsE,KAAKkjC,eAAetiB,WACtB5gB,KAAKkjC,eAAez6B,UAAUC,OAAO,iBACrC1I,KAAKqjC,iBAAiB56B,UAAUqB,IAAI,iBACpC9J,KAAKojC,kBAAkB36B,UAAUqB,IAAI,kBAErC9J,KAAKsjC,yBAYR,CACDtnC,IAAK,uBACLN,MAAO,WACLsE,KAAKqjC,iBAAiB56B,UAAUC,OAAO,iBACvC1I,KAAKkjC,eAAez6B,UAAUqB,IAAI,iBAClC9J,KAAKojC,kBAAkB36B,UAAUqB,IAAI,mBAUtC,CACD9N,IAAK,oBACLN,MAAO,WACLsE,KAAK+hC,uBAAuBwB,iBAA+D,IAA7CvjC,KAAK+hC,uBAAuByB,eAA0E,IAAjDxjC,KAAK+hC,uBAAuB0B,mBAA2E,IAA9CzjC,KAAK+hC,uBAAuB2B,cAEpL1jC,KAAK+hC,uBAAuBwB,kBAC9BvjC,KAAK+hC,uBAAuB4B,oBAAsB,IAAIC,QAUzD,CACD5nC,IAAK,qBACLN,MAAO,WACL,IAAImoC,EAEJ7jC,KAAK8jC,YAAc,CACjBd,YAAa,cACbe,OAAQ,SACRC,WAAY,aACZC,QAAS,UACTC,SAAU,WACVC,QAAS,WAGXnkC,KAAKoiC,eAAoCX,EAAnBoC,EAAe,GAAkC7jC,KAAK+iC,UAAUC,YAAa,CACjGb,KAAM,IAAIb,EAActjC,QAAQgC,MAChCiiC,SAAUjiC,KAAK+iC,UAAUC,YACzBP,aAAcziC,KAAK+iC,UAAUgB,SAC3BtC,EAAgBoC,EAAc7jC,KAAK+iC,UAAUgB,OAAQ,CACvD5B,KAAM,IAAIjB,EAASljC,QAAQgC,MAC3BiiC,SAAUjiC,KAAK+iC,UAAUgB,OACzBtB,aAAcziC,KAAK+iC,UAAUiB,WAC7BI,iBAAkBpkC,KAAK+iC,UAAUC,cAC/BvB,EAAgBoC,EAAc7jC,KAAK+iC,UAAUiB,WAAY,CAC3D7B,KAAM,IAAIhB,EAAanjC,QAAQgC,MAC/BiiC,SAAUjiC,KAAK+iC,UAAUiB,WACzBvB,aAAcziC,KAAK+iC,UAAUkB,QAC7BG,iBAAkBpkC,KAAK+iC,UAAUgB,SAC/BtC,EAAgBoC,EAAc7jC,KAAK+iC,UAAUkB,QAAS,CACxD9B,KAAM,IAAIf,EAAUpjC,QAAQgC,MAC5BiiC,SAAUjiC,KAAK+iC,UAAUkB,QACzBxB,aAAcziC,KAAK+iC,UAAUmB,SAC7BE,iBAAkBpkC,KAAK+iC,UAAUiB,aAC/BvC,EAAgBoC,EAAc7jC,KAAK+iC,UAAUmB,SAAU,CACzD/B,KAAM,IAAId,EAAWrjC,QAAQgC,MAC7BiiC,SAAUjiC,KAAK+iC,UAAUmB,SACzBzB,aAAcziC,KAAK+iC,UAAUoB,QAC7BC,iBAAkBpkC,KAAK+iC,UAAUkB,UAC/BxC,EAAgBoC,EAAc7jC,KAAK+iC,UAAUoB,QAAS,CACxDhC,KAAM,IAAIZ,EAAUvjC,QAAQgC,MAC5BiiC,SAAUjiC,KAAK+iC,UAAUoB,QACzBC,iBAAkBpkC,KAAK+iC,UAAUmB,WAC/BL,KASL,CACD7nC,IAAK,eACLN,MAAO,WACL,IAAI4kB,EAAStgB,KAEb,OAAO67B,EAAgB79B,QAAQw/B,aAAa,CAC1CE,OAAO,EACPD,OAAO,IACNjX,MAAK,SAAUmJ,GAMhB,OALArP,EAAO2iB,cAAgBtT,EAIvBA,EAAOiP,iBAAiB,GAAGlG,SAAU,EAC9BmD,EAAgB79B,QAAQsgC,sBAC9B9X,MAAK,SAAU+X,GAChBA,EAAQzvB,SAAQ,SAAUu1B,GACxB,OAAQA,EAAO3jB,MACb,IAAK,aACHJ,EAAOshB,cAAcvjC,KAAKgmC,GAC1B,MACF,IAAK,cACH/jB,EAAOuhB,WAAWxjC,KAAKgmC,GACvB,MACF,IAAK,aACH/jB,EAAOwhB,UAAUzjC,KAAKgmC,YAgB/B,CACDroC,IAAK,0BACLN,MAAO,WACL,IAAI4pB,EAAStlB,MAEb,EAAImI,EAAQnK,SAASgC,KAAKskC,0BAgC1B,IA9BA,IAAInC,EAAOniC,KAAKoiC,cAAcpiC,KAAK+iC,UAAUC,aAEzCuB,EAAQ,WACV,IAAIC,EAAWlf,EAAOmf,+BAA+BtC,GAEjDA,EAAKF,WAAa3c,EAAO4c,mBAC3BsC,EAASE,kBAAkBj8B,UAAUqB,IAAI,2BAIvCwb,EAAOyd,UAAUC,cAAgB1d,EAAO4c,kBAC1C5c,EAAOqf,6BAA6Bl8B,UAAUqB,IAAI,iBACzCwb,EAAOqf,6BAA6Bl8B,UAAU6hB,SAAS,kBAChEhF,EAAOqf,6BAA6Bl8B,UAAUC,OAAO,iBAGvD,IAAIu5B,EAAWE,EAAKF,SACpBuC,EAASl7B,cAAc,OAAOC,QAAU,SAAUC,GAChDA,EAAMC,iBACN6b,EAAOkd,2BACPld,EAAOod,QAAQT,IAGjB3c,EAAOgf,yBAAyBv7B,YAAYy7B,IAC5CrC,EAAO7c,EAAO8c,cAAcD,EAAKM,gBAE/Bnd,EAAOgf,yBAAyBv7B,YAAYtI,SAASgqB,cAAc,QAIhE0X,GACLoC,MAGH,CACDvoC,IAAK,iCACLN,MAAO,SAAwCymC,GAC7C,IAAIyC,EAAmBnkC,SAASokC,yBAC5BC,EAAarkC,SAASgqB,cAAc,OACpCsa,EAAatkC,SAASgqB,cAAc,OACpCua,EAAcvkC,SAASwkC,eAAe9C,EAAKA,KAAK+C,2BAEpDJ,EAAWr8B,UAAUqB,IAAI,mBACzB,IAAIq7B,EAAiB,kBAAkBv9B,OAAO,KAAKA,OAAOu6B,EAAKF,SAASn/B,eACxE,GAAIq/B,EAAKF,WAAajiC,KAAKkiC,kBACzB6C,EAAWt8B,UAAUqB,IAAIq7B,EAAgB,2BAEzC,OAAQhD,EAAKA,KAAKiD,aAChB,KAAK,EACHL,EAAWt8B,UAAUqB,IAAI,+BACzB,MACF,KAAK,EACHi7B,EAAWt8B,UAAUqB,IAAI,+BACzB,MAEF,QACEi7B,EAAWt8B,UAAUqB,IAAIq7B,EAAgB,uBAQ/C,GAJAL,EAAW/7B,YAAYg8B,GACvBD,EAAW/7B,YAAYi8B,GAGnB7C,EAAKA,KAAKkD,iBAAkB,CAC9B,IAAIC,EAAkB7kC,SAASwkC,eAAe9C,EAAKA,KAAKkD,kBACpDE,EAAc9kC,SAASgqB,cAAc,QACzC8a,EAAYx8B,YAAYu8B,GACxBR,EAAW/7B,YAAYw8B,GAKzB,OAFAX,EAAiB77B,YAAY+7B,GAEtBF,IAUR,CACD5oC,IAAK,kBACLN,MAAO,WACL,IAAImqB,EAAS7lB,KAETwlC,EAAoB/kC,SAASmI,cAAcC,yBAAyB7I,KAAKylC,wBAC7EzlC,KAAK0lC,gBAAkBF,EAAkBl8B,cAAc,8BACvDtJ,KAAK2lC,iBAAmBH,EAAkBl8B,cAAc,uBACxDtJ,KAAKkjC,eAAiBsC,EAAkBl8B,cAAc,qBACtDtJ,KAAKqjC,iBAAmBmC,EAAkBl8B,cAAc,kCACxDtJ,KAAK4lC,mBAAqBJ,EAAkBl8B,cAAc,0BAC1DtJ,KAAKojC,kBAAoBoC,EAAkBl8B,cAAc,gCACzDtJ,KAAKskC,yBAA2BkB,EAAkBl8B,cAAc,kCAChEtJ,KAAK2kC,6BAA+Ba,EAAkBl8B,cAAc,6BAEpEtJ,KAAK2kC,6BAA6Bp7B,QAAU,SAAUC,GACpDA,EAAMC,iBACN,IAAI26B,EAAmBve,EAAOuc,cAAcvc,EAAOqc,mBAAmBkC,iBAClEA,IACFve,EAAO2c,2BACP3c,EAAO6c,QAAQ0B,KAIfpkC,KAAKijC,gBACPjjC,KAAKkjC,eAAetiB,UAAY5gB,KAAKijC,eAEvCjjC,KAAK6lC,mBAEL7lC,KAAK2hC,YAAY54B,YAAYy8B,KAU9B,CACDxpC,IAAK,gBACLN,MAAO,WACDsE,KAAK2hC,cACP,EAAIx5B,EAAQnK,SAASgC,KAAK2hC,eAW7B,CACD3lC,IAAK,2BACLN,MAAO,WACasE,KAAKoiC,cAAcpiC,KAAKkiC,mBAAmBC,KACjD2D,gBAUb,CACD9pC,IAAK,uBACLN,MAAO,WACL,OAAO,EAAIud,EAAUjb,SAASwjC,EAASxjC,QAASgC,QAEjD,CACDhE,IAAK,uBACLV,IAAK,WACH,OAAO0E,KAAK+hC,yBAEb,CACD/lC,IAAK,kBACLV,IAAK,WACH,OAAO0E,KAAKqQ,SAAS01B,kBAEtB,CACD/pC,IAAK,sBACLV,IAAK,WACH,OAAO0E,KAAKqQ,SAASkC,sBAEtB,CACDvW,IAAK,gBACLV,IAAK,WACH,OAAO0E,KAAK0lC,kBAEb,CACD1pC,IAAK,kBACLV,IAAK,WACH,OAAO0E,KAAKojC,oBAEb,CACDpnC,IAAK,eACLV,IAAK,WACH,OAAO0E,KAAKkjC,iBAEb,CACDlnC,IAAK,WACLV,IAAK,WACH,OAAO0E,KAAK6hC,aAEb,CACD7lC,IAAK,cACLV,IAAK,WACH,OAAO0E,KAAK4hC,gBAEb,CACD5lC,IAAK,cACLV,IAAK,WACH,OAAO0E,KAAKijC,eAEdx7B,IAAK,SAAau+B,GAChBhmC,KAAKijC,cAAgB+C,IAEtB,CACDhqC,IAAK,mBACLV,IAAK,WACH,OAAO0E,KAAKmjC,oBAEd17B,IAAK,SAAaw+B,GAChBjmC,KAAKmjC,mBAAqB8C,IAE3B,CACDjqC,IAAK,UACLV,IAAK,WACH,OAAO0E,KAAK8hC,YAEb,CACD9lC,IAAK,mBACLV,IAAK,WACH,OAAO0E,KAAK4lC,qBAEb,CACD5pC,IAAK,YACLV,IAAK,WACH,OAAO0E,KAAK8jC,gBAITpC,EA1hB2B,GA6hBpCznC,EAAQ+D,QAAU0jC,G,6BClnBlBvmC,OAAOC,eAAenB,EAAS,aAAc,CAC3CyB,OAAO,IA+CTzB,EAAQ+D,QALQ,SAAmBhD,EAAMe,EAAQ4jB,GAE/C,OA/BY,SAAiBumB,EAAOnqC,EAAQ4jB,GAG5C,IAFA,IAAI5lB,EAAO4lB,GAAWtlB,OAClBkC,OAAI,EACC9B,EAAI,EAAGA,EAAIyrC,EAAM/oC,OAAQ1C,IAAK,CACrC8B,EAAI2pC,EAAMzrC,GAAG0rC,OACb,IACE,KAAM5pC,KAAKxC,GAAO,CAChB,IAAIgC,EAGF,OAFAhC,EAAKwC,GAAK,GAKdxC,EAAOA,EAAKwC,GACZ,MAAOyG,GACP,QAGJ,OAAOjJ,EAaAqsC,CADKprC,EAAKyZ,MAAM,KACD1Y,EAAQ4jB,K,6BC7ChCxkB,OAAOC,eAAenB,EAAS,aAAc,CAC3CyB,OAAO;;;;;;;;;;;AAaTzB,EAAQ+D,QAAU,CAChBqoC,kBAAmB,mHACnBC,QAAS,kBACTC,uBAAwB,kBACxBvd,eAAgB,YAChBwd,mBAAoB,mEACpBC,cAAe,qBACfC,sBAAuB,+CACvBC,sBAAuB,gEACvBC,sBAAuB,4DACvBC,sBAAuB,0DACvBC,sBAAuB,kFACvBC,sBAAuB,wBACvBtqB,OAAQ,SACRuqB,kBAAmB,gGACnBC,WAAY,+HACZC,iBAAkB,eAClBC,yBAA0B,gCAC1BC,2BAA4B,wDAC5BC,mCAAoC,wDACpCC,uCAAwC,qGACxCC,2BAA4B,0CAC5BC,2BAA4B,+BAC5BC,2BAA4B,8BAC5BC,4BAA6B,gCAC7BC,4BAA6B,gCAC7BC,4BAA6B,6EAC7BxoB,uBAAwB,8BACxByoB,sBAAuB,+BACvBC,+BAAgC,mDAChCC,uCAAwC,2FACxCC,2CAA4C,qIAC5CC,sBAAuB,uFACvBrlB,sBAAuB,YACvBslB,SAAU,WACVpZ,KAAM,OACNqZ,6BAA8B,gBAC9BC,YAAa,cACb/kB,mBAAoB,cACpBglB,mBAAoB,uHACpBC,YAAa,oBACbC,0BAA2B,qBAC3BC,wBAAyB,4DACzBC,wBAAyB,+FACzBC,wBAAyB,4EACzBrmB,wBAAyB,8GACzBtF,IAAK,MACL4rB,0BAA2B,mDAC3BC,0BAA2B,oEAC3BC,0BAA2B,gEAC3BC,0BAA2B,8DAC3BC,0BAA2B,0FAC3BC,0BAA2B,wBAC3BC,GAAI,KACJ1nB,6BAA8B,qIAC9B2nB,gCAAiC,UACjCC,6BAA8B,QAC9BC,gCAAiC,WACjCC,WAAY,iCACZxd,iBAAkB,sHAClBF,eAAgB,2CAChBK,mBAAoB,iCACpBJ,oBAAqB,6CACrBE,kBAAmB,8BACnBwd,sBAAuB,wFACvBC,oBAAqB,+CACrBC,qCAAsC,yCACtCC,8BAA+B,oDAC/BC,8BAA+B,qDAC/BC,6BAA8B,yCAC9BC,iCAAkC,mDAClCC,yCAA0C,wFAC1CC,6CAA8C,gHAC9CC,gCAAiC,oCACjCC,yCAA0C,wFAC1CvsB,QAAS,SACTwsB,YAAa,eACbC,qBAAsB,2CACtBC,cAAe,kBACfC,kBAAmB,sBACnBC,eAAgB,mBAChB3gB,4BAA6B,SAC7BG,gCAAiC,aACjCG,6BAA8B,UAC9BO,SAAU,WACV+f,iBAAkB,qCAClBvN,iBAAkB,UAClBwN,uBAAwB,qCACxBC,uBAAwB,gDACxBC,uBAAwB,+EACxBC,uBAAwB,wBACxBC,WAAY,aACZC,kBAAmB,SACnBC,gCAAiC,QACjCC,uBAAwB,cACxBC,mBAAoB,gDACpBC,wBAAyB,iFACzBC,sBAAuB,wFACvBC,mBAAoB,2CACpBC,mBAAoB,kBACpBC,oBAAqB,WACrBC,wBAAyB,uEACzBC,qBAAsB,yBACtBC,wBAAyB,kDACzBC,sBAAuB,aACvBC,WAAY,QACZC,UAAW,OACXC,yBAA0B,yIAC1BC,oBAAqB,sBACrBC,mBAAoB,6CACpBC,mBAAoB,UACpBC,0BAA2B,+FAC3BC,mCAAoC,4BACpCC,kBAAmB,+CACnBC,kBAAmB,2CACnBC,mBAAoB,UACpBC,OAAQ,SACRC,uBAAwB,2GACxBC,eAAgB,kBAChBvjB,uBAAwB,aACxBwjB,oBAAqB,cACrBC,sBAAuB,gBACvBC,wBAAyB,kBACzBC,qBAAsB,eACtBC,kBAAmB,wBACnBC,UAAW,YACXC,gBAAiB,uCACjBC,wBAAyB,6EACzBC,aAAc,mCACdC,2BAA4B,sBAC5B9lB,uCAAwC,4FACxCC,qCAAsC,8FACtC8lB,YAAa,OACbxlB,oBAAqB,eACrBylB,iCAAkC,8CAClCC,wBAAyB,4BACzBC,mBAAoB,MACpBC,qBAAsB,KACtBC,8BAA+B,2CAC/BhwB,iBAAkB,YAClB+H,0BAA2B,QAC3BX,yBAA0B,cAC1B6oB,qBAAsB,gBACtBC,yBAA0B,sFAC1BC,IAAK,MACLC,WAAY,YACZC,eAAgB,QAChBrO,qCAAsC,gCACtCC,kCAAmC,8DACnCO,yCAA0C,oCAC1CC,sCAAuC,kEACvCP,qCAAsC,uBACtCC,kCAAmC,kKACnCmO,4BAA6B,gGAC7B5N,yCAA0C,2BAC1CC,sCAAuC,sNACvCP,kCAAmC,sBACnCC,+BAAgC,0FAChCO,sCAAuC,0BACvCC,mCAAoC,kGACpCP,wBAAyB,gCACzBC,qBAAsB,gEACtBgO,sCAAuC,wI,6BChLzC1yC,OAAOC,eAAenB,EAAS,aAAc,CAC3CyB,OAAO;;;;;;;;;;;AAaTzB,EAAQ+D,QAAU,CAChBqoC,kBAAmB,4DACnBC,QAAS,cACTtd,eAAgB,YAChBud,uBAAwB,gBACxB9pB,OAAQ,QACRgqB,cAAe,oBACfD,mBAAoB,yDACpBE,sBAAuB,kCACvBC,sBAAuB,2CACvBC,sBAAuB,kCACvBC,sBAAuB,yCACvBC,sBAAuB,sEACvBC,sBAAuB,qBACvBE,WAAY,mHACZD,kBAAmB,6EACnBE,iBAAkB,cAClBC,yBAA0B,0BAC1BC,2BAA4B,6CAC5BC,mCAAoC,8CACpCC,uCAAwC,0FACxCC,2BAA4B,yBAC5BG,4BAA6B,gCAC7BF,2BAA4B,2BAC5BG,4BAA6B,gCAC7BF,2BAA4B,qBAC5BG,4BAA6B,kFAC7BxoB,uBAAwB,sBACxByoB,sBAAuB,8BACvBC,+BAAgC,0BAChCC,uCAAwC,0EACxCC,2CAA4C,oHAC5CC,sBAAuB,0EACvBrlB,sBAAuB,YACvBslB,SAAU,OACVpZ,KAAM,OACNqZ,6BAA8B,gBAC9BC,YAAa,UACb/kB,mBAAoB,WACpBilB,YAAa,YACbD,mBAAoB,4FACpBE,0BAA2B,cAC3BC,wBAAyB,2CACzBC,wBAAyB,6DACzBC,wBAAyB,oDACzBrmB,wBAAyB,2EACzBtF,IAAK,WACL4rB,0BAA2B,+BAC3BC,0BAA2B,8CAC3BC,0BAA2B,2CAC3BC,0BAA2B,kDAC3BC,0BAA2B,iEAC3BC,0BAA2B,oBAC3BC,GAAI,KACJ1nB,6BAA8B,sFAC9B2nB,gCAAiC,SACjCC,6BAA8B,OAC9BC,gCAAiC,OACjCC,WAAY,0BACZxd,iBAAkB,iFAClBD,oBAAqB,iCACrBD,eAAgB,wCAChBK,mBAAoB,oBACpBF,kBAAmB,sBACnBwd,sBAAuB,yEACvBG,8BAA+B,gCAC/BC,8BAA+B,uCAC/BH,oBAAqB,oDACrBC,qCAAsC,4BACtCI,iCAAkC,8BAClCC,yCAA0C,+EAC1CC,6CAA8C,wFAC9CH,6BAA8B,2BAC9BI,gCAAiC,8BACjCC,yCAA0C,+EAC1CvsB,QAAS,WACTwsB,YAAa,UACbC,qBAAsB,+BACtBC,cAAe,YACfC,kBAAmB,eACnBC,eAAgB,YAChBqD,WAAY,cACZnjB,SAAU,SACVb,4BAA6B,QAC7BqT,iBAAkB,aAClBuN,iBAAkB,0BAClBzgB,gCAAiC,WACjCG,6BAA8B,QAC9BugB,uBAAwB,2BACxBC,uBAAwB,wCACxBC,uBAAwB,4EACxBC,uBAAwB,qBACxBC,WAAY,aACZC,kBAAmB,QACnBC,gCAAiC,OACjCC,uBAAwB,OACxBC,mBAAoB,sCACpBC,wBAAyB,gFACzBC,sBAAuB,kFACvBC,mBAAoB,mCACpBC,mBAAoB,MACpBC,oBAAqB,UACrBC,wBAAyB,mDACzBC,qBAAsB,uBACtBC,wBAAyB,wCACzBC,sBAAuB,WACvBC,WAAY,UACZC,UAAW,MACXE,oBAAqB,oBACrBD,yBAA0B,wHAC1BE,mBAAoB,uCACpBC,mBAAoB,QACpBG,kBAAmB,uCACnBF,0BAA2B,sFAC3BC,mCAAoC,yBACpCE,kBAAmB,kCACnBC,mBAAoB,QACpBC,OAAQ,OACRE,eAAgB,cAChBvjB,uBAAwB,YACxBsjB,uBAAwB,mFACxBE,oBAAqB,QACrBC,sBAAuB,gBACvBC,wBAAyB,iBACzBC,qBAAsB,gBACtBkB,4BAA6B,mEAC7BlO,kCAAmC,kBACnCC,+BAAgC,yEAChCL,qCAAsC,uBACtCC,kCAAmC,mDACnCC,qCAAsC,oBACtCC,kCAAmC,+HACnCoO,sCAAuC,wGACvC3N,sCAAuC,yBACvCC,mCAAoC,4EACpCL,yCAA0C,4BAC1CC,sCAAuC,sDACvCC,yCAA0C,mBAC1CC,sCAAuC,uIACvC0N,eAAgB,UAChB/N,wBAAyB,uBACzBC,qBAAsB,6CACtB8M,kBAAmB,sBACnBC,UAAW,UACXC,gBAAiB,iCACjBC,wBAAyB,wDACzBC,aAAc,iCACdC,2BAA4B,eAC5BC,YAAa,OACbxlB,oBAAqB,YACrBylB,iCAAkC,2CAClCC,wBAAyB,aACzBC,mBAAoB,KACpBC,qBAAsB,KACtB/vB,iBAAkB,iBAClBgwB,8BAA+B,wCAC/BnmB,qCAAsC,0EACtCD,uCAAwC,8EACxCxC,yBAA0B,YAC1BW,0BAA2B,OAC3BkoB,qBAAsB,cACtBC,yBAA0B,oDAC1BC,IAAK,O,6BChLPtyC,OAAOC,eAAenB,EAAS,aAAc,CAC3CyB,OAAO;;;;;;;;;;;AAaTzB,EAAQ+D,QAAU,CAChBqoC,kBAAmB,iJACnBC,QAAS,qBACTtd,eAAgB,YAChBud,uBAAwB,0BACxB9pB,OAAQ,SACRgqB,cAAe,+BACfD,mBAAoB,wEACpBE,sBAAuB,yDACvBC,sBAAuB,sFACvBC,sBAAuB,oFACvBC,sBAAuB,gEACvBC,sBAAuB,sFACvBC,sBAAuB,0BACvBE,WAAY,kIACZD,kBAAmB,mGACnBE,iBAAkB,oBAClBC,yBAA0B,+BAC1BC,2BAA4B,gEAC5BC,mCAAoC,qDACpCC,uCAAwC,kGACxCC,2BAA4B,6CAC5BG,4BAA6B,6CAC7BF,2BAA4B,qCAC5BG,4BAA6B,6CAC7BF,2BAA4B,gCAC5BG,4BAA6B,uFAC7BxoB,uBAAwB,mCACxByoB,sBAAuB,+BACvBC,+BAAgC,+CAChCC,uCAAwC,8FACxCC,2CAA4C,0IAC5CC,sBAAuB,iGACvBrlB,sBAAuB,aACvBslB,SAAU,YACVpZ,KAAM,QACNqZ,6BAA8B,iBAC9BC,YAAa,oBACb/kB,mBAAoB,kBACpBilB,YAAa,YACbD,mBAAoB,yHACpBE,0BAA2B,wBAC3BC,wBAAyB,iEACzBC,wBAAyB,4GACzBC,wBAAyB,8EACzBrmB,wBAAyB,8HACzBtF,IAAK,UACL4rB,0BAA2B,4DAC3BC,0BAA2B,yFAC3BC,0BAA2B,mFAC3BC,0BAA2B,mEAC3BC,0BAA2B,uFAC3BC,0BAA2B,0BAC3BC,GAAI,KACJ1nB,6BAA8B,oIAC9B2nB,gCAAiC,WACjCC,6BAA8B,UAC9BC,gCAAiC,YACjCC,WAAY,4CACZxd,iBAAkB,yIAClBD,oBAAqB,mDACrBD,eAAgB,6CAChBK,mBAAoB,iCACpBF,kBAAmB,kCACnBwd,sBAAuB,kGACvBG,8BAA+B,kEAC/BC,8BAA+B,mEAC/BH,oBAAqB,qDACrBC,qCAAsC,2CACtCI,iCAAkC,wDAClCC,yCAA0C,+FAC1CC,6CAA8C,iHAC9CH,6BAA8B,yCAC9BI,gCAAiC,yCACjCC,yCAA0C,+FAC1CvsB,QAAS,WACTwsB,YAAa,qBACbC,qBAAsB,wDACtBC,cAAe,wBACfC,kBAAmB,0BACnBC,eAAgB,wBAChBqD,WAAY,eACZnjB,SAAU,UACVb,4BAA6B,SAC7BqT,iBAAkB,UAClBuN,iBAAkB,0CAClBzgB,gCAAiC,YACjCG,6BAA8B,UAC9BugB,uBAAwB,8CACxBC,uBAAwB,2CACxBC,uBAAwB,8FACxBC,uBAAwB,0BACxBC,WAAY,mBACZC,kBAAmB,SACnBC,gCAAiC,WACjCC,uBAAwB,UACxBC,mBAAoB,4CACpBC,wBAAyB,2GACzBC,sBAAuB,2GACvBC,mBAAoB,0CACpBC,mBAAoB,+BACpBC,oBAAqB,WACrBC,wBAAyB,sEACzBC,qBAAsB,8BACtBC,wBAAyB,wDACzBC,sBAAuB,YACvBC,WAAY,oBACZC,UAAW,SACXE,oBAAqB,6BACrBD,yBAA0B,+JAC1BE,mBAAoB,0DACpBC,mBAAoB,UACpBG,kBAAmB,qDACnBF,0BAA2B,uHAC3BC,mCAAoC,wCACpCE,kBAAmB,kDACnBC,mBAAoB,UACpBC,OAAQ,UACRE,eAAgB,qBAChBvjB,uBAAwB,cACxBsjB,uBAAwB,0GACxBE,oBAAqB,mBACrBC,sBAAuB,qBACvBC,wBAAyB,sBACzBC,qBAAsB,oBACtBkB,4BAA6B,6FAC7BlO,kCAAmC,uBACnCC,+BAAgC,sHAChCL,qCAAsC,wCACtCC,kCAAmC,4FACnCC,qCAAsC,uBACtCC,kCAAmC,0NACnCoO,sCAAuC,8IACvC3N,sCAAuC,kCACvCC,mCAAoC,yGACpCL,yCAA0C,qCAC1CC,sCAAuC,4FACvCC,yCAA0C,0BAC1CC,sCAAuC,uNACvC0N,eAAgB,oBAChB/N,wBAAyB,kCACzBC,qBAAsB,yEACtB8M,kBAAmB,sCACnBC,UAAW,qBACXC,gBAAiB,kCACjBC,wBAAyB,yFACzBC,aAAc,uCACdC,2BAA4B,0BAC5BC,YAAa,UACbxlB,oBAAqB,kBACrBylB,iCAAkC,4CAClCC,wBAAyB,qBACzBC,mBAAoB,KACpBC,qBAAsB,KACtB/vB,iBAAkB,eAClBgwB,8BAA+B,4CAC/BnmB,qCAAsC,mGACtCD,uCAAwC,gGACxCxC,yBAA0B,eAC1BW,0BAA2B,UAC3BkoB,qBAAsB,mBACtBC,yBAA0B,0FAC1BC,IAAK,O,gCC3KP,IAAIK,EAAqC,oBAAZ,QAA2BC,OAAOD,iBAAmBC,OAAOD,gBAAgB7xC,KAAK8xC,SACnE,oBAAd,UAAuE,mBAAnC1zC,OAAO2zC,SAASF,iBAAiCE,SAASF,gBAAgB7xC,KAAK+xC,UAEhJ,GAAIF,EAAiB,CAEnB,IAAIG,EAAQ,IAAI1pC,WAAW,IAE3BrK,EAAOD,QAAU,WAEf,OADA6zC,EAAgBG,GACTA,OAEJ,CAKL,IAAIhd,EAAO,IAAIhxB,MAAM,IAErB/F,EAAOD,QAAU,WACf,IAAK,IAAWsB,EAAPd,EAAI,EAAMA,EAAI,GAAIA,IACN,IAAV,EAAJA,KAAiBc,EAAoB,WAAhB0c,KAAKiZ,UAC/BD,EAAKx2B,GAAKc,MAAY,EAAJd,IAAa,GAAK,IAGtC,OAAOw2B,K,cC1BX,IADA,IAAIid,EAAY,GACPzzC,EAAI,EAAGA,EAAI,MAAOA,EACzByzC,EAAUzzC,IAAMA,EAAI,KAAOiI,SAAS,IAAIyrC,OAAO,GAmBjDj0C,EAAOD,QAhBP,SAAqBmL,EAAKR,GACxB,IAAInK,EAAImK,GAAU,EACdwpC,EAAMF,EAEV,MAAO,CACLE,EAAIhpC,EAAI3K,MAAO2zC,EAAIhpC,EAAI3K,MACvB2zC,EAAIhpC,EAAI3K,MAAO2zC,EAAIhpC,EAAI3K,MAAO,IAC9B2zC,EAAIhpC,EAAI3K,MAAO2zC,EAAIhpC,EAAI3K,MAAO,IAC9B2zC,EAAIhpC,EAAI3K,MAAO2zC,EAAIhpC,EAAI3K,MAAO,IAC9B2zC,EAAIhpC,EAAI3K,MAAO2zC,EAAIhpC,EAAI3K,MAAO,IAC9B2zC,EAAIhpC,EAAI3K,MAAO2zC,EAAIhpC,EAAI3K,MACvB2zC,EAAIhpC,EAAI3K,MAAO2zC,EAAIhpC,EAAI3K,MACvB2zC,EAAIhpC,EAAI3K,MAAO2zC,EAAIhpC,EAAI3K,OACtB8D,KAAK,M,cCdVrE,EAAOD,QARP,SAAgC6D,GAC9B,QAAa,IAATA,EACF,MAAM,IAAIuwC,eAAe,6DAG3B,OAAOvwC,I,iBCLT,+EACE,SAAS/D,GAGV,IAAIu0C,EAA4Cr0C,EAQ5Cs0C,GAL0Cr0C,GAC7CA,EAAOD,QAI0B,iBAAV+6B,GAAsBA,GAC1CuZ,EAAWvZ,SAAWuZ,GAAcA,EAAWl0C,OAOnD,IAAIm0C,EAAqB,kCAIrBC,EAAsB,eAItBC,EAAoB,+DAEpBC,EAAsB,klGACtBC,EAAY,CAAC,IAAO,MAAM,IAAS,OAAO,IAAS,MAAM,IAAS,MAAM,IAAS,KAAK,IAAS,KAAK,IAAS,KAAK,IAAS,MAAM,IAAS,iBAAiB,IAAS,UAAU,IAAS,YAAY,IAAS,OAAO,IAAS,SAAS,KAAK,MAAM,KAAK,UAAU,IAAS,SAAS,IAAS,cAAc,IAAS,SAAS,IAAS,SAAS,IAAS,SAAS,IAAS,OAAO,IAAS,SAAS,IAAS,OAAO,IAAS,QAAQ,IAAO,OAAO,KAAe,aAAa,IAAS,QAAQ,EAAI,SAAS,IAAS,OAAO,IAAS,QAAQ,IAAS,QAAQ,IAAS,SAAS,IAAI,QAAQ,IAAI,OAAO,IAAS,QAAQ,IAAI,QAAQ,IAAS,SAAS,IAAI,OAAO,IAAO,QAAQ,IAAI,QAAQ,IAAO,SAAS,IAAI,SAAS,IAAS,OAAO,IAAS,OAAO,IAAO,SAASC,IAAK,OAAO,IAAS,QAAQ,IAAS,QAAQ,IAAS,QAAQ,IAAS,SAAS,IAAS,SAAS,IAAI,OAAO,IAAS,QAAQ,IAAS,QAAQ,IAAS,QAAQ,IAAO,QAAQ,IAAO,QAAQ,IAAI,OAAO,IAAI,OAAO,IAAI,OAAO,IAAI,OAAO,IAAI,OAAO,IAAI,OAAO,IAAS,QAAQ,IAAS,QAAQ,IAAS,SAAS,IAAS,SAAS,IAAS,QAAQ,IAAS,QAAQ,IAAS,QAAQ,IAAS,QAAQ,IAAS,UAAU,IAAS,UAAU,IAAS,UAAU,IAAS,UAAU,IAAS,QAAQ,IAAS,QAAQ,IAAS,SAAS,IAAS,SAAS,IAAS,SAAS,IAAS,SAAS,IAAS,QAAQ,IAAS,QAAQ,IAAS,OAAO,IAAS,OAAO,IAAS,OAAO,IAAS,OAAO,IAAS,QAAQ,IAAS,QAAQ,IAAS,QAAQ,IAAS,QAAQ,IAAS,OAAO,IAAO,OAAO,IAAO,OAAO,IAAI,SAAS,IAAI,MAAM,IAAI,MAAM,UAAY,KAAK,IAAI,MAAM,IAAI,MAAM,IAAI,SAAS,IAAS,SAAS,IAAS,UAAU,IAAS,SAAS,IAAS,SAAS,IAAS,OAAO,IAAS,SAAS,IAAS,QAAQ,IAAS,QAAQ,IAAS,SAAS,IAAS,SAAS,IAAS,SAAS,IAAS,QAAQ,IAAI,QAAQ,IAAO,QAAQ,IAAS,QAAQ,IAAI,MAAM,IAAO,OAAO,IAAS,QAAQ,IAAS,MAAM,IAAO,MAAM,IAAS,OAAO,IAAS,QAAQ,IAAO,QAAQ,IAAS,OAAO,IAAS,OAAO,IAAS,QAAQ,IAAO,MAAM,IAAO,OAAO,IAAO,MAAM,IAAS,SAAS,IAAS,KAAK,IAAS,KAAK,IAAS,MAAM,IAAS,QAAQ,IAAS,OAAO,IAAS,QAAQ,IAAS,OAAO,IAAS,QAAQ,IAAS,OAAO,IAAS,OAAO,IAAS,OAAO,IAAS,QAAQ,IAAS,OAAO,IAAS,QAAQ,IAAS,QAAQ,IAAS,QAAQ,IAAS,QAAQ,IAAS,QAAQ,KAAe,SAAS,IAAS,OAAO,IAAS,OAAO,IAAS,OAAO,IAAS,OAAO,IAAS,SAAS,IAAS,SAAS,IAAS,aAAa,IAAS,WAAW,IAAS,MAAM,IAAS,aAAa,IAAS,SAAS,IAAS,SAAS,IAAS,SAAS,IAAS,SAAS,IAAS,QAAQ,IAAS,MAAM,IAAS,MAAM,IAAS,OAAO,IAAS,OAAO,IAAS,QAAQ,IAAS,SAAS,IAAS,SAAS,IAAS,QAAQ,IAAS,QAAQ,IAAS,QAAQ,IAAS,QAAQ,IAAS,QAAQ,IAAS,QAAQ,IAAS,QAAQ,IAAS,QAAQ,IAAS,QAAQ,IAAS,QAAQ,IAAS,QAAQ,IAAS,QAAQ,IAAS,QAAQ,IAAS,QAAQ,IAAS,QAAQ,IAAS,QAAQ,IAAS,QAAQ,IAAS,QAAQ,IAAS,QAAQ,IAAS,OAAO,IAAS,QAAQ,IAAS,OAAO,IAAS,OAAO,IAAS,QAAQ,IAAS,OAAO,IAAS,MAAM,IAAS,QAAQ,IAAS,OAAO,IAAS,QAAQ,IAAS,QAAQ,IAAS,QAAQ,IAAS,QAAQ,IAAS,QAAQ,IAAS,QAAQ,IAAS,UAAU,IAAS,QAAQ,IAAS,QAAQ,IAAS,QAAQ,IAAS,QAAQ,IAAS,QAAQ,IAAS,QAAQ,IAAS,SAAS,IAAS,OAAO,IAAS,OAAO,KAAe,QAAQ,IAAS,QAAQ,IAAS,SAAS,IAAS,QAAQ,IAAS,MAAM,IAAS,KAAK,IAAS,QAAQ,IAAS,KAAK,IAAS,QAAQ,IAAS,QAAQ,IAAS,OAAO,IAAS,SAAS,IAAS,MAAM,IAAI,OAAO,IAAO,KAAK,IAAO,MAAM,IAAO,QAAQ,IAAI,KAAK,IAAS,MAAM,KAAU,OAAO,IAAI,SAAS,IAAS,KAAK,KAAU,MAAM,IAAS,QAAQ,IAAI,KAAK,IAAS,MAAM,KAAU,OAAO,IAAO,MAAM,IAAI,OAAO,IAAO,SAAS,IAAS,QAAQ,IAAS,KAAK,IAAS,SAAS,IAAS,QAAQ,IAAS,QAAQ,IAAS,SAAS,IAAS,SAAS,IAAS,OAAO,IAAS,OAAO,IAAS,QAAQ,IAAS,QAAQ,IAAS,MAAM,KAAe,OAAO,IAAS,SAAS,IAAS,SAAS,IAAS,MAAM,IAAS,OAAO,IAAS,MAAM,IAAS,OAAO,IAAS,MAAM,IAAS,KAAK,IAAS,MAAM,KAAe,OAAO,IAAS,MAAM,KAAe,OAAO,IAAS,MAAM,IAAS,MAAM,IAAS,OAAO,IAAS,OAAO,IAAS,OAAO,IAAS,SAAS,IAAS,UAAU,IAAS,QAAQ,IAAS,WAAW,IAAS,WAAW,IAAS,SAAS,IAAS,SAAS,IAAS,QAAQ,IAAS,QAAQ,IAAS,SAAS,IAAS,QAAQ,IAAS,SAAS,IAAS,MAAM,IAAS,OAAO,KAAe,QAAQ,IAAS,OAAO,KAAe,OAAO,IAAS,KAAK,KAAe,MAAM,IAAS,MAAM,IAAS,KAAK,IAAS,OAAO,KAAe,QAAQ,IAAS,OAAO,IAAS,QAAQ,IAAS,OAAO,IAAS,QAAQ,IAAS,QAAQ,IAAS,KAAK,IAAS,MAAM,IAAS,MAAM,IAAS,OAAO,KAAe,QAAQ,IAAS,QAAQ,IAAS,SAAS,IAAS,YAAY,KAAe,OAAO,IAAS,OAAO,KAAe,QAAQ,IAAS,QAAQ,KAAe,SAAS,IAAS,QAAQ,KAAe,QAAQ,IAAS,OAAO,IAAS,QAAQ,IAAS,QAAQ,IAAS,SAAS,IAAS,SAAS,IAAS,OAAO,IAAS,OAAO,IAAS,SAAS,IAAS,QAAQ,IAAS,OAAO,IAAS,SAAS,IAAS,QAAQ,IAAS,SAAS,KAAe,UAAU,IAAS,KAAK,IAAS,MAAM,KAAe,OAAO,IAAS,KAAK,IAAS,MAAM,KAAe,OAAO,IAAS,KAAK,KAAe,MAAM,IAAS,KAAK,KAAe,MAAM,KAAe,OAAO,IAAS,MAAM,IAAS,MAAM,KAAe,OAAO,IAAS,KAAK,KAAe,OAAO,KAAe,MAAM,IAAS,KAAK,KAAe,OAAO,KAAe,MAAM,IAAS,QAAQ,IAAS,OAAO,IAAS,QAAQ,IAAS,OAAO,IAAS,QAAQ,IAAS,KAAK,IAAS,OAAO,IAAS,KAAK,IAAS,OAAO,IAAS,KAAK,IAAS,MAAM,IAAS,KAAK,IAAS,MAAM,IAAS,QAAQ,IAAS,SAAS,IAAS,QAAQ,IAAS,SAAS,IAAS,QAAQ,IAAS,QAAQ,KAAe,mBAAmB,IAAS,MAAM,IAAS,OAAO,KAAe,QAAQ,IAAS,MAAM,IAAS,OAAO,KAAe,QAAQ,IAAS,OAAO,IAAS,QAAQ,IAAS,OAAO,IAAS,QAAQ,KAAe,SAAS,IAAS,QAAQ,KAAe,SAAS,IAAS,QAAQ,IAAS,SAAS,IAAS,QAAQ,IAAS,QAAQ,KAAe,kBAAkB,IAAS,QAAQ,KAAe,oBAAoB,IAAS,SAAS,IAAS,UAAU,IAAS,SAAS,IAAS,UAAU,IAAS,QAAQ,KAAe,SAAS,IAAS,QAAQ,KAAe,SAAS,IAAS,QAAQ,IAAS,SAAS,IAAS,SAAS,IAAS,OAAO,IAAS,OAAO,IAAS,OAAO,IAAS,OAAO,IAAS,QAAQ,IAAS,QAAQ,IAAS,SAAS,IAAS,SAAS,IAAS,QAAQ,IAAS,QAAQ,IAAS,SAAS,IAAS,QAAQ,IAAS,MAAM,IAAS,MAAM,IAAS,SAAS,IAAS,QAAQ,IAAS,SAAS,IAAS,QAAQ,IAAS,SAAS,IAAS,SAAS,IAAS,QAAQ,IAAS,SAAS,IAAS,SAAS,IAAS,QAAQ,IAAS,QAAQ,IAAS,QAAQ,IAAS,QAAQ,IAAS,QAAQ,IAAS,SAAS,KAAe,UAAU,IAAS,QAAQ,IAAS,SAAS,KAAe,UAAU,IAAS,SAAS,IAAS,OAAO,IAAS,QAAQ,IAAS,SAAS,IAAS,SAAS,IAAS,SAAS,IAAS,SAAS,IAAS,UAAU,IAAS,QAAQ,IAAS,QAAQ,IAAS,MAAM,IAAS,OAAO,IAAS,OAAO,IAAS,OAAO,IAAS,OAAO,IAAS,OAAO,IAAS,SAAS,IAAS,SAAS,IAAS,SAAS,IAAS,SAAS,IAAS,SAAS,IAAS,SAAS,IAAS,QAAQ,IAAS,QAAQ,IAAS,QAAQ,IAAS,MAAM,IAAS,MAAM,IAAS,MAAM,IAAS,MAAM,IAAS,OAAO,IAAS,OAAO,IAAS,QAAQ,IAAS,QAAQ,IAAS,KAAK,KAAe,MAAM,IAAS,KAAK,KAAe,MAAM,KAAe,OAAO,IAAS,MAAM,IAAS,MAAM,KAAe,OAAO,IAAS,QAAQ,IAAS,QAAQ,IAAS,QAAQ,IAAS,QAAQ,IAAS,SAAS,IAAS,SAAS,IAAS,SAAS,IAAS,QAAQ,IAAS,QAAQ,IAAS,QAAQ,IAAS,QAAQ,IAAS,SAAS,IAAS,QAAQ,IAAS,UAAU,KAAe,WAAW,IAAS,UAAU,IAAS,UAAU,IAAS,QAAQ,KAAe,SAAS,IAAS,OAAO,IAAS,OAAO,IAAS,MAAM,IAAS,UAAU,IAAS,UAAU,IAAS,SAAS,IAAS,SAAS,IAAS,SAAS,IAAS,SAAS,IAAS,SAAS,IAAS,SAAS,IAAS,OAAO,IAAS,WAAW,IAAS,WAAW,IAAS,SAAS,IAAS,SAAS,IAAS,SAAS,IAAS,SAAS,IAAS,SAAS,IAAS,SAAS,IAAS,QAAQ,IAAS,QAAQ,IAAS,SAAS,IAAS,WAAW,IAAS,SAAS,IAAS,QAAQ,IAAS,SAAS,IAAS,UAAU,IAAS,SAAS,IAAS,SAAS,IAAS,OAAO,IAAS,OAAO,IAAS,WAAW,IAAS,kBAAkB,IAAS,mBAAmB,IAAS,YAAY,IAAS,aAAauBAAuB,IAAS,OAAO,IAAS,SAAS,IAAS,QAAQ,IAAS,QAAQ,IAAS,QAAQ,IAAS,OAAO,IAAS,QAAQ,IAAS,OAAO,IAAS,QAAQ,IAAS,QAAQ,IAAS,OAAO,IAAS,QAAQ,IAAS,OAAO,IAAS,MAAM,IAAS,MAAM,IAAS,SAAS,IAAS,QAAQ,IAAS,QAAQ,IAAS,QAAQ,IAAS,QAAQ,IAAS,mBAAmB,IAAS,oBAAoB,IAAS,QAAQ,IAAS,OAAO,IAAS,QAAQ,IAAS,SAAS,IAAS,OAAO,IAAS,SAAS,IAAS,QAAQ,IAAS,SAAS,IAAS,QAAQ,IAAS,OAAO,IAAS,QAAQ,IAAS,QAAQ,IAAS,OAAO,IAAS,OAAO,IAAS,oBAAoB,IAAS,WAAW,IAAS,UAAU,IAAS,QAAQ,IAAS,QAAQ,IAAS,QAAQ,IAAS,QAAQ,IAAS,QAAQ,IAAS,QAAQ,IAAS,OAAO,IAAS,WAAW,IAAS,SAAS,IAAS,SAAS,IAAS,SAAS,IAAS,MAAM,IAAS,QAAQ,IAAS,QAAQ,IAAS,QAAQ,IAAS,QAAQ,IAAS,QAAQ,IAAS,WAAW,IAAS,aAAa,IAAS,eAAe,IAAS,SAAS,IAAS,SAAS,IAAS,SAAS,IAAS,SAAS,IAAS,SAAS,IAAS,SAAS,IAAS,SAAS,IAAS,UAAU,IAAS,UAAU,IAAS,SAAS,IAAS,SAAS,IAAS,SAAS,IAAS,SAAS,IAAS,SAAS,IAAS,OAAO,IAAS,OAAO,IAAS,SAAS,IAAS,QAAQ,KAAe,SAAS,IAAS,UAAU,IAAS,OAAO,IAAS,OAAO,IAAS,UAAU,IAAS,SAAS,IAAS,UAAU,IAAS,UAAU,IAAS,SAAS,IAAS,UAAU,IAAS,WAAW,IAAS,WAAW,IAAS,WAAW,IAAS,kBAAkB,IAAS,oBAAoB,IAAS,sBAAsB,IAAS,mBAAmB,IAAS,gBAAgB,IAAS,iBAAiB,IAAS,mBAAmB,IAAS,qBAAqB,IAAS,oBAAoB,IAAS,qBAAqB,IAAS,kBAAkB,IAAS,oBAAoB,IAAS,gBAAgB,IAAS,iBAAiB,IAAS,mBAAmB,IAAS,qBAAqB,IAAS,oBAAoB,IAAS,qBAAqB,IAAS,kBAAkB,IAAS,oBAAoB,IAAS,OAAO,IAAS,OAAO,IAAS,OAAO,IAAS,OAAO,IAAS,UAAU,IAAS,UAAU,IAAS,UAAU,IAAS,UAAU,IAAS,SAAS,IAAS,SAAS,IAAS,SAAS,IAAS,SAAS,IAAS,QAAQ,IAAS,QAAQ,IAAS,eAAe,IAAS,QAAQ,IAAS,UAAU,IAAS,UAAU,IAAS,UAAU,IAAS,SAAS,IAAS,SAAS,IAAS,SAAS,IAAS,UAAU,IAAS,UAAU,IAAS,SAAS,IAAS,SAAS,IAAS,SAAS,IAAS,SAAS,IAAS,UAAU,IAAS,SAAS,IAAS,WAAW,IAAS,OAAO,IAAS,QAAQ,IAAS,UAAU,IAAS,UAAU,IAAS,WAAW,IAAS,WAAW,IAAS,WAAW,IAAS,WAAW,IAAS,WAAW,IAAS,WAAW,IAAS,WAAW,IAAS,WAAW,IAAS,UAAU,IAAS,UAAU,IAAS,UAAU,IAAS,WAAW,IAAS,WAAW,IAAS,QAAQ,IAAS,OAAO,IAAS,OAAO,IAAS,QAAQ,IAAS,UAAU,IAAS,SAAS,IAAS,QAAQ,IAAS,QAAQ,IAAS,MAAM,IAAS,MAAM,IAAS,UAAU,IAAS,OAAO,IAAS,OAAO,IAAS,QAAQ,IAAS,SAAS,IAAS,QAAQ,IAAS,WAAW,IAAS,kBAAkB,KAAe,qBAAqB,IAAS,mBAAmB,KAAe,sBAAsB,IAAS,SAAS,IAAS,WAAW,IAAS,UAAU,IAAS,SAAS,IAAS,WAAW,IAAS,WAAW,IAAS,OAAO,IAAS,cAAc,IAAS,OAAO,IAAS,QAAQ,IAAS,SAAS,IAAS,SAAS,IAAS,SAAS,IAAS,SAAS,IAAS,WAAW,IAAS,WAAW,IAAS,QAAQ,IAAS,WAAW,IAAS,WAAW,IAAS,UAAU,IAAS,WAAW,IAAS,UAAU,IAAS,WAAW,IAAS,UAAU,IAAS,WAAW,IAAS,UAAU,IAAS,SAAS,IAAS,UAAU,IAAS,UAAU,IAAS,SAAS,IAAS,UAAU,IAAS,SAAS,IAAS,SAAS,IAAS,QAAQ,IAAS,SAAS,IAAS,WAAW,IAAS,SAAS,IAAS,UAAU,IAAS,UAAU,IAAS,WAAW,IAAS,SAAS,IAAS,OAAO,IAAS,UAAU,IAAS,WAAW,IAAS,UAAU,IAAS,QAAQ,IAAS,QAAQ,IAAS,SAAS,IAAS,OAAO,IAAS,OAAO,IAAS,SAAS,IAAS,QAAQ,IAAS,SAAS,IAAS,SAAS,IAAS,WAAW,IAAS,WAAW,IAAS,SAAS,IAAS,SAAS,IAAS,QAAQ,IAAS,QAAQ,IAAS,UAAU,IAAS,MAAM,IAAS,KAAK,IAAS,SAAS,IAAS,OAAO,IAAS,UAAU,IAAS,WAAW,IAAS,OAAO,IAAS,MAAM,IAAS,OAAO,IAAS,MAAM,IAAS,SAAS,IAAS,QAAQ,IAAS,SAAS,IAAS,UAAU,KAAe,WAAW,IAAS,SAAS,IAAS,SAAS,IAAS,MAAM,KAAe,OAAO,IAAS,QAAQ,IAAS,QAAQ,IAAS,OAAO,IAAS,QAAQ,IAAS,UAAU,IAAS,QAAQ,IAAS,QAAQ,IAAS,UAAU,IAAS,UAAU,IAAS,MAAM,KAAe,OAAO,IAAS,MAAM,KAAe,OAAO,IAAS,SAAS,IAAS,SAAS,IAAS,UAAU,IAAS,UAAU,IAAS,WAAW,IAAS,WAAW,IAAS,MAAM,IAAS,MAAM,IAAS,MAAM,IAAS,MAAM,IAAS,OAAO,IAAS,OAAO,IAAS,MAAM,IAAS,MAAM,IAAS,QAAQ,IAAS,QAAQ,IAAS,QAAQ,IAAS,QAAQ,IAAS,MAAM,IAAS,MAAM,IAAS,SAAS,IAAS,SAAS,IAAS,MAAM,IAAS,MAAM,IAAS,SAAS,IAAS,SAAS,IAAS,KAAK,IAAS,KAAK,IAAS,OAAO,IAAS,OAAO,IAAS,QAAQ,IAAS,QAAQ,IAAS,WAAW,KAAe,oBAAoB,IAAS,iBAAiB,KAAe,0BAA0B,IAAS,MAAM,IAAS,MAAM,IAAS,OAAO,IAAS,OAAO,IAAS,QAAQ,IAAS,QAAQ,IAAS,MAAM,IAAS,MAAM,IAAS,OAAO,KAAe,QAAQ,IAAS,OAAO,KAAe,QAAQ,IAAS,QAAQ,IAAS,MAAM,KAAe,OAAO,IAAS,MAAM,KAAe,OAAO,IAAS,MAAM,IAAS,MAAM,IAAS,OAAO,IAAS,OAAO,IAAS,OAAO,IAAS,OAAO,IAAS,QAAQ,IAAS,QAAQ,IAAS,KAAK,IAAS,KAAK,IAAS,SAAS,IAAS,SAAS,IAAS,UAAU,IAAS,UAAU,IAAS,UAAU,IAAS,UAAU,IAAS,UAAU,IAAS,UAAU,IAAS,OAAO,KAAe,QAAQ,IAAS,OAAO,KAAe,QAAQ,IAAS,SAAS,IAAS,SAAS,KAAe,SAAS,IAAS,QAAQ,KAAe,SAAS,IAAS,QAAQ,IAAS,OAAO,IAAS,OAAO,IAAS,QAAQ,IAAS,QAAQ,IAAS,SAAS,IAAS,SAAS,IAAS,SAAS,IAAS,SAAS,IAAS,UAAU,IAAS,UAAU,IAAS,QAAQ,IAAS,UAAU,IAAS,OAAO,IAAS,QAAQ,IAAS,SAAS,IAAS,OAAO,IAAS,OAAO,IAAS,QAAQ,IAAS,OAAO,IAAS,MAAM,IAAS,OAAO,IAAS,QAAQ,IAAS,SAAS,IAAS,SAAS,IAAS,SAAS,IAAS,QAAQ,IAAS,SAAS,IAAS,QAAQ,KAAe,SAAS,IAAS,OAAO,IAAS,QAAQ,IAAS,QAAQ,IAAO,SAAS,IAAO,OAAO,EAAI,SAAS,IAAO,QAAQ,IAAO,MAAM,IAAS,OAAO,IAAO,OAAO,IAAO,OAAO,IAAS,SAAS,IAAO,SAAS,IAAS,SAAS,IAAS,SAAS,IAAS,SAAS,IAAO,OAAO,IAAS,SAAS,IAAS,SAAS,IAAO,OAAO,IAAO,SAAS,IAAS,SAAS,IAAS,SAAS,IAAS,SAAS,IAAS,SAAS,IAAS,SAAS,IAAS,SAAS,KAAe,OAAO,KAAe,OAAO,KAAe,MAAM,KAAe,OAAO,KAAe,MAAM,KAAe,OAAO,IAAO,OAAO,IAAO,SAAS,IAAO,SAAS,IAAO,SAAS,IAAO,SAAS,IAAS,SAAS,IAAS,SAAS,IAAO,QAAQ,IAAO,QAAQ,IAAO,QAAQ,IAAO,QAAQ,IAAO,OAAO,IAAO,OAAO,IAAO,SAAS,IAAO,SAAS,IAAS,QAAQ,IAAS,QAAQ,IAAS,QAAQ,IAAS,QAAQ,IAAO,QAAQ,IAAO,QAAQ,KAAe,OAAO,KAAe,OAAO,KAAe,MAAM,KAAe,OAAO,IAAS,OAAO,KAAe,MAAM,KAAe,MAAM,KAAe,OAAO,KAAe,OAAO,IAAS,MAAM,KAAe,OAAO,IAAS,OAAO,IAAS,SAAS,IAAS,SAAS,IAAS,QAAQ,IAAS,QAAQ,IAAS,SAAS,IAAS,SAAS,IAAS,OAAO,IAAS,OAAO,IAAO,SAAS,IAAO,SAAS,IAAS,SAAS,KAAe,MAAM,IAAS,KAAK,KAAe,OAAO,KAAe,OAAO,KAAe,OAAO,KAAe,MAAM,IAAS,KAAK,KAAe,OAAO,IAAS,SAAS,IAAS,SAAS,IAAS,SAAS,IAAS,SAAS,IAAO,MAAM,IAAO,MAAM,IAAS,KAAK,IAAS,OAAO,KAAe,MAAM,KAAe,OAAO,IAAS,OAAO,KAAe,MAAM,KAAe,OAAO,IAAO,SAAS,IAAO,SAAS,IAAO,SAAS,IAAO,SAAS,IAAO,QAAQ,IAAO,QAAQ,IAAS,SAAS,IAAS,SAAS,IAAO,OAAO,IAAO,OAAO,IAAS,OAAO,IAAS,OAAO,IAAS,QAAQ,IAAS,QAAQ,IAAS,QAAQ,IAAS,QAAQ,KAAe,MAAM,KAAe,OAAO,KAAe,OAAO,KAAe,MAAM,KAAe,OAAO,IAAS,OAAO,IAAS,QAAQ,IAAS,SAAS,IAAS,SAAS,IAAS,QAAQ,GAAK,QAAQ,IAAS,QAAQ,IAAS,OAAO,IAAS,OAAO,KAAe,OAAO,KAAe,MAAM,KAAe,OAAO,KAAe,OAAO,KAAe,MAAM,IAAS,SAAS,IAAS,SAAS,IAAS,SAAS,IAAS,QAAQ,IAAS,QAAQ,IAAS,OAAO,IAAS,OAAO,IAAS,SAAS,KAAe,MAAM,IAAS,UAAU,KAAe,OAAO,KAAe,OAAO,IAAS,OAAO,IAAS,MAAM,IAAS,OAAO,IAAS,QAAQ,IAAS,QAAQ,IAAS,OAAO,IAAS,SAAS,IAAS,SAAS,KAAe,OAAO,KAAe,MAAM,KAAe,OAAO,IAAS,KAAK,KAAe,OAAO,IAAS,OAAO,IAAS,KAAK,IAAO,SAAS,IAAO,SAAS,IAAO,SAAS,IAAO,SAAS,IAAO,QAAQ,IAAO,QAAQ,IAAO,OAAO,IAAO,OAAO,IAAS,SAAS,IAAS,SAAS,IAAS,OAAO,IAAS,QAAQ,IAAS,QAAQ,IAAS,QAAQ,IAAS,QAAQ,IAAS,QAAQ,IAAS,QAAQ,IAAS,QAAQ,KAAe,OAAO,KAAe,OAAO,KAAe,MAAM,KAAe,OAAO,KAAe,MAAM,KAAe,OAAO,IAAS,QAAQ,IAAS,QAAQ,IAAS,QAAQ,KAAe,OAAO,KAAe,OAAO,KAAe,MAAM,KAAe,OAAO,KAAe,OAAO,KAAe,MAAM,IAAS,SAAS,IAAS,SAAS,KAAe,MAAM,KAAe,OAAO,IAAS,MAAM,KAAe,OAAO,IAAS,OAAO,KAAe,MAAM,KAAe,OAAO,IAAS,SAAS,IAAS,SAAS,IAAS,SAAS,IAAS,SAAS,IAAS,SAAS,IAAS,SAAS,IAAS,SAAS,IAAS,SAAS,IAAS,SAAS,IAAS,SAAS,KAAe,MAAM,KAAe,OAAO,KAAe,OAAO,KAAe,MAAM,KAAe,OAAO,IAAS,OAAO,KAAe,MAAM,KAAe,OAAO,KAAe,OAAO,IAAS,OAAO,KAAe,OAAO,KAAe,MAAM,IAAS,SAAS,IAAS,SAAS,IAAS,SAAS,IAAS,SAAS,IAAO,SAAS,IAAO,SAAS,IAAS,SAAS,IAAS,SAAS,IAAS,SAAS,IAAS,MAAM,IAAS,MAAM,KAAe,OAAO,KAAe,MAAM,IAAS,OAAO,KAAe,OAAO,KAAe,MAAM,KAAe,OAAO,IAAO,OAAO,IAAO,SAAS,IAAO,SAAS,IAAO,SAAS,IAAO,SAAS,IAAO,QAAQ,IAAO,QAAQ,IAAO,OAAO,IAAO,OAAO,IAAS,SAAS,IAAS,SAAS,IAAO,SAAS,IAAO,SAAS,IAAO,SAAS,IAAO,SAAS,IAAS,QAAQ,IAAS,QAAQ,IAAS,QAAQ,IAAS,QAAQ,KAAe,MAAM,KAAe,OAAO,KAAe,OAAO,IAAS,OAAO,KAAe,MAAM,KAAe,OAAO,KAAe,OAAO,KAAe,MAAM,KAAe,OAAO,KAAe,OAAO,KAAe,MAAM,IAAS,OAAO,IAAS,SAAS,KAAe,MAAM,KAAe,OAAO,KAAe,OAAO,IAAS,OAAO,IAAS,KAAK,IAAS,OAAO,IAAS,SAAS,IAAS,SAAS,IAAS,SAAS,IAAS,SAAS,IAAS,SAAS,IAAS,SAAS,KAAe,OAAO,KAAe,OAAO,KAAe,MAAM,KAAe,OAAO,KAAe,MAAM,KAAe,OAAO,IAAS,KAAK,IAAS,SAAS,IAAS,SAAS,IAAS,QAAQ,IAAS,QAAQ,IAAS,SAAS,IAAS,SAAS,IAAS,SAAS,IAAS,SAAS,IAAO,QAAQ,KAAe,MAAM,KAAe,OAAO,KAAe,OAAO,KAAe,OAAO,KAAe,MAAM,KAAe,OAAO,IAAS,SAAS,IAAS,SAAS,IAAS,SAAS,IAAS,SAAS,IAAS,QAAQ,IAAS,SAAS,IAAS,SAAS,KAAe,OAAO,KAAe,OAAO,KAAe,MAAM,KAAe,OAAO,KAAe,MAAM,KAAe,OAAO,IAAO,SAAS,IAAO,SAAS,IAAO,SAAS,IAAO,SAAS,IAAS,SAAS,IAAS,SAAS,IAAO,QAAQ,IAAO,QAAQ,IAAS,QAAQ,IAAS,QAAQ,IAAO,OAAO,IAAO,OAAO,IAAS,SAAS,IAAS,SAAS,IAAS,SAAS,IAAS,SAAS,IAAS,QAAQ,IAAS,QAAQ,IAAS,QAAQ,IAAS,QAAQ,KAAe,MAAM,KAAe,OAAO,KAAe,OAAO,KAAe,MAAM,KAAe,OAAO,KAAe,OAAO,KAAe,OAAO,KAAe,OAAO,KAAe,MAAM,KAAe,OAAO,KAAe,OAAO,KAAe,MAAM,IAAS,QAAQ,IAAS,QAAQ,KAAe,MAAM,KAAe,OAAO,KAAe,OAAO,KAAe,OAAO,KAAe,MAAM,KAAe,OAAO,KAAe,MAAM,KAAe,OAAO,KAAe,OAAO,KAAe,OAAO,KAAe,MAAM,KAAe,OAAO,IAAO,SAAS,IAAO,SAAS,IAAS,QAAQ,IAAS,QAAQ,IAAO,OAAO,IAAS,OAAO,KAAe,OAAO,KAAe,MAAM,KAAe,OAAO,IAAS,MAAM,IAAS,OAAO,KAAe,OAAO,IAAS,SAAS,IAAS,SAAS,IAAS,SAAS,IAAS,SAAS,IAAS,OAAO,IAAS,OAAO,IAAS,QAAQ,IAAO,QAAQ,IAAO,QAAQ,IAAS,QAAQ,IAAS,QAAQ,IAAS,QAAQ,IAAS,OAAO,IAAS,OAAO,IAAS,QAAQ,IAAS,QAAQ,IAAS,QAAQ,IAAS,QAAQ,IAAS,OAAO,IAAS,QAAQ,IAAS,UAAU,IAAS,SAAS,IAAS,SAAS,IAAS,OAAO,IAAS,OAAO,IAAS,MAAM,IAAS,MAAM,IAAS,QAAQ,IAAS,SAAS,IAAS,QAAQ,IAAS,OAAO,IAAS,OAAO,IAAS,QAAQ,IAAS,SAAS,IAAS,QAAQ,IAAS,SAAS,IAAS,SAAS,IAAS,KAAK,IAAO,QAAQ,IAAS,KAAK,IAAS,KAAK,IAAS,KAAK,IAAS,KAAK,IAAS,KAAK,IAAS,UAAU,IAAS,UAAU,IAAS,KAAK,IAAS,MAAM,IAAS,KAAK,IAAS,MAAM,IAAS,OAAO,IAAS,MAAM,IAAS,QAAQ,IAAS,QAAQ,IAAS,SAAS,IAAS,MAAM,IAAS,MAAM,IAAS,OAAO,IAAS,UAAU,IAAS,OAAO,IAAS,MAAM,IAAS,OAAO,IAAS,MAAM,IAAS,MAAM,IAAS,MAAM,IAAS,MAAM,IAAS,MAAM,IAAS,QAAQ,IAAS,MAAM,IAAS,MAAM,IAAS,MAAM,IAAS,MAAM,IAAS,MAAM,IAAS,MAAM,IAAS,MAAM,IAAS,MAAM,IAAS,MAAM,IAAS,OAAO,IAAS,OAAO,IAAS,MAAM,IAAS,MAAM,IAAS,OAAO,IAAS,OAAO,IAAS,OAAO,IAAS,OAAO,IAAS,OAAO,IAAS,OAAO,IAAS,QAAQ,IAAS,QAAQ,IAAS,OAAO,IAAS,OAAO,IAAS,MAAM,IAAS,MAAM,IAAS,OAAO,IAAS,OAAO,IAAS,MAAM,IAAS,MAAM,IAAS,QAAQ,IAAS,QAAQ,IAAS,OAAO,IAAS,OAAO,IAAS,MAAM,IAAS,MAAM,IAAS,SAAS,IAAS,SAAS,IAAS,MAAM,IAAS,MAAM,IAAS,OAAO,IAAS,OAAO,IAAS,MAAM,IAAS,MAAM,IAAS,OAAO,IAAS,OAAO,IAAS,MAAM,IAAS,MAAM,IAAS,MAAM,IAAS,MAAM,IAAS,OAAO,IAAS,OAAO,IAAS,MAAM,IAAS,MAAM,IAAS,MAAM,IAAS,MAAM,IAAS,MAAM,IAAS,MAAM,IAAS,MAAM,IAAS,MAAM,IAAS,MAAM,IAAS,MAAM,IAAS,QAAQ,IAAS,QAAQ,IAAS,MAAM,IAAS,MAAM,IAAS,QAAQ,IAAS,QAAQ,IAAS,MAAM,IAAS,MAAM,IAAS,OAAO,IAAS,OAAO,IAAS,OAAO,IAAS,OAAO,IAAS,OAAO,IAAS,OAAO,IAAS,OAAO,IAAS,O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","file":"awsdk.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"awsdk\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"awsdk\"] = factory();\n\telse\n\t\troot[\"awsdk\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 144);\n","function _getPrototypeOf(o) {\n  module.exports = _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nmodule.exports = _getPrototypeOf;","function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nmodule.exports = _classCallCheck;","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nmodule.exports = _createClass;","var setPrototypeOf = require(\"./setPrototypeOf\");\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}\n\nmodule.exports = _inherits;","var _typeof = require(\"@babel/runtime/helpers/typeof\");\n\nvar assertThisInitialized = require(\"./assertThisInitialized\");\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return assertThisInitialized(self);\n}\n\nmodule.exports = _possibleConstructorReturn;","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/*!\n * American Well Core Web SDK\n *\n * Copyright (c) 2019 American Well.\n * All rights reserved.\n *\n * It is illegal to use, reproduce or distribute\n * any part of this Intellectual Property without\n * prior written authorization from American Well.\n */\n\nvar __deprecationCache = {};\n\n/**\n   * Log a debug message to the console to indicate a behavior has been deprecated.\n   *\n   * @param {string} behavior The API or behavior being deprecated. Usually in the form of \"myApp.someFunction()\n   * @param {string=} extra Text to append to the message. Often provides advice on a new function or facility to achieve the same goal during the deprecation period.\n   * @param {string=} removal Text to indicate when in the future the behavior will be removed. Usually a version number.\n   * @returns {undefined} nothing.\n   */\nvar deprecated = function deprecated(behavior, extra, removal) {\n  var message = ['DEPRECATED:', behavior];\n  if (extra) {\n    message.push(extra);\n  }\n  if (removal) {\n    message.push('-- will be removed in version:', removal);\n  }\n  var out = message.join(' ');\n  if (!__deprecationCache[out]) {\n    __deprecationCache[out] = 1;\n    // eslint-disable-next-line no-console\n    console.warn(out);\n  }\n};\n\nexports.default = deprecated;","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/*!\r\n * American Well Core Web SDK\r\n *\r\n * Copyright (c) 2018 American Well.\r\n * All rights reserved.\r\n *\r\n * It is illegal to use, reproduce or distribute\r\n * any part of this Intellectual Property without\r\n * prior written authorization from American Well.\r\n */\n\n/**\r\n * Enumeration for VideoParticipant types\r\n *\r\n * @enum\r\n * @readonly\r\n */\nvar AWCoreSDKVideoParticipantType = {\n  CONSUMER: 'consumer',\n  PROVIDER: 'provider',\n  GUEST: 'guest'\n};\n\nObject.freeze(AWCoreSDKVideoParticipantType);\nexports.default = AWCoreSDKVideoParticipantType;","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _get_object = require('./get_object');\n\nvar _get_object2 = _interopRequireDefault(_get_object);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// default match pattern\nvar _pattern = /\\{([^}]+)\\}/g;\n\n/**\n * Replace tokens in a string template according to some pattern matcher\n *\n * @param {string} template The source template to match against\n * @param {*} map A function to process matches individually, or a dictionary/array to use as lookup for matches\n * @param {RegEx} [pattern] A pattern-matching regular expression, which defaults to matching `{map.key}`\n * @returns {string} the replaced template\n */\n/*!\n * American Well Core Web SDK\n *\n * Copyright (c) 2019 American Well.\n * All rights reserved.\n *\n * It is illegal to use, reproduce or distribute\n * any part of this Intellectual Property without\n * prior written authorization from American Well.\n */\n\nvar replace = function replace(template, map, pattern) {\n  var mapper = typeof map === 'function' ? map : function (_, k) {\n    return (0, _get_object2.default)(k, false, map);\n  };\n  return template.replace(pattern || _pattern, mapper);\n};\n\nexports.default = replace;","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/*!\r\n * American Well Core Web SDK\r\n *\r\n * Copyright (c) 2018 American Well.\r\n * All rights reserved.\r\n *\r\n * It is illegal to use, reproduce or distribute\r\n * any part of this Intellectual Property without\r\n * prior written authorization from American Well.\r\n */\n\n/**\r\n * Base Event Handler Definition\r\n */\nvar AWCoreSDKBaseEventHandler = function () {\n  /**\r\n   * The constructor for this class\r\n   *\r\n   * @param {Object} data the wrapper object with type of event and handler function. The data object must contain following attributes:\r\n   * @param {string} data.type the type of event this handles\r\n   * @param {Function} data.handler the callback function that handles this event type\r\n   */\n  function AWCoreSDKBaseEventHandler(data) {\n    _classCallCheck(this, AWCoreSDKBaseEventHandler);\n\n    if (!data || (typeof data === 'undefined' ? 'undefined' : _typeof(data)) !== 'object' || Array.isArray(data)) {\n      throw Error('IllegalArgument. \"data\" Must be object');\n    } else if (typeof data.type !== 'string') {\n      throw Error('IllegalArgument. \"data.type\" must be a String');\n    } else if (typeof data.handler !== 'function') {\n      throw Error('IllegalArgument. \"data.handler\" must be a function');\n    }\n    this.__data = data;\n  }\n\n  /**\r\n   * The type\r\n   *\r\n   * @type {string}\r\n   */\n\n\n  _createClass(AWCoreSDKBaseEventHandler, [{\n    key: 'type',\n    get: function get() {\n      return this.__data.type;\n    }\n\n    /**\r\n     * The handler\r\n     *\r\n     * @type {Function}\r\n     */\n\n  }, {\n    key: 'handler',\n    get: function get() {\n      return this.__data.handler;\n    }\n  }]);\n\n  return AWCoreSDKBaseEventHandler;\n}();\n\nexports.default = AWCoreSDKBaseEventHandler;","function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    module.exports = _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    module.exports = _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nmodule.exports = _typeof;","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\n/*!\n * American Well Core Web SDK\n *\n * Copyright (c) 2019 American Well.\n * All rights reserved.\n *\n * It is illegal to use, reproduce or distribute\n * any part of this Intellectual Property without\n * prior written authorization from American Well.\n */\n\n/**\n * Safely empty the contents of a domNode\n *\n * @param {string|DomNode} node The node to empty, or a string ID of the node\n * @returns {undefined} undefined\n */\nexports.default = function (node) {\n  var domNode = typeof node === 'string' ? document.getElementById(node) : node;\n  // eslint-disable-next-line no-cond-assign\n  for (var c; c = domNode.lastChild;) {\n    // intentional assignment\n    domNode.removeChild(c);\n  }\n};","var toSJISFunction\nvar CODEWORDS_COUNT = [\n  0, // Not used\n  26, 44, 70, 100, 134, 172, 196, 242, 292, 346,\n  404, 466, 532, 581, 655, 733, 815, 901, 991, 1085,\n  1156, 1258, 1364, 1474, 1588, 1706, 1828, 1921, 2051, 2185,\n  2323, 2465, 2611, 2761, 2876, 3034, 3196, 3362, 3532, 3706\n]\n\n/**\n * Returns the QR Code size for the specified version\n *\n * @param  {Number} version QR Code version\n * @return {Number}         size of QR code\n */\nexports.getSymbolSize = function getSymbolSize (version) {\n  if (!version) throw new Error('\"version\" cannot be null or undefined')\n  if (version < 1 || version > 40) throw new Error('\"version\" should be in range from 1 to 40')\n  return version * 4 + 17\n}\n\n/**\n * Returns the total number of codewords used to store data and EC information.\n *\n * @param  {Number} version QR Code version\n * @return {Number}         Data length in bits\n */\nexports.getSymbolTotalCodewords = function getSymbolTotalCodewords (version) {\n  return CODEWORDS_COUNT[version]\n}\n\n/**\n * Encode data with Bose-Chaudhuri-Hocquenghem\n *\n * @param  {Number} data Value to encode\n * @return {Number}      Encoded value\n */\nexports.getBCHDigit = function (data) {\n  var digit = 0\n\n  while (data !== 0) {\n    digit++\n    data >>>= 1\n  }\n\n  return digit\n}\n\nexports.setToSJISFunction = function setToSJISFunction (f) {\n  if (typeof f !== 'function') {\n    throw new Error('\"toSJISFunc\" is not a valid function.')\n  }\n\n  toSJISFunction = f\n}\n\nexports.isKanjiModeEnabled = function () {\n  return typeof toSJISFunction !== 'undefined'\n}\n\nexports.toSJIS = function toSJIS (kanji) {\n  return toSJISFunction(kanji)\n}\n","var VersionCheck = require('./version-check')\nvar Regex = require('./regex')\n\n/**\n * Numeric mode encodes data from the decimal digit set (0 - 9)\n * (byte values 30HEX to 39HEX).\n * Normally, 3 data characters are represented by 10 bits.\n *\n * @type {Object}\n */\nexports.NUMERIC = {\n  id: 'Numeric',\n  bit: 1 << 0,\n  ccBits: [10, 12, 14]\n}\n\n/**\n * Alphanumeric mode encodes data from a set of 45 characters,\n * i.e. 10 numeric digits (0 - 9),\n *      26 alphabetic characters (A - Z),\n *   and 9 symbols (SP, $, %, *, +, -, ., /, :).\n * Normally, two input characters are represented by 11 bits.\n *\n * @type {Object}\n */\nexports.ALPHANUMERIC = {\n  id: 'Alphanumeric',\n  bit: 1 << 1,\n  ccBits: [9, 11, 13]\n}\n\n/**\n * In byte mode, data is encoded at 8 bits per character.\n *\n * @type {Object}\n */\nexports.BYTE = {\n  id: 'Byte',\n  bit: 1 << 2,\n  ccBits: [8, 16, 16]\n}\n\n/**\n * The Kanji mode efficiently encodes Kanji characters in accordance with\n * the Shift JIS system based on JIS X 0208.\n * The Shift JIS values are shifted from the JIS X 0208 values.\n * JIS X 0208 gives details of the shift coded representation.\n * Each two-byte character value is compacted to a 13-bit binary codeword.\n *\n * @type {Object}\n */\nexports.KANJI = {\n  id: 'Kanji',\n  bit: 1 << 3,\n  ccBits: [8, 10, 12]\n}\n\n/**\n * Mixed mode will contain a sequences of data in a combination of any of\n * the modes described above\n *\n * @type {Object}\n */\nexports.MIXED = {\n  bit: -1\n}\n\n/**\n * Returns the number of bits needed to store the data length\n * according to QR Code specifications.\n *\n * @param  {Mode}   mode    Data mode\n * @param  {Number} version QR Code version\n * @return {Number}         Number of bits\n */\nexports.getCharCountIndicator = function getCharCountIndicator (mode, version) {\n  if (!mode.ccBits) throw new Error('Invalid mode: ' + mode)\n\n  if (!VersionCheck.isValid(version)) {\n    throw new Error('Invalid version: ' + version)\n  }\n\n  if (version >= 1 && version < 10) return mode.ccBits[0]\n  else if (version < 27) return mode.ccBits[1]\n  return mode.ccBits[2]\n}\n\n/**\n * Returns the most efficient mode to store the specified data\n *\n * @param  {String} dataStr Input data string\n * @return {Mode}           Best mode\n */\nexports.getBestModeForData = function getBestModeForData (dataStr) {\n  if (Regex.testNumeric(dataStr)) return exports.NUMERIC\n  else if (Regex.testAlphanumeric(dataStr)) return exports.ALPHANUMERIC\n  else if (Regex.testKanji(dataStr)) return exports.KANJI\n  else return exports.BYTE\n}\n\n/**\n * Return mode name as string\n *\n * @param {Mode} mode Mode object\n * @returns {String}  Mode name\n */\nexports.toString = function toString (mode) {\n  if (mode && mode.id) return mode.id\n  throw new Error('Invalid mode')\n}\n\n/**\n * Check if input param is a valid mode object\n *\n * @param   {Mode}    mode Mode object\n * @returns {Boolean} True if valid mode, false otherwise\n */\nexports.isValid = function isValid (mode) {\n  return mode && mode.bit && mode.ccBits\n}\n\n/**\n * Get mode object from its name\n *\n * @param   {String} string Mode name\n * @returns {Mode}          Mode object\n */\nfunction fromString (string) {\n  if (typeof string !== 'string') {\n    throw new Error('Param is not a string')\n  }\n\n  var lcStr = string.toLowerCase()\n\n  switch (lcStr) {\n    case 'numeric':\n      return exports.NUMERIC\n    case 'alphanumeric':\n      return exports.ALPHANUMERIC\n    case 'kanji':\n      return exports.KANJI\n    case 'byte':\n      return exports.BYTE\n    default:\n      throw new Error('Unknown mode: ' + string)\n  }\n}\n\n/**\n * Returns mode from a value.\n * If value is not a valid mode, returns defaultValue\n *\n * @param  {Mode|String} value        Encoding mode\n * @param  {Mode}        defaultValue Fallback value\n * @return {Mode}                     Encoding mode\n */\nexports.from = function from (value, defaultValue) {\n  if (exports.isValid(value)) {\n    return value\n  }\n\n  try {\n    return fromString(value)\n  } catch (e) {\n    return defaultValue\n  }\n}\n","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _en = require('./en');\n\nvar _en2 = _interopRequireDefault(_en);\n\nvar _iw = require('./iw');\n\nvar _iw2 = _interopRequireDefault(_iw);\n\nvar _es = require('./es');\n\nvar _es2 = _interopRequireDefault(_es);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = {\n  en: _en2.default,\n  'en-US': _en2.default,\n  en_US: _en2.default,\n  iw: _iw2.default,\n  'iw-IL': _iw2.default,\n  iw_IL: _iw2.default,\n  'he-IL': _iw2.default,\n  es: _es2.default,\n  'es-US': _es2.default,\n  es_US: _es2.default\n}; /*!\n    * American Well Common Web SDK\n    *\n    * Copyright © 2019 American Well.\n    * All rights reserved.\n    *\n    * It is illegal to use, reproduce or distribute\n    * any part of this Intellectual Property without\n    * prior written authorization from American Well.\n    */","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _error = require('./error/error');\n\nvar _error2 = _interopRequireDefault(_error);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Enum that represents Vendor types\n * @readonly\n * @enum {String}\n *\n */\nvar AWCoreSDKVendor = {\n  /**\n   * Pexip vendor\n   */\n  PEXIP: 'PEXIP',\n  /**\n   * Vidyo vendor\n   */\n  VIDYO: 'VIDYO',\n\n  /**\n   * A convenience method for obtaining a vendor.\n   *\n   * @param {string} vendorName the platform defined name for this vendor\n   * @returns {AWCoreSDKVendor} the constant representing the name of the vendor\n   * @throws {AWCoreSDKError} if the vendorName passed in doesn't map to any existing key\n   */\n  get: function get(vendorName) {\n    if (typeof vendorName === 'string') {\n      var result = this[vendorName.toUpperCase()];\n      if (result) return result;\n    }\n    throw _error2.default.GenericError('unknown vendor');\n  }\n}; /*!\n    * American Well Core Web SDK\n    *\n    * Copyright (c) 2018 American Well.\n    * All rights reserved.\n    *\n    * It is illegal to use, reproduce or distribute\n    * any part of this Intellectual Property without\n    * prior written authorization from American Well.\n    */\n\nObject.freeze(AWCoreSDKVendor);\nexports.default = AWCoreSDKVendor;","/**\n * Implementation of a subset of node.js Buffer methods for the browser.\n * Based on https://github.com/feross/buffer\n */\n\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar isArray = require('isarray')\n\nfunction typedArraySupport () {\n  // Can typed array instances be augmented?\n  try {\n    var arr = new Uint8Array(1)\n    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}\n    return arr.foo() === 42\n  } catch (e) {\n    return false\n  }\n}\n\nBuffer.TYPED_ARRAY_SUPPORT = typedArraySupport()\n\nvar K_MAX_LENGTH = Buffer.TYPED_ARRAY_SUPPORT\n    ? 0x7fffffff\n    : 0x3fffffff\n\nfunction Buffer (arg, offset, length) {\n  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n    return new Buffer(arg, offset, length)\n  }\n\n  if (typeof arg === 'number') {\n    return allocUnsafe(this, arg)\n  }\n\n  return from(this, arg, offset, length)\n}\n\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n  Buffer.prototype.__proto__ = Uint8Array.prototype\n  Buffer.__proto__ = Uint8Array\n\n  // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\n  if (typeof Symbol !== 'undefined' && Symbol.species &&\n      Buffer[Symbol.species] === Buffer) {\n    Object.defineProperty(Buffer, Symbol.species, {\n      value: null,\n      configurable: true,\n      enumerable: false,\n      writable: false\n    })\n  }\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < K_MAX_LENGTH` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= K_MAX_LENGTH) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction isnan (val) {\n  return val !== val // eslint-disable-line no-self-compare\n}\n\nfunction createBuffer (that, length) {\n  var buf\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    buf = new Uint8Array(length)\n    buf.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    buf = that\n    if (buf === null) {\n      buf = new Buffer(length)\n    }\n    buf.length = length\n  }\n\n  return buf\n}\n\nfunction allocUnsafe (that, size) {\n  var buf = createBuffer(that, size < 0 ? 0 : checked(size) | 0)\n\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < size; ++i) {\n      buf[i] = 0\n    }\n  }\n\n  return buf\n}\n\nfunction fromString (that, string) {\n  var length = byteLength(string) | 0\n  var buf = createBuffer(that, length)\n\n  var actual = buf.write(string)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    buf = buf.slice(0, actual)\n  }\n\n  return buf\n}\n\nfunction fromArrayLike (that, array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  var buf = createBuffer(that, length)\n  for (var i = 0; i < length; i += 1) {\n    buf[i] = array[i] & 255\n  }\n  return buf\n}\n\nfunction fromArrayBuffer (that, array, byteOffset, length) {\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\\'offset\\' is out of bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\\'length\\' is out of bounds')\n  }\n\n  var buf\n  if (byteOffset === undefined && length === undefined) {\n    buf = new Uint8Array(array)\n  } else if (length === undefined) {\n    buf = new Uint8Array(array, byteOffset)\n  } else {\n    buf = new Uint8Array(array, byteOffset, length)\n  }\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    buf.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    buf = fromArrayLike(that, buf)\n  }\n\n  return buf\n}\n\nfunction fromObject (that, obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    var buf = createBuffer(that, len)\n\n    if (buf.length === 0) {\n      return buf\n    }\n\n    obj.copy(buf, 0, 0, len)\n    return buf\n  }\n\n  if (obj) {\n    if ((typeof ArrayBuffer !== 'undefined' &&\n        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {\n      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n        return createBuffer(that, 0)\n      }\n      return fromArrayLike(that, obj)\n    }\n\n    if (obj.type === 'Buffer' && Array.isArray(obj.data)) {\n      return fromArrayLike(that, obj.data)\n    }\n  }\n\n  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction byteLength (string) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&\n      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    string = '' + string\n  }\n\n  var len = string.length\n  if (len === 0) return 0\n\n  return utf8ToBytes(string).length\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction from (that, value, offset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number')\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n    return fromArrayBuffer(that, value, offset, length)\n  }\n\n  if (typeof value === 'string') {\n    return fromString(that, value, offset)\n  }\n\n  return fromObject(that, value)\n}\n\nBuffer.prototype.write = function write (string, offset, length) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length])\n  } else if (isFinite(offset)) {\n    offset = offset | 0\n    if (isFinite(length)) {\n      length = length | 0\n    } else {\n      length = undefined\n    }\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  return utf8Write(this, string, offset, length)\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = this.subarray(start, end)\n    // Return an augmented `Uint8Array` instance\n    newBuf.__proto__ = Buffer.prototype\n  } else {\n    var sliceLen = end - start\n    newBuf = new Buffer(sliceLen, undefined)\n    for (var i = 0; i < sliceLen; ++i) {\n      newBuf[i] = this[i + start]\n    }\n  }\n\n  return newBuf\n}\n\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n  var i\n\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    // ascending copy from start\n    for (i = 0; i < len; ++i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, start + len),\n      targetStart\n    )\n  }\n\n  return len\n}\n\nBuffer.prototype.fill = function fill (val, start, end) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      end = this.length\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if (code < 256) {\n        val = code\n      }\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : new Buffer(val)\n    var len = bytes.length\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return createBuffer(null, 0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = allocUnsafe(null, length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos)\n    pos += buf.length\n  }\n  return buffer\n}\n\nBuffer.byteLength = byteLength\n\nBuffer.prototype._isBuffer = true\nBuffer.isBuffer = function isBuffer (b) {\n  return !!(b != null && b._isBuffer)\n}\n\nmodule.exports.alloc = function (size) {\n  var buffer = new Buffer(size)\n  buffer.fill(0)\n  return buffer\n}\n\nmodule.exports.from = function (data) {\n  return new Buffer(data)\n}\n","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); /*!\r\nmerican Well Core Web SDK\r\nr\nopyright © 2019 American Well.\r\nll rights reserved.\r\nr\nt is illegal to use, reproduce or distribute\r\nany part of this Intellectual Property without\r\nprior written authorization from American Well.\r\nn\nvar _empty = require('../../util/empty');\n\nvar _empty2 = _interopRequireDefault(_empty);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\r\n * The base class for Test My Computer wizard steps, each step of the wizard must extend this class\r\n */\nvar BaseStep = function () {\n  function BaseStep(wizard) {\n    _classCallCheck(this, BaseStep);\n\n    this.__wizard = wizard;\n    // trust whatever the wizard has as a flat level messages bundle\n    this.messages = wizard.messages;\n  }\n\n  /**\r\n   * Tears down the DOM for a particular step\r\n   * This is the default implementation of teardownDOM, steps should extend + call super if needed.\r\n   *\r\n   * @since 1.1.0\r\n   * @returns {void} no return\r\n   */\n\n\n  _createClass(BaseStep, [{\n    key: 'teardownDOM',\n    value: function teardownDOM() {\n      // Always remove 'failed' when tearing down a step\n      this.__wizard.drawerDOMNode.classList.remove('awcore-tmc-failed');\n\n      // killing everything in the drawer but leaving the 'content' section alone since it's usually just camera feed\n      (0, _empty2.default)(this.__wizard.drawerDOMNode);\n    }\n\n    /**\r\n     * Draws the DOM for a particular step\r\n     *\r\n     * @since 1.1.0\r\n     * @returns {void} no return\r\n     */\n\n  }, {\n    key: 'drawDOM',\n    value: function drawDOM() {\n      var drawerDOMFragment = document.createRange().createContextualFragment(this.getDrawerHTMLTemplate());\n      this.__wizard.drawerDOMNode.appendChild(drawerDOMFragment);\n      this.__wizard.stepTitleDOMNode.innerText = this.getTitle();\n      this.setupDOMEventHandlers();\n    }\n\n    /**\r\n     * Gets the step specific HTML template for the Drawer\r\n     *\r\n     * @since 1.1.0\r\n     * @returns {string} the drawer's HTML template string\r\n     */\n\n  }, {\n    key: 'getDrawerHTMLTemplate',\n    value: function getDrawerHTMLTemplate() {\n      throw new Error('getDrawerHTMLTemplate must be overridden in a subclass');\n    }\n\n    /**\r\n     * Gets the step title to display in the drawer\r\n     *\r\n     * @since 1.1.0\r\n     * @returns {string} the string title\r\n     */\n\n  }, {\n    key: 'getTitle',\n    value: function getTitle() {\n      throw new Error('getTitle must be overridden in a subclass');\n    }\n\n    /**\r\n     * Gets the title to display in the progress tracker\r\n     *\r\n     * @since 1.1.0\r\n     * @returns {string} the progress tracker title\r\n     */\n\n  }, {\n    key: 'getProgressTrackerTitle',\n    value: function getProgressTrackerTitle() {\n      return this.getTitle();\n    }\n\n    /**\r\n     * Gets the step Tooltip string.\r\n     *\r\n     * @since 1.1.0\r\n     * @returns {string} the string title\r\n     */\n\n  }, {\n    key: 'getStepTooltip',\n    value: function getStepTooltip() {\n      return null;\n    }\n  }, {\n    key: 'setupDOMEventHandlers',\n    value: function setupDOMEventHandlers() {\n      var _this = this;\n\n      var passButton = this.__wizard.drawerDOMNode.querySelector('.awcore-tmc-step-pass-button');\n      if (passButton) {\n        passButton.onclick = function (event) {\n          event.preventDefault();\n          _this.finishStep(true);\n          _this.__wizard.stepDone();\n        };\n      }\n\n      var skipButton = this.__wizard.drawerDOMNode.querySelector('.awcore-tmc-step-skip-button');\n      if (skipButton) {\n        skipButton.onclick = function (event) {\n          event.preventDefault();\n          _this.finishStep(false);\n\n          _this.__wizard.stepDone();\n        };\n      }\n\n      var failButton = this.__wizard.drawerDOMNode.querySelector('.awcore-tmc-step-fail-button');\n      if (failButton) {\n        failButton.onclick = function (event) {\n          event.preventDefault();\n          _this.__wizard.drawerDOMNode.classList.add('awcore-tmc-failed');\n        };\n      }\n\n      var retryButton = this.__wizard.drawerDOMNode.querySelector('.awcore-tmc-step-retry-button');\n      if (retryButton) {\n        retryButton.onclick = function (event) {\n          event.preventDefault();\n          _this.__wizard.drawerDOMNode.classList.remove('awcore-tmc-failed');\n        };\n      }\n    }\n\n    /**\r\n     * Finish the step\r\n     *\r\n     * @param {boolean} passed TRUE if the user clicked the step's equivalent 'pass' button\r\n     * @since 1.1.0\r\n     * @returns {void} no return\r\n     */\n\n  }, {\n    key: 'finishStep',\n    value: function finishStep(passed) {} // eslint-disable-line no-unused-vars\n    // default no-op implementation, individual steps can override as needed\n\n\n    /**\r\n     * Indicates whether the step has passed the test. By default the NULL value will be returned.\r\n     *\r\n     *  TRUE:  step has passed the test successfully.\r\n     *  FALSE: step has not passed the test.\r\n     *  NULL:  step has not started with the test yet.\r\n     *\r\n     * @returns {boolean} TRUE, FALSE or null.\r\n     */\n\n  }, {\n    key: 'hasPassed',\n    value: function hasPassed() {\n      return null;\n    }\n\n    /**\r\n     * Store the selected device information to local storage.\r\n     *\r\n     * @param {'camera' | 'microphone' | 'speaker'} type The device type to store\r\n     * @param {string} deviceId The id of the device\r\n     * @param {string} deviceName the name of the device\r\n     * @returns {undefined} no return\r\n     * @private\r\n     */\n\n  }, {\n    key: '__storeDevice',\n    value: function __storeDevice(type, deviceId, deviceName) {\n      var stringifedCurrentDevices = localStorage.getItem('AWCurrentDevices');\n      var currentDevices = stringifedCurrentDevices && JSON.parse(stringifedCurrentDevices) || {};\n      currentDevices[type + 'DeviceId'] = deviceId;\n      currentDevices[type + 'DeviceName'] = deviceName;\n      localStorage.setItem('AWCurrentDevices', JSON.stringify(currentDevices));\n    }\n  }]);\n\n  return BaseStep;\n}();\n\nexports.default = BaseStep;","/*\n* loglevel - https://github.com/pimterry/loglevel\n*\n* Copyright (c) 2013 Tim Perry\n* Licensed under the MIT license.\n*/\n(function (root, definition) {\n    \"use strict\";\n    if (typeof define === 'function' && define.amd) {\n        define(definition);\n    } else if (typeof module === 'object' && module.exports) {\n        module.exports = definition();\n    } else {\n        root.log = definition();\n    }\n}(this, function () {\n    \"use strict\";\n\n    // Slightly dubious tricks to cut down minimized file size\n    var noop = function() {};\n    var undefinedType = \"undefined\";\n    var isIE = (typeof window !== undefinedType) && (typeof window.navigator !== undefinedType) && (\n        /Trident\\/|MSIE /.test(window.navigator.userAgent)\n    );\n\n    var logMethods = [\n        \"trace\",\n        \"debug\",\n        \"info\",\n        \"warn\",\n        \"error\"\n    ];\n\n    // Cross-browser bind equivalent that works at least back to IE6\n    function bindMethod(obj, methodName) {\n        var method = obj[methodName];\n        if (typeof method.bind === 'function') {\n            return method.bind(obj);\n        } else {\n            try {\n                return Function.prototype.bind.call(method, obj);\n            } catch (e) {\n                // Missing bind shim or IE8 + Modernizr, fallback to wrapping\n                return function() {\n                    return Function.prototype.apply.apply(method, [obj, arguments]);\n                };\n            }\n        }\n    }\n\n    // Trace() doesn't print the message in IE, so for that case we need to wrap it\n    function traceForIE() {\n        if (console.log) {\n            if (console.log.apply) {\n                console.log.apply(console, arguments);\n            } else {\n                // In old IE, native console methods themselves don't have apply().\n                Function.prototype.apply.apply(console.log, [console, arguments]);\n            }\n        }\n        if (console.trace) console.trace();\n    }\n\n    // Build the best logging method possible for this env\n    // Wherever possible we want to bind, not wrap, to preserve stack traces\n    function realMethod(methodName) {\n        if (methodName === 'debug') {\n            methodName = 'log';\n        }\n\n        if (typeof console === undefinedType) {\n            return false; // No method possible, for now - fixed later by enableLoggingWhenConsoleArrives\n        } else if (methodName === 'trace' && isIE) {\n            return traceForIE;\n        } else if (console[methodName] !== undefined) {\n            return bindMethod(console, methodName);\n        } else if (console.log !== undefined) {\n            return bindMethod(console, 'log');\n        } else {\n            return noop;\n        }\n    }\n\n    // These private functions always need `this` to be set properly\n\n    function replaceLoggingMethods(level, loggerName) {\n        /*jshint validthis:true */\n        for (var i = 0; i < logMethods.length; i++) {\n            var methodName = logMethods[i];\n            this[methodName] = (i < level) ?\n                noop :\n                this.methodFactory(methodName, level, loggerName);\n        }\n\n        // Define log.log as an alias for log.debug\n        this.log = this.debug;\n    }\n\n    // In old IE versions, the console isn't present until you first open it.\n    // We build realMethod() replacements here that regenerate logging methods\n    function enableLoggingWhenConsoleArrives(methodName, level, loggerName) {\n        return function () {\n            if (typeof console !== undefinedType) {\n                replaceLoggingMethods.call(this, level, loggerName);\n                this[methodName].apply(this, arguments);\n            }\n        };\n    }\n\n    // By default, we use closely bound real methods wherever possible, and\n    // otherwise we wait for a console to appear, and then try again.\n    function defaultMethodFactory(methodName, level, loggerName) {\n        /*jshint validthis:true */\n        return realMethod(methodName) ||\n               enableLoggingWhenConsoleArrives.apply(this, arguments);\n    }\n\n    function Logger(name, defaultLevel, factory) {\n      var self = this;\n      var currentLevel;\n\n      var storageKey = \"loglevel\";\n      if (typeof name === \"string\") {\n        storageKey += \":\" + name;\n      } else if (typeof name === \"symbol\") {\n        storageKey = undefined;\n      }\n\n      function persistLevelIfPossible(levelNum) {\n          var levelName = (logMethods[levelNum] || 'silent').toUpperCase();\n\n          if (typeof window === undefinedType || !storageKey) return;\n\n          // Use localStorage if available\n          try {\n              window.localStorage[storageKey] = levelName;\n              return;\n          } catch (ignore) {}\n\n          // Use session cookie as fallback\n          try {\n              window.document.cookie =\n                encodeURIComponent(storageKey) + \"=\" + levelName + \";\";\n          } catch (ignore) {}\n      }\n\n      function getPersistedLevel() {\n          var storedLevel;\n\n          if (typeof window === undefinedType || !storageKey) return;\n\n          try {\n              storedLevel = window.localStorage[storageKey];\n          } catch (ignore) {}\n\n          // Fallback to cookies if local storage gives us nothing\n          if (typeof storedLevel === undefinedType) {\n              try {\n                  var cookie = window.document.cookie;\n                  var location = cookie.indexOf(\n                      encodeURIComponent(storageKey) + \"=\");\n                  if (location !== -1) {\n                      storedLevel = /^([^;]+)/.exec(cookie.slice(location))[1];\n                  }\n              } catch (ignore) {}\n          }\n\n          // If the stored level is not valid, treat it as if nothing was stored.\n          if (self.levels[storedLevel] === undefined) {\n              storedLevel = undefined;\n          }\n\n          return storedLevel;\n      }\n\n      /*\n       *\n       * Public logger API - see https://github.com/pimterry/loglevel for details\n       *\n       */\n\n      self.name = name;\n\n      self.levels = { \"TRACE\": 0, \"DEBUG\": 1, \"INFO\": 2, \"WARN\": 3,\n          \"ERROR\": 4, \"SILENT\": 5};\n\n      self.methodFactory = factory || defaultMethodFactory;\n\n      self.getLevel = function () {\n          return currentLevel;\n      };\n\n      self.setLevel = function (level, persist) {\n          if (typeof level === \"string\" && self.levels[level.toUpperCase()] !== undefined) {\n              level = self.levels[level.toUpperCase()];\n          }\n          if (typeof level === \"number\" && level >= 0 && level <= self.levels.SILENT) {\n              currentLevel = level;\n              if (persist !== false) {  // defaults to true\n                  persistLevelIfPossible(level);\n              }\n              replaceLoggingMethods.call(self, level, name);\n              if (typeof console === undefinedType && level < self.levels.SILENT) {\n                  return \"No console available for logging\";\n              }\n          } else {\n              throw \"log.setLevel() called with invalid level: \" + level;\n          }\n      };\n\n      self.setDefaultLevel = function (level) {\n          if (!getPersistedLevel()) {\n              self.setLevel(level, false);\n          }\n      };\n\n      self.enableAll = function(persist) {\n          self.setLevel(self.levels.TRACE, persist);\n      };\n\n      self.disableAll = function(persist) {\n          self.setLevel(self.levels.SILENT, persist);\n      };\n\n      // Initialize with the right level\n      var initialLevel = getPersistedLevel();\n      if (initialLevel == null) {\n          initialLevel = defaultLevel == null ? \"WARN\" : defaultLevel;\n      }\n      self.setLevel(initialLevel, false);\n    }\n\n    /*\n     *\n     * Top-level API\n     *\n     */\n\n    var defaultLogger = new Logger();\n\n    var _loggersByName = {};\n    defaultLogger.getLogger = function getLogger(name) {\n        if ((typeof name !== \"symbol\" && typeof name !== \"string\") || name === \"\") {\n          throw new TypeError(\"You must supply a name when creating a logger.\");\n        }\n\n        var logger = _loggersByName[name];\n        if (!logger) {\n          logger = _loggersByName[name] = new Logger(\n            name, defaultLogger.getLevel(), defaultLogger.methodFactory);\n        }\n        return logger;\n    };\n\n    // Grab the current global log variable in case of overwrite\n    var _log = (typeof window !== undefinedType) ? window.log : undefined;\n    defaultLogger.noConflict = function() {\n        if (typeof window !== undefinedType &&\n               window.log === defaultLogger) {\n            window.log = _log;\n        }\n\n        return defaultLogger;\n    };\n\n    defaultLogger.getLoggers = function getLoggers() {\n        return _loggersByName;\n    };\n\n    // ES6 default export, for compatibility\n    defaultLogger['default'] = defaultLogger;\n\n    return defaultLogger;\n}));\n","var superPropBase = require(\"./superPropBase\");\n\nfunction _get(target, property, receiver) {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    module.exports = _get = Reflect.get;\n  } else {\n    module.exports = _get = function _get(target, property, receiver) {\n      var base = superPropBase(target, property);\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n\n      if (desc.get) {\n        return desc.get.call(receiver);\n      }\n\n      return desc.value;\n    };\n  }\n\n  return _get(target, property, receiver || target);\n}\n\nmodule.exports = _get;","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/*!\n * American Well Core Web SDK\n *\n * Copyright (c) 2019 American Well.\n * All rights reserved.\n *\n * It is illegal to use, reproduce or distribute\n * any part of this Intellectual Property without\n * prior written authorization from American Well.\n */\n\nvar reject = function reject(msg) {\n  return Promise.reject(new Error(msg));\n};\n\nvar polyfill = {};\n\n['getUserMedia', 'enumerateDevices'].forEach(function (meth) {\n  polyfill[meth] = function () {\n    var _navigator$mediaDevic;\n\n    return navigator.mediaDevices && (_navigator$mediaDevic = navigator.mediaDevices)[meth].apply(_navigator$mediaDevic, arguments) || reject('Unable to access mediaDevices.' + meth);\n  };\n});\n\nexports.default = polyfill;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/*!\r\n * American Well Core Web SDK\r\n *\r\n * Copyright © 2018 American Well.\r\n * All rights reserved.\r\n *\r\n * It is illegal to use, reproduce or distribute\r\n * any part of this Intellectual Property without\r\n * prior written authorization from American Well.\r\n */\n\nvar defaults = {\n  visitPollingInterval: 3000\n};\n\n/**\r\n * Visit-specific configuration\r\n * @property {AWCoreSDKVisitPollingDelegate} visitPollingDelegate responsible for getting and updating this visit's state over the network\r\n * @property {object} visit the underlying visit (should implement AWCoreSDKVisitDataObject interface)\r\n * @property {Number} visitPollingInterval the rate (in MS) at which to poll for updated visit information using the delegate\r\n * @property {Number} updateWaitingDisplayInterval the rate at which the video console will update display states while one participant awaits the return of the other\r\n * @since 1.0.0\r\n */\n\nvar AWCoreSDKVisitConfiguration = function AWCoreSDKVisitConfiguration(args) {\n  _classCallCheck(this, AWCoreSDKVisitConfiguration);\n\n  Object.assign(this, defaults, args);\n};\n\nexports.default = AWCoreSDKVisitConfiguration;","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/*!\r\n * American Well Core Web SDK\r\n *\r\n * Copyright © 2018 American Well.\r\n * All rights reserved.\r\n *\r\n * It is illegal to use, reproduce or distribute\r\n * any part of this Intellectual Property without\r\n * prior written authorization from American Well.\r\n */\n\n/**\r\n * Data object used to pass visit information into the Common SDK for logging purposes.\r\n *\r\n * @private\r\n */\nvar AWCoreSDKVisitLoggingDataObject = function () {\n  function AWCoreSDKVisitLoggingDataObject() {\n    _classCallCheck(this, AWCoreSDKVisitLoggingDataObject);\n  }\n\n  _createClass(AWCoreSDKVisitLoggingDataObject, [{\n    key: 'disposition',\n    get: function get() {\n      throw new Error('getter for disposition must be implemented by a subclass');\n    }\n  }, {\n    key: 'consumerId',\n    get: function get() {\n      throw new Error('getter for consumerId must be implemented by a subclass');\n    }\n  }, {\n    key: 'providerId',\n    get: function get() {\n      throw new Error('getter for providerId must be implemented by a subclass');\n    }\n  }, {\n    key: 'visitId',\n    get: function get() {\n      throw new Error('getter for visitId must be implemented by a subclass');\n    }\n  }, {\n    key: 'sdkVersion',\n    get: function get() {\n      throw new Error('getter for sdkVersion must be implemented by a subclass');\n    }\n  }]);\n\n  return AWCoreSDKVisitLoggingDataObject;\n}();\n\nexports.default = AWCoreSDKVisitLoggingDataObject;","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); /*!\nmerican Well Core Web SDK\nnopyright © 2018 American Well.\nll rights reserved.\nnt is illegal to use, reproduce or distribute\nany part of this Intellectual Property without\nprior written authorization from American Well.\nn\nvar _awcoresdk_video_participant_type = require('./awcoresdk_video_participant_type');\n\nvar _awcoresdk_video_participant_type2 = _interopRequireDefault(_awcoresdk_video_participant_type);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * Defines properties for a participant in a video visit. This can be a consumer, guest or provider.\n * @property {string} name The full name of the participant. This will be displayed on top of the video stream for this participant.\n * @property {AWCoreSDKVideoParticipantType} participantType The user type of this participant\n * @property {object} videoNode The DOM node which will contain the video stream for this participant.\n * @property {object} nameNode The DOM node which will contain the name for this participant.\n * @property {object} multiwayParticipantNode The DOM node which will contain this participants information in the multiway participant container.\n * @since 1.0.0\n */\nvar AWCoreSDKVideoParticipant = function () {\n  function AWCoreSDKVideoParticipant(participant) {\n    _classCallCheck(this, AWCoreSDKVideoParticipant);\n\n    this.__participant = participant;\n  }\n\n  _createClass(AWCoreSDKVideoParticipant, [{\n    key: 'name',\n    get: function get() {\n      return this.__participant.name;\n    }\n  }, {\n    key: 'participantType',\n    get: function get() {\n      return this.__participant.participantType;\n    }\n  }, {\n    key: 'videoNode',\n    get: function get() {\n      return this.__participant.videoNode;\n    }\n  }, {\n    key: 'nameNode',\n    get: function get() {\n      return this.__participant.nameNode;\n    }\n  }, {\n    key: 'subtitleNode',\n    get: function get() {\n      return this.__participant.subtitleNode;\n    }\n  }, {\n    key: 'multiwayParticipantNode',\n    get: function get() {\n      return this.__participant.multiwayParticipantNode;\n    },\n    set: function set(participantNode) {\n      this.__participant.multiwayParticipantNode = participantNode;\n    }\n  }, {\n    key: 'isProvider',\n    get: function get() {\n      return this.participantType && this.participantType === _awcoresdk_video_participant_type2.default.PROVIDER;\n    }\n  }, {\n    key: 'isConsumer',\n    get: function get() {\n      return this.participantType && this.participantType === _awcoresdk_video_participant_type2.default.CONSUMER;\n    }\n  }, {\n    key: 'isGuest',\n    get: function get() {\n      return this.participantType && this.participantType === _awcoresdk_video_participant_type2.default.GUEST;\n    }\n  }]);\n\n  return AWCoreSDKVideoParticipant;\n}();\n\nexports.default = AWCoreSDKVideoParticipant;","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/*!\n * American Well Core Web SDK\n *\n * Copyright © 2018 American Well.\n * All rights reserved.\n *\n * It is illegal to use, reproduce or distribute\n * any part of this Intellectual Property without\n * prior written authorization from American Well.\n */\n\n/**\n * Defines how a video console is configured. Includes information on the DOM nodes where both local and remote video streams should be placed.\n *\n * @since 1.0.0\n * @property {AWCoreSDKVideoAttachPoints} attachPoints The attach points\n */\nvar AWCoreSDKVideoConfiguration = function () {\n  /**\n   * Constructor for the AWCoreSDKVideoConfiguration\n   *\n   * @callback endDetails\n   * @since 1.0.0\n   * @param {Object}                          config Configuration flags.\n   * @param {AWCoreSDKVendor}                 config.vendor Which WebRTC implementation to use (one of 'VIDYO' or 'PEXIP')\n   * @param {string}                          config.serviceUrl A vendor-specific URL for accessing the conference\n   * @param {AWCoreSDKVisitConfiguration}     config.visitConfig The visit-specific configuration for the video\n   * @param {string}                          [config.portalUri] The portal URI. TODO: Vidyo specific.\n   * @param {number}                          [config.encoded] Indicating whether the portal URI is url encoded. TODO: Vidyo specific.\n   * @param {string}                          config.roomKey The room to join.\n   * @param {string}                          [config.roomPin] The PIN to use to join the video visit. TODO: Vidyo specific.\n   * @param {string}                          [config.sessionManager] The URL of the WebRTC Vidyo session manager. TODO: Vidyo specific.\n   * @param {boolean}                         config.loopbackMode Whether or not the video should operate in 'loopback' mode\n   * @param {AWCoreSDKBaseEventHandler[]}     config.requiredHandlers The collection of required handlers that must be supported.\n   * @param {Function=}                       [config.endDetailsCallback] An optional call back function to use when extraneous end reasons take place.\n   * @param {Function=}                       [config.checkConnectivityCallback] An optional call back function to use when internet connectivity is lost.\n   * @param {Function=}                       [config.handleInternetDisconnectionCallback] An optional call back function to use to poll for lost internet connectivity.\n   * @param {Function=}                       [config.endButtonPressedCallback] An optional call back function to invoke when the user clicks on the `End Visit` button. Allows third party developers to override the default `End Visit` dialog.\n   * @param {Function=}                       [config.cancelButtonPressedCallback] An optional call back function to invoke when the user clicks on the `Cancel Visit` button. Allows third party developers to override the default `Cancel Visit` dialog.\n   * @param {Object}                          config.logger The logger implementation to be used.\n   * @param {AWCoreSDKVisitLoggingDataObject} config.visitLoggingData The information to be logged when the visit in initiated.\n   * @param {string}                          [config.audioDeviceId] An optional parameter representing the audio device id. Since 1.0.12\n   * @param {string}                          [config.videoDeviceId] An optional parameter representing the video device id. Since 1.0.12\n   * @param {string}                          [config.locale] Locale to use for translation lookups. Defaults to `en`. `config.messages` keys override any messages chosen by default.\n   * @param {Object}                          [config.messages] Localized strings to be displayed in the video visit, overrides default strings of same key, based on `config.locale`\n   * @param {AWCoreSDKVideoParticipantType}   config.participantType The participant type of the participant @since 1.0.13\n   * @param {string}                          [config.displayNameOverride] An override for the display name of this local participant\n   * @param {Object}                          config.systemConfiguration The system configuration.\n   * @param {HTMLElement}                     config.videoConsoleContainer The required DOM node where the video console will be rendered @since 1.0.13\n   * @param {Object[]}                        config.turnServerConfiguration The required turn server configuration to be passed to the pexRTC for clients that block UDP traffic\n   * @param {Array[]}                         [config.plugins] An optional list of Plugins to load into the console\n   */\n  function AWCoreSDKVideoConfiguration(config) {\n    _classCallCheck(this, AWCoreSDKVideoConfiguration);\n\n    this.__config = config;\n  }\n\n  /**\n   * Gets the video console attach points\n   *\n   * @private\n   * @type {AWCoreSDKVideoAttachPoints}\n   */\n\n\n  _createClass(AWCoreSDKVideoConfiguration, [{\n    key: 'attachPoints',\n    get: function get() {\n      return this.__config.attachPoints;\n    }\n  }, {\n    key: 'visitConfig',\n    get: function get() {\n      return this.__config.visitConfig;\n    }\n  }, {\n    key: 'portalUri',\n    get: function get() {\n      return this.__config.portalUri;\n    }\n  }, {\n    key: 'roomKey',\n    get: function get() {\n      return this.__config.roomKey;\n    }\n  }, {\n    key: 'roomPin',\n    get: function get() {\n      return this.__config.roomPin;\n    }\n  }, {\n    key: 'sessionManager',\n    get: function get() {\n      return this.__config.sessionManager;\n    }\n\n    /**\n     * Gets the local participant\n     *\n     * @private\n     * @type {AWCoreSDKVideoParticipant}\n     */\n\n  }, {\n    key: 'localParticipant',\n    get: function get() {\n      return this.__config.localParticipant;\n    }\n\n    /**\n     * Gets the remote participants\n     *\n     * @private\n     * @type {AWCoreSDKVideoParticipant}\n     */\n\n  }, {\n    key: 'remoteParticipants',\n    get: function get() {\n      return this.__config.remoteParticipants;\n    }\n  }, {\n    key: 'loopbackMode',\n    get: function get() {\n      return this.__config.loopbackMode === true;\n    }\n  }, {\n    key: 'requiredHandlers',\n    get: function get() {\n      return this.__config.requiredHandlers;\n    },\n    set: function set(handlers) {\n      this.__config.requiredHandlers = handlers;\n    }\n  }, {\n    key: 'consumer',\n    get: function get() {\n      var consumer = this.__config.localParticipant;\n      if (!consumer || !consumer.isConsumer) {\n        consumer = this.__config.remoteParticipants.filter(function (participantFilter) {\n          return participantFilter.isConsumer;\n        })[0];\n      }\n      return consumer;\n    }\n  }, {\n    key: 'provider',\n    get: function get() {\n      var participant = this.__config.localParticipant;\n      if (!participant || !participant.isProvider) {\n        participant = this.__config.remoteParticipants.filter(function (participantFilter) {\n          return participantFilter.isProvider;\n        })[0];\n      }\n      return participant;\n    }\n\n    /**\n     * The full name of the Consumer\n     *\n     * @type {string}\n     * @since 1.0.13\n     */\n\n  }, {\n    key: 'consumerFullName',\n    get: function get() {\n      return this.__config.visitConfig.visit.consumer ? this.__config.visitConfig.visit.consumer.fullName || 'Consumer' : 'Consumer';\n    }\n\n    /**\n     * The full name of the Provider\n     *\n     * @type {string}\n     * @since 1.0.13\n     */\n\n  }, {\n    key: 'providerFullName',\n    get: function get() {\n      return this.__config.visitConfig.visit.assignedProvider ? this.__config.visitConfig.visit.assignedProvider.fullName || 'Provider' : 'Provider';\n    }\n\n    /**\n     * An optional display name override\n     *\n     * @type {string}\n     * @since 1.0.15\n     */\n\n  }, {\n    key: 'displayNameOverride',\n    get: function get() {\n      return this.__config.displayNameOverride;\n    }\n  }, {\n    key: 'endDetailsCallback',\n    get: function get() {\n      return this.__config.endDetailsCallback;\n    },\n    set: function set(callback) {\n      this.__config.endDetailsCallback = callback;\n    }\n  }, {\n    key: 'checkForConnectivityCallback',\n    get: function get() {\n      return this.__config.checkForConnectivityCallback;\n    },\n    set: function set(callback) {\n      this.__config.checkForConnectivityCallback = callback;\n    }\n  }, {\n    key: 'pollForConnectionCallback',\n    get: function get() {\n      return this.__config.pollForConnectionCallback;\n    },\n    set: function set(callback) {\n      this.__config.pollForConnectionCallback = callback;\n    }\n  }, {\n    key: 'logger',\n    get: function get() {\n      return this.__config.logger;\n    }\n  }, {\n    key: 'visitLoggingData',\n    get: function get() {\n      return this.__config.visitLoggingData;\n    }\n  }, {\n    key: 'locale',\n    get: function get() {\n      return this.__config.locale || 'en';\n    }\n  }, {\n    key: 'messages',\n    get: function get() {\n      return this.__config.messages;\n    }\n  }, {\n    key: 'vendor',\n    get: function get() {\n      return this.__config.vendor;\n    }\n  }, {\n    key: 'serviceUrl',\n    get: function get() {\n      return this.__config.serviceUrl;\n    }\n  }, {\n    key: 'audioDeviceId',\n    get: function get() {\n      return this.__config.audioDeviceId;\n    },\n    set: function set(audioDeviceId) {\n      this.__config.audioDeviceId = audioDeviceId;\n    }\n  }, {\n    key: 'videoDeviceId',\n    get: function get() {\n      return this.__config.videoDeviceId;\n    },\n    set: function set(videoDeviceId) {\n      this.__config.videoDeviceId = videoDeviceId;\n    }\n  }, {\n    key: 'endButtonPressedCallback',\n    get: function get() {\n      return this.__config.endButtonPressedCallback;\n    }\n  }, {\n    key: 'cancelButtonPressedCallback',\n    get: function get() {\n      return this.__config.cancelButtonPressedCallback;\n    }\n\n    /**\n     * The video Console Container\n     *\n     * @type {HTMLElement}\n     * @since 1.0.13\n     */\n\n  }, {\n    key: 'videoConsoleContainer',\n    get: function get() {\n      return this.__config.videoConsoleContainer;\n    }\n\n    /**\n     * The participant type\n     *\n     * @type {AWCoreSDKVideoParticipantType}\n     * @since 1.0.13\n     */\n\n  }, {\n    key: 'participantType',\n    get: function get() {\n      return this.__config.participantType;\n    }\n\n    /**\n     * The system configuration.\n     *\n     * @type {Object}\n     * @since 4.0.0\n     */\n\n  }, {\n    key: 'systemConfiguration',\n    get: function get() {\n      return this.__config.systemConfiguration;\n    }\n  }, {\n    key: 'turnServerConfiguration',\n    get: function get() {\n      return this.__config.turnServerConfiguration;\n    }\n\n    // default to true if not specified\n\n  }, {\n    key: 'isIVRCallbackEnabled',\n    get: function get() {\n      return typeof this.__config.isIVRCallbackEnabled === 'boolean' ? this.__config.isIVRCallbackEnabled : true;\n    },\n    set: function set(isIVRCallbackEnabled) {\n      this.__config.isIVRCallbackEnabled = isIVRCallbackEnabled;\n    }\n  }, {\n    key: 'plugins',\n    get: function get() {\n      return this.__config.plugins;\n    }\n  }]);\n\n  return AWCoreSDKVideoConfiguration;\n}();\n\nexports.default = AWCoreSDKVideoConfiguration;","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n","exports.L = { bit: 1 }\nexports.M = { bit: 0 }\nexports.Q = { bit: 3 }\nexports.H = { bit: 2 }\n\nfunction fromString (string) {\n  if (typeof string !== 'string') {\n    throw new Error('Param is not a string')\n  }\n\n  var lcStr = string.toLowerCase()\n\n  switch (lcStr) {\n    case 'l':\n    case 'low':\n      return exports.L\n\n    case 'm':\n    case 'medium':\n      return exports.M\n\n    case 'q':\n    case 'quartile':\n      return exports.Q\n\n    case 'h':\n    case 'high':\n      return exports.H\n\n    default:\n      throw new Error('Unknown EC Level: ' + string)\n  }\n}\n\nexports.isValid = function isValid (level) {\n  return level && typeof level.bit !== 'undefined' &&\n    level.bit >= 0 && level.bit < 4\n}\n\nexports.from = function from (value, defaultValue) {\n  if (exports.isValid(value)) {\n    return value\n  }\n\n  try {\n    return fromString(value)\n  } catch (e) {\n    return defaultValue\n  }\n}\n","\"use strict\";\nvar __spreadArrays = (this && this.__spreadArrays) || function () {\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\n            r[k] = a[j];\n    return r;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar BrowserInfo = /** @class */ (function () {\n    function BrowserInfo(name, version, os) {\n        this.name = name;\n        this.version = version;\n        this.os = os;\n    }\n    return BrowserInfo;\n}());\nexports.BrowserInfo = BrowserInfo;\nvar NodeInfo = /** @class */ (function () {\n    function NodeInfo(version) {\n        this.version = version;\n        this.name = 'node';\n        this.os = process.platform;\n    }\n    return NodeInfo;\n}());\nexports.NodeInfo = NodeInfo;\nvar BotInfo = /** @class */ (function () {\n    function BotInfo() {\n        this.bot = true; // NOTE: deprecated test name instead\n        this.name = 'bot';\n        this.version = null;\n        this.os = null;\n    }\n    return BotInfo;\n}());\nexports.BotInfo = BotInfo;\n// tslint:disable-next-line:max-line-length\nvar SEARCHBOX_UA_REGEX = /alexa|bot|crawl(er|ing)|facebookexternalhit|feedburner|google web preview|nagios|postrank|pingdom|slurp|spider|yahoo!|yandex/;\nvar SEARCHBOT_OS_REGEX = /(nuhk)|(Googlebot)|(Yammybot)|(Openbot)|(Slurp)|(MSNBot)|(Ask Jeeves\\/Teoma)|(ia_archiver)/;\nvar REQUIRED_VERSION_PARTS = 3;\nvar userAgentRules = [\n    ['aol', /AOLShield\\/([0-9\\._]+)/],\n    ['edge', /Edge\\/([0-9\\._]+)/],\n    ['edge-ios', /EdgiOS\\/([0-9\\._]+)/],\n    ['yandexbrowser', /YaBrowser\\/([0-9\\._]+)/],\n    ['vivaldi', /Vivaldi\\/([0-9\\.]+)/],\n    ['kakaotalk', /KAKAOTALK\\s([0-9\\.]+)/],\n    ['samsung', /SamsungBrowser\\/([0-9\\.]+)/],\n    ['silk', /\\bSilk\\/([0-9._-]+)\\b/],\n    ['miui', /MiuiBrowser\\/([0-9\\.]+)$/],\n    ['beaker', /BeakerBrowser\\/([0-9\\.]+)/],\n    ['edge-chromium', /Edg\\/([0-9\\.]+)/],\n    [\n        'chromium-webview',\n        /(?!Chrom.*OPR)wv\\).*Chrom(?:e|ium)\\/([0-9\\.]+)(:?\\s|$)/,\n    ],\n    ['chrome', /(?!Chrom.*OPR)Chrom(?:e|ium)\\/([0-9\\.]+)(:?\\s|$)/],\n    ['phantomjs', /PhantomJS\\/([0-9\\.]+)(:?\\s|$)/],\n    ['crios', /CriOS\\/([0-9\\.]+)(:?\\s|$)/],\n    ['firefox', /Firefox\\/([0-9\\.]+)(?:\\s|$)/],\n    ['fxios', /FxiOS\\/([0-9\\.]+)/],\n    ['opera-mini', /Opera Mini.*Version\\/([0-9\\.]+)/],\n    ['opera', /Opera\\/([0-9\\.]+)(?:\\s|$)/],\n    ['opera', /OPR\\/([0-9\\.]+)(:?\\s|$)/],\n    ['ie', /Trident\\/7\\.0.*rv\\:([0-9\\.]+).*\\).*Gecko$/],\n    ['ie', /MSIE\\s([0-9\\.]+);.*Trident\\/[4-7].0/],\n    ['ie', /MSIE\\s(7\\.0)/],\n    ['bb10', /BB10;\\sTouch.*Version\\/([0-9\\.]+)/],\n    ['android', /Android\\s([0-9\\.]+)/],\n    ['ios', /Version\\/([0-9\\._]+).*Mobile.*Safari.*/],\n    ['safari', /Version\\/([0-9\\._]+).*Safari/],\n    ['facebook', /FBAV\\/([0-9\\.]+)/],\n    ['instagram', /Instagram\\s([0-9\\.]+)/],\n    ['ios-webview', /AppleWebKit\\/([0-9\\.]+).*Mobile/],\n    ['ios-webview', /AppleWebKit\\/([0-9\\.]+).*Gecko\\)$/],\n    ['searchbot', SEARCHBOX_UA_REGEX],\n];\nvar operatingSystemRules = [\n    ['iOS', /iP(hone|od|ad)/],\n    ['Android OS', /Android/],\n    ['BlackBerry OS', /BlackBerry|BB10/],\n    ['Windows Mobile', /IEMobile/],\n    ['Amazon OS', /Kindle/],\n    ['Windows 3.11', /Win16/],\n    ['Windows 95', /(Windows 95)|(Win95)|(Windows_95)/],\n    ['Windows 98', /(Windows 98)|(Win98)/],\n    ['Windows 2000', /(Windows NT 5.0)|(Windows 2000)/],\n    ['Windows XP', /(Windows NT 5.1)|(Windows XP)/],\n    ['Windows Server 2003', /(Windows NT 5.2)/],\n    ['Windows Vista', /(Windows NT 6.0)/],\n    ['Windows 7', /(Windows NT 6.1)/],\n    ['Windows 8', /(Windows NT 6.2)/],\n    ['Windows 8.1', /(Windows NT 6.3)/],\n    ['Windows 10', /(Windows NT 10.0)/],\n    ['Windows ME', /Windows ME/],\n    ['Open BSD', /OpenBSD/],\n    ['Sun OS', /SunOS/],\n    ['Chrome OS', /CrOS/],\n    ['Linux', /(Linux)|(X11)/],\n    ['Mac OS', /(Mac_PowerPC)|(Macintosh)/],\n    ['QNX', /QNX/],\n    ['BeOS', /BeOS/],\n    ['OS/2', /OS\\/2/],\n    ['Search Bot', SEARCHBOT_OS_REGEX],\n];\nfunction detect(userAgent) {\n    if (!!userAgent) {\n        return parseUserAgent(userAgent);\n    }\n    if (typeof navigator !== 'undefined') {\n        return parseUserAgent(navigator.userAgent);\n    }\n    return getNodeVersion();\n}\nexports.detect = detect;\nfunction parseUserAgent(ua) {\n    // opted for using reduce here rather than Array#first with a regex.test call\n    // this is primarily because using the reduce we only perform the regex\n    // execution once rather than once for the test and for the exec again below\n    // probably something that needs to be benchmarked though\n    var matchedRule = ua !== '' &&\n        userAgentRules.reduce(function (matched, _a) {\n            var browser = _a[0], regex = _a[1];\n            if (matched) {\n                return matched;\n            }\n            var uaMatch = regex.exec(ua);\n            return !!uaMatch && [browser, uaMatch];\n        }, false);\n    if (!matchedRule) {\n        return null;\n    }\n    var name = matchedRule[0], match = matchedRule[1];\n    if (name === 'searchbot') {\n        return new BotInfo();\n    }\n    var versionParts = match[1] && match[1].split(/[._]/).slice(0, 3);\n    if (versionParts) {\n        if (versionParts.length < REQUIRED_VERSION_PARTS) {\n            versionParts = __spreadArrays(versionParts, createVersionParts(REQUIRED_VERSION_PARTS - versionParts.length));\n        }\n    }\n    else {\n        versionParts = [];\n    }\n    return new BrowserInfo(name, versionParts.join('.'), detectOS(ua));\n}\nexports.parseUserAgent = parseUserAgent;\nfunction detectOS(ua) {\n    for (var ii = 0, count = operatingSystemRules.length; ii < count; ii++) {\n        var _a = operatingSystemRules[ii], os = _a[0], regex = _a[1];\n        var match = regex.test(ua);\n        if (match) {\n            return os;\n        }\n    }\n    return null;\n}\nexports.detectOS = detectOS;\nfunction getNodeVersion() {\n    var isNode = typeof process !== 'undefined' && process.version;\n    return isNode ? new NodeInfo(process.version.slice(1)) : null;\n}\nexports.getNodeVersion = getNodeVersion;\nfunction createVersionParts(count) {\n    var output = [];\n    for (var ii = 0; ii < count; ii++) {\n        output.push('0');\n    }\n    return output;\n}\n","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/*!\r\n * American Well Core Web SDK\r\n *\r\n * Copyright (c) 2018 American Well.\r\n * All rights reserved.\r\n *\r\n * It is illegal to use, reproduce or distribute\r\n * any part of this Intellectual Property without\r\n * prior written authorization from American Well.\r\n */\n\n/**\r\n * @enum\r\n * @readonly\r\n */\nvar AWCoreSDKOperationType = {\n  ADD: 'ADD',\n  DROP: 'DROP'\n};\n\nexports.default = AWCoreSDKOperationType;","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/*!\n * American Well Core Web SDK\n *\n * Copyright © 2018 American Well.\n * All rights reserved.\n *\n * It is illegal to use, reproduce or distribute\n * any part of this Intellectual Property without\n * prior written authorization from American Well.\n */\n\n/**\n * Looks for webRTC objects in browser window object. Returns true if window object has any of those objects. Indicating\n * support for WebRTC.\n *\n * @returns {boolean} true if WebRTC is supported by the browser, false otherwise.\n */\nvar isWebRTCSupported = function isWebRTCSupported() {\n  return ['RTCPeerConnection', 'webkitRTCPeerConnection', 'mozRTCPeerConnection', 'RTCIceGatherer'].some(function (item) {\n    return item in window;\n  });\n};\n\nexports.default = isWebRTCSupported;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/*!\r\n * American Well Core Web SDK\r\n *\r\n * Copyright © 2018 American Well.\r\n * All rights reserved.\r\n *\r\n * It is illegal to use, reproduce or distribute\r\n * any part of this Intellectual Property without\r\n * prior written authorization from American Well.\r\n */\n\n/**\r\n * Data object that incorporates video metrics tracked over the course of the video visit\r\n *\r\n * @property {string} visitId the persistent visit Id for which these video metrics are for\r\n * @property {boolean} isSignedIn whether the client successfully signed in\r\n * @property {boolean} isJoined whether the client successfully joined a video call with another participant\r\n * @property {boolean} isEndRequested whether this client requested an end to the video call\r\n * @property {String} videoFailureReason the reported reason for an error encountered during the video call, if any\r\n * @property {Number} manualRetryCount the number of manual retries made by the client\r\n * @property {Number} autoRetryCount the number of automatic retries made by the client\r\n */\nvar AWCoreSDKVideoMetrics =\n// This is stored in localStorage so please no PHI/PII\nfunction AWCoreSDKVideoMetrics() {\n  _classCallCheck(this, AWCoreSDKVideoMetrics);\n\n  this.visitId = undefined;\n  this.isSignedIn = false;\n  this.isJoined = false;\n  this.isEndRequested = false;\n  this.videoFailureReason = undefined;\n  this.manualRetryCount = 0;\n  this.autoRetryCount = 0;\n};\n\nexports.default = AWCoreSDKVideoMetrics;","function _setPrototypeOf(o, p) {\n  module.exports = _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nmodule.exports = _setPrototypeOf;","var arrayLikeToArray = require(\"./arrayLikeToArray\");\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}\n\nmodule.exports = _unsupportedIterableToArray;","function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nmodule.exports = _arrayLikeToArray;","var ECLevel = require('./error-correction-level')\r\n\r\nvar EC_BLOCKS_TABLE = [\r\n// L  M  Q  H\r\n  1, 1, 1, 1,\r\n  1, 1, 1, 1,\r\n  1, 1, 2, 2,\r\n  1, 2, 2, 4,\r\n  1, 2, 4, 4,\r\n  2, 4, 4, 4,\r\n  2, 4, 6, 5,\r\n  2, 4, 6, 6,\r\n  2, 5, 8, 8,\r\n  4, 5, 8, 8,\r\n  4, 5, 8, 11,\r\n  4, 8, 10, 11,\r\n  4, 9, 12, 16,\r\n  4, 9, 16, 16,\r\n  6, 10, 12, 18,\r\n  6, 10, 17, 16,\r\n  6, 11, 16, 19,\r\n  6, 13, 18, 21,\r\n  7, 14, 21, 25,\r\n  8, 16, 20, 25,\r\n  8, 17, 23, 25,\r\n  9, 17, 23, 34,\r\n  9, 18, 25, 30,\r\n  10, 20, 27, 32,\r\n  12, 21, 29, 35,\r\n  12, 23, 34, 37,\r\n  12, 25, 34, 40,\r\n  13, 26, 35, 42,\r\n  14, 28, 38, 45,\r\n  15, 29, 40, 48,\r\n  16, 31, 43, 51,\r\n  17, 33, 45, 54,\r\n  18, 35, 48, 57,\r\n  19, 37, 51, 60,\r\n  19, 38, 53, 63,\r\n  20, 40, 56, 66,\r\n  21, 43, 59, 70,\r\n  22, 45, 62, 74,\r\n  24, 47, 65, 77,\r\n  25, 49, 68, 81\r\n]\r\n\r\nvar EC_CODEWORDS_TABLE = [\r\n// L  M  Q  H\r\n  7, 10, 13, 17,\r\n  10, 16, 22, 28,\r\n  15, 26, 36, 44,\r\n  20, 36, 52, 64,\r\n  26, 48, 72, 88,\r\n  36, 64, 96, 112,\r\n  40, 72, 108, 130,\r\n  48, 88, 132, 156,\r\n  60, 110, 160, 192,\r\n  72, 130, 192, 224,\r\n  80, 150, 224, 264,\r\n  96, 176, 260, 308,\r\n  104, 198, 288, 352,\r\n  120, 216, 320, 384,\r\n  132, 240, 360, 432,\r\n  144, 280, 408, 480,\r\n  168, 308, 448, 532,\r\n  180, 338, 504, 588,\r\n  196, 364, 546, 650,\r\n  224, 416, 600, 700,\r\n  224, 442, 644, 750,\r\n  252, 476, 690, 816,\r\n  270, 504, 750, 900,\r\n  300, 560, 810, 960,\r\n  312, 588, 870, 1050,\r\n  336, 644, 952, 1110,\r\n  360, 700, 1020, 1200,\r\n  390, 728, 1050, 1260,\r\n  420, 784, 1140, 1350,\r\n  450, 812, 1200, 1440,\r\n  480, 868, 1290, 1530,\r\n  510, 924, 1350, 1620,\r\n  540, 980, 1440, 1710,\r\n  570, 1036, 1530, 1800,\r\n  570, 1064, 1590, 1890,\r\n  600, 1120, 1680, 1980,\r\n  630, 1204, 1770, 2100,\r\n  660, 1260, 1860, 2220,\r\n  720, 1316, 1950, 2310,\r\n  750, 1372, 2040, 2430\r\n]\r\n\r\n/**\r\n * Returns the number of error correction block that the QR Code should contain\r\n * for the specified version and error correction level.\r\n *\r\n * @param  {Number} version              QR Code version\r\n * @param  {Number} errorCorrectionLevel Error correction level\r\n * @return {Number}                      Number of error correction blocks\r\n */\r\nexports.getBlocksCount = function getBlocksCount (version, errorCorrectionLevel) {\r\n  switch (errorCorrectionLevel) {\r\n    case ECLevel.L:\r\n      return EC_BLOCKS_TABLE[(version - 1) * 4 + 0]\r\n    case ECLevel.M:\r\n      return EC_BLOCKS_TABLE[(version - 1) * 4 + 1]\r\n    case ECLevel.Q:\r\n      return EC_BLOCKS_TABLE[(version - 1) * 4 + 2]\r\n    case ECLevel.H:\r\n      return EC_BLOCKS_TABLE[(version - 1) * 4 + 3]\r\n    default:\r\n      return undefined\r\n  }\r\n}\r\n\r\n/**\r\n * Returns the number of error correction codewords to use for the specified\r\n * version and error correction level.\r\n *\r\n * @param  {Number} version              QR Code version\r\n * @param  {Number} errorCorrectionLevel Error correction level\r\n * @return {Number}                      Number of error correction codewords\r\n */\r\nexports.getTotalCodewordsCount = function getTotalCodewordsCount (version, errorCorrectionLevel) {\r\n  switch (errorCorrectionLevel) {\r\n    case ECLevel.L:\r\n      return EC_CODEWORDS_TABLE[(version - 1) * 4 + 0]\r\n    case ECLevel.M:\r\n      return EC_CODEWORDS_TABLE[(version - 1) * 4 + 1]\r\n    case ECLevel.Q:\r\n      return EC_CODEWORDS_TABLE[(version - 1) * 4 + 2]\r\n    case ECLevel.H:\r\n      return EC_CODEWORDS_TABLE[(version - 1) * 4 + 3]\r\n    default:\r\n      return undefined\r\n  }\r\n}\r\n","/**\n * Check if QR Code version is valid\n *\n * @param  {Number}  version QR Code version\n * @return {Boolean}         true if valid version, false otherwise\n */\nexports.isValid = function isValid (version) {\n  return !isNaN(version) && version >= 1 && version <= 40\n}\n","var numeric = '[0-9]+'\nvar alphanumeric = '[A-Z $%*+\\\\-./:]+'\nvar kanji = '(?:[u3000-u303F]|[u3040-u309F]|[u30A0-u30FF]|' +\n  '[uFF00-uFFEF]|[u4E00-u9FAF]|[u2605-u2606]|[u2190-u2195]|u203B|' +\n  '[u2010u2015u2018u2019u2025u2026u201Cu201Du2225u2260]|' +\n  '[u0391-u0451]|[u00A7u00A8u00B1u00B4u00D7u00F7])+'\nkanji = kanji.replace(/u/g, '\\\\u')\n\nvar byte = '(?:(?![A-Z0-9 $%*+\\\\-./:]|' + kanji + ')(?:.|[\\r\\n]))+'\n\nexports.KANJI = new RegExp(kanji, 'g')\nexports.BYTE_KANJI = new RegExp('[^A-Z0-9 $%*+\\\\-./:]+', 'g')\nexports.BYTE = new RegExp(byte, 'g')\nexports.NUMERIC = new RegExp(numeric, 'g')\nexports.ALPHANUMERIC = new RegExp(alphanumeric, 'g')\n\nvar TEST_KANJI = new RegExp('^' + kanji + '$')\nvar TEST_NUMERIC = new RegExp('^' + numeric + '$')\nvar TEST_ALPHANUMERIC = new RegExp('^[A-Z0-9 $%*+\\\\-./:]+$')\n\nexports.testKanji = function testKanji (str) {\n  return TEST_KANJI.test(str)\n}\n\nexports.testNumeric = function testNumeric (str) {\n  return TEST_NUMERIC.test(str)\n}\n\nexports.testAlphanumeric = function testAlphanumeric (str) {\n  return TEST_ALPHANUMERIC.test(str)\n}\n","function hex2rgba (hex) {\n  if (typeof hex === 'number') {\n    hex = hex.toString()\n  }\n\n  if (typeof hex !== 'string') {\n    throw new Error('Color should be defined as hex string')\n  }\n\n  var hexCode = hex.slice().replace('#', '').split('')\n  if (hexCode.length < 3 || hexCode.length === 5 || hexCode.length > 8) {\n    throw new Error('Invalid hex color: ' + hex)\n  }\n\n  // Convert from short to long form (fff -> ffffff)\n  if (hexCode.length === 3 || hexCode.length === 4) {\n    hexCode = Array.prototype.concat.apply([], hexCode.map(function (c) {\n      return [c, c]\n    }))\n  }\n\n  // Add default alpha value\n  if (hexCode.length === 6) hexCode.push('F', 'F')\n\n  var hexValue = parseInt(hexCode.join(''), 16)\n\n  return {\n    r: (hexValue >> 24) & 255,\n    g: (hexValue >> 16) & 255,\n    b: (hexValue >> 8) & 255,\n    a: hexValue & 255,\n    hex: '#' + hexCode.slice(0, 6).join('')\n  }\n}\n\nexports.getOptions = function getOptions (options) {\n  if (!options) options = {}\n  if (!options.color) options.color = {}\n\n  var margin = typeof options.margin === 'undefined' ||\n    options.margin === null ||\n    options.margin < 0 ? 4 : options.margin\n\n  var width = options.width && options.width >= 21 ? options.width : undefined\n  var scale = options.scale || 4\n\n  return {\n    width: width,\n    scale: width ? 4 : scale,\n    margin: margin,\n    color: {\n      dark: hex2rgba(options.color.dark || '#000000ff'),\n      light: hex2rgba(options.color.light || '#ffffffff')\n    },\n    type: options.type,\n    rendererOpts: options.rendererOpts || {}\n  }\n}\n\nexports.getScale = function getScale (qrSize, opts) {\n  return opts.width && opts.width >= qrSize + opts.margin * 2\n    ? opts.width / (qrSize + opts.margin * 2)\n    : opts.scale\n}\n\nexports.getImageWidth = function getImageWidth (qrSize, opts) {\n  var scale = exports.getScale(qrSize, opts)\n  return Math.floor((qrSize + opts.margin * 2) * scale)\n}\n\nexports.qrToImageData = function qrToImageData (imgData, qr, opts) {\n  var size = qr.modules.size\n  var data = qr.modules.data\n  var scale = exports.getScale(size, opts)\n  var symbolSize = Math.floor((size + opts.margin * 2) * scale)\n  var scaledMargin = opts.margin * scale\n  var palette = [opts.color.light, opts.color.dark]\n\n  for (var i = 0; i < symbolSize; i++) {\n    for (var j = 0; j < symbolSize; j++) {\n      var posDst = (i * symbolSize + j) * 4\n      var pxColor = opts.color.light\n\n      if (i >= scaledMargin && j >= scaledMargin &&\n        i < symbolSize - scaledMargin && j < symbolSize - scaledMargin) {\n        var iSrc = Math.floor((i - scaledMargin) / scale)\n        var jSrc = Math.floor((j - scaledMargin) / scale)\n        pxColor = palette[data[iSrc * size + jSrc] ? 1 : 0]\n      }\n\n      imgData[posDst++] = pxColor.r\n      imgData[posDst++] = pxColor.g\n      imgData[posDst++] = pxColor.b\n      imgData[posDst] = pxColor.a\n    }\n  }\n}\n","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); /*!\r\nmerican Well Common Web SDK\r\nr\nopyright (c) 2018 American Well.\r\nll rights reserved.\r\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      *\r\nt is illegal to use, reproduce or distribute\r\nany part of this Intellectual Property without\r\nprior written authorization from American Well.\r\nn\nvar _detectBrowser = require('detect-browser');\n\nvar _participant = require('./participant');\n\nvar _participant2 = _interopRequireDefault(_participant);\n\nvar _awcoresdk_base_event_handler = require('./awcoresdk_base_event_handler');\n\nvar _awcoresdk_base_event_handler2 = _interopRequireDefault(_awcoresdk_base_event_handler);\n\nvar _video_metrics = require('./video_metrics');\n\nvar _video_metrics2 = _interopRequireDefault(_video_metrics);\n\nvar _awcoresdk_video_participant_type = require('./awcoresdk_video_participant_type');\n\nvar _awcoresdk_video_participant_type2 = _interopRequireDefault(_awcoresdk_video_participant_type);\n\nvar _visit_configuration = require('./visit_configuration');\n\nvar _visit_configuration2 = _interopRequireDefault(_visit_configuration);\n\nvar _attach = require('./util/attach');\n\nvar _attach2 = _interopRequireDefault(_attach);\n\nvar _empty = require('./util/empty');\n\nvar _empty2 = _interopRequireDefault(_empty);\n\nvar _replace = require('./util/replace');\n\nvar _replace2 = _interopRequireDefault(_replace);\n\nvar _fullscreen = require('./util/fullscreen');\n\nvar _fullscreen2 = _interopRequireDefault(_fullscreen);\n\nvar _logger = require('./util/logger');\n\nvar _logger2 = _interopRequireDefault(_logger);\n\nvar _event = require('./util/event');\n\nvar _videoconsole_template = require('./templates/videoconsole_template.html');\n\nvar _videoconsole_template2 = _interopRequireDefault(_videoconsole_template);\n\nvar _awcoresdk_vendor = require('./awcoresdk_vendor');\n\nvar _awcoresdk_vendor2 = _interopRequireDefault(_awcoresdk_vendor);\n\nvar _spinner_manager = require('./spinner/spinner_manager');\n\nvar _spinner_manager2 = _interopRequireDefault(_spinner_manager);\n\nvar _view_renderer = require('./spinner/view_renderer');\n\nvar _view_renderer2 = _interopRequireDefault(_view_renderer);\n\nvar _retrieve_messages = require('./util/retrieve_messages');\n\nvar _retrieve_messages2 = _interopRequireDefault(_retrieve_messages);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\r\n * The interface for a common video console\r\n *\r\n */\nvar AWCoreSDKInternalVideoConsole = function () {\n  /**\r\n   * This is the core video console constructor\r\n   *\r\n   * Need to provide handlers for following events:\r\n   * <table>\r\n   * <tr><th>Event</th><th>Description</th></tr>\r\n   * <tr><td>localParticipantJoinedEvent</td><td>When local participant joins a conference</td></tr>\r\n   * <tr><td>localParticipantLeftEvent</td><td>When local participant leaves a conference</td></tr>\r\n   * <tr><td>remoteParticipantJoinedEvent</td><td>When remote participant joins a conference</td></tr>\r\n   * <tr><td>remoteParticipantLeftEvent</td><td>When remote participant leaves a conference</td></tr>\r\n   * <tr><td>onExitVisitRequested</td><td>When request is made to exit the conference</td></tr>\r\n   * <tr><td>conferenceEndedEvent</td><td>When conference ends</td></tr>\r\n   * </table>\r\n   *\r\n   * @param {AWCoreSDKVideoConfiguration}   videoConfig the configuration for this video console\r\n   * The following are required configuration parameters:\r\n   * @param {string}                        [videoConfig.roomKey] The room to join.\r\n   * @param {AWCoreSDKBaseEventHandler[]}   [videoConfig.requiredHandlers] The collection of required event handlers\r\n   * @param {Object}                        [videoConfig.messages] An object containing the localized strings displayed during the video visit\r\n   * @param {string}                        [videoConfig.locale] A string locale to use as the base for built-in localized strings. `videoConfig.messages` will override these keys.\r\n   * @param {string}                        [videoConfig.audioDeviceId] The audio device Id.\r\n   * @param {string}                        [videoConfig.videoDeviceId] The video device Id.\r\n   * @param {AWCoreSDKVisitConfiguration}   [videoConfig.visitConfig] The visit-specific configuration\r\n   * @param {AWCoreSDKVideoParticipantType} [videoConfig.participantType] The participant type of the participant @since 1.0.13\r\n   * @param {HTMLElement}                   [videoConfig.videoConsoleContainer] The node element where the video console will be rendered @since 1.0.13\r\n   * @param {Object}                        [videoConfig.messages] An object containing strings key/value pairs for overriding display strings\r\n   */\n  function AWCoreSDKInternalVideoConsole(videoConfig) {\n    _classCallCheck(this, AWCoreSDKInternalVideoConsole);\n\n    this.__videoConfig = videoConfig;\n    (0, _logger2.default)(this, this.__videoConfig.logger, this.__videoConfig.visitLoggingData);\n\n    // make sure i18n messages are populated _first_, based on internal values, and allowing `messages` overrides\n    this.messages = Object.assign({}, (0, _retrieve_messages2.default)(this.__videoConfig.locale), this.__videoConfig.messages);\n\n    // an internal list of events that will be auto-disconnected\n    // when stop() is invoked. `this.__connect` pushes to this list,\n    // or you can manually push events that need torn down.  It is a\n    // list of `handle`s coming back from `connect`\n    this.__events = [];\n\n    this.__requiredEventsToHandle = ['localParticipantJoinedEvent', 'localParticipantLeftEvent', 'remoteParticipantJoinedEvent', 'remoteParticipantLeftEvent', 'conferenceEndedEvent', 'onExitVisitRequested'];\n    this.__verifyConfig();\n    this.__registeredHandlers = this.__videoConfig.requiredHandlers;\n\n    // load preferred devices - these can be associated with a different visit (transfer) or no visit at all (from tmc)\n    var stringifedCurrentDevices = localStorage.getItem('AWCurrentDevices');\n    this.__currentDevices = stringifedCurrentDevices && JSON.parse(stringifedCurrentDevices) || {};\n\n    // pull out visit id\n    var visitId = this.__videoConfig.visitConfig.visit.id.persistentId;\n\n    // pull out any existing metrics and state\n    var stringifiedMetrics = localStorage.getItem('AWMetrics');\n    var stringifiedState = sessionStorage.getItem('AWCommonState');\n    var existingMetrics = stringifiedMetrics && JSON.parse(stringifiedMetrics);\n    var existingState = stringifiedState && JSON.parse(stringifiedState);\n\n    // state is in SESSION storage so might be missing even if we're in the same visit, set default value\n    this.__state = { IVRCallbackRetryCount: 0, pageRefreshCount: 0 };\n\n    // if this is the same visit, use same state and metrics\n    if (existingMetrics && existingMetrics.visitId === visitId) {\n      this.metrics = Object.assign(new _video_metrics2.default(), existingMetrics);\n      Object.assign(this.__state, existingState);\n\n      // if metrics already exist we can assume they reloaded the page\n      this.__saveState({ pageRefreshCount: this.__state.pageRefreshCount + 1 });\n      this.metrics.manualRetryCount += 1;\n      this.__videoConfig.visitConfig.visitPollingDelegate.updateMetrics(this.__videoConfig.visitConfig.visit, this.metrics);\n\n      // otherwise it's a new visit, new metrics\n    } else {\n      this.metrics = new _video_metrics2.default();\n      this.metrics.visitId = visitId;\n    }\n\n    if (!existingState || existingState.showSelfView === undefined) {\n      this.__showSelfView = true;\n    } else {\n      this.__showSelfView = existingState.showSelfView;\n    }\n    this.__refreshInProgress = false;\n  }\n\n  /* @private */\n\n\n  _createClass(AWCoreSDKInternalVideoConsole, [{\n    key: '__verifyConfig',\n    value: function __verifyConfig() {\n      var videoConfig = this.__videoConfig;\n      if (!videoConfig) {\n        throw Error('IllegalArgument. videoConfig must be passed to constructor');\n      }\n      if (!videoConfig.participantType) {\n        throw Error('IllegalArgument. The videoConfig needs to have a property \"participantType\"');\n      }\n      if (!videoConfig.visitConfig || !(videoConfig.visitConfig instanceof _visit_configuration2.default)) {\n        throw Error('IllegalArgument. The videoConfig needs to have a property \"visitConfig\" of type AWCoreSDKVisitConfiguration');\n      }\n      if (!videoConfig.visitConfig.visit) {\n        throw Error('IllegalArgument. The videoConfig\\'s visitConfig needs to have a property \"visit\"');\n      }\n      if (!this.__videoConfig.requiredHandlers) {\n        throw Error('IllegalArgument. The config needs to have a property \"requiredHandlers\"');\n      }\n      if (!videoConfig.visitConfig.visitPollingDelegate) {\n        throw Error('IllegalArgument. The videoConfig\\'s visitConfig needs to have a property \"visitPollingDelegate\"');\n      }\n      if (!videoConfig.videoConsoleContainer || !(videoConfig.videoConsoleContainer instanceof HTMLElement)) {\n        throw Error('IllegalArgument. The videoConfig needs to have a property \"videoConsoleContainer\" of type HTMLElement');\n      }\n      if (!videoConfig.requiredHandlers) {\n        throw Error('IllegalArgument. The videoConfig needs to have a property \"requiredHandlers\"');\n      }\n\n      this.__verifyRequiredHandlers();\n    }\n\n    /* @private */\n\n  }, {\n    key: '__verifyRequiredHandlers',\n    value: function __verifyRequiredHandlers() {\n      if (!Array.isArray(this.__videoConfig.requiredHandlers)) {\n        throw Error('Illegal type. The videoConfig.requiredHandlers must be an array');\n      }\n      var handlers = this.__videoConfig.requiredHandlers;\n      var reqEvents = this.__requiredEventsToHandle;\n      reqEvents.forEach(function (eventType) {\n        var filtered = handlers.filter(function (handler) {\n          return eventType === handler.type;\n        });\n        if (filtered.length === 0) {\n          throw Error('No handler found for event: ' + eventType);\n        }\n      });\n    }\n  }, {\n    key: '__onEndVisitButtonHandler',\n    value: function __onEndVisitButtonHandler(event) {\n      event.stopImmediatePropagation();\n      // delegate to the third party developer first if they presented the config with a callback function to override the default behavior.\n      if (typeof this.__videoConfig.endButtonPressedCallback === 'function') {\n        this.__videoConfig.endButtonPressedCallback.call();\n      } else {\n        // check if in fullscreen and bail if we're going to show our modal:\n        if (this.isInFullScreenMode) {\n          this.toggleFullScreen();\n        }\n        this.__videoConfig.attachPoints.endVisitModalTitle.classList.remove('awcore-hidden');\n        this.__videoConfig.attachPoints.endVisitDescription.classList.remove('awcore-hidden');\n        this.__videoConfig.attachPoints.cancelVisitModalTitle.classList.add('awcore-hidden');\n        this.__videoConfig.attachPoints.cancelVisitDescription.classList.add('awcore-hidden');\n        if (this.__videoConfig.participantType === _awcoresdk_video_participant_type2.default.PROVIDER) {\n          // ensure that only the correct set of options are displayed to the provider\n          this.__toggleProviderEndVisitOptions(!this.__videoConfig.systemConfiguration.disableProviderCancelDuringVisit);\n          this.__showEndVisitContent();\n        } else {\n          this.__toggleProviderEndVisitOptions();\n        }\n        this.__openExitVisitModal();\n      }\n    }\n  }, {\n    key: '__restoreSelfView',\n    value: function __restoreSelfView() {\n      if (!this.__showSelfView) {\n        this.__videoConfig.attachPoints.selfVideoContainer.classList.add('awcore-hidden');\n        this.__videoConfig.attachPoints.hideSelfVideo.classList.add('awcore-show-self');\n        this.__videoConfig.attachPoints.selfVideoParentContainer.classList.remove('active');\n      } else {\n        this.__videoConfig.attachPoints.selfVideoContainer.classList.remove('awcore-hidden');\n        this.__videoConfig.attachPoints.hideSelfVideo.classList.remove('awcore-show-self');\n        this.__videoConfig.attachPoints.selfVideoParentContainer.classList.add('active');\n      }\n    }\n  }, {\n    key: '_isEnterKeyPressed',\n    value: function _isEnterKeyPressed(event) {\n      return event.which === 13 || event.keyCode === 13;\n    }\n  }, {\n    key: '_handleCancelVisitButton',\n    value: function _handleCancelVisitButton(event) {\n      // delegate to the third party developer first if they presented the config with a callback function to override the default behavior.\n      event.stopImmediatePropagation();\n\n      if (typeof this.__videoConfig.cancelButtonPressedCallback === 'function') {\n        this.__videoConfig.cancelButtonPressedCallback.call();\n      } else {\n        this.__videoConfig.attachPoints.endVisitModalTitle.classList.add('awcore-hidden');\n        this.__videoConfig.attachPoints.endVisitDescription.classList.add('awcore-hidden');\n        this.__videoConfig.attachPoints.cancelVisitModalTitle.classList.remove('awcore-hidden');\n        this.__videoConfig.attachPoints.cancelVisitDescription.classList.remove('awcore-hidden');\n        this.__videoConfig.attachPoints.exitVisitModalProviderBody.classList.add('awcore-hidden');\n        this.__videoConfig.attachPoints.exitVisitModalProviderFooter.classList.add('awcore-hidden');\n        this.__videoConfig.attachPoints.exitVisitModalFooter.classList.remove('awcore-hidden');\n        this.__openExitVisitModal();\n      }\n    }\n\n    /* @private */\n\n  }, {\n    key: '__setupDOMEventHandlers',\n    value: function __setupDOMEventHandlers() {\n      var _this = this;\n\n      this.__setupVideoControllersListeners(); // TODO: REMOVE -- inactivity stuff\n\n      this.__videoConfig.attachPoints.camera.onclick = function (event) {\n        _this.__logger.info(event);\n        event.preventDefault();\n        _this.toggleCamera();\n      };\n\n      this.__videoConfig.attachPoints.camera.onkeypress = function (event) {\n        if (!_this._isEnterKeyPressed(event)) return;\n        _this.__logger.info(event);\n        event.preventDefault();\n        _this.toggleCamera();\n      };\n\n      this.__videoConfig.attachPoints.mic.onclick = function (event) {\n        _this.__logger.debug(event);\n        event.preventDefault();\n        _this.toggleMic();\n      };\n\n      this.__videoConfig.attachPoints.mic.onkeypress = function (event) {\n        if (!_this._isEnterKeyPressed(event)) return;\n        _this.__logger.debug(event);\n        event.preventDefault();\n        _this.toggleMic();\n      };\n\n      this.__videoConfig.attachPoints.hideSelfVideo.onclick = function (event) {\n        _this.__logger.debug(event);\n        event.preventDefault();\n        _this.toggleSelfView();\n      };\n\n      this.__videoConfig.attachPoints.hideSelfVideo.onkeypress = function (event) {\n        if (!_this._isEnterKeyPressed(event)) return;\n        _this.__logger.debug(event);\n        event.preventDefault();\n        _this.toggleSelfView();\n      };\n\n      // CWS-112 - Only apply switch camera controls when the device has more than one camera\n      if (this.__videoConfig.attachPoints.switchCameraButton) {\n        this.__videoConfig.attachPoints.switchCameraButton.onclick = function (event) {\n          _this.__logger.debug(event);\n          event.preventDefault();\n          if (typeof _this.toggleSwitchCamera === 'function') {\n            _this.toggleSwitchCamera();\n          }\n        };\n\n        this.__videoConfig.attachPoints.switchCameraButton.onkeypress = function (event) {\n          if (!_this._isEnterKeyPressed(event)) return;\n          _this.__logger.debug(event);\n          event.preventDefault();\n          if (typeof _this.toggleSwitchCamera === 'function') {\n            _this.toggleSwitchCamera();\n          }\n        };\n      }\n\n      if (this.__videoConfig.attachPoints.leave) {\n        this.__videoConfig.attachPoints.leave.innerHTML = this.messages.webrtc_end_visit;\n        this.__videoConfig.attachPoints.leave.onclick = function (event) {\n          _this.__logger.debug(event);\n          event.preventDefault();\n          _this.leaveCall(true);\n        };\n        this.__videoConfig.attachPoints.leave.onkeypress = function (event) {\n          if (!_this._isEnterKeyPressed(event)) return;\n          _this.__logger.debug(event);\n          event.preventDefault();\n          _this.leaveCall(true);\n        };\n      }\n\n      if (this.__videoConfig.attachPoints.refreshButton) {\n        this.__videoConfig.attachPoints.refreshButton.onclick = function (event) {\n          _this.__logger.debug(event);\n          event.preventDefault();\n          _this.__videoConfig.attachPoints.refreshButton.classList.add('awcore-disabled-button');\n          _this.refresh();\n        };\n        this.__videoConfig.attachPoints.refreshButton.onkeypress = function (event) {\n          if (!_this._isEnterKeyPressed(event)) return;\n          _this.__logger.debug(event);\n          event.preventDefault();\n          _this.refresh();\n        };\n      }\n\n      this.__videoConfig.attachPoints.fullScreen.onclick = function (event) {\n        _this.__logger.debug(event);\n        event.preventDefault();\n        _this.toggleFullScreen();\n      };\n\n      this.__videoConfig.attachPoints.fullScreen.onkeypress = function (event) {\n        if (!_this._isEnterKeyPressed(event)) return;\n        _this.__logger.debug(event);\n        event.preventDefault();\n        _this.toggleFullScreen();\n      };\n\n      this.__videoConfig.attachPoints.callMe.onclick = function (event) {\n        if (!_this.__videoConfig.attachPoints.callMe.hasAttribute('disabled')) {\n          _this.__logger.debug(event);\n          event.preventDefault();\n          _this.__callMe();\n        }\n      };\n\n      this.__videoConfig.attachPoints.callMe.onkeypress = function (event) {\n        if (!_this.__videoConfig.attachPoints.callMe.hasAttribute('disabled') && _this._isEnterKeyPressed(event)) {\n          _this.__logger.debug(event);\n          event.preventDefault();\n          _this.__callMe();\n        }\n      };\n\n      if (this.__videoConfig.participantType !== _awcoresdk_video_participant_type2.default.GUEST) {\n        if (this.__videoConfig.attachPoints.cancelVisitButton) {\n          this.__videoConfig.attachPoints.cancelVisitButton.onclick = function (event) {\n            _this._handleCancelVisitButton(event);\n          };\n          this.__videoConfig.attachPoints.cancelVisitButton.onclick = function (event) {\n            if (!_this._isEnterKeyPressed(event)) return;\n            _this._handleCancelVisitButton(event);\n          };\n        }\n        if (this.__videoConfig.attachPoints.spinnerRefreshButton) {\n          this.__videoConfig.attachPoints.spinnerRefreshButton.onclick = function (event) {\n            _this.__logger.debug(event);\n            event.preventDefault();\n            _this.refresh();\n          };\n          this.__videoConfig.attachPoints.spinnerRefreshButton.onkeypress = function (event) {\n            if (!_this._isEnterKeyPressed(event)) return;\n            _this.__logger.debug(event);\n            event.preventDefault();\n            _this.refresh();\n          };\n        }\n\n        // wire up the two different \"talk via phone\" buttons. PermissionDialog version, and ConnectionSpinner version.\n        this.__videoConfig.attachPoints.permissionIvrButton.onclick = this.__onSpinnerIVRClick.bind(this);\n        this.__videoConfig.attachPoints.permissionIvrButton.onkeypress = function (event) {\n          if (!_this._isEnterKeyPressed(event)) return;\n          _this.__onSpinnerIVRClick(event);\n        };\n\n        this.__videoConfig.attachPoints.spinnerIvrButton.onclick = this.__onSpinnerIVRClick.bind(this);\n        this.__videoConfig.attachPoints.spinnerIvrButton.onkeypress = function (event) {\n          if (!_this._isEnterKeyPressed(event)) return;\n          _this.__onSpinnerIVRClick(event);\n        };\n\n        this.__videoConfig.attachPoints.endVisitLink.onclick = this.__onEndVisitButtonHandler.bind(this);\n        this.__videoConfig.attachPoints.endVisitLink.onkeypress = function (event) {\n          if (!_this._isEnterKeyPressed(event)) return;\n          _this.__onEndVisitButtonHandler(event);\n        };\n      } else {\n        // call me is hidden for guests:\n        this.__videoConfig.attachPoints.callMe.classList.add('awcore-hidden');\n      }\n\n      if (this.__videoConfig.attachPoints.endVisitButton) {\n        this.__videoConfig.attachPoints.endVisitButton.onclick = this.__onEndVisitButtonHandler.bind(this);\n      }\n\n      // monitor actual fullscreen change events, and update our internal tracker\n      // and visual state to reflect reality\n      this.__connect(document, _fullscreen2.default.CHANGE, function () {\n        _this.isFullScreen = !_this.isFullScreen;\n        _this.__toggleClass(_this.__videoConfig.attachPoints.fullScreen, 'awcore-on');\n      });\n\n      // In order to support uses cases where the video console is in the shadow dom (widgets), we need to\n      // be able to determine if we have a shadow root or not. This is important because without doing so the click event\n      // that bubbles up and out of a shadow root will have its target re-assigned to the ShadowRoot itself\n      // which breaks the logic in __documentClick that expects the target to be elements of the device list\n      var currentNode = this.__videoConfig.videoConsoleContainer;\n      while (currentNode) {\n        if ((document.head.createShadowRoot || document.head.attachShadow) && currentNode instanceof ShadowRoot) {\n          break;\n        }\n        currentNode = currentNode.parentNode;\n      }\n\n      if (currentNode) {\n        this.__connect(currentNode, 'click', this.__documentClick);\n      } else {\n        this.__connect(document, 'click', this.__documentClick);\n      }\n\n      var displayMessageEle = this.__videoConfig.attachPoints.waitDisplayMessage;\n\n      (0, _empty2.default)(displayMessageEle);\n      // we're forking implementations here, since we're not back-porting the spinner states\n      var name = this.__videoConfig.remoteParticipants[0].name;\n      if (this.__videoConfig.vendor === _awcoresdk_vendor2.default.VIDYO) {\n        displayMessageEle.innerHTML = this.messages.connecting_with_remote.replace('{remoteName}', name);\n        var isTypeOfUserAllowedCancel = this.__videoConfig.participantType !== _awcoresdk_video_participant_type2.default.GUEST;\n        var providerAllowedToCancel = this.__videoConfig.participantType === _awcoresdk_video_participant_type2.default.PROVIDER && !this.__videoConfig.systemConfiguration.disableProviderCancelDuringVisit;\n        var consumerAllowedToCancel = this.__videoConfig.participantType === _awcoresdk_video_participant_type2.default.CONSUMER && !this.__videoConfig.systemConfiguration.disableConsumerCancelDuringVisit;\n        var isAllowToCancel = isTypeOfUserAllowedCancel && (providerAllowedToCancel || consumerAllowedToCancel);\n        if (isAllowToCancel) {\n          this.__startCancelTimer();\n        }\n      } else {\n        var logger = this.__logger;\n        var viewRenderer = new _view_renderer2.default(displayMessageEle);\n        var context = this.__videoConfig;\n        var isRefresh = !!this.__state.pageRefreshCount;\n        this.__spinnerManager = new _spinner_manager2.default({\n          localParticipant: this.__videoConfig.localParticipant,\n          remoteParticipants: this.__videoConfig.remoteParticipants,\n          messages: this.messages,\n          logger: logger,\n          viewRenderer: viewRenderer,\n          context: context,\n          isRefresh: isRefresh,\n          isIVRCallbackEnabled: this.__videoConfig.isIVRCallbackEnabled\n        });\n      }\n      this.__startInactiveTimer();\n    }\n\n    /**\r\n    * Given the configuration, this function starts the video.\r\n    *\r\n    * @returns {Promise} a promise that resolve when the video client is started\r\n    */\n\n  }, {\n    key: 'start',\n    value: function start() {\n      throw new Error('start must be overridden in a subclass');\n    }\n  }, {\n    key: 'cancelTokenRefresh',\n    value: function cancelTokenRefresh() {}\n\n    /**\r\n     * Teardown the video console. Implementations *must* call the super\r\n     *\r\n     * @returns {undefined} No return value\r\n     */\n\n  }, {\n    key: 'stop',\n    value: function stop() {\n      this.__events.forEach(_event.disconnect);\n      if (this.__spinnerManager) {\n        this.__spinnerManager.stop();\n      }\n    }\n\n    /**\r\n    * Given the configuration, this function refreshes the video.\r\n    *\r\n    * @returns {undefined} this function has no return.\r\n    */\n\n  }, {\n    key: 'refresh',\n    value: function refresh() {\n      this.__refreshInProgress = true;\n      this.__updateRetryMetrics();\n      // Stop the visit and then connect\n      this.leaveCall(true);\n      this.stop();\n      this.__shouldRefresh = true;\n      this.start();\n\n      // for Vidyo, start() returns a promise that resolves immediately, well before the video is started\n      // __refreshInProgress needs to get set to false in the vendor specific implementation\n    }\n\n    /**\r\n     * Extraction of triggering a manual retry metric\r\n     *\r\n     * @private\r\n     * @returns {Promise<*>} A promise attached to the delegate success state\r\n     */\n\n  }, {\n    key: '__updateRetryMetrics',\n    value: function __updateRetryMetrics() {\n      this.metrics.manualRetryCount += 1;\n      var delegate = this.__videoConfig.visitConfig.visitPollingDelegate;\n      return delegate.updateMetrics(this.__videoConfig.visitConfig.visit, this.metrics);\n    }\n\n    /**\r\n     * This method allows the client to send events to video console\r\n     * Supported Events:\r\n     * <table>\r\n     * <tr><th>Event</th><th>Description</th></tr>\r\n     * <tr><td>leaveEvent</td><td>When participant leaves a visit</td></tr>\r\n     * <tr><td>muteMicEvent</td><td>When participant mutes microphone</td></tr>\r\n     * <tr><td>unmuteMicEvent</td><td>When participant unmutes microphone</td></tr>\r\n     * <tr><td>disableCameraEvent</td><td>When participant disables camera</td></tr>\r\n     * <tr><td>enableCameraEvent</td><td>When participant enables camera</td></tr>\r\n     * <tr><td>sendChatMessageEvent</td><td>When participant sends a chat message</td></tr>\r\n     * </table>\r\n     *\r\n     * @callback success the callback function to be called when success\r\n     * @callback failure the callback function to be called when failure\r\n     * @param {Object} event the event to be sent\r\n     * @returns {boolean} returns a boolean true if the event is supported, false otherwise.\r\n     *\r\n     */\n    /* eslint-disable no-unused-vars */\n\n  }, {\n    key: 'sendEvent',\n    value: function sendEvent(event, success, failure) {}\n    // throw new Error('sendEvent must be overridden in a subclass', event);\n\n\n    /**\r\n     * This method allows the registering of events handlers.\r\n     * Please note that registering for an event that already has a handler assigned will replace the existing handler with the new one.\r\n     * Supported Events:\r\n     * <table>\r\n     * <tr><th>Event</th><th>Description</th></tr>\r\n     * <tr><td>localParticipantJoinedEvent</td><td>When local participant joins a conference</td></tr>\r\n     * <tr><td>localParticipantLeftEvent</td><td>When local participant leaves a conference</td></tr>\r\n     * <tr><td>remoteParticipantJoinedEvent</td><td>When remote participant joins a conference</td></tr>\r\n     * <tr><td>remoteParticipantLeftEvent</td><td>When remote participant leaves a conference</td></tr>\r\n     * <tr><td>onExitVisitRequested</td><td>Called when a participant accepts canceling or ending a conference</td></tr>\r\n     * <tr><td>conferenceEndedEvent</td><td>When conference ends</td></tr>\r\n     * <tr><td>remoteMicMutedEvent</td><td>When remote participant mutes microphone</td></tr>\r\n     * <tr><td>remoteMicUnmutedEvent</td><td>When remote participant unmutes microphone</td></tr>\r\n     * <tr><td>remoteCameraDisabledEvent</td><td>When remote participant disables camera</td></tr>\r\n     * <tr><td>remoteCameraEnabledEvent</td><td>When remote participant enables camera</td></tr>\r\n     * <tr><td>chatMessageReceivedEvent</td><td>When a chat message is received</td></tr>\r\n     * <tr><td>callMeEvent</td><td>When a participant wants to be called</td></tr>\r\n     * </table>\r\n     *\r\n     * @param {AWCoreSDKBaseEventHandler|AWCoreSDKBaseEventHandler[]} eventHandler defines an event handler\r\n     * @returns {undefined} this function has no return\r\n     */\n\n  }, {\n    key: 'registerHandler',\n    value: function registerHandler(eventHandler) {\n      var _this2 = this;\n\n      if (Array.isArray(eventHandler)) {\n        eventHandler.forEach(function (handler) {\n          // replace existing handler, if one exists\n          _this2.__replaceOrAddHandler(handler);\n        });\n      } else {\n        this.__replaceOrAddHandler(eventHandler);\n      }\n    }\n\n    /**\r\n     * This method adds a handler, if none exists. Otherwise it replaces it.\r\n     *\r\n     * @private\r\n     * @param {AWCoreSDKBaseEventHandler} handler the handler to be used.\r\n     * @returns {undefined} does not return a value.\r\n     */\n\n  }, {\n    key: '__replaceOrAddHandler',\n    value: function __replaceOrAddHandler(handler) {\n      if (!(handler instanceof _awcoresdk_base_event_handler2.default)) {\n        throw Error('IllegalArgument. Handler: ' + handler + ' is not of type AWCoreSDKBaseEventHandler');\n      }\n      var existingIndex = this.__registeredHandlers.indexOf(function (item) {\n        return item.type === handler.type;\n      });\n      if (existingIndex !== -1) {\n        this.__registeredHandlers[existingIndex] = handler;\n      } else {\n        this.__registeredHandlers.push(handler);\n      }\n    }\n\n    /**\r\n     * Leave the video conference\r\n     *\r\n     * @param {boolean=} wasUserRequested (optional) Whether or not the user proactively requested the visit to end\r\n     * @returns {boolean} returns true if successfully left video conference, false otherwise.\r\n     */\n\n  }, {\n    key: 'leaveCall',\n    value: function leaveCall(wasUserRequested) {\n      throw new Error('leaveCall must be overridden in a subclass');\n    }\n\n    /**\r\n     * Toggles the mic on/off\r\n     *\r\n     * @returns {boolean} returns true if success, false otherwise\r\n     */\n\n  }, {\n    key: 'toggleMic',\n    value: function toggleMic() {\n      throw new Error('toggleMic must be overridden in a subclass');\n    }\n\n    /**\r\n     * Toggles the local camera on/off.\r\n     *\r\n     * @returns {boolean} returns true if success, false otherwise\r\n     */\n\n  }, {\n    key: 'toggleCamera',\n    value: function toggleCamera() {\n      throw new Error('toggleCamera must be overridden in a subclass');\n    }\n\n    /**\r\n     * Toggles device camera - if the device is mobile, we can switch the\r\n     * front camera to back camera and vice versa\r\n     *\r\n     * @returns {undefined} does not return a value\r\n     */\n\n  }, {\n    key: 'toggleSwitchCamera',\n    value: function toggleSwitchCamera() {}\n    // default no-op impl\n\n\n    /* private */\n\n  }, {\n    key: '__getCurrentTrackSettings',\n    value: function __getCurrentTrackSettings(kind) {\n      var src = this.__videoConfig.attachPoints.selfVideo.srcObject;\n      return src[kind === 'audio' ? 'getAudioTracks' : 'getVideoTracks']()[0].getSettings();\n    }\n\n    /**\r\n     * Toggles between a full-screen view and non-full screen\r\n     *\r\n     * @returns {undefined} this function has no return\r\n     */\n\n  }, {\n    key: 'toggleFullScreen',\n    value: function toggleFullScreen() {\n      this._setNodeAttribute(this.__videoConfig.attachPoints.fullScreen, 'aria-checked', !this.isFullScreen);\n      if (!this.isFullScreen) {\n        // go to full screen\n        (0, _fullscreen2.default)(this.__videoConfig.attachPoints.rootContainer);\n      } else {\n        _fullscreen2.default.off();\n      }\n    }\n\n    /**\r\n     * Function handles internet disconnection. Displays message and calls\r\n     * polling function.\r\n     *\r\n     * @returns {undefined} This function has no return value.\r\n     */\n\n  }, {\n    key: 'handleInternetDisconnection',\n    value: function handleInternetDisconnection() {\n      this.__videoConfig.attachPoints.topPaneWrapper.classList.remove('awcore-call-active');\n      this.__videoConfig.attachPoints.mutedIcon.classList.toggle('awcore-hidden');\n      this.__videoConfig.attachPoints.videoContainer.classList.remove('awcore-call-active');\n      this.__videoConfig.attachPoints.videoControlsContainer.classList.remove('awcore-call-active');\n      this.__videoConfig.attachPoints.spinnerContainer.classList.remove('awcore-call-active');\n      this.__videoConfig.remoteParticipants[0].videoNode.classList.add('awcore-hidden');\n      this.__videoConfig.attachPoints.selfVideo.classList.toggle('awcore-hidden');\n      this.__videoConfig.attachPoints.waitDisplayMessage.innerHTML = this.messages.participant_connection_issue;\n    }\n  }, {\n    key: '__setupVideoControllersListeners',\n    value: function __setupVideoControllersListeners() {\n      this.__videoConfig.attachPoints.rootContainer.addEventListener('mousemove', this.__resetInactiveTimer.bind(this), false);\n      this.__videoConfig.attachPoints.rootContainer.addEventListener('touchstart', this.__resetInactiveTimer.bind(this), false);\n      this.__videoConfig.attachPoints.rootContainer.addEventListener('touchmove', this.__resetInactiveTimer.bind(this), false);\n    }\n  }, {\n    key: '__startInactiveTimer',\n    value: function __startInactiveTimer() {\n      this.__timeoutID = window.setTimeout(this.__goInactive.bind(this), 8000);\n    }\n  }, {\n    key: '__resetInactiveTimer',\n    value: function __resetInactiveTimer() {\n      window.clearTimeout(this.__timeoutID);\n      this.__goActive();\n    }\n  }, {\n    key: '__goActive',\n    value: function __goActive() {\n      this.__videoConfig.attachPoints.rootContainer.classList.remove('awcore-hiddenControllers');\n      this.__startInactiveTimer();\n    }\n  }, {\n    key: '__goInactive',\n    value: function __goInactive() {\n      this.__videoConfig.attachPoints.rootContainer.classList.add('awcore-hiddenControllers');\n    }\n  }, {\n    key: '__showCancelVisitWaitingButton',\n    value: function __showCancelVisitWaitingButton() {\n      this.__videoConfig.attachPoints.cancelVisitButtonParent.classList.remove('awcore-hidden');\n\n      // If the user is a provider, or a member but the provider has already connected to the visit, we want to supress the subtext (you won't be charged)\n      if (this.__videoConfig.participantType === _awcoresdk_video_participant_type2.default.PROVIDER || this.__videoConfig.visitConfig.visit.providerConnected) {\n        this.__videoConfig.attachPoints.cancelVisitButtonSubText.classList.add('awcore-hidden');\n      }\n    }\n  }, {\n    key: '__startCancelTimer',\n    value: function __startCancelTimer() {\n      var timeout = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 30000;\n\n      this.__cancelTimer = window.setTimeout(this.__showCancelVisitWaitingButton.bind(this), timeout);\n    }\n  }, {\n    key: 'clearCancelTimer',\n    value: function clearCancelTimer() {\n      window.clearTimeout(this.__cancelTimer);\n    }\n\n    /**\r\n     * Returns true if in full screen mode\r\n     *\r\n     * @returns {boolean} true if in full screen mode, false otherwise\r\n     */\n\n  }, {\n    key: 'stopRetries',\n\n\n    /**\r\n     * This function tells the client to stop any further call retries\r\n     *\r\n     * @returns {undefined} this function has no return.\r\n     */\n    value: function stopRetries() {}\n\n    /**\r\n     * The vendor assigned ID for the local participant\r\n     *\r\n     * @returns {undefined} no default return value\r\n     */\n\n  }, {\n    key: 'showPermissionDeniedMessage',\n\n\n    /**\r\n     * This function displays a permission error\r\n     *\r\n     * @returns {undefined} this function has no return\r\n     */\n    value: function showPermissionDeniedMessage() {\n      if (this.__videoConfig.attachPoints && this.__videoConfig.attachPoints.waitDisplayMessage) {\n        this.__videoConfig.attachPoints.waitDisplayMessage.innerHTML = this.messages.media_permission_denied;\n      }\n    }\n\n    /**\r\n     * Updates the visit set on the visitConfig\r\n     *\r\n     * @param {Object} visit the new visit to be set on the config.\r\n     * @returns {undefined} this function has no return\r\n     */\n\n  }, {\n    key: 'updateConfigVisit',\n    value: function updateConfigVisit(visit) {\n      this.__videoConfig.visitConfig.visit = visit;\n      // now, lets make sure that the updated visit still allows for WebAddPhone\n      if (visit.hideSwitchToPhone) {\n        this.__videoConfig.attachPoints.callMe.classList.add('awcore-hidden');\n      } else {\n        this.__videoConfig.attachPoints.callMe.classList.remove('awcore-hidden');\n      }\n    }\n\n    /**\r\n     * Updates the Consumer/Provider details in the top left hand corner of the screen. Invoked when the video first loads, but also when the active speaker changes.\r\n     *\r\n     * @since 1.0.15\r\n     * @param {Object} user the remote participant. This value is derived from the visit object and is not specific to the underlying video implementation.\r\n     * @param {AWCoreSDKVideoParticipantType} type Indicating the type of remote user.\r\n     * @returns {undefined} this function has no return\r\n     */\n\n  }, {\n    key: 'updateRemoteParticipantLabels',\n    value: function updateRemoteParticipantLabels(user, type) {\n      if (user) {\n        var activeSpeakerNameNode = this.__videoConfig.remoteParticipants[0].nameNode;\n        var activeSpeakerSubtitleNode = this.__videoConfig.remoteParticipants[0].subtitleNode;\n        activeSpeakerNameNode.innerHTML = user.fullName;\n        if (type === _awcoresdk_video_participant_type2.default.PROVIDER) {\n          // deal with differences between CWSDK and PWSDK for specialty\n          activeSpeakerSubtitleNode.innerHTML = user.specialty.value || user.specialty;\n        } else if (type === _awcoresdk_video_participant_type2.default.CONSUMER) {\n          var age = (0, _replace2.default)(this.messages.consumer_subtitle_age, user);\n          var spacer = '<span class=\"spacer\"></span> | <span class=\"spacer\"></span>';\n          // TODO: make this less trash\n          var htmlStr = void 0;\n          if (this.__videoConfig.systemConfiguration.hideConsumerStateEnabled) {\n            htmlStr = age + ' ' + spacer + ' ' + this.getGenderDisplay(user);\n          } else {\n            htmlStr = age + ' ' + spacer + ' ' + this.getGenderDisplay(user) + ' ' + spacer + ' ' + user.legalResidence.code;\n          }\n          activeSpeakerSubtitleNode.innerHTML = htmlStr;\n        } else {\n          // for guests, we never know their demographics. best to clear it out.\n          this.__clearOutSubtitleNode(activeSpeakerSubtitleNode);\n        }\n      }\n    }\n  }, {\n    key: 'getGenderDisplay',\n    value: function getGenderDisplay(user) {\n      var genderIdentity = user.genderIdentity && user.genderIdentity.genderText || this.messages.gender_unspecified;\n      var biologicalSex = user.localizedGender || this.messages.gender_unspecified;\n      var genderDisplay = user.localizedGender;\n\n      // We only show the gender Identity style display if the value is different than the gender (biological sex)\n      if (this.__videoConfig.systemConfiguration.genderSupportEnabled && biologicalSex.toLowerCase() !== genderIdentity.toLowerCase()) {\n        genderDisplay = genderIdentity + ' (' + biologicalSex + ')';\n      }\n\n      return genderDisplay;\n    }\n  }, {\n    key: 'updateRemoteParticipantLabelsFromConfig',\n    value: function updateRemoteParticipantLabelsFromConfig() {\n      var user = void 0;\n      var type = this.__videoConfig.localParticipant.participantType === _awcoresdk_video_participant_type2.default.CONSUMER ? _awcoresdk_video_participant_type2.default.PROVIDER : _awcoresdk_video_participant_type2.default.CONSUMER;\n      var visit = this.__videoConfig.visitConfig.visit;\n      if (type === _awcoresdk_video_participant_type2.default.CONSUMER) {\n        user = visit.consumer;\n      } else {\n        user = visit.assignedProvider;\n      }\n\n      this.updateRemoteParticipantLabels(user, type);\n    }\n  }, {\n    key: 'updateActiveSpeaker',\n    value: function updateActiveSpeaker(uuid, fallback) {\n      var visit = this.__videoConfig.visitConfig.visit;\n      // the name node should reflect the speaker's full name\n      var activeSpeakerNameNode = this.__videoConfig.remoteParticipants[0].nameNode;\n      // the subtitle is a little different. For Consumers, it should show some basic demographics. For providers, it should show the practice in which they are currently practicing\n      var activeSpeakerSubtitleNode = this.__videoConfig.remoteParticipants[0].subtitleNode;\n      var matchingParticipant = visit.participantById(uuid);\n      if (matchingParticipant && matchingParticipant.user) {\n        this.updateRemoteParticipantLabels(matchingParticipant.user, matchingParticipant.type);\n      } else {\n        activeSpeakerNameNode.innerHTML = fallback;\n        this.__clearOutSubtitleNode(activeSpeakerSubtitleNode);\n      }\n    }\n  }, {\n    key: 'indicateLocalVideoActive',\n    value: function indicateLocalVideoActive() {\n      this.__videoConfig.attachPoints.selfVideoParentContainer.classList.add('loaded', 'active');\n    }\n\n    /**\r\n     * Returns an indicator for the status of a video console refresh.\r\n     *\r\n     * @returns {boolean} the status of the refresh\r\n     */\n\n  }, {\n    key: '__setupAttachPoints',\n\n\n    /**\r\n     * This function sets up the attachPoints\r\n     *\r\n     * @private\r\n     * @returns {undefined} this function has no return\r\n     * @since 1.0.13\r\n     */\n    value: function __setupAttachPoints() {\n      var currentFunction = 'AWCoreSDKVideoConsole#__setupAttachPoints';\n      this.__logger.debug(currentFunction, 'Started');\n      var parentNode = this.__videoConsoleDOMFragment;\n      if (parentNode) {\n        // this is crazy:\n        this.__videoConfig.__config.attachPoints = (0, _attach2.default)(parentNode);\n        this.__logger.debug('Successfully setup the attachPoints', Object.keys(this.__videoConfig.attachPoints));\n      } else {\n        this.__logger.error(currentFunction, 'The video console HTML string is null or undefined');\n        throw Error('InternalError: The video console HTML string is null or undefined');\n      }\n    }\n\n    /**\r\n     * This function sets up the video console and attaches it to a node element\r\n     *\r\n     * @private\r\n     * @returns {undefined} this function has no return.\r\n     * @since 1.0.13\r\n     */\n\n  }, {\n    key: '__setupVideoConsole',\n    value: function __setupVideoConsole() {\n      var currentFunction = 'AWCoreSDKInternalVideoConsole#__setupVideoConsole';\n      this.__logger.debug(currentFunction, 'Started');\n      try {\n        var videoConsoleContent = (0, _replace2.default)(_videoconsole_template2.default, this);\n        if (videoConsoleContent) {\n          // Clear out whatever is attached to the container, there can be only 1\n          (0, _empty2.default)(this.__videoConfig.videoConsoleContainer);\n\n          // Setup new console and attach to container\n          this.__videoConsoleDOMFragment = document.createRange().createContextualFragment(videoConsoleContent);\n          this.__setupAttachPoints();\n          this.__setupVideoParticipants();\n          this.__setupExitModal();\n          this.__restoreSelfView();\n          this.toggleCallMeDisabled(this.__videoConfig.visitConfig.visit);\n          this.__videoConfig.videoConsoleContainer.appendChild(this.__videoConsoleDOMFragment);\n          this.__logger.debug('Successfully attached the video console to the console container', this.__videoConfig.videoConsoleContainer);\n          if (this.__videoConfig.localParticipant.isGuest) {\n            this.__videoConfig.attachPoints.endVisitButton.innerHTML = this.messages.webrtc_guest_leave_visit;\n            this.__videoConfig.attachPoints.permissionsCallMeContainer.classList.add('awcore-hidden');\n            this.__videoConfig.attachPoints.callMe.classList.add('awcore-hidden');\n          }\n          this.__videoConfig.attachPoints.rootContainer.classList.add(this.__buildBrowserClassString());\n        } else {\n          this.__logger.error(currentFunction, 'The video console HTML string is null or undefined');\n          throw Error('InternalError: The video console HTML string is null or undefined');\n        }\n      } catch (error) {\n        this.__logger.error(currentFunction, 'error', error);\n        throw Error('InternalError: The video console could not be setup');\n      }\n    }\n\n    /**\r\n     * This function sets up the local and remote video participants\r\n     *\r\n     * @private\r\n     * @returns {undefined} this function has no return.\r\n     * @since 1.0.13\r\n     */\n\n  }, {\n    key: '__setupVideoParticipants',\n    value: function __setupVideoParticipants() {\n      var currentFunction = 'AWCoreSDKInternalVideoConsole#__setupVideoParticipants';\n      this.__logger.debug(currentFunction, 'Started');\n      this.__logger.debug('Setting up participants using participantType of ', this.__videoConfig.participantType);\n      var _videoConfig$attachP = this.__videoConfig.attachPoints,\n          localViewName = _videoConfig$attachP.localViewName,\n          rootParticipantSubtitle = _videoConfig$attachP.rootParticipantSubtitle,\n          participant0 = _videoConfig$attachP.participant0,\n          selfVideo = _videoConfig$attachP.selfVideo,\n          mainVideo = _videoConfig$attachP.mainVideo;\n\n\n      switch (this.__videoConfig.participantType) {\n        case _awcoresdk_video_participant_type2.default.CONSUMER:\n          this.__videoConfig.__config.localParticipant = this.__createWebRTCVideoParticipant(this.__videoConfig.consumerFullName, selfVideo, localViewName, _awcoresdk_video_participant_type2.default.CONSUMER);\n          this.__videoConfig.__config.remoteParticipants = [this.__createWebRTCVideoParticipant(this.__videoConfig.providerFullName, mainVideo, participant0, _awcoresdk_video_participant_type2.default.PROVIDER, rootParticipantSubtitle)];\n          break;\n        case _awcoresdk_video_participant_type2.default.PROVIDER:\n          this.__videoConfig.__config.localParticipant = this.__createWebRTCVideoParticipant(this.__videoConfig.providerFullName, selfVideo, localViewName, _awcoresdk_video_participant_type2.default.PROVIDER);\n          this.__videoConfig.__config.remoteParticipants = [this.__createWebRTCVideoParticipant(this.__videoConfig.consumerFullName, mainVideo, participant0, _awcoresdk_video_participant_type2.default.CONSUMER, rootParticipantSubtitle)];\n          break;\n        default:\n          this.__videoConfig.__config.localParticipant = this.__createWebRTCVideoParticipant(this.__videoConfig.displayNameOverride || this.messages.webrtc_guest_name_default, selfVideo, localViewName, _awcoresdk_video_participant_type2.default.GUEST);\n          this.__videoConfig.__config.remoteParticipants = [this.__createWebRTCVideoParticipant(this.__videoConfig.providerFullName, mainVideo, participant0, _awcoresdk_video_participant_type2.default.PROVIDER, rootParticipantSubtitle)];\n          this.__videoConfig.__config.remoteParticipants.push(this.__createWebRTCVideoParticipant(this.__videoConfig.consumerFullName, mainVideo, participant0, _awcoresdk_video_participant_type2.default.CONSUMER, rootParticipantSubtitle));\n      }\n      this.__logger.debug('Successfully setup the local and remote participants', this.__videoConfig);\n    }\n\n    /**\r\n     * This function creates a video participant of the given type.\r\n     *\r\n     * @param {string} name the name of the participant as it should appear in the video console\r\n     * @param {HTMLElement} videoNode a reference to the <video> HTML element that will render the participant's self-view\r\n     * @param {HTMLElement} nameNode a reference to the HTML element that will render the participant's name\r\n     * @param {AWCoreSDKVideoParticipantType} participantType the type of the participant: 'Consumer', 'Provider' or 'Guest'\r\n     * @param {HTMLElement} subtitleNode a reference to the HTML element that will render the participant's subtitle\r\n     * @returns {AWCoreSDKVideoParticipant} a fully constructed instance of AWCoreSDKVideoParticipant\r\n     * @since 1.0.13\r\n     */\n\n  }, {\n    key: '__createWebRTCVideoParticipant',\n    value: function __createWebRTCVideoParticipant(name, videoNode, nameNode, participantType, subtitleNode) {\n      return new _participant2.default({\n        name: name, participantType: participantType, videoNode: videoNode, nameNode: nameNode, subtitleNode: subtitleNode\n      });\n    }\n\n    /**\r\n     * This function sets up additional exit modal elements for a provider\r\n     *\r\n     * @private\r\n     * @returns {undefined} this function has no return\r\n     * @since 1.0.13\r\n     */\n\n  }, {\n    key: '__setupProviderExitModal',\n    value: function __setupProviderExitModal() {\n      var _this3 = this;\n\n      var currentFunction = 'AWCoreSDKInternalVideoConsole#__setupProviderExitModal';\n      this.__logger.debug(currentFunction, 'Started');\n      var _videoConfig = this.__videoConfig,\n          attachPoints = _videoConfig.attachPoints,\n          systemConfiguration = _videoConfig.systemConfiguration;\n\n      attachPoints.exitVisitModalContinueExit.innerHTML = this.messages.webrtc_end_visit;\n      if (systemConfiguration.disableProviderCancelDuringVisit) {\n        // if we're disablingProviderCancel, force 'end' as the action.\n        // the UI ends up defaulting to the simple 'yes'/'no' prompt, bypassing the radio buttons (attached below)\n        // the `confirmEnd` button is the actual confirmation, so we need to ensure that element has a value=\"\"\n        // as is used by the `exitVisit` handler.\n        attachPoints.confirmEnd.value = 'end';\n      } else {\n        attachPoints.endVisitRadioButton.onclick = function (event) {\n          return _this3.__onExitRadioButtonClicked(event);\n        };\n        attachPoints.cancelVisitRadioButton.onclick = function (event) {\n          return _this3.__onExitRadioButtonClicked(event);\n        };\n      }\n      this.__logger.debug(currentFunction, 'Finished');\n    }\n\n    /**\r\n     * This function sets up the exit modal\r\n     *\r\n     * @private\r\n     * @returns {undefined} this function has no return\r\n     * @since 1.0.13\r\n     */\n\n  }, {\n    key: '__setupExitModal',\n    value: function __setupExitModal() {\n      var _this4 = this;\n\n      var currentFunction = 'AWCoreSDKInternalVideoConsole#__setupExitModal';\n      this.__logger.debug(currentFunction, 'Started');\n      if (this.__videoConfig.participantType === _awcoresdk_video_participant_type2.default.PROVIDER) {\n        this.__setupProviderExitModal();\n      }\n      this.exitVisitModal = this.__videoConfig.attachPoints.endVisitModal;\n      var confirmEnd = this.__videoConfig.attachPoints.confirmEnd;\n      var disregardEnd = this.__videoConfig.attachPoints.disregardEnd;\n      var closeModal = this.__videoConfig.attachPoints.closeModal;\n      var dismissModal = function dismissModal(event) {\n        if (event) {\n          event.preventDefault();\n        }\n        _this4.__closeExitVisitModal();\n      };\n      var exitVisit = function exitVisit(event) {\n        event.preventDefault();\n        _this4.__exitVisit(event.target.value, _this4.__videoConfig.attachPoints.exitVisitModalProviderComments.value).then(function (visit) {\n          _this4.__logger.debug('Successfully exited the visit', visit);\n          if (_this4.isInFullScreenMode) {\n            _this4.toggleFullScreen();\n          }\n        }).finally(function () {\n          return dismissModal();\n        });\n      };\n      confirmEnd.onclick = exitVisit;\n      disregardEnd.onclick = dismissModal;\n      closeModal.onclick = dismissModal;\n      this.__videoConfig.attachPoints.exitVisitModalContinueExit.onclick = exitVisit;\n      this.__videoConfig.attachPoints.exitVisitModalGoBack.onclick = dismissModal;\n      this.__logger.debug(currentFunction, 'Successfully setup the exit modal');\n    }\n\n    /**\r\n     * This function calls the onExitVisitRequested event handler\r\n     *\r\n     * @private\r\n     * @param {string} exitType The exit type. This can be cancel or end\r\n     * @param {string=} comments The comments from the provider\r\n     * @returns {Object} An updated visit or an error\r\n     * @since 1.0.13\r\n     */\n\n  }, {\n    key: '__exitVisit',\n    value: function __exitVisit(exitType, comments) {\n      var exitVisitHandler = this.__findHandler('onExitVisitRequested');\n      if (exitVisitHandler) {\n        return exitVisitHandler.handler(exitType, comments);\n      }\n      return Promise.reject(new Error('No handler found for onExitVisitRequested'));\n    }\n\n    /**\r\n     * This function opens the exit visit modal\r\n     *\r\n     * @private\r\n     * @returns {undefined} this function has no return.\r\n     * @since 1.0.13\r\n     */\n\n  }, {\n    key: '__openExitVisitModal',\n    value: function __openExitVisitModal() {\n      if (this.exitVisitModal) {\n        if (this.__videoConfig.participantType === _awcoresdk_video_participant_type2.default.PROVIDER) {\n          var millisecondsRemaining = this.__videoConfig.visitConfig.visit.timeRemainingMilliseconds;\n          var timeRemaining = millisecondsRemaining > 60000 ? Math.floor(millisecondsRemaining / 60000) : 1;\n\n          // just use the default message (already set in the template) if there is 0 time remaining\n          if (timeRemaining > 0) {\n            var message = timeRemaining === 1 ? this.messages.webrtc_end_visit_confirmation_singular : (0, _replace2.default)(this.messages.webrtc_end_visit_confirmation_plural, { timeRemaining: timeRemaining });\n\n            this.__videoConfig.attachPoints.endVisitDescription.innerHTML = message;\n          }\n\n          // only allow visits which have not started yet to be cancelled\n          var inProgress = this.__videoConfig.visitConfig.visit.isInProgress;\n          this.__videoConfig.attachPoints.endVisitRadio.classList.toggle('awcore-hidden', !inProgress);\n          if (!inProgress) {\n            this.__showCancelVisitContent();\n          }\n        }\n\n        this.exitVisitModal.classList.remove('awcore-hidden');\n      }\n    }\n\n    /**\r\n     * This function closes the exit visit modal\r\n     *\r\n     * @private\r\n     * @returns {undefined} this function has no return.\r\n     * @since 1.0.13\r\n     */\n\n  }, {\n    key: '__closeExitVisitModal',\n    value: function __closeExitVisitModal() {\n      if (this.exitVisitModal) {\n        this.exitVisitModal.classList.add('awcore-hidden');\n      }\n    }\n\n    /**\r\n     * This function displays the appropriate content depending of the exit modal buttons\r\n     *\r\n     * @private\r\n     * @param {Event} event the event\r\n     * @returns {undefined} this function has no return.\r\n     * @since 1.0.13\r\n     */\n\n  }, {\n    key: '__onExitRadioButtonClicked',\n    value: function __onExitRadioButtonClicked(event) {\n      if (event.target.value === 'end') {\n        this.__showEndVisitContent();\n      } else {\n        this.__showCancelVisitContent();\n      }\n    }\n\n    /**\r\n     * This function displays the end visit modal button content\r\n     *\r\n     * @private\r\n     * @returns {undefined} this function has no return.\r\n     * @since 1.0.13\r\n     */\n\n  }, {\n    key: '__showEndVisitContent',\n    value: function __showEndVisitContent() {\n      this.__videoConfig.attachPoints.exitVisitModalContinueExit.innerHTML = this.messages.webrtc_end_visit;\n      this.__videoConfig.attachPoints.exitVisitModalContinueExit.value = 'end';\n      this.__videoConfig.attachPoints.endVisitRadioButton.checked = true;\n      this.__videoConfig.attachPoints.exitVisitModalProviderCancelContainer.classList.add('awcore-hidden');\n    }\n\n    /**\r\n     * This function displays the cancel visit modal button content\r\n     *\r\n     * @private\r\n     * @returns {undefined} this function has no return.\r\n     * @since 1.0.13\r\n     */\n\n  }, {\n    key: '__showCancelVisitContent',\n    value: function __showCancelVisitContent() {\n      if (!this.__videoConfig.systemConfiguration.disableProviderCancelDuringVisit) {\n        this.__videoConfig.attachPoints.exitVisitModalContinueExit.innerHTML = this.messages.webrtc_cancel_visit;\n        this.__videoConfig.attachPoints.exitVisitModalContinueExit.value = 'cancel';\n        this.__videoConfig.attachPoints.exitVisitModalProviderCancelContainer.classList.remove('awcore-hidden');\n      }\n    }\n  }, {\n    key: '__participantIsCurrentUser',\n    value: function __participantIsCurrentUser(participant) {\n      var _videoConfig$localPa = this.__videoConfig.localParticipant,\n          isConsumer = _videoConfig$localPa.isConsumer,\n          isProvider = _videoConfig$localPa.isProvider;\n\n      var participantRole = participant.role;\n      return isConsumer && (participantRole === 'MEMBER' || participantRole === 'CONSUMER') || isProvider && participantRole === 'PROVIDER';\n    }\n\n    /**\r\n     * Handles all state associated with the `Switch to Phone` button.\r\n     *\r\n     * @param {Object} visit the underlying visit which implements AWCoreSDKVisitDataObject interface\r\n     * @returns {undefined} this function has no return.\r\n     */\n\n  }, {\n    key: 'toggleCallMeDisabled',\n    value: function toggleCallMeDisabled(visit) {\n      var activeCall = false;\n      var pendingCall = false;\n      var selfDisconnected = false;\n      var otherDisconnected = false;\n      var unsuccessfulCall = false;\n\n      for (var i = 0; i < visit.conferenceDetails.participants.length; i++) {\n        var participant = visit.conferenceDetails.participants[i];\n\n        var participantRole = participant.role;\n        var participantStatus = participant.status;\n        var modalityType = participant.modalityType;\n        var isCurrentUser = this.__participantIsCurrentUser(participant);\n\n        if (participant.ivr && modalityType === 'OUTBOUND_PHONE') {\n          if (participantStatus === 'CONNECTED' && isCurrentUser) {\n            activeCall = true;\n            this.__logger.debug('participant_ ' + i, participantRole, modalityType, participantStatus);\n          } else if (participantStatus === 'DISCONNECTED') {\n            if (isCurrentUser) {\n              selfDisconnected = true;\n            } else {\n              otherDisconnected = true;\n            }\n            this.__logger.debug('participant_ ' + i, participantRole, modalityType, participantStatus);\n          }\n\n          if (isCurrentUser && (participantStatus === 'IN_FLIGHT' || participantStatus === 'QUEUED')) {\n            pendingCall = true;\n            this.__logger.debug('participant_ ' + i, participantRole, modalityType, participantStatus);\n          } else if (isCurrentUser && (participantStatus === 'UNSUCCESSFUL' || participantStatus === 'CONNECTION_FAILURE')) {\n            unsuccessfulCall = true;\n            this.__logger.error('participant_ ' + i + ' currentUser UNSUCCESSFUL call', participantRole);\n          }\n        }\n      }\n\n      this.__updateUiCallState(unsuccessfulCall, pendingCall, activeCall, selfDisconnected, visit.allowsVisitAddPhone);\n    }\n\n    /**\r\n     * Updates the state of the console during the call me workflow\r\n     *\r\n     * @param {boolean} unsuccessfulCall Was the call unsuccessful?\r\n     * @param {boolean} pendingCall the current user can expect a phone call\r\n     * @param {boolean} activeCall the current user has an active phone call in progress\r\n     * @param {boolean} selfDisconnected Current user is disconnected\r\n     * @param {boolean} allowsVisitAddPhone Is the user currently allowed to add a phone call to the engagement\r\n     *\r\n     * @returns {undefined} no return value\r\n     */\n\n  }, {\n    key: '__updateUiCallState',\n    value: function __updateUiCallState(unsuccessfulCall, pendingCall, activeCall, selfDisconnected, allowsVisitAddPhone) {\n      if (allowsVisitAddPhone && (selfDisconnected || unsuccessfulCall) && !activeCall && !pendingCall) {\n        this.__enableSwitchToPhone();\n      } else if (!allowsVisitAddPhone) {\n        this.__disableSwitchToPhone();\n      }\n\n      if (pendingCall) {\n        // the user is waiting for the other participant to pick up.\n        this.__enterPhoneOnlyMode();\n        this.__transitionToSwitchToPhoneState(this.messages.talk_via_phone_calling);\n        this.__disableSwitchToPhone(false);\n      } else if (activeCall) {\n        // ensure the buttons tell the user that they are current in a Switch to Phone state.\n        this.__enterPhoneOnlyMode();\n        this.__transitionToSwitchToPhoneState(this.messages.call_me_active);\n        this.__disableSwitchToPhone(true);\n        this.__phoneOnlyConnected();\n      }\n    }\n\n    /**\r\n     * Enable and update the styles of the 'Call Me' button\r\n     *\r\n     * @returns {undefined} this function has no return.\r\n     */\n\n  }, {\n    key: '__enableSwitchToPhone',\n    value: function __enableSwitchToPhone() {\n      this.__videoConfig.attachPoints.callMe.classList.remove('awcore-hidden');\n\n      this.__videoConfig.attachPoints.callMe.classList.remove('awcore-call-me-disabled');\n      this.__videoConfig.attachPoints.callMe.classList.remove('awcore-call-me-active');\n      this.__videoConfig.attachPoints.callMe.removeAttribute('disabled');\n\n      this.__videoConfig.attachPoints.callMe.getElementsByClassName('not-calling-problems').item(0).classList.remove('awcore-hidden');\n      this.__videoConfig.attachPoints.callMe.getElementsByClassName('not-calling').item(0).classList.remove('awcore-hidden');\n      this.__videoConfig.attachPoints.callMe.getElementsByClassName('calling').item(0).classList.add('awcore-hidden');\n      this.__videoConfig.attachPoints.callMe.getElementsByClassName('connected').item(0).classList.add('awcore-hidden');\n    }\n\n    /**\r\n     * Disable and update the styles of the 'Call Me' button\r\n     *\r\n     * @param {boolean} connected indicating that the call is connected\r\n     *\r\n     * @returns {undefined} this function has no return.\r\n     */\n\n  }, {\n    key: '__disableSwitchToPhone',\n    value: function __disableSwitchToPhone(connected) {\n      this.__videoConfig.attachPoints.callMe.classList.add('awcore-call-me-disabled');\n      this.__videoConfig.attachPoints.callMe.classList.add('awcore-call-me-active');\n      this.__videoConfig.attachPoints.callMe.setAttribute('disabled', '');\n\n      this.__videoConfig.attachPoints.callMe.getElementsByClassName('not-calling-problems').item(0).classList.add('awcore-hidden');\n      this.__videoConfig.attachPoints.callMe.getElementsByClassName('not-calling').item(0).classList.add('awcore-hidden');\n      if (connected) {\n        this.__videoConfig.attachPoints.callMe.getElementsByClassName('calling').item(0).classList.add('awcore-hidden');\n        this.__videoConfig.attachPoints.callMe.getElementsByClassName('connected').item(0).classList.remove('awcore-hidden');\n      } else {\n        this.__videoConfig.attachPoints.callMe.getElementsByClassName('calling').item(0).classList.remove('awcore-hidden');\n        this.__videoConfig.attachPoints.callMe.getElementsByClassName('connected').item(0).classList.add('awcore-hidden');\n      }\n    }\n\n    /**\r\n     * Hides the user's self view from them on screen, but does not mute the camera.\r\n     *\r\n     * @inheritdoc\r\n     */\n\n  }, {\n    key: 'toggleSelfView',\n    value: function toggleSelfView() {\n      this.__showSelfView = !this.__showSelfView;\n      this.__logger.debug('Hide self view is now ', this.__showSelfView);\n      this._setNodeAttribute(this.__videoConfig.attachPoints.selfVideoContainer, 'aria-checked', this.__showSelfView);\n      this.__videoConfig.attachPoints.selfVideoContainer.classList.toggle('awcore-hidden');\n      this.__videoConfig.attachPoints.hideSelfVideo.classList.toggle('awcore-show-self');\n      this.__videoConfig.attachPoints.selfVideoParentContainer.classList.toggle('active');\n      this.__saveState({ showSelfView: this.__showSelfView });\n    }\n  }, {\n    key: '__renderSettings',\n    value: function __renderSettings() {\n      // if we don't have a stream yet then bail\n      if (!this.__videoConfig.attachPoints.selfVideo.srcObject) {\n        return Promise.reject();\n      }\n\n      var attachPoints = this.__videoConfig.attachPoints;\n\n      var cameraSection = attachPoints.settingsContentCamera;\n      (0, _empty2.default)(cameraSection);\n      var header = this.__createNode('label');\n      header.innerHTML = this.messages.settings_camera_list_header;\n      header.classList.add('awcore-settings-content-header-title');\n      cameraSection.appendChild(header);\n\n      var micSection = attachPoints.settingsContentMic;\n      (0, _empty2.default)(micSection);\n      header = this.__createNode('label');\n      header.innerHTML = this.messages.settings_microphone_list_header;\n      header.classList.add('awcore-settings-content-header-title');\n      micSection.appendChild(header);\n\n      var speakerSection = attachPoints.settingsContentSpeaker;\n      (0, _empty2.default)(speakerSection);\n      header = this.__createNode('label');\n      header.innerHTML = this.messages.settings_speaker_list_header;\n      header.classList.add('awcore-settings-content-header-title');\n      speakerSection.appendChild(header);\n\n      // resolve to the sections in the settingsContainer now that we've built them up\n      return Promise.resolve({\n        cameraSection: cameraSection,\n        micSection: micSection,\n        speakerSection: speakerSection\n      });\n    }\n\n    /* @private */\n\n  }, {\n    key: '__delegateToHandler',\n    value: function __delegateToHandler(event) {\n      var handler = this.__findHandler(this.__eventMapper.mapFromType(event.type));\n      if (handler) {\n        handler.handler();\n      } else {\n        this.__logger.warn('No handler found for event: ' + JSON.stringify(event));\n      }\n    }\n\n    /* @private */\n\n  }, {\n    key: '__findHandler',\n    value: function __findHandler(type) {\n      return this.__registeredHandlers.find(function (handler) {\n        return type === handler.type;\n      });\n    }\n  }, {\n    key: '__documentClick',\n    value: function __documentClick(event) {\n      var settingsDiv = this.__videoConfig.attachPoints.settingsContent;\n      if (!settingsDiv.contains(event.target)) {\n        this.__videoConfig.attachPoints.settingsContent.classList.add('awcore-hidden');\n        this.__videoConfig.attachPoints.settings.classList.remove('open');\n        this.__settingsConfig = null; // force update on next call\n      }\n    }\n  }, {\n    key: '__createNode',\n    value: function __createNode(type) {\n      return document.createElement(type);\n    }\n  }, {\n    key: '__toggleClass',\n    value: function __toggleClass(node) {\n      var _node$classList;\n\n      for (var _len = arguments.length, rest = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        rest[_key - 1] = arguments[_key];\n      }\n\n      (_node$classList = node.classList).toggle.apply(_node$classList, rest);\n    }\n  }, {\n    key: '_setNodeAttribute',\n    value: function _setNodeAttribute(node, name, val) {\n      node.setAttribute(name, val);\n    }\n  }, {\n    key: '__connect',\n    value: function __connect(el, event, fn) {\n      var handle = (0, _event.connect)(el, event, fn.bind(this));\n      this.__events.push(handle);\n      return handle;\n    }\n  }, {\n    key: '__clearOutSubtitleNode',\n    value: function __clearOutSubtitleNode(node) {\n      // for guests flows, this node could never get instantiated.\n      if (node) {\n        node.innerHTML = '';\n      }\n    }\n\n    /**\r\n     * A function which hides/shows the `end or cancel` options to the provider when they press on the `End Visit` button in the console.\r\n     *\r\n     * @private\r\n     * @param {boolean} show indicating that the end visit options should be presented to the end user.\r\n     * @returns {undefined} No return from this function.\r\n     */\n\n  }, {\n    key: '__toggleProviderEndVisitOptions',\n    value: function __toggleProviderEndVisitOptions(show) {\n      var attachPoints = this.__videoConfig.attachPoints;\n\n      if (show) {\n        attachPoints.exitVisitModalProviderBody.classList.remove('awcore-hidden');\n        attachPoints.exitVisitModalProviderFooter.classList.remove('awcore-hidden');\n        attachPoints.exitVisitModalFooter.classList.add('awcore-hidden');\n      } else {\n        attachPoints.exitVisitModalProviderBody.classList.add('awcore-hidden');\n        attachPoints.exitVisitModalProviderFooter.classList.add('awcore-hidden');\n        attachPoints.exitVisitModalFooter.classList.remove('awcore-hidden');\n      }\n    }\n  }, {\n    key: '__onSpinnerIVRClick',\n    value: function __onSpinnerIVRClick(event) {\n      this.__disableSwitchToPhone();\n      this.__transitionToSwitchToPhoneState(this.messages.talk_via_phone_calling);\n\n      event.preventDefault();\n      // if visit allows add phone, then do a normal web add phone/call me event, otherwise use the IVR Callback\n      if (this.__videoConfig.visitConfig.visit.allowsVisitAddPhone) {\n        this.__delegateToHandler({ type: 'callMeEvent' });\n      } else {\n        this.__saveState({\n          IVRCallbackRetryCount: this.__state.IVRCallbackRetryCount + 1\n        });\n        this.__delegateToHandler({ type: 'IVRCallBackEvent' });\n      }\n      this.__enterPhoneOnlyMode();\n    }\n\n    /**\r\n     * Call this function whenever we enter into callMeEvent land.\r\n     *\r\n     * @returns {undefined} nothing.\r\n     */\n\n  }, {\n    key: '__enterPhoneOnlyMode',\n    value: function __enterPhoneOnlyMode() {\n      // do all the things to teardown the expectations of a video visit, a phone call has been made.\n      // switch spinner into phone-only mode (or make a whole new internal view state for this mode?)\n      // hide all UI elements except the own-name and calling state button\n      var _videoConfig$attachP2 = this.__videoConfig.attachPoints,\n          phoneOnly = _videoConfig$attachP2.phoneOnly,\n          phoneOnlySub = _videoConfig$attachP2.phoneOnlySub,\n          rootContainer = _videoConfig$attachP2.rootContainer;\n      var _videoConfig$localPa2 = this.__videoConfig.localParticipant,\n          isConsumer = _videoConfig$localPa2.isConsumer,\n          isProvider = _videoConfig$localPa2.isProvider;\n\n\n      var participantPhone = void 0;\n      if (isConsumer) {\n        // dig up the consumers phone number, falling back to the consumer object details:\n        participantPhone = this.__videoConfig.visitConfig.visit.formattedInitiatorEngagementOverridePhone || this.__videoConfig.visitConfig.visit.consumer.formattedPhone;\n      }\n      /*\r\n        else if (isProvider) {\r\n        // FIMXE: when OC-40812 happens, fill in a participantPhone value in the provider case. Keeping it up to date will be handled elsewhere,\r\n        // probably part of CWS-484\r\n        // ---\r\n        // use the phone value on the assigned provider, no fallback\r\n        participantPhone = this.__videoConfig.visitConfig.visit.assignedProvider.formattedPhone;\r\n      }\r\n      */\n\n      if (isConsumer || isProvider) {\n        // again, be defensive here in case we don't have the number serialized in the JSON response.\n        phoneOnlySub.innerHTML = participantPhone ? (0, _replace2.default)(this.messages.phone_only_sub, { participantPhone: participantPhone }) : this.messages.phone_only_provider;\n      } else {\n        // assume the user is a guest, so show them special messaging\n        phoneOnlySub.innerHTML = this.messages.phone_only_guest;\n        phoneOnly.innerHTML = this.messages.phone_video_ended;\n      }\n\n      rootContainer.classList.add('awcore-phone-only-mode');\n\n      this.__disableSwitchToPhone();\n      this.__transitionToSwitchToPhoneState(this.messages.talk_via_phone_calling);\n    }\n\n    /**\r\n     * Set phoneOnlyMode to a connected state, indicating participants both connected\r\n     *\r\n     * @returns {undefined} nothing\r\n     */\n\n  }, {\n    key: '__phoneOnlyConnected',\n    value: function __phoneOnlyConnected() {\n      var _videoConfig$attachP3 = this.__videoConfig.attachPoints,\n          phoneOnly = _videoConfig$attachP3.phoneOnly,\n          phoneOnlySub = _videoConfig$attachP3.phoneOnlySub;\n\n      phoneOnlySub.innerHTML = '';\n      phoneOnly.innerHTML = this.messages.phone_only_success;\n    }\n  }, {\n    key: '__transitionToSwitchToPhoneState',\n    value: function __transitionToSwitchToPhoneState(message, enable) {\n      var _videoConfig$attachP4 = this.__videoConfig.attachPoints,\n          spinnerIvrButton = _videoConfig$attachP4.spinnerIvrButton,\n          permissionIvrButton = _videoConfig$attachP4.permissionIvrButton;\n\n      if (!enable) {\n        spinnerIvrButton.classList.add('awcore-disabled');\n        permissionIvrButton.classList.add('awcore-disabled');\n      }\n      spinnerIvrButton.innerHTML = message;\n      permissionIvrButton.innerHTML = message;\n    }\n  }, {\n    key: '__buildBrowserClassString',\n    value: function __buildBrowserClassString() {\n      var browser = (0, _detectBrowser.detect)();\n      return browser && 'awcore-' + browser.name.toLowerCase();\n    }\n\n    /*\r\n     * WARNING: These methods shouldn't be used IF the expectation is that keys of the state object can be removed.\r\n     * IF you intend to use it with that way, make sure to modify method behavior accordingly.\r\n    */\n\n  }, {\n    key: '__saveState',\n    value: function __saveState(newState) {\n      Object.assign(this.__state, newState);\n      sessionStorage.setItem('AWCommonState', JSON.stringify(this.__state));\n    }\n  }, {\n    key: '__updateCurrentDevices',\n    value: function __updateCurrentDevices(newCurrentDevices) {\n      Object.assign(this.__currentDevices, newCurrentDevices);\n      localStorage.setItem('AWCurrentDevices', JSON.stringify(this.__currentDevices));\n    }\n  }, {\n    key: 'isInFullScreenMode',\n    get: function get() {\n      throw new Error('get:isInFullscreenMode must be overridden in the subclass');\n    }\n\n    /**\r\n     * This function gets the current configurations for media devices\r\n     *\r\n     * @returns {Object} this function has no return.\r\n     */\n\n  }, {\n    key: 'mediaConfigurations',\n    get: function get() {\n      throw new Error('get:mediaConfiguration must be overridden in the subclass');\n    }\n  }, {\n    key: 'participantVendorId',\n    get: function get() {\n      return undefined;\n    }\n\n    /**\r\n     * The number of times an IVR Callback attempt has been made\r\n     *\r\n     * @returns {number} the number of times an IVR Callback attempt has been made\r\n     */\n\n  }, {\n    key: 'IVRCallbackRetryCount',\n    get: function get() {\n      return this.__state.IVRCallbackRetryCount;\n    }\n  }, {\n    key: 'refreshInProgress',\n    get: function get() {\n      return this.__refreshInProgress;\n    }\n  }]);\n\n  return AWCoreSDKInternalVideoConsole;\n}();\n\nexports.default = AWCoreSDKInternalVideoConsole;","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/*!\n * American Well Core Web SDK\n *\n * Copyright (c) 2019 American Well.\n * All rights reserved.\n *\n * It is illegal to use, reproduce or distribute\n * any part of this Intellectual Property without\n * prior written authorization from American Well.\n */\n\nvar defaults = {\n  selector: '[data-aw-attach]',\n  key: function key(node) {\n    return node.getAttribute('data-aw-attach');\n  }\n};\n\n/**\n * Create an object of node values, with keys corresponding to some attribute value\n *\n * @param {HTMLElement} root the root container to limit our attaching within\n * @param {Object=} opts property bag of default overrides\n * @param {string} opts.selector the CSS selector used to target the elements\n * @param {Function} opts.key a function used to process a node and return a string key to use\n * @returns {Object} the dictionary of `attribute: node` pairs\n */\nvar attach = function attach(root, opts) {\n  var nodes = {};\n  var config = Object.assign({}, defaults, opts);\n  Array.prototype.slice.call(root.querySelectorAll(config.selector)).forEach(function (node) {\n    nodes[config.key(node)] = node;\n  });\n  return nodes;\n};\n\nexports.default = attach;","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/*!\n * American Well Core Web SDK\n *\n * Copyright © 2018 American Well.\n * All rights reserved.\n *\n * It is illegal to use, reproduce or distribute\n * any part of this Intellectual Property without\n * prior written authorization from American Well.\n */\n\nvar methods = ['error', 'warn', 'info', 'debug', 'trace'];\n\n/**\n * Attach a logger for logging, sets __logger field on the passed in object.\n * The logger MUST support the following methods: error, warn, info, debug, and trace. These methods need to take a string message as a parameter.\n * If the logger does not support all of the required methods, or is undefined, logging will fall back to console.\n *\n * @param {Object} obj the object that will have the logger attached\n * @param {Object} logger the logger to be attached\n * @param {Function} [logger.error] error level logs are called using this method\n * @param {Function} [logger.warn] warn level logs are called using this method\n * @param {Function} [logger.info] info level logs are called using this method\n * @param {Function} [logger.debug] debug level logs are called using this method\n * @param {Function} [logger.trace] trace level logs are called using this method\n * @param {Object} visitLoggingData the visitLoggingData to send along with the logged message\n * @returns {undefined} no return value\n */\nvar attachLogger = function attachLogger(obj, logger, visitLoggingData) {\n  // ensure every method exists on the logger object before attaching:\n  // TODO: consider the idea that omission of a method should fallback to a console attachment?\n  var res = methods.every(function (meth) {\n    return logger && Object.prototype.hasOwnProperty.call(logger, meth);\n  });\n  if (!res) {\n    // eslint-disable-next-line no-console\n    console.error('Illegal argument. Logger must contain all methods described in JSDoc, using console for logging.');\n    obj.__logger = console;\n  } else {\n    obj.__logger = {};\n    methods.forEach(function (meth) {\n      obj.__logger[meth] = function () {\n        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n          args[_key] = arguments[_key];\n        }\n\n        logger[meth].apply(logger, [visitLoggingData].concat(args));\n      };\n    });\n  }\n};\n\nexports.default = attachLogger;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/*!\n * American Well Core Web SDK\n *\n * Copyright (c) 2019 American Well.\n * All rights reserved.\n *\n * It is illegal to use, reproduce or distribute\n * any part of this Intellectual Property without\n * prior written authorization from American Well.\n */\n\n/**\n  * Connect some `fn` to an `el`'s `event`\n  *\n  * @param {HTMLElement} el The element to base the connection on\n  * @param {string} event The name of the event, without the 'on'\n  * @param {Function} fn The event handler to use\n  * @returns {Object} A `handle` that can be passed to `disconnect` to easily remove the event listener.\n  */\nvar connect = exports.connect = function connect(el, event, fn) {\n  el.addEventListener(event, fn, false);\n  return { el: el, event: event, fn: fn };\n};\n\n/**\n * Disconnect some event from element, specifically the event attached by using `connect`\n *\n * @param {Object} handle The return value from a `connect` call, used to lookup the event listener to remove\n * @returns {undefined} nothing.\n */\nvar disconnect = exports.disconnect = function disconnect(handle) {\n  var el = handle.el,\n      event = handle.event,\n      fn = handle.fn;\n\n  el.removeEventListener(event, fn);\n};\n\nexports.default = {\n  connect: connect,\n  disconnect: disconnect\n};","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); /*!\r\nmerican Well Common Web SDK\r\nr\nopyright © 2018 American Well.\r\nll rights reserved.\r\nr\nt is illegal to use, reproduce or distribute\r\nany part of this Intellectual Property without\r\nprior written authorization from American Well.\r\nn\n\nvar _error_code = require('./error_code');\n\nvar _error_code2 = _interopRequireDefault(_error_code);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar AWCoreSDKError = function () {\n  function AWCoreSDKError(error, message, reason, recoverySuggestion, httpResponseCode) {\n    _classCallCheck(this, AWCoreSDKError);\n\n    if (error instanceof Error) {\n      this.__errorCode = _error_code2.default.otherError;\n      this.__error = error;\n    } else if (error) {\n      this.__errorCode = error;\n      this.__error = new Error(message);\n    } else {\n      this.__errorCode = _error_code2.default.otherError;\n      this.__error = new Error(message);\n    }\n    this.__reason = reason;\n    this.__recoverySuggestion = recoverySuggestion;\n    this.__httpResponseCode = httpResponseCode;\n  }\n\n  _createClass(AWCoreSDKError, [{\n    key: 'errorCode',\n    get: function get() {\n      return this.__errorCode;\n    }\n  }, {\n    key: 'message',\n    get: function get() {\n      return this.__error.message;\n    }\n  }, {\n    key: 'reason',\n    get: function get() {\n      return this.__reason;\n    }\n  }, {\n    key: 'recoverySuggestion',\n    get: function get() {\n      return this.__recoverySuggestion;\n    }\n  }, {\n    key: 'httpResponseCode',\n    get: function get() {\n      return this.__httpResponseCode;\n    }\n  }], [{\n    key: 'GenericError',\n    value: function GenericError(reason) {\n      return new AWCoreSDKError(_error_code2.default.genericError, 'A generic error was thrown:', reason, '', 500);\n    }\n  }]);\n\n  return AWCoreSDKError;\n}();\n\nexports.default = AWCoreSDKError;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/*!\n * American Well Core Web SDK\n *\n * Copyright (c) 2019 American Well.\n * All rights reserved.\n *\n * It is illegal to use, reproduce or distribute\n * any part of this Intellectual Property without\n * prior written authorization from American Well.\n */\n\nvar firstMark = void 0;\n\n/**\n * Mark a moment in time as en event that is worthy of marking, and log it to the server.\n *\n * @private\n * @param {string} key the event name to begin timing\n * @param {boolean} dump report the metrics at this point\n * @returns {undefined} nothing\n */\nvar mark = function mark(key, dump) {\n  try {\n    performance.mark(key); // does not dedupe\n    if (!firstMark) {\n      // assume first call is the root/start reference point\n      firstMark = key;\n    }\n\n    if (dump && mark.logger) {\n      var m = performance.measure(null, firstMark, key);\n      mark.logger(\"PexipClientEvent - \" + key + \" - \" + m.duration + \" ms\");\n    }\n  } catch (e) {\n    /* snarf errors from performance metric monitoring, we don't want to break anything */\n  }\n};\n\nmark.reset = function () {\n  firstMark = null;\n};\n\nexports.default = mark;","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/*!\r\n * American Well Core Web SDK\r\n *\r\n * Copyright (c) 2018 American Well.\r\n * All rights reserved.\r\n *\r\n * It is illegal to use, reproduce or distribute\r\n * any part of this Intellectual Property without\r\n * prior written authorization from American Well.\r\n */\n\n/* eslint-disable no-unused-vars */\n\n/**\r\n * This class serves as an interface for mapping events from their\r\n * native names to implementation agnostic ones.\r\n */\nvar AWCoreSDKBaseEventMapper = function () {\n  function AWCoreSDKBaseEventMapper() {\n    _classCallCheck(this, AWCoreSDKBaseEventMapper);\n  }\n\n  _createClass(AWCoreSDKBaseEventMapper, [{\n    key: 'mapFromType',\n\n    /**\r\n     * This method takes an event type (String) representing an event type in that implementation specific class\r\n     * and returns another string which represents an event type that is agnostic of implementations\r\n     *\r\n     * @param {string} eventType -- a string type for an event in an implementation\r\n     * @returns {string} a string representing an event type that has no notion of implementations.\r\n     */\n    value: function mapFromType(eventType) {\n      throw Error('Implement in child class');\n    }\n  }]);\n\n  return AWCoreSDKBaseEventMapper;\n}();\n\nexports.default = AWCoreSDKBaseEventMapper;","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/*!\r\n * American Well Core Web SDK\r\n *\r\n * Copyright (c) 2018 American Well.\r\n * All rights reserved.\r\n *\r\n * It is illegal to use, reproduce or distribute\r\n * any part of this Intellectual Property without\r\n * prior written authorization from American Well.\r\n */\n\n/**\r\n * @enum\r\n * @readonly\r\n */\nvar AWCoreSDKVisitEndDetails = {\n  /**\r\n   * Indicates that there was an error while attempting to communicate with American Well telehealth platform\r\n   * @since 1.0.0\r\n   */\n  FAILED_TO_COMMUNICATE_WITH_AMERICAN_WELL_TELEHEALTH_PLATFORM: 'FAILED_TO_COMMUNICATE_WITH_AMERICAN_WELL_TELEHEALTH_PLATFORM',\n  /**\r\n   * Indicates a failure to properly initiate the vidyo console\r\n   * @since 1.0.0\r\n   */\n  VIDYO_FAILED: 'VIDYO_FAILED',\n  /**\r\n   * Indicates a failure to properly initiate a vendor's video console\r\n   * @since 1.0.12\r\n   */\n  INITIATION_FAILED: 'INITIATION_FAILED',\n  /**\r\n   * Indicates that the provider was unintentionally disconnected from the call\r\n   * @since 1.0.0\r\n   */\n  PROVIDER_DISCONNECT: 'PROVIDER_DISCONNECT',\n  /**\r\n   * Indicates that the Consumer was unintentionally disconnected from the call\r\n   * @since 1.0.0\r\n   */\n  CONSUMER_DISCONNECT: 'CONSUMER_DISCONNECT'\n};\n\nexports.default = AWCoreSDKVisitEndDetails;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\n/*!\n * American Well Core Web SDK\n *\n * Copyright © 2019 American Well.\n * All rights reserved.\n *\n * It is illegal to use, reproduce or distribute\n * any part of this Intellectual Property without\n * prior written authorization from American Well.\n */\n\n// topics are global per instance, store stuff here:\nvar cache = {};\n\n/**\n * Subscribe an event handler to some named channel/topic\n *\n * @param {string} topic a named channel to listen to\n * @param {Function} cb a callback function to call for each channel message\n * @returns {Array} a `handle` to use when possibly unsubscribing\n */\nvar subscribe = exports.subscribe = function subscribe(topic, cb) {\n  if (!cache[topic]) {\n    cache[topic] = [];\n  }\n\n  cache[topic].push(cb);\n  return [topic, cb];\n};\n\n/**\n * Publish some data on a name channel/topic\n *\n * @param {string} topic the named channel to emit data on\n * @param  {...any} args the remaining arguments that are passed to any possible subscribers\n * @returns {undefined} nothing.\n */\nvar publish = exports.publish = function publish(topic) {\n  for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    args[_key - 1] = arguments[_key];\n  }\n\n  if (cache[topic]) {\n    cache[topic].forEach(function (cb) {\n      try {\n        cb.apply(undefined, args);\n      } catch (e) {\n        // console.log(\"exception caught publishing to:\", topic, e);\n      }\n    });\n  }\n};\n\n/**\n * Stop listening to some named channel/topic, specifically, an instance of a subscription handle.\n *\n * @param {Array} handle the handle from a `subscribe` return, used to remove listening\n * @returns {undefined} nothing\n */\nvar unsubscribe = exports.unsubscribe = function unsubscribe() {\n  var handle = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n\n  var _handle = _slicedToArray(handle, 2),\n      topic = _handle[0],\n      fn = _handle[1];\n\n  if (topic && cache[topic]) {\n    cache[topic].forEach(function (cb, i) {\n      if (fn === cb) {\n        cache[topic].splice(i, 1);\n      }\n    });\n  }\n};\n\nexports.default = {\n  publish: publish,\n  subscribe: subscribe,\n  unsubscribe: unsubscribe\n};","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/*!\n * American Well Core Web SDK\n *\n * Copyright © 2019 American Well.\n * All rights reserved.\n *\n * It is illegal to use, reproduce or distribute\n * any part of this Intellectual Property without\n * prior written authorization from American Well.\n */\n\nvar AudioContext = window.AudioContext || window.webkitAudioContext;\n\n/**\n * Monitor an audio stream for content, and report an overall 'volume' value\n *\n * @param {MediaStream} stream the RTC MediaStream to monitor\n * @param {Function} callback fired for every audioprocess event, with a normalized `volume` value\n * @returns {Object} faux audio-context to call `close` on, stopping the monitoring.\n */\nvar monitorStream = function monitorStream(stream, callback) {\n  var audioContext = new AudioContext();\n  var analyser = audioContext.createAnalyser();\n  var microphone = audioContext.createMediaStreamSource(stream);\n  var scriptProcessorNode = audioContext.createScriptProcessor(256, 1, 1);\n\n  analyser.smoothingTimeConstant = 0.8;\n  analyser.fftSize = 128;\n\n  microphone.connect(analyser);\n  analyser.connect(scriptProcessorNode);\n  scriptProcessorNode.connect(audioContext.destination);\n\n  scriptProcessorNode.onaudioprocess = function () {\n    // Fill an array with frequency information, add it all up, divide by number of frequency bins = average amplitude (volume) of incoming audio\n    var frequencies = new Uint8Array(analyser.frequencyBinCount);\n    analyser.getByteFrequencyData(frequencies);\n\n    var totalAmplitude = 0;\n    for (var i = 0; i < frequencies.length; i++) {\n      totalAmplitude += frequencies[i];\n    }\n\n    var volume = totalAmplitude / frequencies.length;\n    var audioActive = totalAmplitude > 0;\n\n    callback(volume, audioActive);\n  };\n\n  return {\n    close: function close() {\n      if (audioContext.state !== 'closed') {\n        audioContext.close();\n        scriptProcessorNode.onaudioprocess = null;\n      }\n    }\n  };\n};\n\nexports.default = monitorStream;","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/*!\n * American Well Core Web SDK\n *\n * Copyright © 2018 American Well.\n * All rights reserved.\n *\n * It is illegal to use, reproduce or distribute\n * any part of this Intellectual Property without\n * prior written authorization from American Well.\n */\n\nexports.default = { sdkVersion: '4.4.1' };","var rng = require('./lib/rng');\nvar bytesToUuid = require('./lib/bytesToUuid');\n\nfunction v4(options, buf, offset) {\n  var i = buf && offset || 0;\n\n  if (typeof(options) == 'string') {\n    buf = options === 'binary' ? new Array(16) : null;\n    options = null;\n  }\n  options = options || {};\n\n  var rnds = options.random || (options.rng || rng)();\n\n  // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n  rnds[6] = (rnds[6] & 0x0f) | 0x40;\n  rnds[8] = (rnds[8] & 0x3f) | 0x80;\n\n  // Copy bytes to buffer, if provided\n  if (buf) {\n    for (var ii = 0; ii < 16; ++ii) {\n      buf[i + ii] = rnds[ii];\n    }\n  }\n\n  return buf || bytesToUuid(rnds);\n}\n\nmodule.exports = v4;\n","/* global define */\n(function (root, factory) {\n  /* istanbul ignore next */\n  if (typeof define === 'function' && define.amd) {\n    define([], factory);\n  } else if (typeof exports === 'object') {\n    module.exports = factory();\n  } else {\n    root.compareVersions = factory();\n  }\n}(this, function () {\n\n  var semver = /^v?(?:\\d+)(\\.(?:[x*]|\\d+)(\\.(?:[x*]|\\d+)(\\.(?:[x*]|\\d+))?(?:-[\\da-z\\-]+(?:\\.[\\da-z\\-]+)*)?(?:\\+[\\da-z\\-]+(?:\\.[\\da-z\\-]+)*)?)?)?$/i;\n\n  function indexOrEnd(str, q) {\n    return str.indexOf(q) === -1 ? str.length : str.indexOf(q);\n  }\n\n  function split(v) {\n    var c = v.replace(/^v/, '').replace(/\\+.*$/, '');\n    var patchIndex = indexOrEnd(c, '-');\n    var arr = c.substring(0, patchIndex).split('.');\n    arr.push(c.substring(patchIndex + 1));\n    return arr;\n  }\n\n  function tryParse(v) {\n    return isNaN(Number(v)) ? v : Number(v);\n  }\n\n  function validate(version) {\n    if (typeof version !== 'string') {\n      throw new TypeError('Invalid argument expected string');\n    }\n    if (!semver.test(version)) {\n      throw new Error('Invalid argument not valid semver (\\''+version+'\\' received)');\n    }\n  }\n\n  function compareVersions(v1, v2) {\n    [v1, v2].forEach(validate);\n\n    var s1 = split(v1);\n    var s2 = split(v2);\n\n    for (var i = 0; i < Math.max(s1.length - 1, s2.length - 1); i++) {\n      var n1 = parseInt(s1[i] || 0, 10);\n      var n2 = parseInt(s2[i] || 0, 10);\n\n      if (n1 > n2) return 1;\n      if (n2 > n1) return -1;\n    }\n\n    var sp1 = s1[s1.length - 1];\n    var sp2 = s2[s2.length - 1];\n\n    if (sp1 && sp2) {\n      var p1 = sp1.split('.').map(tryParse);\n      var p2 = sp2.split('.').map(tryParse);\n\n      for (i = 0; i < Math.max(p1.length, p2.length); i++) {\n        if (p1[i] === undefined || typeof p2[i] === 'string' && typeof p1[i] === 'number') return -1;\n        if (p2[i] === undefined || typeof p1[i] === 'string' && typeof p2[i] === 'number') return 1;\n\n        if (p1[i] > p2[i]) return 1;\n        if (p2[i] > p1[i]) return -1;\n      }\n    } else if (sp1 || sp2) {\n      return sp1 ? -1 : 1;\n    }\n\n    return 0;\n  };\n\n  var allowedOperators = [\n    '>',\n    '>=',\n    '=',\n    '<',\n    '<='\n  ];\n\n  var operatorResMap = {\n    '>': [1],\n    '>=': [0, 1],\n    '=': [0],\n    '<=': [-1, 0],\n    '<': [-1]\n  };\n\n  function validateOperator(op) {\n    if (typeof op !== 'string') {\n      throw new TypeError('Invalid operator type, expected string but got ' + typeof op);\n    }\n    if (allowedOperators.indexOf(op) === -1) {\n      throw new TypeError('Invalid operator, expected one of ' + allowedOperators.join('|'));\n    }\n  }\n\n  compareVersions.validate = function(version) {\n    return typeof version === 'string' && semver.test(version);\n  }\n\n  compareVersions.compare = function (v1, v2, operator) {\n    // Validate operator\n    validateOperator(operator);\n\n    // since result of compareVersions can only be -1 or 0 or 1\n    // a simple map can be used to replace switch\n    var res = compareVersions(v1, v2);\n    return operatorResMap[operator].indexOf(res) > -1;\n  }\n\n  return compareVersions;\n}));\n","var setPrototypeOf = require(\"./setPrototypeOf\");\n\nvar isNativeReflectConstruct = require(\"./isNativeReflectConstruct\");\n\nfunction _construct(Parent, args, Class) {\n  if (isNativeReflectConstruct()) {\n    module.exports = _construct = Reflect.construct;\n  } else {\n    module.exports = _construct = function _construct(Parent, args, Class) {\n      var a = [null];\n      a.push.apply(a, args);\n      var Constructor = Function.bind.apply(Parent, a);\n      var instance = new Constructor();\n      if (Class) setPrototypeOf(instance, Class.prototype);\n      return instance;\n    };\n  }\n\n  return _construct.apply(null, arguments);\n}\n\nmodule.exports = _construct;","/*!\nCopyright (C) 2015-2017 Andrea Giammarchi - @WebReflection\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n\n*/\n'use strict';\n\nfunction URLSearchParams(query) {\n  var\n    index, key, value,\n    pairs, i, length,\n    dict = Object.create(null)\n  ;\n  this[secret] = dict;\n  if (!query) return;\n  if (typeof query === 'string') {\n    if (query.charAt(0) === '?') {\n      query = query.slice(1);\n    }\n    for (\n      pairs = query.split('&'),\n      i = 0,\n      length = pairs.length; i < length; i++\n    ) {\n      value = pairs[i];\n      index = value.indexOf('=');\n      if (-1 < index) {\n        appendTo(\n          dict,\n          decode(value.slice(0, index)),\n          decode(value.slice(index + 1))\n        );\n      } else if (value.length){\n        appendTo(\n          dict,\n          decode(value),\n          ''\n        );\n      }\n    }\n  } else {\n    if (isArray(query)) {\n      for (\n        i = 0,\n        length = query.length; i < length; i++\n      ) {\n        value = query[i];\n        appendTo(dict, value[0], value[1]);\n      }\n    } else {\n      for (key in query) {\n         appendTo(dict, key, query[key]);\n      }\n    }\n  }\n}\n\nvar\n  isArray = Array.isArray,\n  URLSearchParamsProto = URLSearchParams.prototype,\n  find = /[!'\\(\\)~]|%20|%00/g,\n  plus = /\\+/g,\n  replace = {\n    '!': '%21',\n    \"'\": '%27',\n    '(': '%28',\n    ')': '%29',\n    '~': '%7E',\n    '%20': '+',\n    '%00': '\\x00'\n  },\n  replacer = function (match) {\n    return replace[match];\n  },\n  secret = '__URLSearchParams__:' + Math.random()\n;\n\nfunction appendTo(dict, name, value) {\n  if (name in dict) {\n    dict[name].push('' + value);\n  } else {\n    dict[name] = isArray(value) ? value : ['' + value];\n  }\n}\n\nfunction decode(str) {\n  return decodeURIComponent(str.replace(plus, ' '));\n}\n\nfunction encode(str) {\n  return encodeURIComponent(str).replace(find, replacer);\n}\n\nURLSearchParamsProto.append = function append(name, value) {\n  appendTo(this[secret], name, value);\n};\n\nURLSearchParamsProto.delete = function del(name) {\n  delete this[secret][name];\n};\n\nURLSearchParamsProto.get = function get(name) {\n  var dict = this[secret];\n  return name in dict ? dict[name][0] : null;\n};\n\nURLSearchParamsProto.getAll = function getAll(name) {\n  var dict = this[secret];\n  return name in dict ? dict[name].slice(0) : [];\n};\n\nURLSearchParamsProto.has = function has(name) {\n  return name in this[secret];\n};\n\nURLSearchParamsProto.set = function set(name, value) {\n  this[secret][name] = ['' + value];\n};\n\nURLSearchParamsProto.forEach = function forEach(callback, thisArg) {\n  var dict = this[secret];\n  Object.getOwnPropertyNames(dict).forEach(function(name) {\n    dict[name].forEach(function(value) {\n      callback.call(thisArg, value, name, this);\n    }, this);\n  }, this);\n};\n\n/*\nURLSearchParamsProto.toBody = function() {\n  return new Blob(\n    [this.toString()],\n    {type: 'application/x-www-form-urlencoded'}\n  );\n};\n*/\n\nURLSearchParamsProto.toJSON = function toJSON() {\n  return {};\n};\n\nURLSearchParamsProto.toString = function toString() {\n  var dict = this[secret], query = [], i, key, name, value;\n  for (key in dict) {\n    name = encode(key);\n    for (\n      i = 0,\n      value = dict[key];\n      i < value.length; i++\n    ) {\n      query.push(name + '=' + encode(value[i]));\n    }\n  }\n  return query.join('&');\n};\n\nURLSearchParams = (module.exports = global.URLSearchParams || URLSearchParams);\n\n(function (URLSearchParamsProto) {\n\n  var iterable = (function () {\n    try {\n      return !!Symbol.iterator;\n    } catch(error) {\n      return false;\n    }\n  }());\n\n  // mostly related to issue #24\n  if (!('forEach' in URLSearchParamsProto)) {\n    URLSearchParamsProto.forEach = function forEach(callback, thisArg) {\n      var names = Object.create(null);\n      this.toString()\n          .replace(/=[\\s\\S]*?(?:&|$)/g, '=')\n          .split('=')\n          .forEach(function (name) {\n            if (!name.length || name in names) return;\n            (names[name] = this.getAll(name)).forEach(function(value) {\n              callback.call(thisArg, value, name, this);\n            }, this);\n          }, this);\n    };\n  }\n\n  if (!('keys' in URLSearchParamsProto)) {\n    URLSearchParamsProto.keys = function keys() {\n      var items = [];\n      this.forEach(function(value, name) { items.push(name); });\n      var iterator = {\n        next: function() {\n          var value = items.shift();\n          return {done: value === undefined, value: value};\n        }\n      };\n\n      if (iterable) {\n        iterator[Symbol.iterator] = function() {\n          return iterator;\n        };\n      }\n\n      return iterator;\n    };\n  }\n\n  if (!('values' in URLSearchParamsProto)) {\n    URLSearchParamsProto.values = function values() {\n      var items = [];\n      this.forEach(function(value) { items.push(value); });\n      var iterator = {\n        next: function() {\n          var value = items.shift();\n          return {done: value === undefined, value: value};\n        }\n      };\n\n      if (iterable) {\n        iterator[Symbol.iterator] = function() {\n          return iterator;\n        };\n      }\n\n      return iterator;\n    };\n  }\n\n  if (!('entries' in URLSearchParamsProto)) {\n    URLSearchParamsProto.entries = function entries() {\n      var items = [];\n      this.forEach(function(value, name) { items.push([name, value]); });\n      var iterator = {\n        next: function() {\n          var value = items.shift();\n          return {done: value === undefined, value: value};\n        }\n      };\n\n      if (iterable) {\n        iterator[Symbol.iterator] = function() {\n          return iterator;\n        };\n      }\n\n      return iterator;\n    };\n  }\n\n  if (iterable && !(Symbol.iterator in URLSearchParamsProto)) {\n    URLSearchParamsProto[Symbol.iterator] = URLSearchParamsProto.entries;\n  }\n\n  if (!('sort' in URLSearchParamsProto)) {\n    URLSearchParamsProto.sort = function sort() {\n      var\n        entries = this.entries(),\n        entry = entries.next(),\n        done = entry.done,\n        keys = [],\n        values = Object.create(null),\n        i, key, value\n      ;\n      while (!done) {\n        value = entry.value;\n        key = value[0];\n        keys.push(key);\n        if (!(key in values)) {\n          values[key] = [];\n        }\n        values[key].push(value[1]);\n        entry = entries.next();\n        done = entry.done;\n      }\n      // not the champion in efficiency\n      // but these two bits just do the job\n      keys.sort();\n      for (i = 0; i < keys.length; i++) {\n        this.delete(keys[i]);\n      }\n      for (i = 0; i < keys.length; i++) {\n        key = keys[i];\n        this.append(key, values[key].shift());\n      }\n    };\n  }\n\n}(URLSearchParams.prototype));\n","var arrayWithHoles = require(\"./arrayWithHoles\");\n\nvar iterableToArrayLimit = require(\"./iterableToArrayLimit\");\n\nvar unsupportedIterableToArray = require(\"./unsupportedIterableToArray\");\n\nvar nonIterableRest = require(\"./nonIterableRest\");\n\nfunction _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}\n\nmodule.exports = _slicedToArray;","\nvar canPromise = require('./can-promise')\n\nvar QRCode = require('./core/qrcode')\nvar CanvasRenderer = require('./renderer/canvas')\nvar SvgRenderer = require('./renderer/svg-tag.js')\n\nfunction renderCanvas (renderFunc, canvas, text, opts, cb) {\n  var args = [].slice.call(arguments, 1)\n  var argsNum = args.length\n  var isLastArgCb = typeof args[argsNum - 1] === 'function'\n\n  if (!isLastArgCb && !canPromise()) {\n    throw new Error('Callback required as last argument')\n  }\n\n  if (isLastArgCb) {\n    if (argsNum < 2) {\n      throw new Error('Too few arguments provided')\n    }\n\n    if (argsNum === 2) {\n      cb = text\n      text = canvas\n      canvas = opts = undefined\n    } else if (argsNum === 3) {\n      if (canvas.getContext && typeof cb === 'undefined') {\n        cb = opts\n        opts = undefined\n      } else {\n        cb = opts\n        opts = text\n        text = canvas\n        canvas = undefined\n      }\n    }\n  } else {\n    if (argsNum < 1) {\n      throw new Error('Too few arguments provided')\n    }\n\n    if (argsNum === 1) {\n      text = canvas\n      canvas = opts = undefined\n    } else if (argsNum === 2 && !canvas.getContext) {\n      opts = text\n      text = canvas\n      canvas = undefined\n    }\n\n    return new Promise(function (resolve, reject) {\n      try {\n        var data = QRCode.create(text, opts)\n        resolve(renderFunc(data, canvas, opts))\n      } catch (e) {\n        reject(e)\n      }\n    })\n  }\n\n  try {\n    var data = QRCode.create(text, opts)\n    cb(null, renderFunc(data, canvas, opts))\n  } catch (e) {\n    cb(e)\n  }\n}\n\nexports.create = QRCode.create\nexports.toCanvas = renderCanvas.bind(null, CanvasRenderer.render)\nexports.toDataURL = renderCanvas.bind(null, CanvasRenderer.renderToDataURL)\n\n// only svg for now.\nexports.toString = renderCanvas.bind(null, function (data, _, opts) {\n  return SvgRenderer.render(data, opts)\n})\n","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); /*!\r\nmerican Well Common Web SDK\r\nr\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      * Copyright (c) 2018 American Well.\r\nll rights reserved.\r\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      *\r\nt is illegal to use, reproduce or distribute\r\nany part of this Intellectual Property without\r\nprior written authorization from American Well.\r\nn\nvar _vidyo_video_console = require('./vidyo/vidyo_video_console');\n\nvar _vidyo_video_console2 = _interopRequireDefault(_vidyo_video_console);\n\nvar _visit_configuration = require('./visit_configuration');\n\nvar _visit_configuration2 = _interopRequireDefault(_visit_configuration);\n\nvar _video_configuration = require('./video_configuration');\n\nvar _video_configuration2 = _interopRequireDefault(_video_configuration);\n\nvar _error = require('./error/error');\n\nvar _error2 = _interopRequireDefault(_error);\n\nvar _awcoresdk_base_event_handler = require('./awcoresdk_base_event_handler');\n\nvar _awcoresdk_base_event_handler2 = _interopRequireDefault(_awcoresdk_base_event_handler);\n\nvar _awcoresdk_visit_end_details = require('./awcoresdk_visit_end_details');\n\nvar _awcoresdk_visit_end_details2 = _interopRequireDefault(_awcoresdk_visit_end_details);\n\nvar _visit_logging_data_object = require('./visit_logging_data_object');\n\nvar _visit_logging_data_object2 = _interopRequireDefault(_visit_logging_data_object);\n\nvar _pexip_video_console = require('./pexip/pexip_video_console');\n\nvar _pexip_video_console2 = _interopRequireDefault(_pexip_video_console);\n\nvar _rtc_supported = require('./util/rtc_supported');\n\nvar _rtc_supported2 = _interopRequireDefault(_rtc_supported);\n\nvar _awcoresdk_vendor = require('./awcoresdk_vendor');\n\nvar _awcoresdk_vendor2 = _interopRequireDefault(_awcoresdk_vendor);\n\nvar _logger = require('./util/logger');\n\nvar _logger2 = _interopRequireDefault(_logger);\n\nvar _screenshare = require('./console/plugins/screenshare');\n\nvar _screenshare2 = _interopRequireDefault(_screenshare);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\r\n * The external interface of the core WebRTC video console\r\n *\r\n * @property {boolean} isInFullScreenMode whether screen is in full-screen mode\r\n * @property {boolean} isWebRTCSupported whether screen is in full-screen mode\r\n */\nvar AWCoreSDKVideoConsole = function () {\n  /**\r\n   * Constructor for the AWCoreSDKVideoConsole\r\n   *\r\n   * @since 1.0.0\r\n   * @param {AWCoreSDKVideoConfiguration} videoConfig The configuration of the console.\r\n   */\n  function AWCoreSDKVideoConsole(videoConfig) {\n    _classCallCheck(this, AWCoreSDKVideoConsole);\n\n    var currentFunction = 'AWCoreSDKVideoConsole#constructor';\n    if (!(videoConfig instanceof _video_configuration2.default)) {\n      throw _error2.default.GenericError('videoConfig argument was not of type AWCoreSDKVideoConfiguration');\n    }\n\n    this.__videoConfig = videoConfig;\n    (0, _logger2.default)(this, this.__videoConfig.logger, this.__videoConfig.visitLoggingData);\n    this.__visitEndDetails = null;\n    this.__videoConfig.endDetailsCallback = this.__handleEndDetails.bind(this);\n    this.__videoConfig.checkForConnectivityCallback = this.__checkConnectivity.bind(this);\n    this.__videoConfig.pollForConnectionCallback = this.__pollForConnection.bind(this);\n    if (this.__videoConfig.requiredHandlers) {\n      var _videoConfig$require;\n\n      (_videoConfig$require = this.__videoConfig.requiredHandlers).push.apply(_videoConfig$require, _toConsumableArray(this.__eventHandlers));\n    }\n    if (!this.__isValidVisitConfig(videoConfig.visitConfig)) {\n      var error = _error2.default.GenericError('Not a valid visit config');\n      this.__logger.error(currentFunction, 'Not a valid visit config', videoConfig.visitConfig);\n      throw error;\n    }\n    this.__visitConfig = videoConfig.visitConfig;\n\n    var delegate = this.__visitConfig.visitPollingDelegate;\n\n    // wrap updateMetrics callback so that we store metrics in localStorage every time it's called\n    var updateMetricsCallback = delegate.updateMetrics;\n    delegate.updateMetrics = function (visit, metrics) {\n      localStorage.setItem('AWMetrics', JSON.stringify(metrics));\n      return updateMetricsCallback(visit, metrics);\n    };\n\n    this.currentVisit = this.__visitConfig.visit;\n    this.internalVideoConsole = this.__createInternalVideoConsole();\n\n    this.__builtinPlugins = [_screenshare2.default];\n\n    this.__registerPlugins();\n    this.__logger.debug(currentFunction, 'Using ' + _typeof(this.internalVideoConsole) + ' as the internal implementation');\n  }\n\n  /**\r\n   * Creates the internal video console to use.\r\n   *\r\n   * @private\r\n   * @returns {AWCoreSDKVidyoVideoConsole | AWCoreSDKPexipConsole} the video console implementation\r\n   */\n\n\n  _createClass(AWCoreSDKVideoConsole, [{\n    key: '__createInternalVideoConsole',\n    value: function __createInternalVideoConsole() {\n      switch (this.__videoConfig.vendor) {\n        case _awcoresdk_vendor2.default.VIDYO:\n          return new _vidyo_video_console2.default(this.__videoConfig);\n        case _awcoresdk_vendor2.default.PEXIP:\n        default:\n          return new _pexip_video_console2.default(this.__videoConfig);\n      }\n    }\n\n    // --------------------- Public API -------------------\n\n    /**\r\n     * Starts the video visit on behalf of the configured 'local' {@link AWCoreSDKVideoParticipant}.\r\n     *\r\n     * First, the internal video (WebRTC) implementation is invoked. If we receive an asynchronous indication that that invocation was successful,\r\n     * we know that the local participant is now in the video visit. Once the console has received an indication that the remote participant has also joined,\r\n     * the configured {@link AWCoreSDKVisitPollingDelegate} is instructed to update the local participant's connection status. After the connection status has been updated,\r\n     * the console will begin its interval of polling for the visit with its delegate.\r\n     *\r\n     * The console remains in a passive state for the remainder of the video visit as it listens either for a terminal visit disposition from caretalks, or for an indication\r\n     * from the internal video implementation that the video itself, independent of caretalks, has concluded.\r\n     *\r\n     * @since 1.0.0\r\n     * @returns {Promise<AWCoreSDKVideoConsole>} A promise that resolves to the video console instance if the user successfully joined the video visit\r\n     */\n\n  }, {\n    key: 'start',\n    value: function start() {\n      var _this = this;\n\n      this.__initializeInternalState();\n      this.__logWebRTCVisitInformation();\n      var currentFunction = 'AWCoreSDKVideoConsole#start';\n      var delegate = this.__visitConfig.visitPollingDelegate;\n      var interval = this.__visitConfig.visitPollingInterval;\n      // always start with latest visit\n      return delegate.pollForVisit(this.currentVisit).then(function (visit) {\n        _this.currentVisit = visit;\n        _this.internalVideoConsole.updateConfigVisit(visit);\n        setTimeout(_this.__waitForVisitToFinish.bind(_this), interval);\n        return _this.internalVideoConsole.start();\n      }).then(function () {\n        _this.__logger.info(currentFunction, 'Internal console started up successfully');\n        // if we don't get confirmation back from the portal that we've connected after a period of time...\n        setTimeout(function () {\n          if (!_this.__localParticipantJoined) {\n            delegate.updateMetrics(_this.currentVisit, _this.internalVideoConsole.metrics).finally(function () {\n              _this.internalVideoConsole.stopRetries();\n              delegate.onVisitError(_this.currentVisit, _awcoresdk_visit_end_details2.default.FAILED_TO_COMMUNICATE_WITH_AMERICAN_WELL_TELEHEALTH_PLATFORM, new Error('The local participant was unable to join the video call'));\n            });\n          }\n        }, 300000);\n        _this.__runPlugins('start');\n        return _this;\n      }).catch(function (error) {\n        delegate.onVisitError(_this.currentVisit, new Error('Failed to start the ' + _this.__videoConfig.vendor.toLowerCase() + ' console'), _awcoresdk_visit_end_details2.default.INITIATION_FAILED);\n        _this.__logger.error(currentFunction + ': Internal console failed to start', error);\n        _this.__logger.error(error.toString());\n      });\n    }\n\n    /**\r\n     * Attempts to teardown the video\r\n     *\r\n     * @returns {undefined} does not return a value\r\n     */\n\n  }, {\n    key: 'stop',\n    value: function stop() {\n      this.internalVideoConsole.stop();\n      this.__runPlugins('stop');\n      document.body.classList.remove('awcore-console-active');\n    }\n\n    /**\r\n     * Attempts to refresh the video and reconnect to the visit.\r\n     *\r\n     * @since 1.0.15\r\n     * @returns {undefined} does not return a value\r\n     */\n\n  }, {\n    key: 'refresh',\n    value: function refresh() {\n      this.internalVideoConsole.refresh();\n    }\n\n    /**\r\n     * Leave the ongoing visit.\r\n     *\r\n     * @since 1.0.0\r\n     * @param {boolean=} userRequested (optional) Whether or not the user proactively requested the visit to end\r\n     * @returns {Promise} A promise that resolves once the user has left the visit\r\n     */\n\n  }, {\n    key: 'leaveVisit',\n    value: function leaveVisit(userRequested) {\n      var _this2 = this;\n\n      var delegate = this.__visitConfig.visitPollingDelegate;\n      var metrics = this.internalVideoConsole.metrics;\n      metrics.isEndRequested = userRequested;\n      return delegate.updateMetrics(this.currentVisit, metrics).then(function () {\n        return _this2.internalVideoConsole.leaveCall(userRequested);\n      });\n    }\n\n    /**\r\n     * Toggle full screen mode\r\n     *\r\n     * @since 1.0.5\r\n     * @returns {undefined} does not return a value\r\n     */\n\n  }, {\n    key: 'toggleFullScreen',\n    value: function toggleFullScreen() {\n      this.internalVideoConsole.toggleFullScreen();\n    }\n\n    /**\r\n     * Invokes Vidyo console to show permission denies message\r\n     *\r\n     * @since 1.0.7\r\n     * @returns {undefined} does not return a value\r\n     */\n\n  }, {\n    key: 'showPermissionDeniedMessage',\n    value: function showPermissionDeniedMessage() {\n      return this.internalVideoConsole.showPermissionDeniedMessage();\n    }\n\n    /**\r\n     * Invokes console to disable callMe button.\r\n     *\r\n     * @param {boolean} enabled if the call me button should be disabled\r\n     * @returns {undefined} does not return a value\r\n     */\n\n  }, {\n    key: 'toggleCallMeDisabled',\n    value: function toggleCallMeDisabled(enabled) {\n      return this.internalVideoConsole.toggleCallMeDisabled(enabled);\n    }\n\n    /**\r\n     * true if in full screen mode\r\n     *\r\n     * @since 1.0.5\r\n     * @type {boolean}\r\n     */\n\n  }, {\n    key: 'useMockedInternalConsole',\n\n\n    /**\r\n     * For testing purposes only\r\n     *\r\n     * @param {AWCoreSDKInternalVideoConsole} stub the stub\r\n     * @returns {undefined} no return\r\n     * @private\r\n     */\n    value: function useMockedInternalConsole(stub) {\n      this.internalVideoConsole = stub;\n    }\n\n    /**\r\n     * Returns true if in WebRTC is supported.\r\n     *\r\n     * @since 1.0.12\r\n     * @returns {boolean} true if WebRTC is supported by the browser, false otherwise.\r\n     */\n\n  }, {\n    key: '__initializeInternalState',\n\n\n    /**\r\n     * Initializes a few primitives needed to maintain consistent behavior between polls and within event handlers.\r\n     *\r\n     * @returns {undefined} no return\r\n     * @private\r\n     */\n    value: function __initializeInternalState() {\n      this.__logger.info('Initializing internal state of the video console');\n      this.__localParticipantJoined = false;\n      this.__hasProcessedVisitEnd = undefined;\n      this.connectionErrorCount = 0;\n      document.body.classList.add('awcore-console-active');\n    }\n\n    /**\r\n     * Determines if the given visit has a terminal disposition.\r\n     *\r\n     * @param {AWCoreSDKVisitDataObject} visit the visit\r\n     * @returns {boolean} whether the visit can be considered to have ended\r\n     * @private\r\n     */\n\n  }, {\n    key: '__isVisitEnded',\n    value: function __isVisitEnded(visit) {\n      return visit.finished || this.__visitEndDetails !== null;\n    }\n\n    /**\r\n     * Periodically polls caretalks using the delegate in order to determine when the underlying visit has transitioned to a\r\n     * terminal disposition, at which point the delegate is informed that the video visit is over.\r\n     *\r\n     * @returns {undefined} no return\r\n     * @private\r\n     */\n\n  }, {\n    key: '__waitForVisitToFinish',\n    value: function __waitForVisitToFinish() {\n      var _this3 = this;\n\n      var currentFunction = 'AWCoreSDKVideoConsole#__waitForVisitToFinish';\n      var delegate = this.__visitConfig.visitPollingDelegate;\n      var interval = this.__visitConfig.visitPollingInterval;\n\n      delegate.pollForVisit(this.currentVisit).then(function (visit) {\n        _this3.internalVideoConsole.toggleCallMeDisabled(visit);\n        _this3.internalVideoConsole.updateConfigVisit(visit);\n        _this3.currentVisit = visit;\n        if (typeof delegate.onVisitUpdated === 'function') {\n          delegate.onVisitUpdated(_this3.currentVisit);\n        }\n        if (_this3.__isVisitEnded(visit)) {\n          if (!_this3.__hasProcessedVisitEnd) {\n            _this3.internalVideoConsole.cancelTokenRefresh();\n            _this3.__logger.info(currentFunction, 'The visit has ended - notifying the delegate.', _this3.currentVisit);\n            _this3.__hasProcessedVisitEnd = true;\n            _this3.__logger.debug('Ending visit, end details: ', _this3.__visitEndDetails);\n            delegate.updateMetrics(_this3.currentVisit, _this3.internalVideoConsole.metrics).finally(function () {\n              delegate.onVisitEnd(_this3.currentVisit, _this3.__visitEndDetails);\n            });\n          } else {\n            _this3.__logger.info(currentFunction, 'The visit has ended and the delegate has already been notified.', visit);\n          }\n\n          // make sure to exit fullscreen especially if the visit was ended by the remote participant\n          if (_this3.isInFullScreenMode) {\n            _this3.toggleFullScreen();\n          }\n        } else {\n          _this3.__logger.debug(currentFunction, 'Visit is ongoing', visit);\n          setTimeout(_this3.__waitForVisitToFinish.bind(_this3), interval);\n        }\n      }).catch(function (error) {\n        // handle network failures and reconnect\n        if (error && (['networkUnavailableError'].includes(error.errorCode) || ['Failed to fetch', 'Request timeout', 'The Internet connection appears to be offline.'].includes(error.message))) {\n          _this3.internalVideoConsole.handleInternetDisconnection();\n          _this3.__pollForConnection().then(function (numberOfRetries) {\n            _this3.internalVideoConsole.metrics.autoRetryCount += numberOfRetries;\n            return delegate.updateMetrics(_this3.currentVisit, _this3.internalVideoConsole.metrics);\n          }).then(function () {\n            if (_this3.__isVisitEnded(_this3.currentVisit)) {\n              delegate.onVisitEnd(_this3.currentVisit, _this3.__visitEndDetails);\n            } else {\n              _this3.refresh();\n              _this3.__waitForVisitToFinish();\n            }\n          });\n\n          // otherwise we ded\n        } else {\n          delegate.updateMetrics(_this3.currentVisit, _this3.internalVideoConsole.metrics).finally(function () {\n            delegate.onVisitError(_this3.currentVisit, _awcoresdk_visit_end_details2.default.FAILED_TO_COMMUNICATE_WITH_AMERICAN_WELL_TELEHEALTH_PLATFORM, error);\n          });\n        }\n      });\n    }\n\n    // --------------------- Event Handling -------------------\n\n    /**\r\n     * Returns handlers for events that the console cares about\r\n     *\r\n     * @returns {AWCoreSDKBaseEventHandler[]} the handlers\r\n     * @private\r\n     */\n\n  }, {\n    key: '__onConferenceActive',\n\n\n    /**\r\n     * Gives us a confirmation that the participant is active in the call.\r\n     *\r\n     * @returns {undefined} no return\r\n     * @private\r\n     */\n    value: function __onConferenceActive() {\n      var _this4 = this;\n\n      var currentFunction = 'VisitService#__onConferenceActive';\n      this.__localParticipantJoined = true;\n\n      var delegate = this.__visitConfig.visitPollingDelegate;\n      var metrics = this.internalVideoConsole.metrics;\n      metrics.isJoined = true;\n      delegate.updateMetrics(this.currentVisit, metrics); // async\n\n      this.internalVideoConsole.clearCancelTimer();\n      delegate.updateConnectionStatus(this.currentVisit, this.internalVideoConsole.participantVendorId).then(function (result) {\n        _this4.__logger.info(currentFunction, 'Connection status was updated successfully', result);\n      }).catch(function (error) {\n        _this4.__logger.error(currentFunction, 'An error occurred while calling updateConnectionStatus of the delegate', error);\n        delegate.updateMetrics(_this4.currentVisit, _this4.internalVideoConsole.metrics).finally(function () {\n          delegate.onVisitError(_this4.currentVisit, _awcoresdk_visit_end_details2.default.FAILED_TO_COMMUNICATE_WITH_AMERICAN_WELL_TELEHEALTH_PLATFORM, error);\n        });\n      });\n      this.__runPlugins('conferenceActive');\n    }\n\n    /**\r\n     * Event handler responsible for informing the delegate that the video visit has ended.\r\n     *\r\n     * @param {Object} e the event\r\n     * @returns {undefined} no return\r\n     * @private\r\n     */\n\n  }, {\n    key: '__onConferenceEnded',\n    value: function __onConferenceEnded(e) {\n      var _this5 = this;\n\n      if (this.internalVideoConsole.refreshInProgress) {\n        // don't execute the visit end logic, we're just refreshing the conference\n        return;\n      }\n\n      var delegate = this.__visitConfig.visitPollingDelegate;\n      var metrics = this.internalVideoConsole.metrics;\n      // TODO: once the internal console starts passing us end reasons here, we can populate the metrics.videoFailureReason\n      delegate.updateMetrics(this.currentVisit, metrics).finally(function () {\n        if (!_this5.__hasProcessedVisitEnd) {\n          _this5.__hasProcessedVisitEnd = true;\n          _this5.__logger.info('The visit has ended, informing the delegate', e);\n          delegate.onVisitEnd(_this5.currentVisit);\n        } else {\n          _this5.__logger.info('The delegate has already been informed that the visit has ended', e);\n        }\n      });\n    }\n\n    /**\r\n     * Event handler responsible for informing the delegate that the local participant has elected the Call Me option\r\n     *\r\n     * @returns {undefined} no return\r\n     * @private\r\n     */\n\n  }, {\n    key: '__onCallMeSelected',\n    value: function __onCallMeSelected() {\n      var _this6 = this;\n\n      var delegate = this.__visitConfig.visitPollingDelegate;\n      this.__logger.info('The user has selected the Call Me option');\n\n      // Immediately disable the 'Switch To Phone' button\n      this.internalVideoConsole.__disableSwitchToPhone();\n      delegate.updateMetrics(this.currentVisit, this.internalVideoConsole.metrics).finally(function () {\n        // We had to wait for updateMetrics to be called\n        // make sure we are still disabling the 'Switch To Phone' button - we haven't called the rest service to add a call to the visit\n        _this6.internalVideoConsole.__disableSwitchToPhone();\n        delegate.onCallMeSelected(_this6.currentVisit);\n      });\n    }\n\n    /**\r\n     * Event handler responsible for informing the delegate that the local participant has elected the IVR callback option\r\n     *\r\n     * @returns {undefined} no return\r\n     * @private\r\n     */\n\n  }, {\n    key: '__initiateIVRCallback',\n    value: function __initiateIVRCallback() {\n      var _this7 = this;\n\n      // have we tried more than once (including this call)\n      var isRetry = this.internalVideoConsole.IVRCallbackRetryCount > 1;\n      var delegate = this.__visitConfig.visitPollingDelegate;\n      this.__logger.info('The user has initiated the IVR callback option');\n      delegate.updateMetrics(this.currentVisit, this.internalVideoConsole.metrics).finally(function () {\n        delegate.onIVRCallback(_this7.currentVisit, isRetry);\n      });\n    }\n\n    // --------------------- Validation -------------------\n\n    /**\r\n     * A valid config is a fully-composed instance of AWCoreSDKVisitConfiguration\r\n     *\r\n     * @param {AWCoreSDKVisitConfiguration} visitConfig the config\r\n     * @returns {boolean} TRUE if the config is valid\r\n     * @private\r\n     */\n\n  }, {\n    key: '__isValidVisitConfig',\n    value: function __isValidVisitConfig(visitConfig) {\n      if (!(visitConfig instanceof _visit_configuration2.default)) {\n        return false;\n      }\n      var delegate = visitConfig.visitPollingDelegate;\n      return typeof delegate.pollForVisit === 'function' && typeof delegate.updateMetrics === 'function' && typeof delegate.updateConnectionStatus === 'function' && typeof delegate.onVisitEnd === 'function' && typeof delegate.onVisitError === 'function' && typeof delegate.onExitVisitRequested === 'function';\n    }\n\n    /**\r\n     * A callback for extraneous visit ending\r\n     *\r\n     * @param {string} endDetails the reason for ending visit\r\n     * @returns {undefined} no return value.\r\n     * @private\r\n     */\n\n  }, {\n    key: '__handleEndDetails',\n    value: function __handleEndDetails(endDetails) {\n      this.__logger.info('Received a visit endDetails', endDetails);\n      this.__visitEndDetails = endDetails;\n    }\n\n    /**\r\n     * Log browser and visit information\r\n     *\r\n     * @returns {undefined} no return value.\r\n     * @private\r\n     */\n\n  }, {\n    key: '__logWebRTCVisitInformation',\n    value: function __logWebRTCVisitInformation() {\n      this.__logger.info('Video Console: Starting WebRTC Visit: Browser: ' + window.navigator.userAgent);\n      this.__logger.info('Video Console: Starting WebRTC Visit: Browser Language: ' + window.navigator.language);\n      this.__logger.info('Video Console: Starting WebRTC Visit: Operating System: ' + window.navigator.platform);\n\n      if (this.__videoConfig.visitLoggingData !== undefined && this.__videoConfig.visitLoggingData instanceof _visit_logging_data_object2.default) {\n        this.__logger.info('Video Console: Starting WebRTC Visit: SDK Version: ' + this.__videoConfig.visitLoggingData.sdkVersion);\n        this.__logger.info('Video Console: Starting WebRTC Visit: Visit Service Language: ' + this.__videoConfig.visitLoggingData.language);\n        this.__logger.info('Video Console: Starting WebRTC Visit: Visit ID: ' + this.__videoConfig.visitLoggingData.visitId);\n        this.__logger.info('Video Console: Starting WebRTC Visit: Provider ID: ' + this.__videoConfig.visitLoggingData.providerId);\n        this.__logger.info('Video Console: Starting WebRTC Visit: Consumer ID: ' + this.__videoConfig.visitLoggingData.consumerId);\n        this.__logger.info('Video Console: Starting WebRTC Visit: Disposition: ' + this.__videoConfig.visitLoggingData.disposition);\n      }\n    }\n\n    /**\r\n     * Called when internet disruption is detected.\r\n     *\r\n     * @param {number} timeout The reason value.\r\n     *\r\n     * @returns {undefined} return promise.\r\n     */\n\n  }, {\n    key: '__checkConnectivity',\n    value: function __checkConnectivity(timeout) {\n      var delegate = this.__visitConfig.visitPollingDelegate;\n      return delegate.pollForVisitLowTimeout(this.currentVisit, timeout);\n    }\n\n    /**\r\n     * Starts the poll for internet disconnection\r\n     *\r\n     * @returns {Promise<number>} a promise that resolves with the number of retries made until connection was re-established\r\n     * @private\r\n     */\n\n  }, {\n    key: '__pollForConnection',\n    value: function __pollForConnection() {\n      var _this8 = this;\n\n      var interval = 1500;\n      this.connectionErrorCount = 0;\n\n      var connectivityPoll = function connectivityPoll(resolve, reject) {\n        _this8.__checkConnectivity(5000).then(function (updatedVisit) {\n          _this8.currentVisit = updatedVisit;\n          resolve(_this8.connectionErrorCount);\n        }).catch(function (err) {\n          _this8.connectionErrorCount += 1;\n          _this8.__logger.debug('Check for connectivity failed. Attempts count :', _this8.connectionErrorCount, err);\n          if (_this8.connectionErrorCount >= 300) {\n            _this8.__logger.error('failed to connect with Internet. Attempts count :', _this8.connectionErrorCount);\n            reject(err);\n          } else {\n            setTimeout(connectivityPoll, interval, resolve, reject);\n          }\n        });\n      };\n      return new Promise(connectivityPoll);\n    }\n\n    /**\r\n     * Exits a visit\r\n     *\r\n     * @private\r\n     * @param {string} exitType The exit type of the visit. Can be cancel or end\r\n     * @param {string=} comments The comments from the provider\r\n     * @returns {Object} this function returns the updated visit\r\n     */\n\n  }, {\n    key: '__onExitVisitRequested',\n    value: function __onExitVisitRequested(exitType, comments) {\n      var _this9 = this;\n\n      var currentFunction = 'AWCoreSDKVideoConsole#__onExitVisitRequested';\n      this.__logger.debug(currentFunction, 'Started', exitType);\n\n      var delegate = this.__visitConfig.visitPollingDelegate;\n      this.internalVideoConsole.stopRetries();\n      this.internalVideoConsole.leaveCall(true);\n      return delegate.onExitVisitRequested(this.currentVisit, exitType, comments).then(function (visit) {\n        _this9.currentVisit = visit;\n        delegate.onVisitEnd(visit);\n        _this9.__logger.debug(currentFunction, 'Finished');\n        return visit;\n      }).catch(function (error) {\n        _this9.__logger.error(currentFunction, 'error', error);\n        delegate.onVisitError(_this9.currentVisit, error);\n      });\n    }\n\n    /**\r\n     * Internal detection of startup plugins, routing through the public interface for\r\n     * adding additional plugins\r\n     *\r\n     * @private\r\n     * @returns {undefined} nothing\r\n     */\n\n  }, {\n    key: '__registerPlugins',\n    value: function __registerPlugins() {\n      this.plugins = [];\n      (this.__builtinPlugins || []).forEach(this.registerPlugin, this);\n      (this.__videoConfig.plugins || []).forEach(this.registerPlugin, this);\n    }\n\n    /**\r\n     * Register a plugin with this Video Console\r\n     *\r\n     * @param {Function|Array} Plugin a constructor function, based off the API defined in `console_plugin`, or a tuple (Array) of `[constructor, { default_overrides }]`\r\n     * @returns {Object|boolean} the instantiated plugin instance\r\n     */\n\n  }, {\n    key: 'registerPlugin',\n    value: function registerPlugin(Plugin) {\n      var it = false;\n      var Ctor = void 0;\n      var props = void 0;\n\n      // breakup the syntax of passed `plugin`.  If an array, it is a tuple of [Constructor, Object]\n      // otherwise, it just just the Constructor itself, with no additional props\n      if (Array.isArray(Plugin)) {\n        var _Plugin = _slicedToArray(Plugin, 2);\n\n        Ctor = _Plugin[0];\n        props = _Plugin[1];\n      } else {\n        Ctor = Plugin;\n        props = {};\n      }\n\n      // if a constructor has a `predicate` static function, execute it, allowing the plugin to\n      // determine its own self worth.\n      if (!Ctor.predicate || Ctor.predicate && typeof Ctor.predicate === 'function' && Ctor.predicate(this, props)) {\n        it = new Ctor(this, props);\n        this.plugins.push(it);\n      }\n\n      return it;\n    }\n  }, {\n    key: '__runPlugins',\n    value: function __runPlugins(method) {\n      for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        args[_key - 1] = arguments[_key];\n      }\n\n      var dunder = '__' + method;\n      return this.plugins.map(function (plugin) {\n        if (plugin[dunder]) {\n          return plugin[dunder].apply(plugin, args);\n        }\n        return plugin[method] && plugin[method].apply(plugin, args);\n      });\n    }\n\n    /* Allow a console to arbitrarily clear the state of its whole system */\n\n  }, {\n    key: 'clearState',\n    value: function clearState() {\n      this.__runPlugins('clearState');\n    }\n  }, {\n    key: 'isInFullScreenMode',\n    get: function get() {\n      return this.internalVideoConsole.isInFullScreenMode;\n    }\n  }, {\n    key: 'isWebRTCSupported',\n    get: function get() {\n      if (this.__rtcSupported === undefined) {\n        this.__rtcSupported = (0, _rtc_supported2.default)();\n      }\n      return this.__rtcSupported;\n    }\n  }, {\n    key: '__eventHandlers',\n    get: function get() {\n      return [new _awcoresdk_base_event_handler2.default({ type: 'conferenceEndedEvent', handler: this.__onConferenceEnded.bind(this) }), new _awcoresdk_base_event_handler2.default({ type: 'remoteParticipantJoinedEvent', handler: this.__onConferenceActive.bind(this) }), new _awcoresdk_base_event_handler2.default({ type: 'callMeEvent', handler: this.__onCallMeSelected.bind(this) }), new _awcoresdk_base_event_handler2.default({ type: 'IVRCallBackEvent', handler: this.__initiateIVRCallback.bind(this) }), new _awcoresdk_base_event_handler2.default({ type: 'onExitVisitRequested', handler: this.__onExitVisitRequested.bind(this) })];\n    }\n  }, {\n    key: 'config',\n    get: function get() {\n      return this.__videoConfig;\n    }\n  }]);\n\n  return AWCoreSDKVideoConsole;\n}();\n\nexports.default = AWCoreSDKVideoConsole;","var arrayWithoutHoles = require(\"./arrayWithoutHoles\");\n\nvar iterableToArray = require(\"./iterableToArray\");\n\nvar unsupportedIterableToArray = require(\"./unsupportedIterableToArray\");\n\nvar nonIterableSpread = require(\"./nonIterableSpread\");\n\nfunction _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}\n\nmodule.exports = _toConsumableArray;","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); /*!\nmerican Well Core Web SDK\nnopyright © 2020 American Well.\nll rights reserved.\nnt is illegal to use, reproduce or distribute\nany part of this Intellectual Property without\nprior written authorization from American Well.\nn\nvar _detectBrowser = require('detect-browser');\n\nvar _media_devices = require('../util/media_devices');\n\nvar _media_devices2 = _interopRequireDefault(_media_devices);\n\nvar _TMCLite = require('./TMCLite.html');\n\nvar _TMCLite2 = _interopRequireDefault(_TMCLite);\n\nvar _replace = require('../util/replace');\n\nvar _replace2 = _interopRequireDefault(_replace);\n\nvar _empty = require('../util/empty');\n\nvar _empty2 = _interopRequireDefault(_empty);\n\nvar _i18n = require('../i18n');\n\nvar _i18n2 = _interopRequireDefault(_i18n);\n\nvar _monitor_stream = require('./monitor_stream');\n\nvar _monitor_stream2 = _interopRequireDefault(_monitor_stream);\n\nrequire('./TMCLite.scss');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar defaults = {\n  locale: 'en-US'\n};\n\nvar retryClickHandler = function retryClickHandler(event) {\n  event.preventDefault();\n  window.location.reload();\n};\n\n/**\n * TMCLite™ AKA Mini Wizard - a smaller version of the full TestMyComputerWizard\n *\n * Fires a single `onStatus` callback with a `state` object, indicating the\n * status of a mic/camera pair, checking overall browser permissions and device\n * access internally.\n */\n\nvar TMCLite = function () {\n  /**\n   * Constructor for TMCLite™\n   *\n   * @param {Object} args property bag to mix in over our instance\n   * @param {Function=} args.onStatus the callback fired on status changes\n   * @param {HTMLElement} args.container the container to host our DOM\n   * @param {string=} args.locale a locale string to use indicating which message bundles to accept\n   * @param {Object} args.messages key/value pairs of messages to override any locale-specific messages\n   */\n  function TMCLite(args) {\n    _classCallCheck(this, TMCLite);\n\n    Object.assign(this, defaults, args);\n    this.messages = Object.assign({}, _i18n2.default[this.locale], this.messages);\n    this.browser = (0, _detectBrowser.detect)();\n    this.__state = {\n      camera: {},\n      mic: {}\n    };\n  }\n\n  /**\n   * Fired once for every state change, with a state object as the parameter. The state object will\n   * contain `mic` and `camera` objects.   If no `error` key is set on either object, the state is\n   * considered valid and can continue.  Otherwise, the error for each item will be reflected.\n   *\n   * eg:\n   *\n   * ```\n   * new TMCLite({\n   *  onStatus(state){\n   *    if (!state.camera.error && !state.mic.error) {\n   *      alert('good to go!');\n   *    }\n   *  }\n   * }).start();\n   * ```\n   *\n   * @returns {undefined} nothing\n   */\n\n\n  _createClass(TMCLite, [{\n    key: 'onStatus',\n    value: function onStatus() {}\n    // this function intentionally left blank\n\n\n    /**\n     * Start up the TMCLite testing sequence and interaction.\n     *\n     * @returns {Object} The own instance\n     */\n\n  }, {\n    key: 'start',\n    value: function start() {\n      var _this = this;\n\n      var preppedTemplate = document.createRange().createContextualFragment((0, _replace2.default)(_TMCLite2.default, this));\n      this.videoDOMNode = preppedTemplate.querySelector('.awcore-tmc-lite-video');\n      this.cameraSelectDOMNode = preppedTemplate.querySelector('.awcore-tmc-lite-cameras');\n      this.cameraSelectDOMNode.onchange = this.__handleCameraChange.bind(this);\n\n      this.microphoneSelectionAreaDOMNode = preppedTemplate.querySelector('.awcore-tmc-select-microphone');\n\n      this.microphoneSelectDOMNode = preppedTemplate.querySelector('.awcore-tmc-lite-microphones');\n      this.microphoneSelectDOMNode.onchange = this.__handleMicrophoneChange.bind(this);\n\n      if (this.__useFauxMicrophoneSelection()) {\n        this.microphoneSelectDOMNode.classList.add('awcore-hidden');\n        var selectFaux = document.createElement('select');\n        var option = document.createElement('option');\n        option.value = 'faux_device_id';\n        option.text = this.messages.settings_default;\n        option.selected = true;\n        selectFaux.appendChild(option);\n\n        this.microphoneSelectionAreaDOMNode.appendChild(selectFaux);\n      }\n\n      this.cameraErrorDOMNode = preppedTemplate.querySelector('.awcore-tmc-lite-camera-error-box');\n      this.microphoneErrorDOMNode = preppedTemplate.querySelector('.awcore-tmc-lite-microphone-error-box');\n\n      this.microphoneMeterDOMNode = preppedTemplate.querySelector('.awcore-tmc-microphone-meter');\n\n      this.cameraErrorDOMNode.querySelector('.awcore-tmc-lite-button').onclick = retryClickHandler;\n      this.microphoneErrorDOMNode.querySelector('.awcore-tmc-lite-button').onclick = retryClickHandler;\n\n      this.container.appendChild(preppedTemplate);\n\n      this.__checkCamera().then(function () {\n        return _this.__checkMicrophone();\n      });\n\n      return this;\n    }\n\n    /**\n     * CWS-521 Identified a somewhat obscure issue with TMC that results in Chrome crashing on android devices.\n     * Investigation revealed that we had no consistent way to identify connected microphones but the 'Default'\n     * selection resulted in desired behavior.  Our 'best effort' solution at this time is to present a faux\n     * microphone selection and simply allow the user to confirm that their microphone is working via the\n     * volume meter and general error detection code.\n     *\n     * @returns {bool} justification\n     */\n\n  }, {\n    key: '__useFauxMicrophoneSelection',\n    value: function __useFauxMicrophoneSelection() {\n      return this.browser.os === 'Android OS';\n    }\n  }, {\n    key: '__checkCamera',\n    value: function __checkCamera(deviceId) {\n      var _this2 = this;\n\n      this.__stopVideoStreams();\n      return _media_devices2.default.getUserMedia({\n        audio: false,\n        video: { deviceId: deviceId ? { exact: deviceId } : undefined }\n      }).then(function (stream) {\n        window.AWVideoStream = stream;\n        _this2.videoDOMNode.srcObject = stream;\n\n        var videoTrack = stream.getVideoTracks()[0];\n        var cameraDeviceId = videoTrack.getSettings().deviceId;\n        var cameraName = videoTrack.label;\n        _this2.__selectedCameraId = cameraDeviceId;\n        _this2.__selectedCameraLabel = cameraName;\n\n        _this2.__storeDevice('camera', cameraDeviceId, cameraName);\n        _this2.__reportState({ camera: { error: null } });\n      }).then(function () {\n        return _media_devices2.default.enumerateDevices();\n      }).then(function (devices) {\n        (0, _empty2.default)(_this2.cameraSelectDOMNode);\n        devices.filter(function (d) {\n          return d.kind === 'videoinput';\n        }).forEach(function (camera) {\n          var option = document.createElement('option');\n          option.value = camera.deviceId;\n          option.text = camera.label;\n          if (camera.deviceId === _this2.__selectedCameraId || _this2.__selectedCameraLabel === camera.label) {\n            option.selected = true;\n          }\n          _this2.cameraSelectDOMNode.appendChild(option);\n        });\n      }).catch(function (e) {\n        _this2.__reportState({ camera: { error: e } });\n        _this2.__writeCameraError(e);\n      });\n    }\n  }, {\n    key: '__checkMicrophone',\n    value: function __checkMicrophone(deviceId) {\n      var _this3 = this;\n\n      this.__stopAudioStreams();\n      return _media_devices2.default.getUserMedia({\n        video: false,\n        audio: { deviceId: deviceId ? { exact: deviceId } : undefined }\n      }).then(function (stream) {\n        window.AWAudioStream = stream;\n\n        var audioTrack = stream.getAudioTracks()[0];\n        var microphoneDeviceId = audioTrack.getSettings().deviceId;\n        var microphoneName = audioTrack.label;\n\n        _this3.__selectedMicrophoneId = microphoneDeviceId;\n        _this3.__selectedMicrophoneName = microphoneName;\n        _this3.__storeDevice('microphone', microphoneDeviceId, microphoneName);\n\n        _this3.__fireUpDaMeter(stream);\n      }).then(function () {\n        return _media_devices2.default.enumerateDevices();\n      }).then(function (devices) {\n        (0, _empty2.default)(_this3.microphoneSelectDOMNode);\n        devices.filter(function (d) {\n          return d.kind === 'audioinput';\n        }).forEach(function (microphone) {\n          var option = document.createElement('option');\n          option.value = microphone.deviceId;\n          option.text = microphone.label;\n          if (microphone.deviceId === _this3.__selectedMicrophoneId || _this3.__selectedMicrophoneName === microphone.label) {\n            option.selected = true;\n          }\n          _this3.microphoneSelectDOMNode.appendChild(option);\n        });\n        if (_this3.__useFauxMicrophoneSelection()) {\n          _this3.microphoneSelectDOMNode.classList.add('awcore-hidden');\n        }\n      }).catch(function (e) {\n        _this3.__reportState({ mic: { error: e } });\n        _this3.__writeMicrophoneError(e);\n      });\n    }\n  }, {\n    key: '__handleMicrophoneChange',\n    value: function __handleMicrophoneChange(event) {\n      this.__checkMicrophone(event.target.value);\n    }\n  }, {\n    key: '__handleCameraChange',\n    value: function __handleCameraChange(event) {\n      this.__checkCamera(event.target.value);\n    }\n\n    // most likely this isn't good enough but I wish it was\n\n  }, {\n    key: '__writeCameraError',\n    value: function __writeCameraError(error) {\n      this.cameraErrorDOMNode.classList.remove('awcore-hidden');\n      var header = this.cameraErrorDOMNode.querySelector('.awcore-tmc-lite-error-header');\n      var sub = this.cameraErrorDOMNode.querySelector('.awcore-tmc-lite-error-sub');\n      switch (this.__normalizeError(error)) {\n        case 'permission':\n          header.textContent = this.messages.tmc_lite_camera_no_permission_header;\n          sub.textContent = this.messages.tmc_lite_camera_no_permission_sub;\n          break;\n        case 'not_available':\n          header.textContent = this.messages.tmc_lite_camera_not_available_header;\n          sub.textContent = this.messages.tmc_lite_camera_not_available_sub;\n          break;\n        case 'no_devices':\n          header.textContent = this.messages.tmc_lite_camera_no_devices_header;\n          sub.textContent = this.messages.tmc_lite_camera_no_devices_sub;\n          break;\n        default:\n          header.textContent = this.messages.tmc_lite_unknown_header;\n          sub.textContent = this.messages.tmc_lite_unknown_sub;\n      }\n    }\n  }, {\n    key: '__writeMicrophoneError',\n    value: function __writeMicrophoneError(error) {\n      this.microphoneErrorDOMNode.classList.remove('awcore-hidden');\n      var header = this.microphoneErrorDOMNode.querySelector('.awcore-tmc-lite-error-header');\n      var sub = this.microphoneErrorDOMNode.querySelector('.awcore-tmc-lite-error-sub');\n      switch (this.__normalizeError(error)) {\n        case 'permission':\n          header.textContent = this.messages.tmc_lite_microphone_no_permission_header;\n          sub.textContent = this.messages.tmc_lite_microphone_no_permission_sub;\n          break;\n        case 'not_available':\n          header.textContent = this.messages.tmc_lite_microphone_not_available_header;\n          sub.textContent = this.messages.tmc_lite_microphone_not_available_sub;\n          break;\n        case 'no_devices':\n          header.textContent = this.messages.tmc_lite_microphone_no_devices_header;\n          sub.textContent = this.messages.tmc_lite_microphone_no_devices_sub;\n          break;\n        default:\n          header.textContent = this.messages.tmc_lite_unknown_header;\n          sub.textContent = this.messages.tmc_lite_unknown_sub;\n      }\n    }\n  }, {\n    key: '__reportState',\n    value: function __reportState(partialState) {\n      Object.assign(this.__state, partialState);\n      this.onStatus(this.__state);\n    }\n\n    /**\n     * Tear down the component and shut down any possible streams. This is a terminal action,\n     * the TMCMini cannot be restarted.\n     *\n     * @returns {undefined} nothing\n     */\n\n  }, {\n    key: 'stop',\n    value: function stop() {\n      this.__stopAudioStreams();\n      this.__stopVideoStreams();\n      (0, _empty2.default)(this.container);\n    }\n\n    // SUPER DUPER KILL THE STREAMS\n\n  }, {\n    key: '__stopAudioStreams',\n    value: function __stopAudioStreams() {\n      if (window.AWAudioStream) {\n        window.AWAudioStream.getTracks().forEach(function (t) {\n          return t.stop();\n        });\n        window.AWAudioStream = null;\n      }\n      if (this.__monitorStream) {\n        this.__monitorStream.close();\n      }\n    }\n  }, {\n    key: '__stopVideoStreams',\n    value: function __stopVideoStreams() {\n      if (window.AWVideoStream) {\n        window.AWVideoStream.getTracks().forEach(function (t) {\n          return t.stop();\n        });\n        window.AWVideoStream = null;\n      }\n      if (this.videoDOMNode) {\n        this.videoDOMNode.srcObject = null;\n      }\n    }\n  }, {\n    key: '__normalizeError',\n    value: function __normalizeError(error) {\n      switch (error.name) {\n        case 'PermissionDeniedError':\n        case 'NotAllowedError':\n          return 'permission';\n        case 'NotFoundError':\n          return 'no_devices';\n        case 'SourceUnavailableError':\n        case 'OverconstrainedError':\n        case 'NotReadableError':\n        case 'AbortError':\n          return 'not_available';\n        default:\n          // eslint-disable-next-line no-console\n          console.warn('Unknown MediaError name: ', error.name, error);\n          return 'unknown';\n      }\n    }\n  }, {\n    key: '__fireUpDaMeter',\n    value: function __fireUpDaMeter(stream) {\n      if (this.__monitorStream) {\n        // kill any existing audioContext - this returns a promise, not sure we care.\n        this.__monitorStream.close();\n      }\n\n      // if not detecting any audio signal in 2 seconds, display microphone not available message\n      this.pendingAudioTimer = setTimeout(this.__showMicrophoneError.bind(this), 2000);\n\n      this.__monitorStream = (0, _monitor_stream2.default)(stream, this.__onMonitorStream.bind(this));\n    }\n  }, {\n    key: '__showMicrophoneError',\n    value: function __showMicrophoneError() {\n      var e = { name: 'NotReadableError' };\n      this.__reportState({ mic: { error: e } });\n      this.__writeMicrophoneError(e);\n    }\n  }, {\n    key: '__onMonitorStream',\n    value: function __onMonitorStream(volume, audioActive) {\n      this.__colorMeterBars(volume);\n      this.__detectAudio(audioActive);\n    }\n  }, {\n    key: '__detectAudio',\n    value: function __detectAudio(audioActive) {\n      if (this.pendingAudioTimer && audioActive) {\n        // detected audio signal, clear error message\n        clearTimeout(this.pendingAudioTimer);\n        this.pendingAudioTimer = null;\n        this.microphoneErrorDOMNode.classList.add('awcore-hidden');\n        this.__reportState({ mic: { error: null } });\n      }\n    }\n  }, {\n    key: '__colorMeterBars',\n    value: function __colorMeterBars(volume) {\n      var bars = Array.from(this.microphoneMeterDOMNode.querySelectorAll('.awcore-tmc-microphone-meter-bar'));\n\n      // determine how many of the total number of bars are actually lit\n      var numberLit = Math.round(volume * 0.07);\n      var litBars = bars.slice(0, numberLit);\n\n      // set class appropriately for lit and unlit bars\n      for (var i = 0; i < bars.length; i++) {\n        if (i < litBars.length) {\n          bars[i].classList.add('awcore-tmc-microphone-meter-bar-lit');\n        } else {\n          bars[i].classList.remove('awcore-tmc-microphone-meter-bar-lit');\n        }\n      }\n    }\n  }, {\n    key: '__storeDevice',\n    value: function __storeDevice(type, deviceId, deviceName) {\n      var stringifedCurrentDevices = localStorage.getItem('AWCurrentDevices');\n      var currentDevices = stringifedCurrentDevices && JSON.parse(stringifedCurrentDevices) || {};\n      currentDevices[type + 'DeviceId'] = deviceId;\n      currentDevices[type + 'DeviceName'] = deviceName;\n      currentDevices[type + 'DeviceLabel'] = deviceName;\n      localStorage.setItem('AWCurrentDevices', JSON.stringify(currentDevices));\n    }\n  }]);\n\n  return TMCLite;\n}();\n\nexports.default = TMCLite;","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); /*!\r\nmerican Well Core Web SDK\r\nr\nopyright © 2019 American Well.\r\nll rights reserved.\r\nr\nt is illegal to use, reproduce or distribute\r\nany part of this Intellectual Property without\r\nprior written authorization from American Well.\r\nn\nvar _camera = require('./steps/camera');\n\nvar _camera2 = _interopRequireDefault(_camera);\n\nvar _microphone = require('./steps/microphone');\n\nvar _microphone2 = _interopRequireDefault(_microphone);\n\nvar _speaker = require('./steps/speaker');\n\nvar _speaker2 = _interopRequireDefault(_speaker);\n\nvar _internet = require('./steps/internet');\n\nvar _internet2 = _interopRequireDefault(_internet);\n\nvar _get_started = require('./steps/get_started');\n\nvar _get_started2 = _interopRequireDefault(_get_started);\n\nvar _summary = require('./steps/summary');\n\nvar _summary2 = _interopRequireDefault(_summary);\n\nvar _empty = require('../util/empty');\n\nvar _empty2 = _interopRequireDefault(_empty);\n\nvar _replace = require('../util/replace');\n\nvar _replace2 = _interopRequireDefault(_replace);\n\nvar _media_devices = require('../util/media_devices');\n\nvar _media_devices2 = _interopRequireDefault(_media_devices);\n\nvar _i18n = require('../i18n');\n\nvar _i18n2 = _interopRequireDefault(_i18n);\n\nvar _Wizard = require('./Wizard.html');\n\nvar _Wizard2 = _interopRequireDefault(_Wizard);\n\nrequire('./Wizard.scss');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\r\n * The wizard responsible for running the test my computer flow.\r\n * The MediaObjects (speakers, microphones, cameras) are retrieved from the browser via MediaDevices.getUserMedia().\r\n *\r\n * @property {Object} testMyComputerResult Contains the results of the different test my computer steps.\r\n * @property {Object} speedTestConfig Contains information such as speed test url, and minimum required metrics.\r\n * @property {Object} systemConfiguration Contains config information for this installation.\r\n * @property {MediaObject[]} speakers The collection of speakers.\r\n * @property {MediaObject[]} microphones The collection of microphones.\r\n * @property {MediaObject[]} cameras The collection of cameras.\r\n * @property {MediaObject} videoStream The video stream for testing camera functionality.\r\n * @property {HTMLElement} drawerDOMNode The dom node where the wizard steps are rendered.\r\n * @property {HTMLElement} internetDOMNode The dome node where the speed test are rendered.\r\n * @property {HTMLElement} videoDOMNode The dom node where the video are rendered.\r\n * @property {HTMLElement} stepTitleDOMNode The dom node where the step titles are rendered.\r\n *\r\n * @since 1.1.0\r\n */\nvar AWCoreSDKTestMyComputerWizard = function () {\n  /**\r\n   * The wizard constructor\r\n   *\r\n   * @param {Object} config the configuration object for the test my computer wizard\r\n   * @param {HTMLElement} config.container the container DOM node to attach the wizard to\r\n   * @param {Function} config.doneCallback(results) the callback to invoke with the results when the wizard is completed\r\n   * @param {Object} config.systemConfiguration the system config for this installation.\r\n   * @param {Object} [config.messages] An object containing strings key/value pairs for overriding display strings\r\n   * @param {string} [config.locale] The locale to use for built-in localization. Defaults to `en`. `config.messages` override any built-in localizations.\r\n   */\n  function AWCoreSDKTestMyComputerWizard(config) {\n    _classCallCheck(this, AWCoreSDKTestMyComputerWizard);\n\n    this.messages = Object.assign({}, _i18n2.default[config.locale || 'en'], config.messages);\n    this.__config = config;\n    this.__container = config.container;\n    this.__microphones = [];\n    this.__speakers = [];\n    this.__cameras = [];\n    this.__testMyComputerResult = {};\n    this.__setupWizardSteps();\n  }\n\n  /**\r\n   * Run the step for the given stepName.\r\n   *\r\n   * @param {string} stepName the name of the step to run.\r\n   * @since 1.1.0\r\n   * @returns {void} no return\r\n   */\n\n\n  _createClass(AWCoreSDKTestMyComputerWizard, [{\n    key: 'runStep',\n    value: function runStep(stepName) {\n      this.__currentStepName = stepName;\n      var step = this.__wizardSteps[this.__currentStepName].step;\n\n      this.__updateProgressTracker();\n\n      step.drawDOM();\n    }\n\n    /**\r\n     * Declares a step as 'done' and proceeds to the next step if available, otherwise concludes wizard and calls doneCallback provided in config.\r\n     *\r\n     * @since 1.1.0\r\n     * @returns {void} no return\r\n     */\n\n  }, {\n    key: 'stepDone',\n    value: function stepDone() {\n      this.__updateTechCheck();\n      this.__teardownCurrentStepDOM();\n\n      var nextStepName = this.__wizardSteps[this.__currentStepName].nextStepName;\n      if (nextStepName) {\n        this.runStep(nextStepName);\n      } else {\n        this.stop();\n        this.__config.doneCallback(this.__testMyComputerResult);\n      }\n    }\n\n    /**\r\n     * Start the wizard from the first step.\r\n     *\r\n     * @since 1.1.0\r\n     * @returns {void} no return\r\n     */\n\n  }, {\n    key: 'start',\n    value: function start() {\n      var _this = this;\n\n      this.__getDevices()\n      // eslint-disable-next-line no-console\n      .catch(function (error) {\n        return console.log(error.message);\n      }) // TODO: handle permission denied\n      .then(function () {\n        // make sure we're the only child before starting anything\n        _this.__teardownDOM();\n        _this.__drawSharedDOM();\n        _this.runStep(_this.stepNames.GET_STARTED);\n      });\n    }\n\n    /**\r\n     * The TestMyComputerResult is the running result of the wizard\r\n     *\r\n     * @typedef {Object} TestMyComputerResult\r\n     * @property {boolean} cameraPassed - TRUE if the camera passed\r\n     * @property {boolean} microphonePassed - TRUE if the microphone passed\r\n     * @property {boolean} speakerPassed - TRUE if the speaker passed\r\n     * @property {boolean} techCheckPassed - TRUE if the user is considered to have passed the wizard's tests\r\n     * @property {boolean} datePassedTechCheck - the date the user passed\r\n     * @property {string} cameraDeviceName - the name of the camera device that was used when the test was passed\r\n     * @property {string} cameraDeviceId - the id of the camera device that was used when the test was passed\r\n     * @property {string} microphoneDeviceName - the name of the microphone device that was used when the test was passed\r\n     * @property {string} microphoneDeviceId - the id of the microphone device that was used when the test was passed\r\n     * @property {string} speakerDeviceName - the name of the speaker device that was used when the test was passed\r\n     * @property {string} speakerDeviceId - the id of the speaker device that was used when the test was passed\r\n     * @property {string} downloadSpeedMbps - the download speed in mbps\r\n     * @property {string} uploadSpeedMbps - the upload speed in mbps\r\n     * @property {string} latencyMs - the network latency in ms\r\n     * @property {string} jitter - the network jitter\r\n     */\n\n  }, {\n    key: 'stop',\n\n\n    /**\r\n     * Stop the wizard, teardown everything\r\n     *\r\n     * @since 1.1.0\r\n     * @returns {void} no return\r\n     */\n    value: function stop() {\n      this.__teardownDOM();\n      if (this.__videoStream) {\n        this.__videoStream.getTracks().forEach(function (t) {\n          return t.stop();\n        });\n        this.__videoDOMNode.srcObject = null;\n      }\n      if (this.__microphoneStream) {\n        this.__microphoneStream.getTracks().forEach(function (t) {\n          return t.stop();\n        });\n      }\n    }\n\n    /**\r\n     * Show the internet speed test on the right side of the wizard.\r\n     *\r\n     * @since 1.1.0\r\n     * @returns {void} no return\r\n     */\n\n  }, {\n    key: 'showInternetContent',\n    value: function showInternetContent() {\n      this.__internetDOMNode.classList.remove('awcore-hidden');\n      this.__noVideoDOMNode.classList.add('awcore-hidden');\n      this.__videoDOMNode.classList.add('awcore-hidden');\n    }\n\n    /**\r\n     * Show the video content on the right side of the wizard.\r\n     *\r\n     * @since 1.1.0\r\n     * @returns {void} no return\r\n     */\n\n  }, {\n    key: 'showVideoContent',\n    value: function showVideoContent() {\n      if (this.__videoDOMNode.srcObject) {\n        this.__videoDOMNode.classList.remove('awcore-hidden');\n        this.__noVideoDOMNode.classList.add('awcore-hidden');\n        this.__internetDOMNode.classList.add('awcore-hidden');\n      } else {\n        this.__showNoVideoContent();\n      }\n    }\n\n    /**\r\n     * Show the 'no camera access' content in place of the regular camera feed.\r\n     *\r\n     * @since 1.1.0\r\n     * @private\r\n     * @returns {void} no return\r\n     */\n\n  }, {\n    key: '__showNoVideoContent',\n    value: function __showNoVideoContent() {\n      this.__noVideoDOMNode.classList.remove('awcore-hidden');\n      this.__videoDOMNode.classList.add('awcore-hidden');\n      this.__internetDOMNode.classList.add('awcore-hidden');\n    }\n\n    /**\r\n     * Update tech check based on current device pass / fail information\r\n     *\r\n     * @private\r\n     * @returns {void} no return\r\n     */\n\n  }, {\n    key: '__updateTechCheck',\n    value: function __updateTechCheck() {\n      this.__testMyComputerResult.techCheckPassed = this.__testMyComputerResult.cameraPassed === true && this.__testMyComputerResult.microphonePassed === true && this.__testMyComputerResult.speakerPassed === true;\n\n      if (this.__testMyComputerResult.techCheckPassed) {\n        this.__testMyComputerResult.datePassedTechCheck = new Date();\n      }\n    }\n\n    /**\r\n     *  Setup the wizard steps and sequence\r\n     *\r\n     * @returns {void} no return\r\n     */\n\n  }, {\n    key: '__setupWizardSteps',\n    value: function __setupWizardSteps() {\n      var _wizardSteps;\n\n      this.__stepNames = {\n        GET_STARTED: 'GET_STARTED',\n        CAMERA: 'CAMERA',\n        MICROPHONE: 'MICROPHONE',\n        SPEAKER: 'SPEAKER',\n        INTERNET: 'INTERNET',\n        SUMMARY: 'SUMMARY'\n      };\n\n      this.__wizardSteps = (_wizardSteps = {}, _defineProperty(_wizardSteps, this.stepNames.GET_STARTED, {\n        step: new _get_started2.default(this),\n        stepName: this.stepNames.GET_STARTED,\n        nextStepName: this.stepNames.CAMERA\n      }), _defineProperty(_wizardSteps, this.stepNames.CAMERA, {\n        step: new _camera2.default(this),\n        stepName: this.stepNames.CAMERA,\n        nextStepName: this.stepNames.MICROPHONE,\n        previousStepName: this.stepNames.GET_STARTED\n      }), _defineProperty(_wizardSteps, this.stepNames.MICROPHONE, {\n        step: new _microphone2.default(this),\n        stepName: this.stepNames.MICROPHONE,\n        nextStepName: this.stepNames.SPEAKER,\n        previousStepName: this.stepNames.CAMERA\n      }), _defineProperty(_wizardSteps, this.stepNames.SPEAKER, {\n        step: new _speaker2.default(this),\n        stepName: this.stepNames.SPEAKER,\n        nextStepName: this.stepNames.INTERNET,\n        previousStepName: this.stepNames.MICROPHONE\n      }), _defineProperty(_wizardSteps, this.stepNames.INTERNET, {\n        step: new _internet2.default(this),\n        stepName: this.stepNames.INTERNET,\n        nextStepName: this.stepNames.SUMMARY,\n        previousStepName: this.stepNames.SPEAKER\n      }), _defineProperty(_wizardSteps, this.stepNames.SUMMARY, {\n        step: new _summary2.default(this),\n        stepName: this.stepNames.SUMMARY,\n        previousStepName: this.stepNames.INTERNET\n      }), _wizardSteps);\n    }\n    /**\r\n     *  Get the devices visible to the browser (Microphone, Camera, Speakers)\r\n     *\r\n     * @private\r\n     * @returns {Promise} no return\r\n     */\n\n  }, {\n    key: '__getDevices',\n    value: function __getDevices() {\n      var _this2 = this;\n\n      return _media_devices2.default.getUserMedia({\n        video: true,\n        audio: true\n      }).then(function (stream) {\n        _this2.__videoStream = stream;\n        // mute the audio track of the video stream to avoid feedback\n        // but we need permission to the mic BY THIS POINT, otherwise\n        // enumerateDevices won't have permission to access the labels of things\n        stream.getAudioTracks()[0].enabled = false;\n        return _media_devices2.default.enumerateDevices();\n      }).then(function (devices) {\n        devices.forEach(function (device) {\n          switch (device.kind) {\n            case 'audioinput':\n              _this2.__microphones.push(device);\n              break;\n            case 'audiooutput':\n              _this2.__speakers.push(device);\n              break;\n            case 'videoinput':\n              _this2.__cameras.push(device);\n              break;\n            default:\n              break;\n          }\n        });\n      });\n    }\n\n    /**\r\n     *  Update the progress tracker component\r\n     *\r\n     * @private\r\n     * @returns {void} no return\r\n     */\n\n  }, {\n    key: '__updateProgressTracker',\n    value: function __updateProgressTracker() {\n      var _this3 = this;\n\n      (0, _empty2.default)(this.__progressTrackerDOMNode);\n\n      var step = this.__wizardSteps[this.stepNames.GET_STARTED];\n\n      var _loop = function _loop() {\n        var fragment = _this3.getProgressTrackerHTMLTemplate(step);\n\n        if (step.stepName === _this3.__currentStepName) {\n          fragment.firstElementChild.classList.add('awcore-tmc-current-step');\n        }\n\n        // are we on the first step? hide back arrow - otherwise show\n        if (_this3.stepNames.GET_STARTED === _this3.__currentStepName) {\n          _this3.__progressTrackerBackDOMNode.classList.add('awcore-hidden');\n        } else if (_this3.__progressTrackerBackDOMNode.classList.contains('awcore-hidden')) {\n          _this3.__progressTrackerBackDOMNode.classList.remove('awcore-hidden');\n        }\n\n        var stepName = step.stepName;\n        fragment.querySelector('div').onclick = function (event) {\n          event.preventDefault();\n          _this3.__teardownCurrentStepDOM();\n          _this3.runStep(stepName);\n        };\n\n        _this3.__progressTrackerDOMNode.appendChild(fragment);\n        step = _this3.__wizardSteps[step.nextStepName];\n        if (step) {\n          _this3.__progressTrackerDOMNode.appendChild(document.createElement('hr'));\n        }\n      };\n\n      while (step) {\n        _loop();\n      }\n    }\n  }, {\n    key: 'getProgressTrackerHTMLTemplate',\n    value: function getProgressTrackerHTMLTemplate(step) {\n      var documentFragment = document.createDocumentFragment();\n      var divElement = document.createElement('div');\n      var imgElement = document.createElement('div');\n      var textElement = document.createTextNode(step.step.getProgressTrackerTitle());\n\n      divElement.classList.add('awcore-tmc-step');\n      var stepIconPrefix = 'awcore-tmc-step'.concat('-').concat(step.stepName.toLowerCase());\n      if (step.stepName === this.__currentStepName) {\n        imgElement.classList.add(stepIconPrefix, 'awcore-tmc-step-on');\n      } else {\n        switch (step.step.hasPassed()) {\n          case true:\n            imgElement.classList.add('awcore-tmc-step-passed-icon');\n            break;\n          case false:\n            imgElement.classList.add('awcore-tmc-step-failed-icon');\n            break;\n          // the default happens if step.step.hasPassed() returns a null value which means that the step is not started yet\n          default:\n            imgElement.classList.add(stepIconPrefix, 'awcore-tmc-step-off');\n        }\n      }\n\n      divElement.appendChild(imgElement);\n      divElement.appendChild(textElement);\n\n      // add the tooltip if the step has it\n      if (step.step.getStepTooltip()) {\n        var spantextElement = document.createTextNode(step.step.getStepTooltip());\n        var spanElement = document.createElement('span');\n        spanElement.appendChild(spantextElement);\n        divElement.appendChild(spanElement);\n      }\n\n      documentFragment.appendChild(divElement);\n\n      return documentFragment;\n    }\n\n    /**\r\n     *  Draw the shared DOM attached to the container\r\n     *\r\n     * @private\r\n     * @returns {void} no return\r\n     */\n\n  }, {\n    key: '__drawSharedDOM',\n    value: function __drawSharedDOM() {\n      var _this4 = this;\n\n      var sharedDOMFragment = document.createRange().createContextualFragment(this.__getSharedDOMString());\n      this.__drawerDOMNode = sharedDOMFragment.querySelector('.awcore-tmc-drawer-content');\n      this.__contentDOMNode = sharedDOMFragment.querySelector('.awcore-tmc-content');\n      this.__videoDOMNode = sharedDOMFragment.querySelector('.awcore-tmc-video');\n      this.__noVideoDOMNode = sharedDOMFragment.querySelector('.awcore-tmc-no-video-container');\n      this.__stepTitleDOMNode = sharedDOMFragment.querySelector('.awcore-tmc-step-title');\n      this.__internetDOMNode = sharedDOMFragment.querySelector('.awcore-tmc-internet-content');\n      this.__progressTrackerDOMNode = sharedDOMFragment.querySelector('.awcore-tmc-progress-container');\n      this.__progressTrackerBackDOMNode = sharedDOMFragment.querySelector('.awcore-tmc-progress-back');\n\n      this.__progressTrackerBackDOMNode.onclick = function (event) {\n        event.preventDefault();\n        var previousStepName = _this4.__wizardSteps[_this4.__currentStepName].previousStepName;\n        if (previousStepName) {\n          _this4.__teardownCurrentStepDOM();\n          _this4.runStep(previousStepName);\n        }\n      };\n\n      if (this.__videoStream) {\n        this.__videoDOMNode.srcObject = this.__videoStream;\n      }\n      this.showVideoContent();\n\n      this.__container.appendChild(sharedDOMFragment);\n    }\n\n    /**\r\n     *  Tear down the DOM attached to the container\r\n     *\r\n     * @private\r\n     * @returns {void} no return\r\n     */\n\n  }, {\n    key: '__teardownDOM',\n    value: function __teardownDOM() {\n      if (this.__container) {\n        (0, _empty2.default)(this.__container);\n      }\n    }\n\n    /**\r\n     *  Tear down the current step specific DOM\r\n     *\r\n     * @private\r\n     * @returns {void} no return\r\n     */\n\n  }, {\n    key: '__teardownCurrentStepDOM',\n    value: function __teardownCurrentStepDOM() {\n      var currentStep = this.__wizardSteps[this.__currentStepName].step;\n      currentStep.teardownDOM();\n    }\n\n    /**\r\n     *  The get shared DOM html string\r\n     *\r\n     * @private\r\n     * @returns {string} the shared DOM string\r\n     */\n\n  }, {\n    key: '__getSharedDOMString',\n    value: function __getSharedDOMString() {\n      return (0, _replace2.default)(_Wizard2.default, this);\n    }\n  }, {\n    key: 'testMyComputerResult',\n    get: function get() {\n      return this.__testMyComputerResult;\n    }\n  }, {\n    key: 'speedTestConfig',\n    get: function get() {\n      return this.__config.speedTestConfig;\n    }\n  }, {\n    key: 'systemConfiguration',\n    get: function get() {\n      return this.__config.systemConfiguration;\n    }\n  }, {\n    key: 'drawerDOMNode',\n    get: function get() {\n      return this.__drawerDOMNode;\n    }\n  }, {\n    key: 'internetDOMNode',\n    get: function get() {\n      return this.__internetDOMNode;\n    }\n  }, {\n    key: 'videoDOMNode',\n    get: function get() {\n      return this.__videoDOMNode;\n    }\n  }, {\n    key: 'speakers',\n    get: function get() {\n      return this.__speakers;\n    }\n  }, {\n    key: 'microphones',\n    get: function get() {\n      return this.__microphones;\n    }\n  }, {\n    key: 'videoStream',\n    get: function get() {\n      return this.__videoStream;\n    },\n    set: function set(videoStream) {\n      this.__videoStream = videoStream;\n    }\n  }, {\n    key: 'microphoneStream',\n    get: function get() {\n      return this.__microphoneStream;\n    },\n    set: function set(microphoneStream) {\n      this.__microphoneStream = microphoneStream;\n    }\n  }, {\n    key: 'cameras',\n    get: function get() {\n      return this.__cameras;\n    }\n  }, {\n    key: 'stepTitleDOMNode',\n    get: function get() {\n      return this.__stepTitleDOMNode;\n    }\n  }, {\n    key: 'stepNames',\n    get: function get() {\n      return this.__stepNames;\n    }\n  }]);\n\n  return AWCoreSDKTestMyComputerWizard;\n}();\n\nexports.default = AWCoreSDKTestMyComputerWizard;","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/*!\n * American Well Core Web SDK\n *\n * Copyright (c) 2019 American Well.\n * All rights reserved.\n *\n * It is illegal to use, reproduce or distribute\n * any part of this Intellectual Property without\n * prior written authorization from American Well.\n */\n\nvar getProp = function getProp(parts, create, context) {\n  var root = context || window;\n  var p = void 0;\n  for (var i = 0; i < parts.length; i++) {\n    p = parts[i].trim();\n    try {\n      if (!(p in root)) {\n        if (create) {\n          root[p] = {};\n        } else {\n          return undefined;\n        }\n      }\n      root = root[p];\n    } catch (e) {\n      return undefined;\n    }\n  }\n  return root;\n};\n\n/**\n * Get a property from a dot-separated string, such as \"A.B.C\"\n *\n * @param {string} name The dot-separated string to search for in `context`\n * @param {boolean} [create] toggle to create objects at intermediate name locations\n * @param {*} [context] The root context to begin searching. Defaults to `window`\n * @returns {*} Whatever the property found in `name` was, or undefined.\n */\nvar getObject = function getObject(name, create, context) {\n  var parts = name.split('.');\n  return getProp(parts, create, context);\n};\n\nexports.default = getObject;","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/*!\n * American Well Common Web SDK\n *\n * Copyright © 2019 American Well.\n * All rights reserved.\n *\n * It is illegal to use, reproduce or distribute\n * any part of this Intellectual Property without\n * prior written authorization from American Well.\n */\n\nexports.default = {\n  accept_permission: 'Please allow access to your camera and microphone. You may need to update your browser settings to allow access.',\n  call_me: 'Switch to Phone',\n  call_me_video_problems: 'Video Problems?',\n  call_me_active: 'Connected',\n  camera_failed_help: 'An internal or external webcam is required for your video visit.',\n  camera_failed: 'Camera Test Failed',\n  camera_troubleshoot_0: 'Ensure your webcam is plugged in and enabled',\n  camera_troubleshoot_1: 'Confirm your browser settings are allowing use of your webcam',\n  camera_troubleshoot_2: 'Verify your camera selection is set to the correct webcam',\n  camera_troubleshoot_3: 'Ensure your webcam is not in use by another application',\n  camera_troubleshoot_4: 'If using an external camera, try connecting your webcam to a different USB port',\n  camera_troubleshoot_5: 'Restart your computer',\n  camera: 'Camera',\n  can_cancel_rejoin: \"{participantName} will rejoin shortly. If you'd prefer not to wait, you can cancel the visit.\",\n  can_cancel: \"You have connected but we are still loading {participantName}'s video. If you'd prefer not to wait you can cancel the visit.\",\n  connecting_guest: 'Please wait.',\n  connecting_guest_subtext: 'Your visit is about to begin.',\n  connecting_remote_extended: 'We are still waiting for {participantName} to connect',\n  connecting_remote_extended_subtext: \"If you'd prefer not to wait you can cancel the visit.\",\n  connecting_remote_extended_subtext_ivr: \"If you'd prefer, you can talk to {participantName} on the phone, or continue to wait for the video\",\n  connecting_screen_1_header: 'We’re establishing a secure connection.',\n  connecting_screen_2_header: 'We’re setting up your video.',\n  connecting_screen_3_header: '{remoteName} is connecting.',\n  connecting_screen_1_subtext: 'This may take up to a minute.',\n  connecting_screen_2_subtext: 'This may take up to a minute.',\n  connecting_screen_3_subtext: 'This may take up to a minute, but if you’d prefer we can call you instead.',\n  connecting_with_remote: '{remoteName} is connecting.',\n  connecting_your_video: \"We're connecting your video.\",\n  connecting_your_video_extended: 'It looks like you are having trouble connecting.',\n  connecting_your_video_subtext_extended: \"We're still trying to connect you. If you'd prefer not to wait, you can cancel the visit\",\n  connecting_your_video_subtext_extended_ivr: \"We're still trying to connect you. If you'd prefer, you can talk to {participantName} on the phone, or continue to wait for video.\",\n  consumer_reconnecting: \"We're reconnecting {participantName}'s video. Please wait for your patient to rejoin\",\n  consumer_subtitle_age: 'Age {age}',\n  continue: 'Continue',\n  done: 'Done',\n  end_visit_confirmation_title: 'Are you sure?',\n  full_screen: 'Full Screen',\n  gender_unspecified: 'Unspecified',\n  get_started_detail: 'On the following screens we\\'ll check your camera, microphone, speakers and internet so you are ready for your visit.',\n  get_started: 'Let\\'s Get Started',\n  header_browser_permission: 'Browser Permission',\n  internet_troubleshoot_0: 'Try using a wired connection to the internet if possible.',\n  internet_troubleshoot_1: 'If a wired connection is not available, be sure that your wireless network signal is strong.',\n  internet_troubleshoot_2: 'If your wireless network signal is weak, try moving closer to the router.',\n  media_permission_denied: 'We are having trouble accessing camera and microphone. Please check your camera and microphone permissions.',\n  mic: 'Mic',\n  microphone_troubleshoot_0: 'Ensure your microphone is plugged in and enabled',\n  microphone_troubleshoot_1: 'Confirm your browser settings are allowing use of your microphone',\n  microphone_troubleshoot_2: 'Verify your camera selection is set to the correct microphone',\n  microphone_troubleshoot_3: 'Ensure your microphone is not in use by another application',\n  microphone_troubleshoot_4: 'If using an external microphone, try connecting your microphone to a different USB port',\n  microphone_troubleshoot_5: 'Restart your computer',\n  no: 'No',\n  participant_connection_issue: 'It looks like you\\'re having trouble connecting. Please check your internet connection and we\\'ll keep trying to connect your visit.',\n  participant_type_label_consumer: 'patient',\n  participant_type_label_guest: 'guest',\n  participant_type_label_provider: 'provider',\n  phone_only: 'Please keep your browser open.',\n  phone_only_guest: 'The patient and provider have switched to a phone visit. We are unable to connect you. You may exit from this page.',\n  phone_only_sub: 'We\\'re calling you at {participantPhone}.',\n  phone_only_success: 'You\\'re successfully connected.',\n  phone_only_provider: 'We\\'ll call you at the number you provided.',\n  phone_video_ended: 'The video session has ended',\n  provider_reconnecting: \"We're reconnecting {participantName}'s video. Please wait for your provider to rejoin\",\n  reconnecting_remote: \"We're reconnecting {participantName}'s video\",\n  reconnecting_remote_as_guest_subtext: \"We're waiting for everyone to connect.\",\n  reconnecting_consumer_subtext: 'Please wait for your patient to rejoin the visit.',\n  reconnecting_provider_subtext: 'Please wait for your provider to rejoin the visit.',\n  reconnecting_your_video_main: 'It looks like your video disconnected.',\n  reconnecting_your_video_extended: \"It looks like you're having trouble reconnecting\",\n  reconnecting_your_video_extended_subtext: \"We're still trying to connect you. If you'd prefer not to wait, you can end the visit\",\n  reconnecting_your_video_extended_subtext_ivr: \"We're still trying to connect you. If you'd prefer, you can talk on the phone, or continue to wait for video.\",\n  reconnecting_your_video_subtext: \"We're trying to reconnect you now\",\n  reconnecting_your_video_subtext_extended: \"We're still trying to connect you. If you'd prefer not to wait, you can end the visit\",\n  refresh: 'Reload',\n  screenshare: 'Share Screen',\n  screenshare_disabled: 'Screen sharing is disabled on this visit',\n  select_camera: 'Select a Camera',\n  select_microphone: 'Select a Microphone',\n  select_speaker: 'Select a Speaker',\n  settings_camera_list_header: 'Camera',\n  settings_microphone_list_header: 'Microphone',\n  settings_speaker_list_header: 'Speaker',\n  settings: 'Settings',\n  settings_details: 'Select the source for your inputs.',\n  settings_default: 'Default',\n  speaker_troubleshoot_0: 'Check that your volume isn\\'t muted',\n  speaker_troubleshoot_1: 'Verify your volume is not turned down too low',\n  speaker_troubleshoot_2: 'If using external speakers/headset, try unplugging and plugging them back in',\n  speaker_troubleshoot_3: 'Restart your computer',\n  start_test: 'Start Test',\n  step_camera_title: 'Camera',\n  step_get_started_progress_title: 'Start',\n  step_get_started_title: 'Get Started',\n  step_internet_fail: 'Your internet connection didn\\'t pass the test',\n  step_internet_fail_help: 'You can retry the speed test by clicking the <b>AGAIN</b> button on the right.',\n  step_internet_heading: 'Press the GO button to test if your internet connection is strong enough for a visit.',\n  step_internet_pass: 'Your internet connection passed the test',\n  step_internet_skip: 'Skip Speed Test',\n  step_internet_title: 'Internet',\n  step_microphone_details: 'An internal or external microphone is required for your video visit.',\n  step_microphone_fail: 'Microphone Test Failed',\n  step_microphone_heading: 'Speak or make a noise. Did the green bars move?',\n  step_microphone_title: 'Microphone',\n  step_retry: 'Retry',\n  step_skip: 'Skip',\n  step_speaker_failed_help: 'Your computer must have internal speakers or an audio port with external speakers/headset connected so you can hear during your visit.',\n  step_speaker_failed: 'Speaker Test Failed',\n  step_speaker_intro: 'Click the play button. Did the sound play?',\n  step_speaker_title: 'Speaker',\n  step_summary_fail_details: 'Please try the test again or call Support at {formattedCustomerSupportPhone} for assistance.',\n  step_summary_fail_details_no_phone: 'Please try the test again',\n  step_summary_fail: 'Your computer is not ready for online visits',\n  step_summary_pass: 'Your computer is ready for online visits',\n  step_summary_title: 'Summary',\n  switch: 'Switch',\n  talk_via_phone_pretext: 'This may take up to a minute. If you are having problems connecting over video, we can call you instead.',\n  talk_via_phone: 'Switch to Phone',\n  talk_via_phone_calling: 'Calling...',\n  test_camera_tooltip: 'Test Camera',\n  test_internet_tooltip: 'Test Internet',\n  test_microphone_tooltip: 'Test Microphone',\n  test_speaker_tooltip: 'Test Speaker',\n  troubleshoot_tips: 'Troubleshooting Tips:',\n  try_again: 'Try Again',\n  video_no_access: 'We are unable to access your camera.',\n  video_no_access_details: 'Please check your browser permission settings to continue with this visit.',\n  video_prompt: 'Is your video area on the right?',\n  webrtc_additional_comments: 'Additional Comments',\n  webrtc_end_visit_confirmation_singular: 'There is still {timeRemaining} minute remaining. Are you sure you want to end this visit?',\n  webrtc_end_visit_confirmation_plural: 'There are still {timeRemaining} minutes remaining. Are you sure you want to end this visit?',\n  webrtc_back: 'Back',\n  webrtc_cancel_visit: 'Cancel Visit',\n  webrtc_cancel_visit_confirmation: 'Are you sure you want to cancel this visit?',\n  webrtc_cancel_visit_sub: '(You will not be charged)',\n  webrtc_confirm_end: 'YES',\n  webrtc_disregard_end: 'NO',\n  webrtc_end_visit_confirmation: 'Are you sure you want to end this visit?',\n  webrtc_end_visit: 'End Visit',\n  webrtc_guest_name_default: 'Guest',\n  webrtc_guest_leave_visit: 'Leave Visit',\n  webrtc_refresh_visit: 'Refresh Video',\n  webrtc_visit_report_note: 'Visit report will NOT be generated and any entries you\\'ve made will not be applied.',\n  yes: 'Yes',\n  self_video: 'Self View',\n  tmc_lite_retry: 'Retry',\n  tmc_lite_camera_no_permission_header: 'Camera Permission Not Granted',\n  tmc_lite_camera_no_permission_sub: 'Please update your browser settings to allow camera access.',\n  tmc_lite_microphone_no_permission_header: 'Microphone Permission Not Granted',\n  tmc_lite_microphone_no_permission_sub: 'Please update your browser settings to allow microphone access.',\n  tmc_lite_camera_not_available_header: 'Camera Not Available',\n  tmc_lite_camera_not_available_sub: 'Please confirm your camera is accessible by checking your system\\'s setting. If you have any applications open that may be using your camera, please close them.',\n  tmc_lite_camera_description: 'If you do not see yourself make sure your camera is on and not in use by another application.',\n  tmc_lite_microphone_not_available_header: 'Microphone Not Available',\n  tmc_lite_microphone_not_available_sub: 'We can\\'t access your microphone. Please confirm your microphone is unmuted and accessible by checking your system settings. If you have any applications open that may be using your microphone, please close them.',\n  tmc_lite_camera_no_devices_header: 'No Camera Available',\n  tmc_lite_camera_no_devices_sub: 'It seems you do not have a camera available. Please connect a camera, then click Retry.',\n  tmc_lite_microphone_no_devices_header: 'No Microphone On Device',\n  tmc_lite_microphone_no_devices_sub: 'It seems you do not have a microphone available. Please connect a microphone, then click Retry.',\n  tmc_lite_unknown_header: 'An Unknown Error has Occurred',\n  tmc_lite_unknown_sub: 'Please try refreshing this page or using a different browser.',\n  tmc_lite_microphone_meter_description: 'Test your audio input by speaking into your microphone. If you do not see the sound bars move, confirm the microphone is not muted.'\n};","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/*!\n * American Well Common Web SDK\n *\n * Copyright © 2019 American Well.\n * All rights reserved.\n *\n * It is illegal to use, reproduce or distribute\n * any part of this Intellectual Property without\n * prior written authorization from American Well.\n */\n\nexports.default = {\n  accept_permission: 'כדי להמשיך בביקור שלך, עליך לאפשר גישה למצלמה ולמיקרופון.',\n  call_me: 'עבור לטלפון',\n  call_me_active: 'Connected',\n  call_me_video_problems: 'בעיות בוידאו?',\n  camera: 'מצלמה',\n  camera_failed: 'בדיקת מצלמה נכשלה',\n  camera_failed_help: 'נדרשת מצלמה פנימית או חיצונית לביצוע ביקור הוידאו שלך.',\n  camera_troubleshoot_0: 'וודא שהמצלמה שלך מחוברת ומאושרת',\n  camera_troubleshoot_1: 'וודא שהגדרות דפדפן מאפשרים שימוש במצלמה.',\n  camera_troubleshoot_2: 'וודא שהמצלמה מחוברת לרשת הנכונה',\n  camera_troubleshoot_3: 'וודא שהמצלמה לא נמצאת בשימוש ברשת אחרת',\n  camera_troubleshoot_4: 'אם אתה משתמש במצלמה חיצונית, נסה להתחבר לרשת בעזרת חיבור חיצוני אחר',\n  camera_troubleshoot_5: 'אתחל את המחשב מחדש',\n  can_cancel: 'התחברת אבל עדיין אנחנו עדיין טוענים את הווידאו של {participantName}. אם אתה מעדיף לא לחכות, תוכל לבטל את הביקור.',\n  can_cancel_rejoin: '{participantName} יחזור בקרוב. אם אתה מעדיף לא לחכות, תוכל לבטל את הביקור.',\n  connecting_guest: 'המתן בבקשה.',\n  connecting_guest_subtext: 'הביקור שלך עומד להתחיל.',\n  connecting_remote_extended: 'אנו עדיין מחכים ש- {participantName} יתחבר',\n  connecting_remote_extended_subtext: 'אם אתה מעדיף לא לחכות, תוכל לבטל את הביקור.',\n  connecting_remote_extended_subtext_ivr: 'אם אתה מעדיף, אתה יכול לדבר עם {participantName} בטלפון, או להמשיך לחכות לסרטון הווידאו',\n  connecting_screen_1_header: 'אנו יוצרים קשר מאובטח.',\n  connecting_screen_1_subtext: 'פעולה זו עשויה להימשך עד דקה.',\n  connecting_screen_2_header: 'אנחנו מקימים את הווידאו.',\n  connecting_screen_2_subtext: 'פעולה זו עשויה להימשך עד דקה.',\n  connecting_screen_3_header: '{remoteName} מחבר.',\n  connecting_screen_3_subtext: 'פעולה זו עשויה להימשך עד דקה, אבל אם אתה מעדיף, אנחנו יכולים להתקשר אליך במקום.',\n  connecting_with_remote: '{remoteName} מתחבר.',\n  connecting_your_video: 'אנחנו מחברים את הסרטון שלך.',\n  connecting_your_video_extended: 'נראה שאתה מתקשה להתחבר.',\n  connecting_your_video_subtext_extended: 'אנחנו עדיין מנסים לחבר אותך. אם אתה מעדיף לא לחכות, תוכל לבטל את הביקור',\n  connecting_your_video_subtext_extended_ivr: 'אנחנו עדיין מנסים לחבר אותך. אם אתה מעדיף, תוכל לדבר בטלפון עם {participantName} בטלפון או להמשיך להמתין לווידאו.',\n  consumer_reconnecting: 'אנחנו מחברים את הווידאו של {participantName}. המתן עד שהמטופל שלך יצטרף',\n  consumer_subtitle_age: 'גיל {age}',\n  continue: 'המשך',\n  done: 'מוכן',\n  end_visit_confirmation_title: 'האם אתה בטוח?',\n  full_screen: 'מסך מלא',\n  gender_unspecified: 'לא מודגש',\n  get_started: 'הבא נתחיל',\n  get_started_detail: 'במסכים הבאים אנו נבדוק את המצלמה שלך,המיקרופון,הרמקול והאינטרנט ונראה אם אתה מוכן לביקור.',\n  header_browser_permission: 'הרשאת דפדפן',\n  internet_troubleshoot_0: 'נסה להשתמש בחיבור קווי לאינטרנט אם אפשר.',\n  internet_troubleshoot_1: 'אם חיבור קווי אינו זמין, ודא כי אות הרשת האלחוטית שלך חזק.',\n  internet_troubleshoot_2: 'אם אות הרשת האלחוטית שלך חלש, נסה להתקרב אל הנתב.',\n  media_permission_denied: 'אנו מתקשים לגשת למצלמה ולמיקרופון. בדוק את הרשאות המצלמה והמיקרופון שלך.',\n  mic: 'מיקרופון',\n  microphone_troubleshoot_0: 'וודא שהמיקרופון מחובר ומאושר',\n  microphone_troubleshoot_1: 'וודא שהגדרות דפדפן מאפשרים שימוש במיקרופון.',\n  microphone_troubleshoot_2: 'וודא שהמצלמה שלך מחוברת למיקרופון הנכון.',\n  microphone_troubleshoot_3: 'וודא שהמיקרופון שלך לא נמצא בשימוש של רשת אחרת.',\n  microphone_troubleshoot_4: 'אם אתה משתמש במיקרופון חיצוני, נסה לחבר אותו לחיבור חיצוני אחר',\n  microphone_troubleshoot_5: 'אתחל את המחשב שלך',\n  no: 'לא',\n  participant_connection_issue: 'נראה שאתה מתקשה להתחבר. בדוק את חיבור האינטרנט שלך ונמשיך לנסות לחבר את הביקור שלך.',\n  participant_type_label_consumer: 'מטופלך',\n  participant_type_label_guest: 'אורח',\n  participant_type_label_provider: 'רופא',\n  phone_only: 'אנא קח פתוח בדפדפן שלך.',\n  phone_only_guest: 'המטופל לבין הספק עברו ביקור בטלפון. איננו יכולים לחבר אותך. ייתכן לצאת מדף זה.',\n  phone_only_provider: 'אנחנו נתקשר אליך למספר שסיפקת.',\n  phone_only_sub: 'אנו מתקשרים אליך ב {participantPhone}',\n  phone_only_success: 'אתה מחובר בהצלחה.',\n  phone_video_ended: 'מושב הווידאו נסתיים',\n  provider_reconnecting: 'אנחנו מחברים את הווידאו של {participantName}. המתן עד שהרופא שלך יצטרף',\n  reconnecting_consumer_subtext: 'המתן למטופל שלך לחזור לביקור.',\n  reconnecting_provider_subtext: 'המתן עד שהרופא שלך יצטרף שוב לביקור.',\n  reconnecting_remote: 'אנחנו מחברים מחדש את הווידאו של {participantName}',\n  reconnecting_remote_as_guest_subtext: 'אנחנו מחכים לכולם להתחבר.',\n  reconnecting_your_video_extended: 'נראה שאתה מתקשה להתחבר מחדש',\n  reconnecting_your_video_extended_subtext: 'אנחנו עדיין מנסים לחבר אותך. אם אתה מעדיף לא לחכות, אתה יכול לסיים את הביקור',\n  reconnecting_your_video_extended_subtext_ivr: 'אנחנו עדיין מנסים לחבר אותך. אם אתה מעדיף, תוכל לדבר בטלפון או להמשיך להמתין לווידאו.',\n  reconnecting_your_video_main: 'נראה שהווידאו שלך מנותק.',\n  reconnecting_your_video_subtext: 'אנחנו מנסים לחבר אותך עכשיו',\n  reconnecting_your_video_subtext_extended: 'אנחנו עדיין מנסים לחבר אותך. אם אתה מעדיף לא לחכות, אתה יכול לסיים את הביקור',\n  refresh: 'טען מחדש',\n  screenshare: 'שתף מסך',\n  screenshare_disabled: 'שיתוף מסך מושב על הביקור הזה',\n  select_camera: 'בחר מצלמה',\n  select_microphone: 'בחר מיקרופון',\n  select_speaker: 'בחר רמקול',\n  self_video: 'תצוגה עצמית',\n  settings: 'הגדרות',\n  settings_camera_list_header: 'מצלמה',\n  settings_default: 'ברירת מחדל',\n  settings_details: 'בחר את המקור עבור הקלט.',\n  settings_microphone_list_header: 'מיקרופון',\n  settings_speaker_list_header: 'רמקול',\n  speaker_troubleshoot_0: 'וודא שהצליל שלך לא מושתק',\n  speaker_troubleshoot_1: 'וודא שהצליל שלך לא מוגדר על רמה נמוכה',\n  speaker_troubleshoot_2: 'אם אתה משתמש ברמקול/אוזניות חיצוניות,נסה להוציא מהחיבור ולחבר אותם בחזרה.',\n  speaker_troubleshoot_3: 'אתחל את המחשב שלך.',\n  start_test: 'התחל בדיקה',\n  step_camera_title: 'מצלמה',\n  step_get_started_progress_title: 'התחל',\n  step_get_started_title: 'התחל',\n  step_internet_fail: 'חיבור האינטרנט שלך לא עבר את הבדיקה',\n  step_internet_fail_help: 'תוכל לנסות שוב את בדיקת המהירות על ידי לחיצה על הלחצן <b> עוד </ b> בצד שמאל.',\n  step_internet_heading: 'לחץ על כפתור \"התחל\" על מנת לבדוק אם חיבור האינטרנט שלך מספיק חזק לביקור הוידאו.',\n  step_internet_pass: 'חיבור האינטרנט שלך עבר את הבדיקה',\n  step_internet_skip: 'דלג',\n  step_internet_title: 'אינטרנט',\n  step_microphone_details: 'נדרש מיקרופון פנימי או חיצוני בשביל ביקור הוידאו',\n  step_microphone_fail: 'בדיקת מיקרופון נכשלה',\n  step_microphone_heading: 'דבר או השמע קול. האם הבר הירוק מרוטט?',\n  step_microphone_title: 'מיקרופון',\n  step_retry: 'נסה שוב',\n  step_skip: 'דלג',\n  step_speaker_failed: 'בדיקת רמקול נכשלה',\n  step_speaker_failed_help: 'אנו חייבים שלמחשב שלך יהיה חיבור לרמקול פנימי או חיבור לרמקול חיצוני עם אוזניות בשביל שתוכל לשמוע במהלך ביקור הוידאו.',\n  step_speaker_intro: 'לחץ על כפתור ההפעלה. האם הצליל עובד?',\n  step_speaker_title: 'רמקול',\n  step_summary_fail: 'המחשב שלך אינו מוכן לביקורי אונליין.',\n  step_summary_fail_details: 'נסה שוב את המבחן או התקשר לתמיכה בכתובת {formattedCustomerSupportPhone} לקבלת סיוע.',\n  step_summary_fail_details_no_phone: 'אנא בצע את הבדיקה שוב.',\n  step_summary_pass: 'המחשב שלך מוכן לביקורי אונליין.',\n  step_summary_title: 'סיכום',\n  switch: 'החלף',\n  talk_via_phone: 'עבור לטלפון',\n  talk_via_phone_calling: 'שיחות ...',\n  talk_via_phone_pretext: 'זה יכול לקחת כדקה. במידה וקיים קושי להתחבר בווידאו אפשר לבצע שיחה טלפונית במקום.',\n  test_camera_tooltip: 'מצלמה',\n  test_internet_tooltip: 'בדיקת אינטרנט',\n  test_microphone_tooltip: 'בדיקת מיקרופון',\n  test_speaker_tooltip: 'בדיקת רמקולים',\n  tmc_lite_camera_description: 'אם אינך רואה את עצמך לוודא המצלמה דולקת ואינו בשימוש תוכנה אחרת.',\n  tmc_lite_camera_no_devices_header: 'אין מצלמה זמינה',\n  tmc_lite_camera_no_devices_sub: 'נראה שאין לך מצלמה זמינה. אנא להתחבר מצלמה, ולאחר מכן לחץ על נסה שנית.',\n  tmc_lite_camera_no_permission_header: 'רשות מצלמה לא הוענקה',\n  tmc_lite_camera_no_permission_sub: 'אנא עדכן את הגדרות הדפדפן כדי לאפשר גישה למצלמה.',\n  tmc_lite_camera_not_available_header: 'המצלמה אינה זמינה',\n  tmc_lite_camera_not_available_sub: 'נא לאשר את המצלמה נגישה על ידי בדיקת ההגדרה של המערכת שלך. אם יש לך את כל יישומים לפתוח שניתן באמצעות המצלמה שלך, סגור אותן.',\n  tmc_lite_microphone_meter_description: 'בדוק קלט השמע על ידי דיבור אל המיקרופון. אם אינך רואה את הצליל בר לזוז, לאשר את המיקרופון אינו מושתק.',\n  tmc_lite_microphone_no_devices_header: 'התקן אין מיקרופון ביום',\n  tmc_lite_microphone_no_devices_sub: 'נראה שאין לך מיקרופון זמין. אנא לחבר מיקרופון, ולאחר מכן לחץ על נסה שנית.',\n  tmc_lite_microphone_no_permission_header: 'הרשאת המיקרופון לא הוענקה',\n  tmc_lite_microphone_no_permission_sub: 'אנא עדכן את הגדרות הדפדפן כדי לאפשר גישה למיקרופון.',\n  tmc_lite_microphone_not_available_header: 'מיקרופון לא זמין',\n  tmc_lite_microphone_not_available_sub: 'נא לאשר המיקרופון שלך נגיש על ידי בדיקת ההגדרה של המערכת שלך. אם יש לך את כל יישומים לפתוח שייתכן שמשתמשים המיקרופון שלך, סגור אותן.',\n  tmc_lite_retry: 'נסה שוב',\n  tmc_lite_unknown_header: 'אירעה שגיאה לא ידועה',\n  tmc_lite_unknown_sub: 'נסה לרענן את הדף הזה או להשתמש בדפדפן אחר.',\n  troubleshoot_tips: 'טיפים לפתרון בעיות:',\n  try_again: 'נסה שוב',\n  video_no_access: 'אין באפשרותנו לגשת למצלמה שלך.',\n  video_no_access_details: 'בדוק את הגדרות הרשאת הדפדפן שלך כדי להמשיך בביקור זה.',\n  video_prompt: 'האם אזור הווידאו שלך בצד שמאל?',\n  webrtc_additional_comments: 'הערות נוספות',\n  webrtc_back: 'חזור',\n  webrtc_cancel_visit: 'בטל ביקור',\n  webrtc_cancel_visit_confirmation: 'האם אתה בטוח שברצונך לבטל את הביקור הזה?',\n  webrtc_cancel_visit_sub: '(לא תחויב)',\n  webrtc_confirm_end: 'כן',\n  webrtc_disregard_end: 'לא',\n  webrtc_end_visit: 'סיים את הביקור',\n  webrtc_end_visit_confirmation: 'האם אתה בטוח שברצונך לסיים את הביקור?',\n  webrtc_end_visit_confirmation_plural: 'עדיין נותרו {timeRemaining} דקות. האם אתה בטוח שברצונך לסיים את הביקור?',\n  webrtc_end_visit_confirmation_singular: 'נותר עדיין {timeRemaining}} דקות. האם אתה בטוח שברצונך לסיים את הביקור הזה?',\n  webrtc_guest_leave_visit: 'צא מביקור',\n  webrtc_guest_name_default: 'אורח',\n  webrtc_refresh_visit: 'רענן ווידאו',\n  webrtc_visit_report_note: 'דוח הביקורים לא יופק וכל הרשומות שביצעת לא יחולו.',\n  yes: 'כן'\n};","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/*!\n * American Well Common Web SDK\n *\n * Copyright © 2019 American Well.\n * All rights reserved.\n *\n * It is illegal to use, reproduce or distribute\n * any part of this Intellectual Property without\n * prior written authorization from American Well.\n */\n\nexports.default = {\n  accept_permission: 'Por favor, permita el acceso a su cámara y micrófono. Es posible que deba actualizar la configuración de su navegador para permitir el acceso.',\n  call_me: 'Cambiar a Teléfono',\n  call_me_active: 'Conectado',\n  call_me_video_problems: 'Problemas con el vídeo?',\n  camera: 'Cámara',\n  camera_failed: 'Falló la prueba de la cámara',\n  camera_failed_help: 'Se requiere una cámara web interna o externa para su visita de video.',\n  camera_troubleshoot_0: 'Asegúrate de que tu webcam esté conectada y habilitada',\n  camera_troubleshoot_1: 'Confirma que la configuración de tu navegador está permitiendo el uso de tu webcam.',\n  camera_troubleshoot_2: 'Verifica que la selección de tu cámara esté configurada en la cámara web correcta',\n  camera_troubleshoot_3: 'Asegúrate de que tu webcam no esté en uso por otra aplicación',\n  camera_troubleshoot_4: 'Si usa una cámara externa, intente conectar su cámara web a un puerto USB diferente',\n  camera_troubleshoot_5: 'Reinicia tu computadora',\n  can_cancel: 'Se ha conectado pero todavía estamos cargando el video de {participantName}. Si prefieres no esperar puedes cancelar la visita.',\n  can_cancel_rejoin: '{participantName} se reincorporará en breve. Si prefieres no esperar, puedes cancelar la visita.',\n  connecting_guest: 'Por favor espera.',\n  connecting_guest_subtext: 'Tu visita está por comenzar.',\n  connecting_remote_extended: 'Todavía estamos esperando que {participantentName} se conecte',\n  connecting_remote_extended_subtext: 'Si prefieres no esperar puedes cancelar la visita.',\n  connecting_remote_extended_subtext_ivr: 'Si lo prefiere, puede hablar con {participantentName} por teléfono o seguir esperando el video.',\n  connecting_screen_1_header: 'Estamos estableciendo una conexión segura.',\n  connecting_screen_1_subtext: 'Este proceso puede tardar hasta un minuto.',\n  connecting_screen_2_header: 'Estamos configuración de su vídeo.',\n  connecting_screen_2_subtext: 'Este proceso puede tardar hasta un minuto.',\n  connecting_screen_3_header: '{remoteName} está conectando.',\n  connecting_screen_3_subtext: 'Esto puede tardar hasta un minuto, pero si lo prefiere nos puede llamar en su lugar.',\n  connecting_with_remote: '{remoteName} se está conectando.',\n  connecting_your_video: 'Estamos conectando su video.',\n  connecting_your_video_extended: 'Parece que tienes problemas para conectarte.',\n  connecting_your_video_subtext_extended: 'Todavía estamos tratando de conectarte. Si prefieres no esperar, puedes cancelar la visita.',\n  connecting_your_video_subtext_extended_ivr: 'Todavía estamos tratando de conectarte. Si lo prefiere, puede hablar al {participantName} por teléfono, o continuar esperando el video.',\n  consumer_reconnecting: 'Estamos conectando el video de {participantName}. Por favor, espere a que su paciente se reúna',\n  consumer_subtitle_age: 'Edad {age}',\n  continue: 'Continuar',\n  done: 'Hecho',\n  end_visit_confirmation_title: '¿Estás seguro?',\n  full_screen: 'Pantalla completa',\n  gender_unspecified: 'Sin especificar',\n  get_started: 'Empecemos',\n  get_started_detail: 'En las siguientes pantallas revisaremos su cámara, micrófono, altavoces e Internet para que esté listo para su visita.',\n  header_browser_permission: 'Permiso del navegador',\n  internet_troubleshoot_0: 'Trate de usar una conexión por cable a Internet si es posible.',\n  internet_troubleshoot_1: 'Si una conexión por cable no está disponible, asegúrese de que la señal de su red inalámbrica sea fuerte.',\n  internet_troubleshoot_2: 'Si la señal de su red inalámbrica es débil, intente acercarse al enrutador.',\n  media_permission_denied: 'Estamos teniendo problemas para acceder a la cámara y al micrófono. Por favor revise los permisos de su cámara y micrófono.',\n  mic: 'pequeño',\n  microphone_troubleshoot_0: 'Asegúrese de que su micrófono esté enchufado y habilitado',\n  microphone_troubleshoot_1: 'Confirme que la configuración de su navegador está permitiendo el uso de su micrófono.',\n  microphone_troubleshoot_2: 'Verifique que su selección de cámara esté configurada para el micrófono correcto',\n  microphone_troubleshoot_3: 'Asegúrese de que su micrófono no esté en uso por otra aplicación',\n  microphone_troubleshoot_4: 'Si usa un micrófono externo, intente conectar su micrófono a un puerto USB diferente',\n  microphone_troubleshoot_5: 'Reinicia tu computadora',\n  no: 'No',\n  participant_connection_issue: 'Parece que estás teniendo problemas para conectarte. Compruebe su conexión a Internet y seguiremos intentando conectar su visita.',\n  participant_type_label_consumer: 'paciente',\n  participant_type_label_guest: 'huésped',\n  participant_type_label_provider: 'proveedor',\n  phone_only: 'Por favor, mantenga abierto el navegador.',\n  phone_only_guest: 'El paciente y el proveedor han cambiado a una visita de teléfono. No somos capaces de conectar usted. Es posible salir de esta página.',\n  phone_only_provider: 'Te llamaremos al número que ya ha proporcionado.',\n  phone_only_sub: 'Los estamos llamando a {participantPhone}.',\n  phone_only_success: 'Que estés conectado con éxito.',\n  phone_video_ended: 'La sesión de vídeo ha terminado',\n  provider_reconnecting: 'Estamos conectando el video de {participantName}. Por favor, espere a que su proveedor se reúna',\n  reconnecting_consumer_subtext: 'Por favor, espere a que su paciente se reincorpore a la visita.',\n  reconnecting_provider_subtext: 'Por favor, espere a que su proveedor se reincorpore a la visita.',\n  reconnecting_remote: 'Estamos reconectando el video de {participantName}',\n  reconnecting_remote_as_guest_subtext: 'Estamos esperando que todos se conecten.',\n  reconnecting_your_video_extended: 'Parece que estás teniendo problemas para reconectarte',\n  reconnecting_your_video_extended_subtext: 'Todavía estamos tratando de conectarte. Si prefieres no esperar, puedes finalizar la visita.',\n  reconnecting_your_video_extended_subtext_ivr: 'Todavía estamos tratando de conectarte. Si lo prefiere, puede hablar por teléfono o seguir esperando el video.',\n  reconnecting_your_video_main: 'Parece que tu video está desconectado.',\n  reconnecting_your_video_subtext: 'Estamos tratando de reconectarte ahora',\n  reconnecting_your_video_subtext_extended: 'Todavía estamos tratando de conectarte. Si prefieres no esperar, puedes finalizar la visita.',\n  refresh: 'Recargar',\n  screenshare: 'Compartir pantalla',\n  screenshare_disabled: 'Compartir la pantalla está desactivada en esta visita',\n  select_camera: 'Selecciona una camara',\n  select_microphone: 'Seleccione un micrófono',\n  select_speaker: 'Seleccione un altavoz',\n  self_video: 'Vista propia',\n  settings: 'Ajustes',\n  settings_camera_list_header: 'Cámara',\n  settings_default: 'Defecto',\n  settings_details: 'Seleccione la fuente para sus entradas.',\n  settings_microphone_list_header: 'Micrófono',\n  settings_speaker_list_header: 'Altavoz',\n  speaker_troubleshoot_0: 'Comprueba que tu volumen no esté silenciado',\n  speaker_troubleshoot_1: 'Verifica que tu volumen no esté muy bajo',\n  speaker_troubleshoot_2: 'Si utiliza altavoces / auriculares externos, intente desconectarlos y volverlos a conectar.',\n  speaker_troubleshoot_3: 'Reinicia tu computadora',\n  start_test: 'Prueba de inicio',\n  step_camera_title: 'Cámara',\n  step_get_started_progress_title: 'comienzo',\n  step_get_started_title: 'Empezar',\n  step_internet_fail: 'Tu conexión a internet no pasó la prueba.',\n  step_internet_fail_help: 'Puede volver a intentar la prueba de velocidad haciendo clic en el botón <b> OTRA VEZ </b> a la derecha.',\n  step_internet_heading: 'Presione el botón IR para probar si su conexión a Internet es lo suficientemente fuerte para una visita.',\n  step_internet_pass: 'Tu conexión de internet pasó la prueba.',\n  step_internet_skip: 'Prueba de velocidad de salto',\n  step_internet_title: 'Internet',\n  step_microphone_details: 'Se requiere un micrófono interno o externo para su visita de video.',\n  step_microphone_fail: 'Prueba de micrófono fallida',\n  step_microphone_heading: 'Habla o haz un ruido. ¿Se movieron las barras verdes?',\n  step_microphone_title: 'Micrófono',\n  step_retry: 'Procesar de nuevo',\n  step_skip: 'Omitir',\n  step_speaker_failed: 'Falló la prueba del orador',\n  step_speaker_failed_help: 'Su computadora debe tener altavoces internos o un puerto de audio con altavoces / auriculares externos conectados para que pueda escuchar durante su visita.',\n  step_speaker_intro: 'Haga clic en el botón de reproducción. ¿Sonó el sonido?',\n  step_speaker_title: 'Altavoz',\n  step_summary_fail: 'Su computadora no está lista para visitas en línea',\n  step_summary_fail_details: 'Vuelva a intentar la prueba o llame al servicio de asistencia al {formattedCustomerSupportPhone} para obtener ayuda.',\n  step_summary_fail_details_no_phone: 'Por favor, intente la prueba de nuevo',\n  step_summary_pass: 'Su computadora está lista para visitas en línea',\n  step_summary_title: 'Resumen',\n  switch: 'Cambiar',\n  talk_via_phone: 'Cambiar a Teléfono',\n  talk_via_phone_calling: 'Llamando...',\n  talk_via_phone_pretext: 'Esto puede tomar un minuto. Si tienes problemas al conectarte, podemos llamarte en lugar de usar video.',\n  test_camera_tooltip: 'Prueba de camara',\n  test_internet_tooltip: 'Prueba de internet',\n  test_microphone_tooltip: 'Micrófono de prueba',\n  test_speaker_tooltip: 'Ponente de prueba',\n  tmc_lite_camera_description: 'Si no ves asegurarse de que su cámara está encendida y no está en uso por otra aplicación.',\n  tmc_lite_camera_no_devices_header: 'No Cámara Disponible',\n  tmc_lite_camera_no_devices_sub: 'Parece que no tiene una cámara disponible. Por favor, conectar una cámara, a continuación, haga clic en Reintentar.',\n  tmc_lite_camera_no_permission_header: 'El permiso de la cámara no se concede',\n  tmc_lite_camera_no_permission_sub: 'Por favor, actualice la configuración del navegador para permitir el acceso de la cámara.',\n  tmc_lite_camera_not_available_header: 'Cámara no disponible',\n  tmc_lite_camera_not_available_sub: 'Se ruega confirmación de la cámara se puede acceder mediante la comprobación de configuración de su sistema. Si usted tiene todas las aplicaciones abiertas que pueden estar utilizando su cámara, por favor cerrarlas.',\n  tmc_lite_microphone_meter_description: 'Pruebe su entrada de audio por hablar por el micrófono. Si no ve el sonido barras se mueven, confirmar que el micrófono no está silenciado.',\n  tmc_lite_microphone_no_devices_header: 'Sin micrófono en el dispositivo',\n  tmc_lite_microphone_no_devices_sub: 'Parece que no tiene un micrófono disponible. Por favor, conecte un micrófono, haga clic en Reintentar.',\n  tmc_lite_microphone_no_permission_header: 'Micrófono El permiso no se concede',\n  tmc_lite_microphone_no_permission_sub: 'Por favor, actualice la configuración del navegador para permitir el acceso al micrófono.',\n  tmc_lite_microphone_not_available_header: 'Micrófono no disponible',\n  tmc_lite_microphone_not_available_sub: 'Por favor confirmar su micrófono es accesible mediante la comprobación de configuración de su sistema. Si usted tiene todas las aplicaciones abiertas que pueden estar utilizando el micrófono, por favor cerrarlas.',\n  tmc_lite_retry: 'Procesar de nuevo',\n  tmc_lite_unknown_header: 'Un error desconocido a ocurrido',\n  tmc_lite_unknown_sub: 'Por favor, intente actualizar la página o usar un navegador diferente.',\n  troubleshoot_tips: 'Consejos para solucionar problemas:',\n  try_again: 'Inténtalo de nuevo',\n  video_no_access: 'No podemos acceder a su cámara.',\n  video_no_access_details: 'Compruebe la configuración de permisos de su navegador para continuar con esta visita.',\n  video_prompt: '¿Está su área de video a la derecha?',\n  webrtc_additional_comments: 'Comentarios adicionales',\n  webrtc_back: 'Espalda',\n  webrtc_cancel_visit: 'Cancelar visita',\n  webrtc_cancel_visit_confirmation: '¿Seguro que quieres cancelar esta visita?',\n  webrtc_cancel_visit_sub: '(No se le cobrará)',\n  webrtc_confirm_end: 'SÍ',\n  webrtc_disregard_end: 'NO',\n  webrtc_end_visit: 'Visita final',\n  webrtc_end_visit_confirmation: '¿Seguro que quieres terminar esta visita?',\n  webrtc_end_visit_confirmation_plural: 'Aún quedan {timeRemaining} minutos restantes. ¿Estás seguro de que quieres terminar esta visita?',\n  webrtc_end_visit_confirmation_singular: 'Aún queda {timeRemaining} minuto restante. ¿Estás seguro de que quieres terminar esta visita?',\n  webrtc_guest_leave_visit: 'Dejar visita',\n  webrtc_guest_name_default: 'Huésped',\n  webrtc_refresh_visit: 'Actualizar video',\n  webrtc_visit_report_note: 'El informe de visitas NO se generará y las entradas que haya realizado no se aplicarán.',\n  yes: 'Sí'\n};","// Unique ID creation requires a high quality random # generator.  In the\n// browser this is a little complicated due to unknown quality of Math.random()\n// and inconsistent support for the `crypto` API.  We do the best we can via\n// feature-detection\n\n// getRandomValues needs to be invoked in a context where \"this\" is a Crypto\n// implementation. Also, find the complete implementation of crypto on IE11.\nvar getRandomValues = (typeof(crypto) != 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto)) ||\n                      (typeof(msCrypto) != 'undefined' && typeof window.msCrypto.getRandomValues == 'function' && msCrypto.getRandomValues.bind(msCrypto));\n\nif (getRandomValues) {\n  // WHATWG crypto RNG - http://wiki.whatwg.org/wiki/Crypto\n  var rnds8 = new Uint8Array(16); // eslint-disable-line no-undef\n\n  module.exports = function whatwgRNG() {\n    getRandomValues(rnds8);\n    return rnds8;\n  };\n} else {\n  // Math.random()-based (RNG)\n  //\n  // If all else fails, use Math.random().  It's fast, but is of unspecified\n  // quality.\n  var rnds = new Array(16);\n\n  module.exports = function mathRNG() {\n    for (var i = 0, r; i < 16; i++) {\n      if ((i & 0x03) === 0) r = Math.random() * 0x100000000;\n      rnds[i] = r >>> ((i & 0x03) << 3) & 0xff;\n    }\n\n    return rnds;\n  };\n}\n","/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\nvar byteToHex = [];\nfor (var i = 0; i < 256; ++i) {\n  byteToHex[i] = (i + 0x100).toString(16).substr(1);\n}\n\nfunction bytesToUuid(buf, offset) {\n  var i = offset || 0;\n  var bth = byteToHex;\n  // join used to fix memory issue caused by concatenation: https://bugs.chromium.org/p/v8/issues/detail?id=3175#c4\n  return ([\n    bth[buf[i++]], bth[buf[i++]],\n    bth[buf[i++]], bth[buf[i++]], '-',\n    bth[buf[i++]], bth[buf[i++]], '-',\n    bth[buf[i++]], bth[buf[i++]], '-',\n    bth[buf[i++]], bth[buf[i++]], '-',\n    bth[buf[i++]], bth[buf[i++]],\n    bth[buf[i++]], bth[buf[i++]],\n    bth[buf[i++]], bth[buf[i++]]\n  ]).join('');\n}\n\nmodule.exports = bytesToUuid;\n","function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nmodule.exports = _assertThisInitialized;","/*! https://mths.be/he v1.2.0 by @mathias | MIT license */\n;(function(root) {\n\n\t// Detect free variables `exports`.\n\tvar freeExports = typeof exports == 'object' && exports;\n\n\t// Detect free variable `module`.\n\tvar freeModule = typeof module == 'object' && module &&\n\t\tmodule.exports == freeExports && module;\n\n\t// Detect free variable `global`, from Node.js or Browserified code,\n\t// and use it as `root`.\n\tvar freeGlobal = typeof global == 'object' && global;\n\tif (freeGlobal.global === freeGlobal || freeGlobal.window === freeGlobal) {\n\t\troot = freeGlobal;\n\t}\n\n\t/*--------------------------------------------------------------------------*/\n\n\t// All astral symbols.\n\tvar regexAstralSymbols = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g;\n\t// All ASCII symbols (not just printable ASCII) except those listed in the\n\t// first column of the overrides table.\n\t// https://html.spec.whatwg.org/multipage/syntax.html#table-charref-overrides\n\tvar regexAsciiWhitelist = /[\\x01-\\x7F]/g;\n\t// All BMP symbols that are not ASCII newlines, printable ASCII symbols, or\n\t// code points listed in the first column of the overrides table on\n\t// https://html.spec.whatwg.org/multipage/syntax.html#table-charref-overrides.\n\tvar regexBmpWhitelist = /[\\x01-\\t\\x0B\\f\\x0E-\\x1F\\x7F\\x81\\x8D\\x8F\\x90\\x9D\\xA0-\\uFFFF]/g;\n\n\tvar regexEncodeNonAscii = /<\\u20D2|=\\u20E5|>\\u20D2|\\u205F\\u200A|\\u219D\\u0338|\\u2202\\u0338|\\u2220\\u20D2|\\u2229\\uFE00|\\u222A\\uFE00|\\u223C\\u20D2|\\u223D\\u0331|\\u223E\\u0333|\\u2242\\u0338|\\u224B\\u0338|\\u224D\\u20D2|\\u224E\\u0338|\\u224F\\u0338|\\u2250\\u0338|\\u2261\\u20E5|\\u2264\\u20D2|\\u2265\\u20D2|\\u2266\\u0338|\\u2267\\u0338|\\u2268\\uFE00|\\u2269\\uFE00|\\u226A\\u0338|\\u226A\\u20D2|\\u226B\\u0338|\\u226B\\u20D2|\\u227F\\u0338|\\u2282\\u20D2|\\u2283\\u20D2|\\u228A\\uFE00|\\u228B\\uFE00|\\u228F\\u0338|\\u2290\\u0338|\\u2293\\uFE00|\\u2294\\uFE00|\\u22B4\\u20D2|\\u22B5\\u20D2|\\u22D8\\u0338|\\u22D9\\u0338|\\u22DA\\uFE00|\\u22DB\\uFE00|\\u22F5\\u0338|\\u22F9\\u0338|\\u2933\\u0338|\\u29CF\\u0338|\\u29D0\\u0338|\\u2A6D\\u0338|\\u2A70\\u0338|\\u2A7D\\u0338|\\u2A7E\\u0338|\\u2AA1\\u0338|\\u2AA2\\u0338|\\u2AAC\\uFE00|\\u2AAD\\uFE00|\\u2AAF\\u0338|\\u2AB0\\u0338|\\u2AC5\\u0338|\\u2AC6\\u0338|\\u2ACB\\uFE00|\\u2ACC\\uFE00|\\u2AFD\\u20E5|[\\xA0-\\u0113\\u0116-\\u0122\\u0124-\\u012B\\u012E-\\u014D\\u0150-\\u017E\\u0192\\u01B5\\u01F5\\u0237\\u02C6\\u02C7\\u02D8-\\u02DD\\u0311\\u0391-\\u03A1\\u03A3-\\u03A9\\u03B1-\\u03C9\\u03D1\\u03D2\\u03D5\\u03D6\\u03DC\\u03DD\\u03F0\\u03F1\\u03F5\\u03F6\\u0401-\\u040C\\u040E-\\u044F\\u0451-\\u045C\\u045E\\u045F\\u2002-\\u2005\\u2007-\\u2010\\u2013-\\u2016\\u2018-\\u201A\\u201C-\\u201E\\u2020-\\u2022\\u2025\\u2026\\u2030-\\u2035\\u2039\\u203A\\u203E\\u2041\\u2043\\u2044\\u204F\\u2057\\u205F-\\u2063\\u20AC\\u20DB\\u20DC\\u2102\\u2105\\u210A-\\u2113\\u2115-\\u211E\\u2122\\u2124\\u2127-\\u2129\\u212C\\u212D\\u212F-\\u2131\\u2133-\\u2138\\u2145-\\u2148\\u2153-\\u215E\\u2190-\\u219B\\u219D-\\u21A7\\u21A9-\\u21AE\\u21B0-\\u21B3\\u21B5-\\u21B7\\u21BA-\\u21DB\\u21DD\\u21E4\\u21E5\\u21F5\\u21FD-\\u2205\\u2207-\\u2209\\u220B\\u220C\\u220F-\\u2214\\u2216-\\u2218\\u221A\\u221D-\\u2238\\u223A-\\u2257\\u2259\\u225A\\u225C\\u225F-\\u2262\\u2264-\\u228B\\u228D-\\u229B\\u229D-\\u22A5\\u22A7-\\u22B0\\u22B2-\\u22BB\\u22BD-\\u22DB\\u22DE-\\u22E3\\u22E6-\\u22F7\\u22F9-\\u22FE\\u2305\\u2306\\u2308-\\u2310\\u2312\\u2313\\u2315\\u2316\\u231C-\\u231F\\u2322\\u2323\\u232D\\u232E\\u2336\\u233D\\u233F\\u237C\\u23B0\\u23B1\\u23B4-\\u23B6\\u23DC-\\u23DF\\u23E2\\u23E7\\u2423\\u24C8\\u2500\\u2502\\u250C\\u2510\\u2514\\u2518\\u251C\\u2524\\u252C\\u2534\\u253C\\u2550-\\u256C\\u2580\\u2584\\u2588\\u2591-\\u2593\\u25A1\\u25AA\\u25AB\\u25AD\\u25AE\\u25B1\\u25B3-\\u25B5\\u25B8\\u25B9\\u25BD-\\u25BF\\u25C2\\u25C3\\u25CA\\u25CB\\u25EC\\u25EF\\u25F8-\\u25FC\\u2605\\u2606\\u260E\\u2640\\u2642\\u2660\\u2663\\u2665\\u2666\\u266A\\u266D-\\u266F\\u2713\\u2717\\u2720\\u2736\\u2758\\u2772\\u2773\\u27C8\\u27C9\\u27E6-\\u27ED\\u27F5-\\u27FA\\u27FC\\u27FF\\u2902-\\u2905\\u290C-\\u2913\\u2916\\u2919-\\u2920\\u2923-\\u292A\\u2933\\u2935-\\u2939\\u293C\\u293D\\u2945\\u2948-\\u294B\\u294E-\\u2976\\u2978\\u2979\\u297B-\\u297F\\u2985\\u2986\\u298B-\\u2996\\u299A\\u299C\\u299D\\u29A4-\\u29B7\\u29B9\\u29BB\\u29BC\\u29BE-\\u29C5\\u29C9\\u29CD-\\u29D0\\u29DC-\\u29DE\\u29E3-\\u29E5\\u29EB\\u29F4\\u29F6\\u2A00-\\u2A02\\u2A04\\u2A06\\u2A0C\\u2A0D\\u2A10-\\u2A17\\u2A22-\\u2A27\\u2A29\\u2A2A\\u2A2D-\\u2A31\\u2A33-\\u2A3C\\u2A3F\\u2A40\\u2A42-\\u2A4D\\u2A50\\u2A53-\\u2A58\\u2A5A-\\u2A5D\\u2A5F\\u2A66\\u2A6A\\u2A6D-\\u2A75\\u2A77-\\u2A9A\\u2A9D-\\u2AA2\\u2AA4-\\u2AB0\\u2AB3-\\u2AC8\\u2ACB\\u2ACC\\u2ACF-\\u2ADB\\u2AE4\\u2AE6-\\u2AE9\\u2AEB-\\u2AF3\\u2AFD\\uFB00-\\uFB04]|\\uD835[\\uDC9C\\uDC9E\\uDC9F\\uDCA2\\uDCA5\\uDCA6\\uDCA9-\\uDCAC\\uDCAE-\\uDCB9\\uDCBB\\uDCBD-\\uDCC3\\uDCC5-\\uDCCF\\uDD04\\uDD05\\uDD07-\\uDD0A\\uDD0D-\\uDD14\\uDD16-\\uDD1C\\uDD1E-\\uDD39\\uDD3B-\\uDD3E\\uDD40-\\uDD44\\uDD46\\uDD4A-\\uDD50\\uDD52-\\uDD6B]/g;\n\tvar encodeMap = {'\\xAD':'shy','\\u200C':'zwnj','\\u200D':'zwj','\\u200E':'lrm','\\u2063':'ic','\\u2062':'it','\\u2061':'af','\\u200F':'rlm','\\u200B':'ZeroWidthSpace','\\u2060':'NoBreak','\\u0311':'DownBreve','\\u20DB':'tdot','\\u20DC':'DotDot','\\t':'Tab','\\n':'NewLine','\\u2008':'puncsp','\\u205F':'MediumSpace','\\u2009':'thinsp','\\u200A':'hairsp','\\u2004':'emsp13','\\u2002':'ensp','\\u2005':'emsp14','\\u2003':'emsp','\\u2007':'numsp','\\xA0':'nbsp','\\u205F\\u200A':'ThickSpace','\\u203E':'oline','_':'lowbar','\\u2010':'dash','\\u2013':'ndash','\\u2014':'mdash','\\u2015':'horbar',',':'comma',';':'semi','\\u204F':'bsemi',':':'colon','\\u2A74':'Colone','!':'excl','\\xA1':'iexcl','?':'quest','\\xBF':'iquest','.':'period','\\u2025':'nldr','\\u2026':'mldr','\\xB7':'middot','\\'':'apos','\\u2018':'lsquo','\\u2019':'rsquo','\\u201A':'sbquo','\\u2039':'lsaquo','\\u203A':'rsaquo','\"':'quot','\\u201C':'ldquo','\\u201D':'rdquo','\\u201E':'bdquo','\\xAB':'laquo','\\xBB':'raquo','(':'lpar',')':'rpar','[':'lsqb',']':'rsqb','{':'lcub','}':'rcub','\\u2308':'lceil','\\u2309':'rceil','\\u230A':'lfloor','\\u230B':'rfloor','\\u2985':'lopar','\\u2986':'ropar','\\u298B':'lbrke','\\u298C':'rbrke','\\u298D':'lbrkslu','\\u298E':'rbrksld','\\u298F':'lbrksld','\\u2990':'rbrkslu','\\u2991':'langd','\\u2992':'rangd','\\u2993':'lparlt','\\u2994':'rpargt','\\u2995':'gtlPar','\\u2996':'ltrPar','\\u27E6':'lobrk','\\u27E7':'robrk','\\u27E8':'lang','\\u27E9':'rang','\\u27EA':'Lang','\\u27EB':'Rang','\\u27EC':'loang','\\u27ED':'roang','\\u2772':'lbbrk','\\u2773':'rbbrk','\\u2016':'Vert','\\xA7':'sect','\\xB6':'para','@':'commat','*':'ast','/':'sol','undefined':null,'&':'amp','#':'num','%':'percnt','\\u2030':'permil','\\u2031':'pertenk','\\u2020':'dagger','\\u2021':'Dagger','\\u2022':'bull','\\u2043':'hybull','\\u2032':'prime','\\u2033':'Prime','\\u2034':'tprime','\\u2057':'qprime','\\u2035':'bprime','\\u2041':'caret','`':'grave','\\xB4':'acute','\\u02DC':'tilde','^':'Hat','\\xAF':'macr','\\u02D8':'breve','\\u02D9':'dot','\\xA8':'die','\\u02DA':'ring','\\u02DD':'dblac','\\xB8':'cedil','\\u02DB':'ogon','\\u02C6':'circ','\\u02C7':'caron','\\xB0':'deg','\\xA9':'copy','\\xAE':'reg','\\u2117':'copysr','\\u2118':'wp','\\u211E':'rx','\\u2127':'mho','\\u2129':'iiota','\\u2190':'larr','\\u219A':'nlarr','\\u2192':'rarr','\\u219B':'nrarr','\\u2191':'uarr','\\u2193':'darr','\\u2194':'harr','\\u21AE':'nharr','\\u2195':'varr','\\u2196':'nwarr','\\u2197':'nearr','\\u2198':'searr','\\u2199':'swarr','\\u219D':'rarrw','\\u219D\\u0338':'nrarrw','\\u219E':'Larr','\\u219F':'Uarr','\\u21A0':'Rarr','\\u21A1':'Darr','\\u21A2':'larrtl','\\u21A3':'rarrtl','\\u21A4':'mapstoleft','\\u21A5':'mapstoup','\\u21A6':'map','\\u21A7':'mapstodown','\\u21A9':'larrhk','\\u21AA':'rarrhk','\\u21AB':'larrlp','\\u21AC':'rarrlp','\\u21AD':'harrw','\\u21B0':'lsh','\\u21B1':'rsh','\\u21B2':'ldsh','\\u21B3':'rdsh','\\u21B5':'crarr','\\u21B6':'cularr','\\u21B7':'curarr','\\u21BA':'olarr','\\u21BB':'orarr','\\u21BC':'lharu','\\u21BD':'lhard','\\u21BE':'uharr','\\u21BF':'uharl','\\u21C0':'rharu','\\u21C1':'rhard','\\u21C2':'dharr','\\u21C3':'dharl','\\u21C4':'rlarr','\\u21C5':'udarr','\\u21C6':'lrarr','\\u21C7':'llarr','\\u21C8':'uuarr','\\u21C9':'rrarr','\\u21CA':'ddarr','\\u21CB':'lrhar','\\u21CC':'rlhar','\\u21D0':'lArr','\\u21CD':'nlArr','\\u21D1':'uArr','\\u21D2':'rArr','\\u21CF':'nrArr','\\u21D3':'dArr','\\u21D4':'iff','\\u21CE':'nhArr','\\u21D5':'vArr','\\u21D6':'nwArr','\\u21D7':'neArr','\\u21D8':'seArr','\\u21D9':'swArr','\\u21DA':'lAarr','\\u21DB':'rAarr','\\u21DD':'zigrarr','\\u21E4':'larrb','\\u21E5':'rarrb','\\u21F5':'duarr','\\u21FD':'loarr','\\u21FE':'roarr','\\u21FF':'hoarr','\\u2200':'forall','\\u2201':'comp','\\u2202':'part','\\u2202\\u0338':'npart','\\u2203':'exist','\\u2204':'nexist','\\u2205':'empty','\\u2207':'Del','\\u2208':'in','\\u2209':'notin','\\u220B':'ni','\\u220C':'notni','\\u03F6':'bepsi','\\u220F':'prod','\\u2210':'coprod','\\u2211':'sum','+':'plus','\\xB1':'pm','\\xF7':'div','\\xD7':'times','<':'lt','\\u226E':'nlt','<\\u20D2':'nvlt','=':'equals','\\u2260':'ne','=\\u20E5':'bne','\\u2A75':'Equal','>':'gt','\\u226F':'ngt','>\\u20D2':'nvgt','\\xAC':'not','|':'vert','\\xA6':'brvbar','\\u2212':'minus','\\u2213':'mp','\\u2214':'plusdo','\\u2044':'frasl','\\u2216':'setmn','\\u2217':'lowast','\\u2218':'compfn','\\u221A':'Sqrt','\\u221D':'prop','\\u221E':'infin','\\u221F':'angrt','\\u2220':'ang','\\u2220\\u20D2':'nang','\\u2221':'angmsd','\\u2222':'angsph','\\u2223':'mid','\\u2224':'nmid','\\u2225':'par','\\u2226':'npar','\\u2227':'and','\\u2228':'or','\\u2229':'cap','\\u2229\\uFE00':'caps','\\u222A':'cup','\\u222A\\uFE00':'cups','\\u222B':'int','\\u222C':'Int','\\u222D':'tint','\\u2A0C':'qint','\\u222E':'oint','\\u222F':'Conint','\\u2230':'Cconint','\\u2231':'cwint','\\u2232':'cwconint','\\u2233':'awconint','\\u2234':'there4','\\u2235':'becaus','\\u2236':'ratio','\\u2237':'Colon','\\u2238':'minusd','\\u223A':'mDDot','\\u223B':'homtht','\\u223C':'sim','\\u2241':'nsim','\\u223C\\u20D2':'nvsim','\\u223D':'bsim','\\u223D\\u0331':'race','\\u223E':'ac','\\u223E\\u0333':'acE','\\u223F':'acd','\\u2240':'wr','\\u2242':'esim','\\u2242\\u0338':'nesim','\\u2243':'sime','\\u2244':'nsime','\\u2245':'cong','\\u2247':'ncong','\\u2246':'simne','\\u2248':'ap','\\u2249':'nap','\\u224A':'ape','\\u224B':'apid','\\u224B\\u0338':'napid','\\u224C':'bcong','\\u224D':'CupCap','\\u226D':'NotCupCap','\\u224D\\u20D2':'nvap','\\u224E':'bump','\\u224E\\u0338':'nbump','\\u224F':'bumpe','\\u224F\\u0338':'nbumpe','\\u2250':'doteq','\\u2250\\u0338':'nedot','\\u2251':'eDot','\\u2252':'efDot','\\u2253':'erDot','\\u2254':'colone','\\u2255':'ecolon','\\u2256':'ecir','\\u2257':'cire','\\u2259':'wedgeq','\\u225A':'veeeq','\\u225C':'trie','\\u225F':'equest','\\u2261':'equiv','\\u2262':'nequiv','\\u2261\\u20E5':'bnequiv','\\u2264':'le','\\u2270':'nle','\\u2264\\u20D2':'nvle','\\u2265':'ge','\\u2271':'nge','\\u2265\\u20D2':'nvge','\\u2266':'lE','\\u2266\\u0338':'nlE','\\u2267':'gE','\\u2267\\u0338':'ngE','\\u2268\\uFE00':'lvnE','\\u2268':'lnE','\\u2269':'gnE','\\u2269\\uFE00':'gvnE','\\u226A':'ll','\\u226A\\u0338':'nLtv','\\u226A\\u20D2':'nLt','\\u226B':'gg','\\u226B\\u0338':'nGtv','\\u226B\\u20D2':'nGt','\\u226C':'twixt','\\u2272':'lsim','\\u2274':'nlsim','\\u2273':'gsim','\\u2275':'ngsim','\\u2276':'lg','\\u2278':'ntlg','\\u2277':'gl','\\u2279':'ntgl','\\u227A':'pr','\\u2280':'npr','\\u227B':'sc','\\u2281':'nsc','\\u227C':'prcue','\\u22E0':'nprcue','\\u227D':'sccue','\\u22E1':'nsccue','\\u227E':'prsim','\\u227F':'scsim','\\u227F\\u0338':'NotSucceedsTilde','\\u2282':'sub','\\u2284':'nsub','\\u2282\\u20D2':'vnsub','\\u2283':'sup','\\u2285':'nsup','\\u2283\\u20D2':'vnsup','\\u2286':'sube','\\u2288':'nsube','\\u2287':'supe','\\u2289':'nsupe','\\u228A\\uFE00':'vsubne','\\u228A':'subne','\\u228B\\uFE00':'vsupne','\\u228B':'supne','\\u228D':'cupdot','\\u228E':'uplus','\\u228F':'sqsub','\\u228F\\u0338':'NotSquareSubset','\\u2290':'sqsup','\\u2290\\u0338':'NotSquareSuperset','\\u2291':'sqsube','\\u22E2':'nsqsube','\\u2292':'sqsupe','\\u22E3':'nsqsupe','\\u2293':'sqcap','\\u2293\\uFE00':'sqcaps','\\u2294':'sqcup','\\u2294\\uFE00':'sqcups','\\u2295':'oplus','\\u2296':'ominus','\\u2297':'otimes','\\u2298':'osol','\\u2299':'odot','\\u229A':'ocir','\\u229B':'oast','\\u229D':'odash','\\u229E':'plusb','\\u229F':'minusb','\\u22A0':'timesb','\\u22A1':'sdotb','\\u22A2':'vdash','\\u22AC':'nvdash','\\u22A3':'dashv','\\u22A4':'top','\\u22A5':'bot','\\u22A7':'models','\\u22A8':'vDash','\\u22AD':'nvDash','\\u22A9':'Vdash','\\u22AE':'nVdash','\\u22AA':'Vvdash','\\u22AB':'VDash','\\u22AF':'nVDash','\\u22B0':'prurel','\\u22B2':'vltri','\\u22EA':'nltri','\\u22B3':'vrtri','\\u22EB':'nrtri','\\u22B4':'ltrie','\\u22EC':'nltrie','\\u22B4\\u20D2':'nvltrie','\\u22B5':'rtrie','\\u22ED':'nrtrie','\\u22B5\\u20D2':'nvrtrie','\\u22B6':'origof','\\u22B7':'imof','\\u22B8':'mumap','\\u22B9':'hercon','\\u22BA':'intcal','\\u22BB':'veebar','\\u22BD':'barvee','\\u22BE':'angrtvb','\\u22BF':'lrtri','\\u22C0':'Wedge','\\u22C1':'Vee','\\u22C2':'xcap','\\u22C3':'xcup','\\u22C4':'diam','\\u22C5':'sdot','\\u22C6':'Star','\\u22C7':'divonx','\\u22C8':'bowtie','\\u22C9':'ltimes','\\u22CA':'rtimes','\\u22CB':'lthree','\\u22CC':'rthree','\\u22CD':'bsime','\\u22CE':'cuvee','\\u22CF':'cuwed','\\u22D0':'Sub','\\u22D1':'Sup','\\u22D2':'Cap','\\u22D3':'Cup','\\u22D4':'fork','\\u22D5':'epar','\\u22D6':'ltdot','\\u22D7':'gtdot','\\u22D8':'Ll','\\u22D8\\u0338':'nLl','\\u22D9':'Gg','\\u22D9\\u0338':'nGg','\\u22DA\\uFE00':'lesg','\\u22DA':'leg','\\u22DB':'gel','\\u22DB\\uFE00':'gesl','\\u22DE':'cuepr','\\u22DF':'cuesc','\\u22E6':'lnsim','\\u22E7':'gnsim','\\u22E8':'prnsim','\\u22E9':'scnsim','\\u22EE':'vellip','\\u22EF':'ctdot','\\u22F0':'utdot','\\u22F1':'dtdot','\\u22F2':'disin','\\u22F3':'isinsv','\\u22F4':'isins','\\u22F5':'isindot','\\u22F5\\u0338':'notindot','\\u22F6':'notinvc','\\u22F7':'notinvb','\\u22F9':'isinE','\\u22F9\\u0338':'notinE','\\u22FA':'nisd','\\u22FB':'xnis','\\u22FC':'nis','\\u22FD':'notnivc','\\u22FE':'notnivb','\\u2305':'barwed','\\u2306':'Barwed','\\u230C':'drcrop','\\u230D':'dlcrop','\\u230E':'urcrop','\\u230F':'ulcrop','\\u2310':'bnot','\\u2312':'profline','\\u2313':'profsurf','\\u2315':'telrec','\\u2316':'target','\\u231C':'ulcorn','\\u231D':'urcorn','\\u231E':'dlcorn','\\u231F':'drcorn','\\u2322':'frown','\\u2323':'smile','\\u232D':'cylcty','\\u232E':'profalar','\\u2336':'topbot','\\u233D':'ovbar','\\u233F':'solbar','\\u237C':'angzarr','\\u23B0':'lmoust','\\u23B1':'rmoust','\\u23B4':'tbrk','\\u23B5':'bbrk','\\u23B6':'bbrktbrk','\\u23DC':'OverParenthesis','\\u23DD':'UnderParenthesis','\\u23DE':'OverBrace','\\u23DF':'UnderBrace','\\u23E2':'trpezium','\\u23E7':'elinters','\\u2423':'blank','\\u2500':'boxh','\\u2502':'boxv','\\u250C':'boxdr','\\u2510':'boxdl','\\u2514':'boxur','\\u2518':'boxul','\\u251C':'boxvr','\\u2524':'boxvl','\\u252C':'boxhd','\\u2534':'boxhu','\\u253C':'boxvh','\\u2550':'boxH','\\u2551':'boxV','\\u2552':'boxdR','\\u2553':'boxDr','\\u2554':'boxDR','\\u2555':'boxdL','\\u2556':'boxDl','\\u2557':'boxDL','\\u2558':'boxuR','\\u2559':'boxUr','\\u255A':'boxUR','\\u255B':'boxuL','\\u255C':'boxUl','\\u255D':'boxUL','\\u255E':'boxvR','\\u255F':'boxVr','\\u2560':'boxVR','\\u2561':'boxvL','\\u2562':'boxVl','\\u2563':'boxVL','\\u2564':'boxHd','\\u2565':'boxhD','\\u2566':'boxHD','\\u2567':'boxHu','\\u2568':'boxhU','\\u2569':'boxHU','\\u256A':'boxvH','\\u256B':'boxVh','\\u256C':'boxVH','\\u2580':'uhblk','\\u2584':'lhblk','\\u2588':'block','\\u2591':'blk14','\\u2592':'blk12','\\u2593':'blk34','\\u25A1':'squ','\\u25AA':'squf','\\u25AB':'EmptyVerySmallSquare','\\u25AD':'rect','\\u25AE':'marker','\\u25B1':'fltns','\\u25B3':'xutri','\\u25B4':'utrif','\\u25B5':'utri','\\u25B8':'rtrif','\\u25B9':'rtri','\\u25BD':'xdtri','\\u25BE':'dtrif','\\u25BF':'dtri','\\u25C2':'ltrif','\\u25C3':'ltri','\\u25CA':'loz','\\u25CB':'cir','\\u25EC':'tridot','\\u25EF':'xcirc','\\u25F8':'ultri','\\u25F9':'urtri','\\u25FA':'lltri','\\u25FB':'EmptySmallSquare','\\u25FC':'FilledSmallSquare','\\u2605':'starf','\\u2606':'star','\\u260E':'phone','\\u2640':'female','\\u2642':'male','\\u2660':'spades','\\u2663':'clubs','\\u2665':'hearts','\\u2666':'diams','\\u266A':'sung','\\u2713':'check','\\u2717':'cross','\\u2720':'malt','\\u2736':'sext','\\u2758':'VerticalSeparator','\\u27C8':'bsolhsub','\\u27C9':'suphsol','\\u27F5':'xlarr','\\u27F6':'xrarr','\\u27F7':'xharr','\\u27F8':'xlArr','\\u27F9':'xrArr','\\u27FA':'xhArr','\\u27FC':'xmap','\\u27FF':'dzigrarr','\\u2902':'nvlArr','\\u2903':'nvrArr','\\u2904':'nvHarr','\\u2905':'Map','\\u290C':'lbarr','\\u290D':'rbarr','\\u290E':'lBarr','\\u290F':'rBarr','\\u2910':'RBarr','\\u2911':'DDotrahd','\\u2912':'UpArrowBar','\\u2913':'DownArrowBar','\\u2916':'Rarrtl','\\u2919':'latail','\\u291A':'ratail','\\u291B':'lAtail','\\u291C':'rAtail','\\u291D':'larrfs','\\u291E':'rarrfs','\\u291F':'larrbfs','\\u2920':'rarrbfs','\\u2923':'nwarhk','\\u2924':'nearhk','\\u2925':'searhk','\\u2926':'swarhk','\\u2927':'nwnear','\\u2928':'toea','\\u2929':'tosa','\\u292A':'swnwar','\\u2933':'rarrc','\\u2933\\u0338':'nrarrc','\\u2935':'cudarrr','\\u2936':'ldca','\\u2937':'rdca','\\u2938':'cudarrl','\\u2939':'larrpl','\\u293C':'curarrm','\\u293D':'cularrp','\\u2945':'rarrpl','\\u2948':'harrcir','\\u2949':'Uarrocir','\\u294A':'lurdshar','\\u294B':'ldrushar','\\u294E':'LeftRightVector','\\u294F':'RightUpDownVector','\\u2950':'DownLeftRightVector','\\u2951':'LeftUpDownVector','\\u2952':'LeftVectorBar','\\u2953':'RightVectorBar','\\u2954':'RightUpVectorBar','\\u2955':'RightDownVectorBar','\\u2956':'DownLeftVectorBar','\\u2957':'DownRightVectorBar','\\u2958':'LeftUpVectorBar','\\u2959':'LeftDownVectorBar','\\u295A':'LeftTeeVector','\\u295B':'RightTeeVector','\\u295C':'RightUpTeeVector','\\u295D':'RightDownTeeVector','\\u295E':'DownLeftTeeVector','\\u295F':'DownRightTeeVector','\\u2960':'LeftUpTeeVector','\\u2961':'LeftDownTeeVector','\\u2962':'lHar','\\u2963':'uHar','\\u2964':'rHar','\\u2965':'dHar','\\u2966':'luruhar','\\u2967':'ldrdhar','\\u2968':'ruluhar','\\u2969':'rdldhar','\\u296A':'lharul','\\u296B':'llhard','\\u296C':'rharul','\\u296D':'lrhard','\\u296E':'udhar','\\u296F':'duhar','\\u2970':'RoundImplies','\\u2971':'erarr','\\u2972':'simrarr','\\u2973':'larrsim','\\u2974':'rarrsim','\\u2975':'rarrap','\\u2976':'ltlarr','\\u2978':'gtrarr','\\u2979':'subrarr','\\u297B':'suplarr','\\u297C':'lfisht','\\u297D':'rfisht','\\u297E':'ufisht','\\u297F':'dfisht','\\u299A':'vzigzag','\\u299C':'vangrt','\\u299D':'angrtvbd','\\u29A4':'ange','\\u29A5':'range','\\u29A6':'dwangle','\\u29A7':'uwangle','\\u29A8':'angmsdaa','\\u29A9':'angmsdab','\\u29AA':'angmsdac','\\u29AB':'angmsdad','\\u29AC':'angmsdae','\\u29AD':'angmsdaf','\\u29AE':'angmsdag','\\u29AF':'angmsdah','\\u29B0':'bemptyv','\\u29B1':'demptyv','\\u29B2':'cemptyv','\\u29B3':'raemptyv','\\u29B4':'laemptyv','\\u29B5':'ohbar','\\u29B6':'omid','\\u29B7':'opar','\\u29B9':'operp','\\u29BB':'olcross','\\u29BC':'odsold','\\u29BE':'olcir','\\u29BF':'ofcir','\\u29C0':'olt','\\u29C1':'ogt','\\u29C2':'cirscir','\\u29C3':'cirE','\\u29C4':'solb','\\u29C5':'bsolb','\\u29C9':'boxbox','\\u29CD':'trisb','\\u29CE':'rtriltri','\\u29CF':'LeftTriangleBar','\\u29CF\\u0338':'NotLeftTriangleBar','\\u29D0':'RightTriangleBar','\\u29D0\\u0338':'NotRightTriangleBar','\\u29DC':'iinfin','\\u29DD':'infintie','\\u29DE':'nvinfin','\\u29E3':'eparsl','\\u29E4':'smeparsl','\\u29E5':'eqvparsl','\\u29EB':'lozf','\\u29F4':'RuleDelayed','\\u29F6':'dsol','\\u2A00':'xodot','\\u2A01':'xoplus','\\u2A02':'xotime','\\u2A04':'xuplus','\\u2A06':'xsqcup','\\u2A0D':'fpartint','\\u2A10':'cirfnint','\\u2A11':'awint','\\u2A12':'rppolint','\\u2A13':'scpolint','\\u2A14':'npolint','\\u2A15':'pointint','\\u2A16':'quatint','\\u2A17':'intlarhk','\\u2A22':'pluscir','\\u2A23':'plusacir','\\u2A24':'simplus','\\u2A25':'plusdu','\\u2A26':'plussim','\\u2A27':'plustwo','\\u2A29':'mcomma','\\u2A2A':'minusdu','\\u2A2D':'loplus','\\u2A2E':'roplus','\\u2A2F':'Cross','\\u2A30':'timesd','\\u2A31':'timesbar','\\u2A33':'smashp','\\u2A34':'lotimes','\\u2A35':'rotimes','\\u2A36':'otimesas','\\u2A37':'Otimes','\\u2A38':'odiv','\\u2A39':'triplus','\\u2A3A':'triminus','\\u2A3B':'tritime','\\u2A3C':'iprod','\\u2A3F':'amalg','\\u2A40':'capdot','\\u2A42':'ncup','\\u2A43':'ncap','\\u2A44':'capand','\\u2A45':'cupor','\\u2A46':'cupcap','\\u2A47':'capcup','\\u2A48':'cupbrcap','\\u2A49':'capbrcup','\\u2A4A':'cupcup','\\u2A4B':'capcap','\\u2A4C':'ccups','\\u2A4D':'ccaps','\\u2A50':'ccupssm','\\u2A53':'And','\\u2A54':'Or','\\u2A55':'andand','\\u2A56':'oror','\\u2A57':'orslope','\\u2A58':'andslope','\\u2A5A':'andv','\\u2A5B':'orv','\\u2A5C':'andd','\\u2A5D':'ord','\\u2A5F':'wedbar','\\u2A66':'sdote','\\u2A6A':'simdot','\\u2A6D':'congdot','\\u2A6D\\u0338':'ncongdot','\\u2A6E':'easter','\\u2A6F':'apacir','\\u2A70':'apE','\\u2A70\\u0338':'napE','\\u2A71':'eplus','\\u2A72':'pluse','\\u2A73':'Esim','\\u2A77':'eDDot','\\u2A78':'equivDD','\\u2A79':'ltcir','\\u2A7A':'gtcir','\\u2A7B':'ltquest','\\u2A7C':'gtquest','\\u2A7D':'les','\\u2A7D\\u0338':'nles','\\u2A7E':'ges','\\u2A7E\\u0338':'nges','\\u2A7F':'lesdot','\\u2A80':'gesdot','\\u2A81':'lesdoto','\\u2A82':'gesdoto','\\u2A83':'lesdotor','\\u2A84':'gesdotol','\\u2A85':'lap','\\u2A86':'gap','\\u2A87':'lne','\\u2A88':'gne','\\u2A89':'lnap','\\u2A8A':'gnap','\\u2A8B':'lEg','\\u2A8C':'gEl','\\u2A8D':'lsime','\\u2A8E':'gsime','\\u2A8F':'lsimg','\\u2A90':'gsiml','\\u2A91':'lgE','\\u2A92':'glE','\\u2A93':'lesges','\\u2A94':'gesles','\\u2A95':'els','\\u2A96':'egs','\\u2A97':'elsdot','\\u2A98':'egsdot','\\u2A99':'el','\\u2A9A':'eg','\\u2A9D':'siml','\\u2A9E':'simg','\\u2A9F':'simlE','\\u2AA0':'simgE','\\u2AA1':'LessLess','\\u2AA1\\u0338':'NotNestedLessLess','\\u2AA2':'GreaterGreater','\\u2AA2\\u0338':'NotNestedGreaterGreater','\\u2AA4':'glj','\\u2AA5':'gla','\\u2AA6':'ltcc','\\u2AA7':'gtcc','\\u2AA8':'lescc','\\u2AA9':'gescc','\\u2AAA':'smt','\\u2AAB':'lat','\\u2AAC':'smte','\\u2AAC\\uFE00':'smtes','\\u2AAD':'late','\\u2AAD\\uFE00':'lates','\\u2AAE':'bumpE','\\u2AAF':'pre','\\u2AAF\\u0338':'npre','\\u2AB0':'sce','\\u2AB0\\u0338':'nsce','\\u2AB3':'prE','\\u2AB4':'scE','\\u2AB5':'prnE','\\u2AB6':'scnE','\\u2AB7':'prap','\\u2AB8':'scap','\\u2AB9':'prnap','\\u2ABA':'scnap','\\u2ABB':'Pr','\\u2ABC':'Sc','\\u2ABD':'subdot','\\u2ABE':'supdot','\\u2ABF':'subplus','\\u2AC0':'supplus','\\u2AC1':'submult','\\u2AC2':'supmult','\\u2AC3':'subedot','\\u2AC4':'supedot','\\u2AC5':'subE','\\u2AC5\\u0338':'nsubE','\\u2AC6':'supE','\\u2AC6\\u0338':'nsupE','\\u2AC7':'subsim','\\u2AC8':'supsim','\\u2ACB\\uFE00':'vsubnE','\\u2ACB':'subnE','\\u2ACC\\uFE00':'vsupnE','\\u2ACC':'supnE','\\u2ACF':'csub','\\u2AD0':'csup','\\u2AD1':'csube','\\u2AD2':'csupe','\\u2AD3':'subsup','\\u2AD4':'supsub','\\u2AD5':'subsub','\\u2AD6':'supsup','\\u2AD7':'suphsub','\\u2AD8':'supdsub','\\u2AD9':'forkv','\\u2ADA':'topfork','\\u2ADB':'mlcp','\\u2AE4':'Dashv','\\u2AE6':'Vdashl','\\u2AE7':'Barv','\\u2AE8':'vBar','\\u2AE9':'vBarv','\\u2AEB':'Vbar','\\u2AEC':'Not','\\u2AED':'bNot','\\u2AEE':'rnmid','\\u2AEF':'cirmid','\\u2AF0':'midcir','\\u2AF1':'topcir','\\u2AF2':'nhpar','\\u2AF3':'parsim','\\u2AFD':'parsl','\\u2AFD\\u20E5':'nparsl','\\u266D':'flat','\\u266E':'natur','\\u266F':'sharp','\\xA4':'curren','\\xA2':'cent','$':'dollar','\\xA3':'pound','\\xA5':'yen','\\u20AC':'euro','\\xB9':'sup1','\\xBD':'half','\\u2153':'frac13','\\xBC':'frac14','\\u2155':'frac15','\\u2159':'frac16','\\u215B':'frac18','\\xB2':'sup2','\\u2154':'frac23','\\u2156':'frac25','\\xB3':'sup3','\\xBE':'frac34','\\u2157':'frac35','\\u215C':'frac38','\\u2158':'frac45','\\u215A':'frac56','\\u215D':'frac58','\\u215E':'frac78','\\uD835\\uDCB6':'ascr','\\uD835\\uDD52':'aopf','\\uD835\\uDD1E':'afr','\\uD835\\uDD38':'Aopf','\\uD835\\uDD04':'Afr','\\uD835\\uDC9C':'Ascr','\\xAA':'ordf','\\xE1':'aacute','\\xC1':'Aacute','\\xE0':'agrave','\\xC0':'Agrave','\\u0103':'abreve','\\u0102':'Abreve','\\xE2':'acirc','\\xC2':'Acirc','\\xE5':'aring','\\xC5':'angst','\\xE4':'auml','\\xC4':'Auml','\\xE3':'atilde','\\xC3':'Atilde','\\u0105':'aogon','\\u0104':'Aogon','\\u0101':'amacr','\\u0100':'Amacr','\\xE6':'aelig','\\xC6':'AElig','\\uD835\\uDCB7':'bscr','\\uD835\\uDD53':'bopf','\\uD835\\uDD1F':'bfr','\\uD835\\uDD39':'Bopf','\\u212C':'Bscr','\\uD835\\uDD05':'Bfr','\\uD835\\uDD20':'cfr','\\uD835\\uDCB8':'cscr','\\uD835\\uDD54':'copf','\\u212D':'Cfr','\\uD835\\uDC9E':'Cscr','\\u2102':'Copf','\\u0107':'cacute','\\u0106':'Cacute','\\u0109':'ccirc','\\u0108':'Ccirc','\\u010D':'ccaron','\\u010C':'Ccaron','\\u010B':'cdot','\\u010A':'Cdot','\\xE7':'ccedil','\\xC7':'Ccedil','\\u2105':'incare','\\uD835\\uDD21':'dfr','\\u2146':'dd','\\uD835\\uDD55':'dopf','\\uD835\\uDCB9':'dscr','\\uD835\\uDC9F':'Dscr','\\uD835\\uDD07':'Dfr','\\u2145':'DD','\\uD835\\uDD3B':'Dopf','\\u010F':'dcaron','\\u010E':'Dcaron','\\u0111':'dstrok','\\u0110':'Dstrok','\\xF0':'eth','\\xD0':'ETH','\\u2147':'ee','\\u212F':'escr','\\uD835\\uDD22':'efr','\\uD835\\uDD56':'eopf','\\u2130':'Escr','\\uD835\\uDD08':'Efr','\\uD835\\uDD3C':'Eopf','\\xE9':'eacute','\\xC9':'Eacute','\\xE8':'egrave','\\xC8':'Egrave','\\xEA':'ecirc','\\xCA':'Ecirc','\\u011B':'ecaron','\\u011A':'Ecaron','\\xEB':'euml','\\xCB':'Euml','\\u0117':'edot','\\u0116':'Edot','\\u0119':'eogon','\\u0118':'Eogon','\\u0113':'emacr','\\u0112':'Emacr','\\uD835\\uDD23':'ffr','\\uD835\\uDD57':'fopf','\\uD835\\uDCBB':'fscr','\\uD835\\uDD09':'Ffr','\\uD835\\uDD3D':'Fopf','\\u2131':'Fscr','\\uFB00':'fflig','\\uFB03':'ffilig','\\uFB04':'ffllig','\\uFB01':'filig','fj':'fjlig','\\uFB02':'fllig','\\u0192':'fnof','\\u210A':'gscr','\\uD835\\uDD58':'gopf','\\uD835\\uDD24':'gfr','\\uD835\\uDCA2':'Gscr','\\uD835\\uDD3E':'Gopf','\\uD835\\uDD0A':'Gfr','\\u01F5':'gacute','\\u011F':'gbreve','\\u011E':'Gbreve','\\u011D':'gcirc','\\u011C':'Gcirc','\\u0121':'gdot','\\u0120':'Gdot','\\u0122':'Gcedil','\\uD835\\uDD25':'hfr','\\u210E':'planckh','\\uD835\\uDCBD':'hscr','\\uD835\\uDD59':'hopf','\\u210B':'Hscr','\\u210C':'Hfr','\\u210D':'Hopf','\\u0125':'hcirc','\\u0124':'Hcirc','\\u210F':'hbar','\\u0127':'hstrok','\\u0126':'Hstrok','\\uD835\\uDD5A':'iopf','\\uD835\\uDD26':'ifr','\\uD835\\uDCBE':'iscr','\\u2148':'ii','\\uD835\\uDD40':'Iopf','\\u2110':'Iscr','\\u2111':'Im','\\xED':'iacute','\\xCD':'Iacute','\\xEC':'igrave','\\xCC':'Igrave','\\xEE':'icirc','\\xCE':'Icirc','\\xEF':'iuml','\\xCF':'Iuml','\\u0129':'itilde','\\u0128':'Itilde','\\u0130':'Idot','\\u012F':'iogon','\\u012E':'Iogon','\\u012B':'imacr','\\u012A':'Imacr','\\u0133':'ijlig','\\u0132':'IJlig','\\u0131':'imath','\\uD835\\uDCBF':'jscr','\\uD835\\uDD5B':'jopf','\\uD835\\uDD27':'jfr','\\uD835\\uDCA5':'Jscr','\\uD835\\uDD0D':'Jfr','\\uD835\\uDD41':'Jopf','\\u0135':'jcirc','\\u0134':'Jcirc','\\u0237':'jmath','\\uD835\\uDD5C':'kopf','\\uD835\\uDCC0':'kscr','\\uD835\\uDD28':'kfr','\\uD835\\uDCA6':'Kscr','\\uD835\\uDD42':'Kopf','\\uD835\\uDD0E':'Kfr','\\u0137':'kcedil','\\u0136':'Kcedil','\\uD835\\uDD29':'lfr','\\uD835\\uDCC1':'lscr','\\u2113':'ell','\\uD835\\uDD5D':'lopf','\\u2112':'Lscr','\\uD835\\uDD0F':'Lfr','\\uD835\\uDD43':'Lopf','\\u013A':'lacute','\\u0139':'Lacute','\\u013E':'lcaron','\\u013D':'Lcaron','\\u013C':'lcedil','\\u013B':'Lcedil','\\u0142':'lstrok','\\u0141':'Lstrok','\\u0140':'lmidot','\\u013F':'Lmidot','\\uD835\\uDD2A':'mfr','\\uD835\\uDD5E':'mopf','\\uD835\\uDCC2':'mscr','\\uD835\\uDD10':'Mfr','\\uD835\\uDD44':'Mopf','\\u2133':'Mscr','\\uD835\\uDD2B':'nfr','\\uD835\\uDD5F':'nopf','\\uD835\\uDCC3':'nscr','\\u2115':'Nopf','\\uD835\\uDCA9':'Nscr','\\uD835\\uDD11':'Nfr','\\u0144':'nacute','\\u0143':'Nacute','\\u0148':'ncaron','\\u0147':'Ncaron','\\xF1':'ntilde','\\xD1':'Ntilde','\\u0146':'ncedil','\\u0145':'Ncedil','\\u2116':'numero','\\u014B':'eng','\\u014A':'ENG','\\uD835\\uDD60':'oopf','\\uD835\\uDD2C':'ofr','\\u2134':'oscr','\\uD835\\uDCAA':'Oscr','\\uD835\\uDD12':'Ofr','\\uD835\\uDD46':'Oopf','\\xBA':'ordm','\\xF3':'oacute','\\xD3':'Oacute','\\xF2':'ograve','\\xD2':'Ograve','\\xF4':'ocirc','\\xD4':'Ocirc','\\xF6':'ouml','\\xD6':'Ouml','\\u0151':'odblac','\\u0150':'Odblac','\\xF5':'otilde','\\xD5':'Otilde','\\xF8':'oslash','\\xD8':'Oslash','\\u014D':'omacr','\\u014C':'Omacr','\\u0153':'oelig','\\u0152':'OElig','\\uD835\\uDD2D':'pfr','\\uD835\\uDCC5':'pscr','\\uD835\\uDD61':'popf','\\u2119':'Popf','\\uD835\\uDD13':'Pfr','\\uD835\\uDCAB':'Pscr','\\uD835\\uDD62':'qopf','\\uD835\\uDD2E':'qfr','\\uD835\\uDCC6':'qscr','\\uD835\\uDCAC':'Qscr','\\uD835\\uDD14':'Qfr','\\u211A':'Qopf','\\u0138':'kgreen','\\uD835\\uDD2F':'rfr','\\uD835\\uDD63':'ropf','\\uD835\\uDCC7':'rscr','\\u211B':'Rscr','\\u211C':'Re','\\u211D':'Ropf','\\u0155':'racute','\\u0154':'Racute','\\u0159':'rcaron','\\u0158':'Rcaron','\\u0157':'rcedil','\\u0156':'Rcedil','\\uD835\\uDD64':'sopf','\\uD835\\uDCC8':'sscr','\\uD835\\uDD30':'sfr','\\uD835\\uDD4A':'Sopf','\\uD835\\uDD16':'Sfr','\\uD835\\uDCAE':'Sscr','\\u24C8':'oS','\\u015B':'sacute','\\u015A':'Sacute','\\u015D':'scirc','\\u015C':'Scirc','\\u0161':'scaron','\\u0160':'Scaron','\\u015F':'scedil','\\u015E':'Scedil','\\xDF':'szlig','\\uD835\\uDD31':'tfr','\\uD835\\uDCC9':'tscr','\\uD835\\uDD65':'topf','\\uD835\\uDCAF':'Tscr','\\uD835\\uDD17':'Tfr','\\uD835\\uDD4B':'Topf','\\u0165':'tcaron','\\u0164':'Tcaron','\\u0163':'tcedil','\\u0162':'Tcedil','\\u2122':'trade','\\u0167':'tstrok','\\u0166':'Tstrok','\\uD835\\uDCCA':'uscr','\\uD835\\uDD66':'uopf','\\uD835\\uDD32':'ufr','\\uD835\\uDD4C':'Uopf','\\uD835\\uDD18':'Ufr','\\uD835\\uDCB0':'Uscr','\\xFA':'uacute','\\xDA':'Uacute','\\xF9':'ugrave','\\xD9':'Ugrave','\\u016D':'ubreve','\\u016C':'Ubreve','\\xFB':'ucirc','\\xDB':'Ucirc','\\u016F':'uring','\\u016E':'Uring','\\xFC':'uuml','\\xDC':'Uuml','\\u0171':'udblac','\\u0170':'Udblac','\\u0169':'utilde','\\u0168':'Utilde','\\u0173':'uogon','\\u0172':'Uogon','\\u016B':'umacr','\\u016A':'Umacr','\\uD835\\uDD33':'vfr','\\uD835\\uDD67':'vopf','\\uD835\\uDCCB':'vscr','\\uD835\\uDD19':'Vfr','\\uD835\\uDD4D':'Vopf','\\uD835\\uDCB1':'Vscr','\\uD835\\uDD68':'wopf','\\uD835\\uDCCC':'wscr','\\uD835\\uDD34':'wfr','\\uD835\\uDCB2':'Wscr','\\uD835\\uDD4E':'Wopf','\\uD835\\uDD1A':'Wfr','\\u0175':'wcirc','\\u0174':'Wcirc','\\uD835\\uDD35':'xfr','\\uD835\\uDCCD':'xscr','\\uD835\\uDD69':'xopf','\\uD835\\uDD4F':'Xopf','\\uD835\\uDD1B':'Xfr','\\uD835\\uDCB3':'Xscr','\\uD835\\uDD36':'yfr','\\uD835\\uDCCE':'yscr','\\uD835\\uDD6A':'yopf','\\uD835\\uDCB4':'Yscr','\\uD835\\uDD1C':'Yfr','\\uD835\\uDD50':'Yopf','\\xFD':'yacute','\\xDD':'Yacute','\\u0177':'ycirc','\\u0176':'Ycirc','\\xFF':'yuml','\\u0178':'Yuml','\\uD835\\uDCCF':'zscr','\\uD835\\uDD37':'zfr','\\uD835\\uDD6B':'zopf','\\u2128':'Zfr','\\u2124':'Zopf','\\uD835\\uDCB5':'Zscr','\\u017A':'zacute','\\u0179':'Zacute','\\u017E':'zcaron','\\u017D':'Zcaron','\\u017C':'zdot','\\u017B':'Zdot','\\u01B5':'imped','\\xFE':'thorn','\\xDE':'THORN','\\u0149':'napos','\\u03B1':'alpha','\\u0391':'Alpha','\\u03B2':'beta','\\u0392':'Beta','\\u03B3':'gamma','\\u0393':'Gamma','\\u03B4':'delta','\\u0394':'Delta','\\u03B5':'epsi','\\u03F5':'epsiv','\\u0395':'Epsilon','\\u03DD':'gammad','\\u03DC':'Gammad','\\u03B6':'zeta','\\u0396':'Zeta','\\u03B7':'eta','\\u0397':'Eta','\\u03B8':'theta','\\u03D1':'thetav','\\u0398':'Theta','\\u03B9':'iota','\\u0399':'Iota','\\u03BA':'kappa','\\u03F0':'kappav','\\u039A':'Kappa','\\u03BB':'lambda','\\u039B':'Lambda','\\u03BC':'mu','\\xB5':'micro','\\u039C':'Mu','\\u03BD':'nu','\\u039D':'Nu','\\u03BE':'xi','\\u039E':'Xi','\\u03BF':'omicron','\\u039F':'Omicron','\\u03C0':'pi','\\u03D6':'piv','\\u03A0':'Pi','\\u03C1':'rho','\\u03F1':'rhov','\\u03A1':'Rho','\\u03C3':'sigma','\\u03A3':'Sigma','\\u03C2':'sigmaf','\\u03C4':'tau','\\u03A4':'Tau','\\u03C5':'upsi','\\u03A5':'Upsilon','\\u03D2':'Upsi','\\u03C6':'phi','\\u03D5':'phiv','\\u03A6':'Phi','\\u03C7':'chi','\\u03A7':'Chi','\\u03C8':'psi','\\u03A8':'Psi','\\u03C9':'omega','\\u03A9':'ohm','\\u0430':'acy','\\u0410':'Acy','\\u0431':'bcy','\\u0411':'Bcy','\\u0432':'vcy','\\u0412':'Vcy','\\u0433':'gcy','\\u0413':'Gcy','\\u0453':'gjcy','\\u0403':'GJcy','\\u0434':'dcy','\\u0414':'Dcy','\\u0452':'djcy','\\u0402':'DJcy','\\u0435':'iecy','\\u0415':'IEcy','\\u0451':'iocy','\\u0401':'IOcy','\\u0454':'jukcy','\\u0404':'Jukcy','\\u0436':'zhcy','\\u0416':'ZHcy','\\u0437':'zcy','\\u0417':'Zcy','\\u0455':'dscy','\\u0405':'DScy','\\u0438':'icy','\\u0418':'Icy','\\u0456':'iukcy','\\u0406':'Iukcy','\\u0457':'yicy','\\u0407':'YIcy','\\u0439':'jcy','\\u0419':'Jcy','\\u0458':'jsercy','\\u0408':'Jsercy','\\u043A':'kcy','\\u041A':'Kcy','\\u045C':'kjcy','\\u040C':'KJcy','\\u043B':'lcy','\\u041B':'Lcy','\\u0459':'ljcy','\\u0409':'LJcy','\\u043C':'mcy','\\u041C':'Mcy','\\u043D':'ncy','\\u041D':'Ncy','\\u045A':'njcy','\\u040A':'NJcy','\\u043E':'ocy','\\u041E':'Ocy','\\u043F':'pcy','\\u041F':'Pcy','\\u0440':'rcy','\\u0420':'Rcy','\\u0441':'scy','\\u0421':'Scy','\\u0442':'tcy','\\u0422':'Tcy','\\u045B':'tshcy','\\u040B':'TSHcy','\\u0443':'ucy','\\u0423':'Ucy','\\u045E':'ubrcy','\\u040E':'Ubrcy','\\u0444':'fcy','\\u0424':'Fcy','\\u0445':'khcy','\\u0425':'KHcy','\\u0446':'tscy','\\u0426':'TScy','\\u0447':'chcy','\\u0427':'CHcy','\\u045F':'dzcy','\\u040F':'DZcy','\\u0448':'shcy','\\u0428':'SHcy','\\u0449':'shchcy','\\u0429':'SHCHcy','\\u044A':'hardcy','\\u042A':'HARDcy','\\u044B':'ycy','\\u042B':'Ycy','\\u044C':'softcy','\\u042C':'SOFTcy','\\u044D':'ecy','\\u042D':'Ecy','\\u044E':'yucy','\\u042E':'YUcy','\\u044F':'yacy','\\u042F':'YAcy','\\u2135':'aleph','\\u2136':'beth','\\u2137':'gimel','\\u2138':'daleth'};\n\n\tvar regexEscape = /[\"&'<>`]/g;\n\tvar escapeMap = {\n\t\t'\"': '&quot;',\n\t\t'&': '&amp;',\n\t\t'\\'': '&#x27;',\n\t\t'<': '&lt;',\n\t\t// See https://mathiasbynens.be/notes/ambiguous-ampersands: in HTML, the\n\t\t// following is not strictly necessary unless it’s part of a tag or an\n\t\t// unquoted attribute value. We’re only escaping it to support those\n\t\t// situations, and for XML support.\n\t\t'>': '&gt;',\n\t\t// In Internet Explorer ≤ 8, the backtick character can be used\n\t\t// to break out of (un)quoted attribute values or HTML comments.\n\t\t// See http://html5sec.org/#102, http://html5sec.org/#108, and\n\t\t// http://html5sec.org/#133.\n\t\t'`': '&#x60;'\n\t};\n\n\tvar regexInvalidEntity = /&#(?:[xX][^a-fA-F0-9]|[^0-9xX])/;\n\tvar regexInvalidRawCodePoint = /[\\0-\\x08\\x0B\\x0E-\\x1F\\x7F-\\x9F\\uFDD0-\\uFDEF\\uFFFE\\uFFFF]|[\\uD83F\\uD87F\\uD8BF\\uD8FF\\uD93F\\uD97F\\uD9BF\\uD9FF\\uDA3F\\uDA7F\\uDABF\\uDAFF\\uDB3F\\uDB7F\\uDBBF\\uDBFF][\\uDFFE\\uDFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF]/;\n\tvar regexDecode = /&(CounterClockwiseContourIntegral|DoubleLongLeftRightArrow|ClockwiseContourIntegral|NotNestedGreaterGreater|NotSquareSupersetEqual|DiacriticalDoubleAcute|NotRightTriangleEqual|NotSucceedsSlantEqual|NotPrecedesSlantEqual|CloseCurlyDoubleQuote|NegativeVeryThinSpace|DoubleContourIntegral|FilledVerySmallSquare|CapitalDifferentialD|OpenCurlyDoubleQuote|EmptyVerySmallSquare|NestedGreaterGreater|DoubleLongRightArrow|NotLeftTriangleEqual|NotGreaterSlantEqual|ReverseUpEquilibrium|DoubleLeftRightArrow|NotSquareSubsetEqual|NotDoubleVerticalBar|RightArrowLeftArrow|NotGreaterFullEqual|NotRightTriangleBar|SquareSupersetEqual|DownLeftRightVector|DoubleLongLeftArrow|leftrightsquigarrow|LeftArrowRightArrow|NegativeMediumSpace|blacktriangleright|RightDownVectorBar|PrecedesSlantEqual|RightDoubleBracket|SucceedsSlantEqual|NotLeftTriangleBar|RightTriangleEqual|SquareIntersection|RightDownTeeVector|ReverseEquilibrium|NegativeThickSpace|longleftrightarrow|Longleftrightarrow|LongLeftRightArrow|DownRightTeeVector|DownRightVectorBar|GreaterSlantEqual|SquareSubsetEqual|LeftDownVectorBar|LeftDoubleBracket|VerticalSeparator|rightleftharpoons|NotGreaterGreater|NotSquareSuperset|blacktriangleleft|blacktriangledown|NegativeThinSpace|LeftDownTeeVector|NotLessSlantEqual|leftrightharpoons|DoubleUpDownArrow|DoubleVerticalBar|LeftTriangleEqual|FilledSmallSquare|twoheadrightarrow|NotNestedLessLess|DownLeftTeeVector|DownLeftVectorBar|RightAngleBracket|NotTildeFullEqual|NotReverseElement|RightUpDownVector|DiacriticalTilde|NotSucceedsTilde|circlearrowright|NotPrecedesEqual|rightharpoondown|DoubleRightArrow|NotSucceedsEqual|NonBreakingSpace|NotRightTriangle|LessEqualGreater|RightUpTeeVector|LeftAngleBracket|GreaterFullEqual|DownArrowUpArrow|RightUpVectorBar|twoheadleftarrow|GreaterEqualLess|downharpoonright|RightTriangleBar|ntrianglerighteq|NotSupersetEqual|LeftUpDownVector|DiacriticalAcute|rightrightarrows|vartriangleright|UpArrowDownArrow|DiacriticalGrave|UnderParenthesis|EmptySmallSquare|LeftUpVectorBar|leftrightarrows|DownRightVector|downharpoonleft|trianglerighteq|ShortRightArrow|OverParenthesis|DoubleLeftArrow|DoubleDownArrow|NotSquareSubset|bigtriangledown|ntrianglelefteq|UpperRightArrow|curvearrowright|vartriangleleft|NotLeftTriangle|nleftrightarrow|LowerRightArrow|NotHumpDownHump|NotGreaterTilde|rightthreetimes|LeftUpTeeVector|NotGreaterEqual|straightepsilon|LeftTriangleBar|rightsquigarrow|ContourIntegral|rightleftarrows|CloseCurlyQuote|RightDownVector|LeftRightVector|nLeftrightarrow|leftharpoondown|circlearrowleft|SquareSuperset|OpenCurlyQuote|hookrightarrow|HorizontalLine|DiacriticalDot|NotLessGreater|ntriangleright|DoubleRightTee|InvisibleComma|InvisibleTimes|LowerLeftArrow|DownLeftVector|NotSubsetEqual|curvearrowleft|trianglelefteq|NotVerticalBar|TildeFullEqual|downdownarrows|NotGreaterLess|RightTeeVector|ZeroWidthSpace|looparrowright|LongRightArrow|doublebarwedge|ShortLeftArrow|ShortDownArrow|RightVectorBar|GreaterGreater|ReverseElement|rightharpoonup|LessSlantEqual|leftthreetimes|upharpoonright|rightarrowtail|LeftDownVector|Longrightarrow|NestedLessLess|UpperLeftArrow|nshortparallel|leftleftarrows|leftrightarrow|Leftrightarrow|LeftRightArrow|longrightarrow|upharpoonleft|RightArrowBar|ApplyFunction|LeftTeeVector|leftarrowtail|NotEqualTilde|varsubsetneqq|varsupsetneqq|RightTeeArrow|SucceedsEqual|SucceedsTilde|LeftVectorBar|SupersetEqual|hookleftarrow|DifferentialD|VerticalTilde|VeryThinSpace|blacktriangle|bigtriangleup|LessFullEqual|divideontimes|leftharpoonup|UpEquilibrium|ntriangleleft|RightTriangle|measuredangle|shortparallel|longleftarrow|Longleftarrow|LongLeftArrow|DoubleLeftTee|Poincareplane|PrecedesEqual|triangleright|DoubleUpArrow|RightUpVector|fallingdotseq|looparrowleft|PrecedesTilde|NotTildeEqual|NotTildeTilde|smallsetminus|Proportional|triangleleft|triangledown|UnderBracket|NotHumpEqual|exponentiale|ExponentialE|NotLessTilde|HilbertSpace|RightCeiling|blacklozenge|varsupsetneq|HumpDownHump|GreaterEqual|VerticalLine|LeftTeeArrow|NotLessEqual|DownTeeArrow|LeftTriangle|varsubsetneq|Intersection|NotCongruent|DownArrowBar|LeftUpVector|LeftArrowBar|risingdotseq|GreaterTilde|RoundImplies|SquareSubset|ShortUpArrow|NotSuperset|quaternions|precnapprox|backepsilon|preccurlyeq|OverBracket|blacksquare|MediumSpace|VerticalBar|circledcirc|circleddash|CircleMinus|CircleTimes|LessGreater|curlyeqprec|curlyeqsucc|diamondsuit|UpDownArrow|Updownarrow|RuleDelayed|Rrightarrow|updownarrow|RightVector|nRightarrow|nrightarrow|eqslantless|LeftCeiling|Equilibrium|SmallCircle|expectation|NotSucceeds|thickapprox|GreaterLess|SquareUnion|NotPrecedes|NotLessLess|straightphi|succnapprox|succcurlyeq|SubsetEqual|sqsupseteq|Proportion|Laplacetrf|ImaginaryI|supsetneqq|NotGreater|gtreqqless|NotElement|ThickSpace|TildeEqual|TildeTilde|Fouriertrf|rmoustache|EqualTilde|eqslantgtr|UnderBrace|LeftVector|UpArrowBar|nLeftarrow|nsubseteqq|subsetneqq|nsupseteqq|nleftarrow|succapprox|lessapprox|UpTeeArrow|upuparrows|curlywedge|lesseqqgtr|varepsilon|varnothing|RightFloor|complement|CirclePlus|sqsubseteq|Lleftarrow|circledast|RightArrow|Rightarrow|rightarrow|lmoustache|Bernoullis|precapprox|mapstoleft|mapstodown|longmapsto|dotsquare|downarrow|DoubleDot|nsubseteq|supsetneq|leftarrow|nsupseteq|subsetneq|ThinSpace|ngeqslant|subseteqq|HumpEqual|NotSubset|triangleq|NotCupCap|lesseqgtr|heartsuit|TripleDot|Leftarrow|Coproduct|Congruent|varpropto|complexes|gvertneqq|LeftArrow|LessTilde|supseteqq|MinusPlus|CircleDot|nleqslant|NotExists|gtreqless|nparallel|UnionPlus|LeftFloor|checkmark|CenterDot|centerdot|Mellintrf|gtrapprox|bigotimes|OverBrace|spadesuit|therefore|pitchfork|rationals|PlusMinus|Backslash|Therefore|DownBreve|backsimeq|backprime|DownArrow|nshortmid|Downarrow|lvertneqq|eqvparsl|imagline|imagpart|infintie|integers|Integral|intercal|LessLess|Uarrocir|intlarhk|sqsupset|angmsdaf|sqsubset|llcorner|vartheta|cupbrcap|lnapprox|Superset|SuchThat|succnsim|succneqq|angmsdag|biguplus|curlyvee|trpezium|Succeeds|NotTilde|bigwedge|angmsdah|angrtvbd|triminus|cwconint|fpartint|lrcorner|smeparsl|subseteq|urcorner|lurdshar|laemptyv|DDotrahd|approxeq|ldrushar|awconint|mapstoup|backcong|shortmid|triangle|geqslant|gesdotol|timesbar|circledR|circledS|setminus|multimap|naturals|scpolint|ncongdot|RightTee|boxminus|gnapprox|boxtimes|andslope|thicksim|angmsdaa|varsigma|cirfnint|rtriltri|angmsdab|rppolint|angmsdac|barwedge|drbkarow|clubsuit|thetasym|bsolhsub|capbrcup|dzigrarr|doteqdot|DotEqual|dotminus|UnderBar|NotEqual|realpart|otimesas|ulcorner|hksearow|hkswarow|parallel|PartialD|elinters|emptyset|plusacir|bbrktbrk|angmsdad|pointint|bigoplus|angmsdae|Precedes|bigsqcup|varkappa|notindot|supseteq|precneqq|precnsim|profalar|profline|profsurf|leqslant|lesdotor|raemptyv|subplus|notnivb|notnivc|subrarr|zigrarr|vzigzag|submult|subedot|Element|between|cirscir|larrbfs|larrsim|lotimes|lbrksld|lbrkslu|lozenge|ldrdhar|dbkarow|bigcirc|epsilon|simrarr|simplus|ltquest|Epsilon|luruhar|gtquest|maltese|npolint|eqcolon|npreceq|bigodot|ddagger|gtrless|bnequiv|harrcir|ddotseq|equivDD|backsim|demptyv|nsqsube|nsqsupe|Upsilon|nsubset|upsilon|minusdu|nsucceq|swarrow|nsupset|coloneq|searrow|boxplus|napprox|natural|asympeq|alefsym|congdot|nearrow|bigstar|diamond|supplus|tritime|LeftTee|nvinfin|triplus|NewLine|nvltrie|nvrtrie|nwarrow|nexists|Diamond|ruluhar|Implies|supmult|angzarr|suplarr|suphsub|questeq|because|digamma|Because|olcross|bemptyv|omicron|Omicron|rotimes|NoBreak|intprod|angrtvb|orderof|uwangle|suphsol|lesdoto|orslope|DownTee|realine|cudarrl|rdldhar|OverBar|supedot|lessdot|supdsub|topfork|succsim|rbrkslu|rbrksld|pertenk|cudarrr|isindot|planckh|lessgtr|pluscir|gesdoto|plussim|plustwo|lesssim|cularrp|rarrsim|Cayleys|notinva|notinvb|notinvc|UpArrow|Uparrow|uparrow|NotLess|dwangle|precsim|Product|curarrm|Cconint|dotplus|rarrbfs|ccupssm|Cedilla|cemptyv|notniva|quatint|frac35|frac38|frac45|frac56|frac58|frac78|tridot|xoplus|gacute|gammad|Gammad|lfisht|lfloor|bigcup|sqsupe|gbreve|Gbreve|lharul|sqsube|sqcups|Gcedil|apacir|llhard|lmidot|Lmidot|lmoust|andand|sqcaps|approx|Abreve|spades|circeq|tprime|divide|topcir|Assign|topbot|gesdot|divonx|xuplus|timesd|gesles|atilde|solbar|SOFTcy|loplus|timesb|lowast|lowbar|dlcorn|dlcrop|softcy|dollar|lparlt|thksim|lrhard|Atilde|lsaquo|smashp|bigvee|thinsp|wreath|bkarow|lsquor|lstrok|Lstrok|lthree|ltimes|ltlarr|DotDot|simdot|ltrPar|weierp|xsqcup|angmsd|sigmav|sigmaf|zeetrf|Zcaron|zcaron|mapsto|vsupne|thetav|cirmid|marker|mcomma|Zacute|vsubnE|there4|gtlPar|vsubne|bottom|gtrarr|SHCHcy|shchcy|midast|midcir|middot|minusb|minusd|gtrdot|bowtie|sfrown|mnplus|models|colone|seswar|Colone|mstpos|searhk|gtrsim|nacute|Nacute|boxbox|telrec|hairsp|Tcedil|nbumpe|scnsim|ncaron|Ncaron|ncedil|Ncedil|hamilt|Scedil|nearhk|hardcy|HARDcy|tcedil|Tcaron|commat|nequiv|nesear|tcaron|target|hearts|nexist|varrho|scedil|Scaron|scaron|hellip|Sacute|sacute|hercon|swnwar|compfn|rtimes|rthree|rsquor|rsaquo|zacute|wedgeq|homtht|barvee|barwed|Barwed|rpargt|horbar|conint|swarhk|roplus|nltrie|hslash|hstrok|Hstrok|rmoust|Conint|bprime|hybull|hyphen|iacute|Iacute|supsup|supsub|supsim|varphi|coprod|brvbar|agrave|Supset|supset|igrave|Igrave|notinE|Agrave|iiiint|iinfin|copysr|wedbar|Verbar|vangrt|becaus|incare|verbar|inodot|bullet|drcorn|intcal|drcrop|cularr|vellip|Utilde|bumpeq|cupcap|dstrok|Dstrok|CupCap|cupcup|cupdot|eacute|Eacute|supdot|iquest|easter|ecaron|Ecaron|ecolon|isinsv|utilde|itilde|Itilde|curarr|succeq|Bumpeq|cacute|ulcrop|nparsl|Cacute|nprcue|egrave|Egrave|nrarrc|nrarrw|subsup|subsub|nrtrie|jsercy|nsccue|Jsercy|kappav|kcedil|Kcedil|subsim|ulcorn|nsimeq|egsdot|veebar|kgreen|capand|elsdot|Subset|subset|curren|aacute|lacute|Lacute|emptyv|ntilde|Ntilde|lagran|lambda|Lambda|capcap|Ugrave|langle|subdot|emsp13|numero|emsp14|nvdash|nvDash|nVdash|nVDash|ugrave|ufisht|nvHarr|larrfs|nvlArr|larrhk|larrlp|larrpl|nvrArr|Udblac|nwarhk|larrtl|nwnear|oacute|Oacute|latail|lAtail|sstarf|lbrace|odblac|Odblac|lbrack|udblac|odsold|eparsl|lcaron|Lcaron|ograve|Ograve|lcedil|Lcedil|Aacute|ssmile|ssetmn|squarf|ldquor|capcup|ominus|cylcty|rharul|eqcirc|dagger|rfloor|rfisht|Dagger|daleth|equals|origof|capdot|equest|dcaron|Dcaron|rdquor|oslash|Oslash|otilde|Otilde|otimes|Otimes|urcrop|Ubreve|ubreve|Yacute|Uacute|uacute|Rcedil|rcedil|urcorn|parsim|Rcaron|Vdashl|rcaron|Tstrok|percnt|period|permil|Exists|yacute|rbrack|rbrace|phmmat|ccaron|Ccaron|planck|ccedil|plankv|tstrok|female|plusdo|plusdu|ffilig|plusmn|ffllig|Ccedil|rAtail|dfisht|bernou|ratail|Rarrtl|rarrtl|angsph|rarrpl|rarrlp|rarrhk|xwedge|xotime|forall|ForAll|Vvdash|vsupnE|preceq|bigcap|frac12|frac13|frac14|primes|rarrfs|prnsim|frac15|Square|frac16|square|lesdot|frac18|frac23|propto|prurel|rarrap|rangle|puncsp|frac25|Racute|qprime|racute|lesges|frac34|abreve|AElig|eqsim|utdot|setmn|urtri|Equal|Uring|seArr|uring|searr|dashv|Dashv|mumap|nabla|iogon|Iogon|sdote|sdotb|scsim|napid|napos|equiv|natur|Acirc|dblac|erarr|nbump|iprod|erDot|ucirc|awint|esdot|angrt|ncong|isinE|scnap|Scirc|scirc|ndash|isins|Ubrcy|nearr|neArr|isinv|nedot|ubrcy|acute|Ycirc|iukcy|Iukcy|xutri|nesim|caret|jcirc|Jcirc|caron|twixt|ddarr|sccue|exist|jmath|sbquo|ngeqq|angst|ccaps|lceil|ngsim|UpTee|delta|Delta|rtrif|nharr|nhArr|nhpar|rtrie|jukcy|Jukcy|kappa|rsquo|Kappa|nlarr|nlArr|TSHcy|rrarr|aogon|Aogon|fflig|xrarr|tshcy|ccirc|nleqq|filig|upsih|nless|dharl|nlsim|fjlig|ropar|nltri|dharr|robrk|roarr|fllig|fltns|roang|rnmid|subnE|subne|lAarr|trisb|Ccirc|acirc|ccups|blank|VDash|forkv|Vdash|langd|cedil|blk12|blk14|laquo|strns|diams|notin|vDash|larrb|blk34|block|disin|uplus|vdash|vBarv|aelig|starf|Wedge|check|xrArr|lates|lbarr|lBarr|notni|lbbrk|bcong|frasl|lbrke|frown|vrtri|vprop|vnsup|gamma|Gamma|wedge|xodot|bdquo|srarr|doteq|ldquo|boxdl|boxdL|gcirc|Gcirc|boxDl|boxDL|boxdr|boxdR|boxDr|TRADE|trade|rlhar|boxDR|vnsub|npart|vltri|rlarr|boxhd|boxhD|nprec|gescc|nrarr|nrArr|boxHd|boxHD|boxhu|boxhU|nrtri|boxHu|clubs|boxHU|times|colon|Colon|gimel|xlArr|Tilde|nsime|tilde|nsmid|nspar|THORN|thorn|xlarr|nsube|nsubE|thkap|xhArr|comma|nsucc|boxul|boxuL|nsupe|nsupE|gneqq|gnsim|boxUl|boxUL|grave|boxur|boxuR|boxUr|boxUR|lescc|angle|bepsi|boxvh|varpi|boxvH|numsp|Theta|gsime|gsiml|theta|boxVh|boxVH|boxvl|gtcir|gtdot|boxvL|boxVl|boxVL|crarr|cross|Cross|nvsim|boxvr|nwarr|nwArr|sqsup|dtdot|Uogon|lhard|lharu|dtrif|ocirc|Ocirc|lhblk|duarr|odash|sqsub|Hacek|sqcup|llarr|duhar|oelig|OElig|ofcir|boxvR|uogon|lltri|boxVr|csube|uuarr|ohbar|csupe|ctdot|olarr|olcir|harrw|oline|sqcap|omacr|Omacr|omega|Omega|boxVR|aleph|lneqq|lnsim|loang|loarr|rharu|lobrk|hcirc|operp|oplus|rhard|Hcirc|orarr|Union|order|ecirc|Ecirc|cuepr|szlig|cuesc|breve|reals|eDDot|Breve|hoarr|lopar|utrif|rdquo|Umacr|umacr|efDot|swArr|ultri|alpha|rceil|ovbar|swarr|Wcirc|wcirc|smtes|smile|bsemi|lrarr|aring|parsl|lrhar|bsime|uhblk|lrtri|cupor|Aring|uharr|uharl|slarr|rbrke|bsolb|lsime|rbbrk|RBarr|lsimg|phone|rBarr|rbarr|icirc|lsquo|Icirc|emacr|Emacr|ratio|simne|plusb|simlE|simgE|simeq|pluse|ltcir|ltdot|empty|xharr|xdtri|iexcl|Alpha|ltrie|rarrw|pound|ltrif|xcirc|bumpe|prcue|bumpE|asymp|amacr|cuvee|Sigma|sigma|iiint|udhar|iiota|ijlig|IJlig|supnE|imacr|Imacr|prime|Prime|image|prnap|eogon|Eogon|rarrc|mdash|mDDot|cuwed|imath|supne|imped|Amacr|udarr|prsim|micro|rarrb|cwint|raquo|infin|eplus|range|rangd|Ucirc|radic|minus|amalg|veeeq|rAarr|epsiv|ycirc|quest|sharp|quot|zwnj|Qscr|race|qscr|Qopf|qopf|qint|rang|Rang|Zscr|zscr|Zopf|zopf|rarr|rArr|Rarr|Pscr|pscr|prop|prod|prnE|prec|ZHcy|zhcy|prap|Zeta|zeta|Popf|popf|Zdot|plus|zdot|Yuml|yuml|phiv|YUcy|yucy|Yscr|yscr|perp|Yopf|yopf|part|para|YIcy|Ouml|rcub|yicy|YAcy|rdca|ouml|osol|Oscr|rdsh|yacy|real|oscr|xvee|andd|rect|andv|Xscr|oror|ordm|ordf|xscr|ange|aopf|Aopf|rHar|Xopf|opar|Oopf|xopf|xnis|rhov|oopf|omid|xmap|oint|apid|apos|ogon|ascr|Ascr|odot|odiv|xcup|xcap|ocir|oast|nvlt|nvle|nvgt|nvge|nvap|Wscr|wscr|auml|ntlg|ntgl|nsup|nsub|nsim|Nscr|nscr|nsce|Wopf|ring|npre|wopf|npar|Auml|Barv|bbrk|Nopf|nopf|nmid|nLtv|beta|ropf|Ropf|Beta|beth|nles|rpar|nleq|bnot|bNot|nldr|NJcy|rscr|Rscr|Vscr|vscr|rsqb|njcy|bopf|nisd|Bopf|rtri|Vopf|nGtv|ngtr|vopf|boxh|boxH|boxv|nges|ngeq|boxV|bscr|scap|Bscr|bsim|Vert|vert|bsol|bull|bump|caps|cdot|ncup|scnE|ncap|nbsp|napE|Cdot|cent|sdot|Vbar|nang|vBar|chcy|Mscr|mscr|sect|semi|CHcy|Mopf|mopf|sext|circ|cire|mldr|mlcp|cirE|comp|shcy|SHcy|vArr|varr|cong|copf|Copf|copy|COPY|malt|male|macr|lvnE|cscr|ltri|sime|ltcc|simg|Cscr|siml|csub|Uuml|lsqb|lsim|uuml|csup|Lscr|lscr|utri|smid|lpar|cups|smte|lozf|darr|Lopf|Uscr|solb|lopf|sopf|Sopf|lneq|uscr|spar|dArr|lnap|Darr|dash|Sqrt|LJcy|ljcy|lHar|dHar|Upsi|upsi|diam|lesg|djcy|DJcy|leqq|dopf|Dopf|dscr|Dscr|dscy|ldsh|ldca|squf|DScy|sscr|Sscr|dsol|lcub|late|star|Star|Uopf|Larr|lArr|larr|uopf|dtri|dzcy|sube|subE|Lang|lang|Kscr|kscr|Kopf|kopf|KJcy|kjcy|KHcy|khcy|DZcy|ecir|edot|eDot|Jscr|jscr|succ|Jopf|jopf|Edot|uHar|emsp|ensp|Iuml|iuml|eopf|isin|Iscr|iscr|Eopf|epar|sung|epsi|escr|sup1|sup2|sup3|Iota|iota|supe|supE|Iopf|iopf|IOcy|iocy|Escr|esim|Esim|imof|Uarr|QUOT|uArr|uarr|euml|IEcy|iecy|Idot|Euml|euro|excl|Hscr|hscr|Hopf|hopf|TScy|tscy|Tscr|hbar|tscr|flat|tbrk|fnof|hArr|harr|half|fopf|Fopf|tdot|gvnE|fork|trie|gtcc|fscr|Fscr|gdot|gsim|Gscr|gscr|Gopf|gopf|gneq|Gdot|tosa|gnap|Topf|topf|geqq|toea|GJcy|gjcy|tint|gesl|mid|Sfr|ggg|top|ges|gla|glE|glj|geq|gne|gEl|gel|gnE|Gcy|gcy|gap|Tfr|tfr|Tcy|tcy|Hat|Tau|Ffr|tau|Tab|hfr|Hfr|ffr|Fcy|fcy|icy|Icy|iff|ETH|eth|ifr|Ifr|Eta|eta|int|Int|Sup|sup|ucy|Ucy|Sum|sum|jcy|ENG|ufr|Ufr|eng|Jcy|jfr|els|ell|egs|Efr|efr|Jfr|uml|kcy|Kcy|Ecy|ecy|kfr|Kfr|lap|Sub|sub|lat|lcy|Lcy|leg|Dot|dot|lEg|leq|les|squ|div|die|lfr|Lfr|lgE|Dfr|dfr|Del|deg|Dcy|dcy|lne|lnE|sol|loz|smt|Cup|lrm|cup|lsh|Lsh|sim|shy|map|Map|mcy|Mcy|mfr|Mfr|mho|gfr|Gfr|sfr|cir|Chi|chi|nap|Cfr|vcy|Vcy|cfr|Scy|scy|ncy|Ncy|vee|Vee|Cap|cap|nfr|scE|sce|Nfr|nge|ngE|nGg|vfr|Vfr|ngt|bot|nGt|nis|niv|Rsh|rsh|nle|nlE|bne|Bfr|bfr|nLl|nlt|nLt|Bcy|bcy|not|Not|rlm|wfr|Wfr|npr|nsc|num|ocy|ast|Ocy|ofr|xfr|Xfr|Ofr|ogt|ohm|apE|olt|Rho|ape|rho|Rfr|rfr|ord|REG|ang|reg|orv|And|and|AMP|Rcy|amp|Afr|ycy|Ycy|yen|yfr|Yfr|rcy|par|pcy|Pcy|pfr|Pfr|phi|Phi|afr|Acy|acy|zcy|Zcy|piv|acE|acd|zfr|Zfr|pre|prE|psi|Psi|qfr|Qfr|zwj|Or|ge|Gg|gt|gg|el|oS|lt|Lt|LT|Re|lg|gl|eg|ne|Im|it|le|DD|wp|wr|nu|Nu|dd|lE|Sc|sc|pi|Pi|ee|af|ll|Ll|rx|gE|xi|pm|Xi|ic|pr|Pr|in|ni|mp|mu|ac|Mu|or|ap|Gt|GT|ii);|&(Aacute|Agrave|Atilde|Ccedil|Eacute|Egrave|Iacute|Igrave|Ntilde|Oacute|Ograve|Oslash|Otilde|Uacute|Ugrave|Yacute|aacute|agrave|atilde|brvbar|ccedil|curren|divide|eacute|egrave|frac12|frac14|frac34|iacute|igrave|iquest|middot|ntilde|oacute|ograve|oslash|otilde|plusmn|uacute|ugrave|yacute|AElig|Acirc|Aring|Ecirc|Icirc|Ocirc|THORN|Ucirc|acirc|acute|aelig|aring|cedil|ecirc|icirc|iexcl|laquo|micro|ocirc|pound|raquo|szlig|thorn|times|ucirc|Auml|COPY|Euml|Iuml|Ouml|QUOT|Uuml|auml|cent|copy|euml|iuml|macr|nbsp|ordf|ordm|ouml|para|quot|sect|sup1|sup2|sup3|uuml|yuml|AMP|ETH|REG|amp|deg|eth|not|reg|shy|uml|yen|GT|LT|gt|lt)(?!;)([=a-zA-Z0-9]?)|&#([0-9]+)(;?)|&#[xX]([a-fA-F0-9]+)(;?)|&([0-9a-zA-Z]+)/g;\n\tvar decodeMap = {'aacute':'\\xE1','Aacute':'\\xC1','abreve':'\\u0103','Abreve':'\\u0102','ac':'\\u223E','acd':'\\u223F','acE':'\\u223E\\u0333','acirc':'\\xE2','Acirc':'\\xC2','acute':'\\xB4','acy':'\\u0430','Acy':'\\u0410','aelig':'\\xE6','AElig':'\\xC6','af':'\\u2061','afr':'\\uD835\\uDD1E','Afr':'\\uD835\\uDD04','agrave':'\\xE0','Agrave':'\\xC0','alefsym':'\\u2135','aleph':'\\u2135','alpha':'\\u03B1','Alpha':'\\u0391','amacr':'\\u0101','Amacr':'\\u0100','amalg':'\\u2A3F','amp':'&','AMP':'&','and':'\\u2227','And':'\\u2A53','andand':'\\u2A55','andd':'\\u2A5C','andslope':'\\u2A58','andv':'\\u2A5A','ang':'\\u2220','ange':'\\u29A4','angle':'\\u2220','angmsd':'\\u2221','angmsdaa':'\\u29A8','angmsdab':'\\u29A9','angmsdac':'\\u29AA','angmsdad':'\\u29AB','angmsdae':'\\u29AC','angmsdaf':'\\u29AD','angmsdag':'\\u29AE','angmsdah':'\\u29AF','angrt':'\\u221F','angrtvb':'\\u22BE','angrtvbd':'\\u299D','angsph':'\\u2222','angst':'\\xC5','angzarr':'\\u237C','aogon':'\\u0105','Aogon':'\\u0104','aopf':'\\uD835\\uDD52','Aopf':'\\uD835\\uDD38','ap':'\\u2248','apacir':'\\u2A6F','ape':'\\u224A','apE':'\\u2A70','apid':'\\u224B','apos':'\\'','ApplyFunction':'\\u2061','approx':'\\u2248','approxeq':'\\u224A','aring':'\\xE5','Aring':'\\xC5','ascr':'\\uD835\\uDCB6','Ascr':'\\uD835\\uDC9C','Assign':'\\u2254','ast':'*','asymp':'\\u2248','asympeq':'\\u224D','atilde':'\\xE3','Atilde':'\\xC3','auml':'\\xE4','Auml':'\\xC4','awconint':'\\u2233','awint':'\\u2A11','backcong':'\\u224C','backepsilon':'\\u03F6','backprime':'\\u2035','backsim':'\\u223D','backsimeq':'\\u22CD','Backslash':'\\u2216','Barv':'\\u2AE7','barvee':'\\u22BD','barwed':'\\u2305','Barwed':'\\u2306','barwedge':'\\u2305','bbrk':'\\u23B5','bbrktbrk':'\\u23B6','bcong':'\\u224C','bcy':'\\u0431','Bcy':'\\u0411','bdquo':'\\u201E','becaus':'\\u2235','because':'\\u2235','Because':'\\u2235','bemptyv':'\\u29B0','bepsi':'\\u03F6','bernou':'\\u212C','Bernoullis':'\\u212C','beta':'\\u03B2','Beta':'\\u0392','beth':'\\u2136','between':'\\u226C','bfr':'\\uD835\\uDD1F','Bfr':'\\uD835\\uDD05','bigcap':'\\u22C2','bigcirc':'\\u25EF','bigcup':'\\u22C3','bigodot':'\\u2A00','bigoplus':'\\u2A01','bigotimes':'\\u2A02','bigsqcup':'\\u2A06','bigstar':'\\u2605','bigtriangledown':'\\u25BD','bigtriangleup':'\\u25B3','biguplus':'\\u2A04','bigvee':'\\u22C1','bigwedge':'\\u22C0','bkarow':'\\u290D','blacklozenge':'\\u29EB','blacksquare':'\\u25AA','blacktriangle':'\\u25B4','blacktriangledown':'\\u25BE','blacktriangleleft':'\\u25C2','blacktriangleright':'\\u25B8','blank':'\\u2423','blk12':'\\u2592','blk14':'\\u2591','blk34':'\\u2593','block':'\\u2588','bne':'=\\u20E5','bnequiv':'\\u2261\\u20E5','bnot':'\\u2310','bNot':'\\u2AED','bopf':'\\uD835\\uDD53','Bopf':'\\uD835\\uDD39','bot':'\\u22A5','bottom':'\\u22A5','bowtie':'\\u22C8','boxbox':'\\u29C9','boxdl':'\\u2510','boxdL':'\\u2555','boxDl':'\\u2556','boxDL':'\\u2557','boxdr':'\\u250C','boxdR':'\\u2552','boxDr':'\\u2553','boxDR':'\\u2554','boxh':'\\u2500','boxH':'\\u2550','boxhd':'\\u252C','boxhD':'\\u2565','boxHd':'\\u2564','boxHD':'\\u2566','boxhu':'\\u2534','boxhU':'\\u2568','boxHu':'\\u2567','boxHU':'\\u2569','boxminus':'\\u229F','boxplus':'\\u229E','boxtimes':'\\u22A0','boxul':'\\u2518','boxuL':'\\u255B','boxUl':'\\u255C','boxUL':'\\u255D','boxur':'\\u2514','boxuR':'\\u2558','boxUr':'\\u2559','boxUR':'\\u255A','boxv':'\\u2502','boxV':'\\u2551','boxvh':'\\u253C','boxvH':'\\u256A','boxVh':'\\u256B','boxVH':'\\u256C','boxvl':'\\u2524','boxvL':'\\u2561','boxVl':'\\u2562','boxVL':'\\u2563','boxvr':'\\u251C','boxvR':'\\u255E','boxVr':'\\u255F','boxVR':'\\u2560','bprime':'\\u2035','breve':'\\u02D8','Breve':'\\u02D8','brvbar':'\\xA6','bscr':'\\uD835\\uDCB7','Bscr':'\\u212C','bsemi':'\\u204F','bsim':'\\u223D','bsime':'\\u22CD','bsol':'\\\\','bsolb':'\\u29C5','bsolhsub':'\\u27C8','bull':'\\u2022','bullet':'\\u2022','bump':'\\u224E','bumpe':'\\u224F','bumpE':'\\u2AAE','bumpeq':'\\u224F','Bumpeq':'\\u224E','cacute':'\\u0107','Cacute':'\\u0106','cap':'\\u2229','Cap':'\\u22D2','capand':'\\u2A44','capbrcup':'\\u2A49','capcap':'\\u2A4B','capcup':'\\u2A47','capdot':'\\u2A40','CapitalDifferentialD':'\\u2145','caps':'\\u2229\\uFE00','caret':'\\u2041','caron':'\\u02C7','Cayleys':'\\u212D','ccaps':'\\u2A4D','ccaron':'\\u010D','Ccaron':'\\u010C','ccedil':'\\xE7','Ccedil':'\\xC7','ccirc':'\\u0109','Ccirc':'\\u0108','Cconint':'\\u2230','ccups':'\\u2A4C','ccupssm':'\\u2A50','cdot':'\\u010B','Cdot':'\\u010A','cedil':'\\xB8','Cedilla':'\\xB8','cemptyv':'\\u29B2','cent':'\\xA2','centerdot':'\\xB7','CenterDot':'\\xB7','cfr':'\\uD835\\uDD20','Cfr':'\\u212D','chcy':'\\u0447','CHcy':'\\u0427','check':'\\u2713','checkmark':'\\u2713','chi':'\\u03C7','Chi':'\\u03A7','cir':'\\u25CB','circ':'\\u02C6','circeq':'\\u2257','circlearrowleft':'\\u21BA','circlearrowright':'\\u21BB','circledast':'\\u229B','circledcirc':'\\u229A','circleddash':'\\u229D','CircleDot':'\\u2299','circledR':'\\xAE','circledS':'\\u24C8','CircleMinus':'\\u2296','CirclePlus':'\\u2295','CircleTimes':'\\u2297','cire':'\\u2257','cirE':'\\u29C3','cirfnint':'\\u2A10','cirmid':'\\u2AEF','cirscir':'\\u29C2','ClockwiseContourIntegral':'\\u2232','CloseCurlyDoubleQuote':'\\u201D','CloseCurlyQuote':'\\u2019','clubs':'\\u2663','clubsuit':'\\u2663','colon':':','Colon':'\\u2237','colone':'\\u2254','Colone':'\\u2A74','coloneq':'\\u2254','comma':',','commat':'@','comp':'\\u2201','compfn':'\\u2218','complement':'\\u2201','complexes':'\\u2102','cong':'\\u2245','congdot':'\\u2A6D','Congruent':'\\u2261','conint':'\\u222E','Conint':'\\u222F','ContourIntegral':'\\u222E','copf':'\\uD835\\uDD54','Copf':'\\u2102','coprod':'\\u2210','Coproduct':'\\u2210','copy':'\\xA9','COPY':'\\xA9','copysr':'\\u2117','CounterClockwiseContourIntegral':'\\u2233','crarr':'\\u21B5','cross':'\\u2717','Cross':'\\u2A2F','cscr':'\\uD835\\uDCB8','Cscr':'\\uD835\\uDC9E','csub':'\\u2ACF','csube':'\\u2AD1','csup':'\\u2AD0','csupe':'\\u2AD2','ctdot':'\\u22EF','cudarrl':'\\u2938','cudarrr':'\\u2935','cuepr':'\\u22DE','cuesc':'\\u22DF','cularr':'\\u21B6','cularrp':'\\u293D','cup':'\\u222A','Cup':'\\u22D3','cupbrcap':'\\u2A48','cupcap':'\\u2A46','CupCap':'\\u224D','cupcup':'\\u2A4A','cupdot':'\\u228D','cupor':'\\u2A45','cups':'\\u222A\\uFE00','curarr':'\\u21B7','curarrm':'\\u293C','curlyeqprec':'\\u22DE','curlyeqsucc':'\\u22DF','curlyvee':'\\u22CE','curlywedge':'\\u22CF','curren':'\\xA4','curvearrowleft':'\\u21B6','curvearrowright':'\\u21B7','cuvee':'\\u22CE','cuwed':'\\u22CF','cwconint':'\\u2232','cwint':'\\u2231','cylcty':'\\u232D','dagger':'\\u2020','Dagger':'\\u2021','daleth':'\\u2138','darr':'\\u2193','dArr':'\\u21D3','Darr':'\\u21A1','dash':'\\u2010','dashv':'\\u22A3','Dashv':'\\u2AE4','dbkarow':'\\u290F','dblac':'\\u02DD','dcaron':'\\u010F','Dcaron':'\\u010E','dcy':'\\u0434','Dcy':'\\u0414','dd':'\\u2146','DD':'\\u2145','ddagger':'\\u2021','ddarr':'\\u21CA','DDotrahd':'\\u2911','ddotseq':'\\u2A77','deg':'\\xB0','Del':'\\u2207','delta':'\\u03B4','Delta':'\\u0394','demptyv':'\\u29B1','dfisht':'\\u297F','dfr':'\\uD835\\uDD21','Dfr':'\\uD835\\uDD07','dHar':'\\u2965','dharl':'\\u21C3','dharr':'\\u21C2','DiacriticalAcute':'\\xB4','DiacriticalDot':'\\u02D9','DiacriticalDoubleAcute':'\\u02DD','DiacriticalGrave':'`','DiacriticalTilde':'\\u02DC','diam':'\\u22C4','diamond':'\\u22C4','Diamond':'\\u22C4','diamondsuit':'\\u2666','diams':'\\u2666','die':'\\xA8','DifferentialD':'\\u2146','digamma':'\\u03DD','disin':'\\u22F2','div':'\\xF7','divide':'\\xF7','divideontimes':'\\u22C7','divonx':'\\u22C7','djcy':'\\u0452','DJcy':'\\u0402','dlcorn':'\\u231E','dlcrop':'\\u230D','dollar':'$','dopf':'\\uD835\\uDD55','Dopf':'\\uD835\\uDD3B','dot':'\\u02D9','Dot':'\\xA8','DotDot':'\\u20DC','doteq':'\\u2250','doteqdot':'\\u2251','DotEqual':'\\u2250','dotminus':'\\u2238','dotplus':'\\u2214','dotsquare':'\\u22A1','doublebarwedge':'\\u2306','DoubleContourIntegral':'\\u222F','DoubleDot':'\\xA8','DoubleDownArrow':'\\u21D3','DoubleLeftArrow':'\\u21D0','DoubleLeftRightArrow':'\\u21D4','DoubleLeftTee':'\\u2AE4','DoubleLongLeftArrow':'\\u27F8','DoubleLongLeftRightArrow':'\\u27FA','DoubleLongRightArrow':'\\u27F9','DoubleRightArrow':'\\u21D2','DoubleRightTee':'\\u22A8','DoubleUpArrow':'\\u21D1','DoubleUpDownArrow':'\\u21D5','DoubleVerticalBar':'\\u2225','downarrow':'\\u2193','Downarrow':'\\u21D3','DownArrow':'\\u2193','DownArrowBar':'\\u2913','DownArrowUpArrow':'\\u21F5','DownBreve':'\\u0311','downdownarrows':'\\u21CA','downharpoonleft':'\\u21C3','downharpoonright':'\\u21C2','DownLeftRightVector':'\\u2950','DownLeftTeeVector':'\\u295E','DownLeftVector':'\\u21BD','DownLeftVectorBar':'\\u2956','DownRightTeeVector':'\\u295F','DownRightVector':'\\u21C1','DownRightVectorBar':'\\u2957','DownTee':'\\u22A4','DownTeeArrow':'\\u21A7','drbkarow':'\\u2910','drcorn':'\\u231F','drcrop':'\\u230C','dscr':'\\uD835\\uDCB9','Dscr':'\\uD835\\uDC9F','dscy':'\\u0455','DScy':'\\u0405','dsol':'\\u29F6','dstrok':'\\u0111','Dstrok':'\\u0110','dtdot':'\\u22F1','dtri':'\\u25BF','dtrif':'\\u25BE','duarr':'\\u21F5','duhar':'\\u296F','dwangle':'\\u29A6','dzcy':'\\u045F','DZcy':'\\u040F','dzigrarr':'\\u27FF','eacute':'\\xE9','Eacute':'\\xC9','easter':'\\u2A6E','ecaron':'\\u011B','Ecaron':'\\u011A','ecir':'\\u2256','ecirc':'\\xEA','Ecirc':'\\xCA','ecolon':'\\u2255','ecy':'\\u044D','Ecy':'\\u042D','eDDot':'\\u2A77','edot':'\\u0117','eDot':'\\u2251','Edot':'\\u0116','ee':'\\u2147','efDot':'\\u2252','efr':'\\uD835\\uDD22','Efr':'\\uD835\\uDD08','eg':'\\u2A9A','egrave':'\\xE8','Egrave':'\\xC8','egs':'\\u2A96','egsdot':'\\u2A98','el':'\\u2A99','Element':'\\u2208','elinters':'\\u23E7','ell':'\\u2113','els':'\\u2A95','elsdot':'\\u2A97','emacr':'\\u0113','Emacr':'\\u0112','empty':'\\u2205','emptyset':'\\u2205','EmptySmallSquare':'\\u25FB','emptyv':'\\u2205','EmptyVerySmallSquare':'\\u25AB','emsp':'\\u2003','emsp13':'\\u2004','emsp14':'\\u2005','eng':'\\u014B','ENG':'\\u014A','ensp':'\\u2002','eogon':'\\u0119','Eogon':'\\u0118','eopf':'\\uD835\\uDD56','Eopf':'\\uD835\\uDD3C','epar':'\\u22D5','eparsl':'\\u29E3','eplus':'\\u2A71','epsi':'\\u03B5','epsilon':'\\u03B5','Epsilon':'\\u0395','epsiv':'\\u03F5','eqcirc':'\\u2256','eqcolon':'\\u2255','eqsim':'\\u2242','eqslantgtr':'\\u2A96','eqslantless':'\\u2A95','Equal':'\\u2A75','equals':'=','EqualTilde':'\\u2242','equest':'\\u225F','Equilibrium':'\\u21CC','equiv':'\\u2261','equivDD':'\\u2A78','eqvparsl':'\\u29E5','erarr':'\\u2971','erDot':'\\u2253','escr':'\\u212F','Escr':'\\u2130','esdot':'\\u2250','esim':'\\u2242','Esim':'\\u2A73','eta':'\\u03B7','Eta':'\\u0397','eth':'\\xF0','ETH':'\\xD0','euml':'\\xEB','Euml':'\\xCB','euro':'\\u20AC','excl':'!','exist':'\\u2203','Exists':'\\u2203','expectation':'\\u2130','exponentiale':'\\u2147','ExponentialE':'\\u2147','fallingdotseq':'\\u2252','fcy':'\\u0444','Fcy':'\\u0424','female':'\\u2640','ffilig':'\\uFB03','fflig':'\\uFB00','ffllig':'\\uFB04','ffr':'\\uD835\\uDD23','Ffr':'\\uD835\\uDD09','filig':'\\uFB01','FilledSmallSquare':'\\u25FC','FilledVerySmallSquare':'\\u25AA','fjlig':'fj','flat':'\\u266D','fllig':'\\uFB02','fltns':'\\u25B1','fnof':'\\u0192','fopf':'\\uD835\\uDD57','Fopf':'\\uD835\\uDD3D','forall':'\\u2200','ForAll':'\\u2200','fork':'\\u22D4','forkv':'\\u2AD9','Fouriertrf':'\\u2131','fpartint':'\\u2A0D','frac12':'\\xBD','frac13':'\\u2153','frac14':'\\xBC','frac15':'\\u2155','frac16':'\\u2159','frac18':'\\u215B','frac23':'\\u2154','frac25':'\\u2156','frac34':'\\xBE','frac35':'\\u2157','frac38':'\\u215C','frac45':'\\u2158','frac56':'\\u215A','frac58':'\\u215D','frac78':'\\u215E','frasl':'\\u2044','frown':'\\u2322','fscr':'\\uD835\\uDCBB','Fscr':'\\u2131','gacute':'\\u01F5','gamma':'\\u03B3','Gamma':'\\u0393','gammad':'\\u03DD','Gammad':'\\u03DC','gap':'\\u2A86','gbreve':'\\u011F','Gbreve':'\\u011E','Gcedil':'\\u0122','gcirc':'\\u011D','Gcirc':'\\u011C','gcy':'\\u0433','Gcy':'\\u0413','gdot':'\\u0121','Gdot':'\\u0120','ge':'\\u2265','gE':'\\u2267','gel':'\\u22DB','gEl':'\\u2A8C','geq':'\\u2265','geqq':'\\u2267','geqslant':'\\u2A7E','ges':'\\u2A7E','gescc':'\\u2AA9','gesdot':'\\u2A80','gesdoto':'\\u2A82','gesdotol':'\\u2A84','gesl':'\\u22DB\\uFE00','gesles':'\\u2A94','gfr':'\\uD835\\uDD24','Gfr':'\\uD835\\uDD0A','gg':'\\u226B','Gg':'\\u22D9','ggg':'\\u22D9','gimel':'\\u2137','gjcy':'\\u0453','GJcy':'\\u0403','gl':'\\u2277','gla':'\\u2AA5','glE':'\\u2A92','glj':'\\u2AA4','gnap':'\\u2A8A','gnapprox':'\\u2A8A','gne':'\\u2A88','gnE':'\\u2269','gneq':'\\u2A88','gneqq':'\\u2269','gnsim':'\\u22E7','gopf':'\\uD835\\uDD58','Gopf':'\\uD835\\uDD3E','grave':'`','GreaterEqual':'\\u2265','GreaterEqualLess':'\\u22DB','GreaterFullEqual':'\\u2267','GreaterGreater':'\\u2AA2','GreaterLess':'\\u2277','GreaterSlantEqual':'\\u2A7E','GreaterTilde':'\\u2273','gscr':'\\u210A','Gscr':'\\uD835\\uDCA2','gsim':'\\u2273','gsime':'\\u2A8E','gsiml':'\\u2A90','gt':'>','Gt':'\\u226B','GT':'>','gtcc':'\\u2AA7','gtcir':'\\u2A7A','gtdot':'\\u22D7','gtlPar':'\\u2995','gtquest':'\\u2A7C','gtrapprox':'\\u2A86','gtrarr':'\\u2978','gtrdot':'\\u22D7','gtreqless':'\\u22DB','gtreqqless':'\\u2A8C','gtrless':'\\u2277','gtrsim':'\\u2273','gvertneqq':'\\u2269\\uFE00','gvnE':'\\u2269\\uFE00','Hacek':'\\u02C7','hairsp':'\\u200A','half':'\\xBD','hamilt':'\\u210B','hardcy':'\\u044A','HARDcy':'\\u042A','harr':'\\u2194','hArr':'\\u21D4','harrcir':'\\u2948','harrw':'\\u21AD','Hat':'^','hbar':'\\u210F','hcirc':'\\u0125','Hcirc':'\\u0124','hearts':'\\u2665','heartsuit':'\\u2665','hellip':'\\u2026','hercon':'\\u22B9','hfr':'\\uD835\\uDD25','Hfr':'\\u210C','HilbertSpace':'\\u210B','hksearow':'\\u2925','hkswarow':'\\u2926','hoarr':'\\u21FF','homtht':'\\u223B','hookleftarrow':'\\u21A9','hookrightarrow':'\\u21AA','hopf':'\\uD835\\uDD59','Hopf':'\\u210D','horbar':'\\u2015','HorizontalLine':'\\u2500','hscr':'\\uD835\\uDCBD','Hscr':'\\u210B','hslash':'\\u210F','hstrok':'\\u0127','Hstrok':'\\u0126','HumpDownHump':'\\u224E','HumpEqual':'\\u224F','hybull':'\\u2043','hyphen':'\\u2010','iacute':'\\xED','Iacute':'\\xCD','ic':'\\u2063','icirc':'\\xEE','Icirc':'\\xCE','icy':'\\u0438','Icy':'\\u0418','Idot':'\\u0130','iecy':'\\u0435','IEcy':'\\u0415','iexcl':'\\xA1','iff':'\\u21D4','ifr':'\\uD835\\uDD26','Ifr':'\\u2111','igrave':'\\xEC','Igrave':'\\xCC','ii':'\\u2148','iiiint':'\\u2A0C','iiint':'\\u222D','iinfin':'\\u29DC','iiota':'\\u2129','ijlig':'\\u0133','IJlig':'\\u0132','Im':'\\u2111','imacr':'\\u012B','Imacr':'\\u012A','image':'\\u2111','ImaginaryI':'\\u2148','imagline':'\\u2110','imagpart':'\\u2111','imath':'\\u0131','imof':'\\u22B7','imped':'\\u01B5','Implies':'\\u21D2','in':'\\u2208','incare':'\\u2105','infin':'\\u221E','infintie':'\\u29DD','inodot':'\\u0131','int':'\\u222B','Int':'\\u222C','intcal':'\\u22BA','integers':'\\u2124','Integral':'\\u222B','intercal':'\\u22BA','Intersection':'\\u22C2','intlarhk':'\\u2A17','intprod':'\\u2A3C','InvisibleComma':'\\u2063','InvisibleTimes':'\\u2062','iocy':'\\u0451','IOcy':'\\u0401','iogon':'\\u012F','Iogon':'\\u012E','iopf':'\\uD835\\uDD5A','Iopf':'\\uD835\\uDD40','iota':'\\u03B9','Iota':'\\u0399','iprod':'\\u2A3C','iquest':'\\xBF','iscr':'\\uD835\\uDCBE','Iscr':'\\u2110','isin':'\\u2208','isindot':'\\u22F5','isinE':'\\u22F9','isins':'\\u22F4','isinsv':'\\u22F3','isinv':'\\u2208','it':'\\u2062','itilde':'\\u0129','Itilde':'\\u0128','iukcy':'\\u0456','Iukcy':'\\u0406','iuml':'\\xEF','Iuml':'\\xCF','jcirc':'\\u0135','Jcirc':'\\u0134','jcy':'\\u0439','Jcy':'\\u0419','jfr':'\\uD835\\uDD27','Jfr':'\\uD835\\uDD0D','jmath':'\\u0237','jopf':'\\uD835\\uDD5B','Jopf':'\\uD835\\uDD41','jscr':'\\uD835\\uDCBF','Jscr':'\\uD835\\uDCA5','jsercy':'\\u0458','Jsercy':'\\u0408','jukcy':'\\u0454','Jukcy':'\\u0404','kappa':'\\u03BA','Kappa':'\\u039A','kappav':'\\u03F0','kcedil':'\\u0137','Kcedil':'\\u0136','kcy':'\\u043A','Kcy':'\\u041A','kfr':'\\uD835\\uDD28','Kfr':'\\uD835\\uDD0E','kgreen':'\\u0138','khcy':'\\u0445','KHcy':'\\u0425','kjcy':'\\u045C','KJcy':'\\u040C','kopf':'\\uD835\\uDD5C','Kopf':'\\uD835\\uDD42','kscr':'\\uD835\\uDCC0','Kscr':'\\uD835\\uDCA6','lAarr':'\\u21DA','lacute':'\\u013A','Lacute':'\\u0139','laemptyv':'\\u29B4','lagran':'\\u2112','lambda':'\\u03BB','Lambda':'\\u039B','lang':'\\u27E8','Lang':'\\u27EA','langd':'\\u2991','langle':'\\u27E8','lap':'\\u2A85','Laplacetrf':'\\u2112','laquo':'\\xAB','larr':'\\u2190','lArr':'\\u21D0','Larr':'\\u219E','larrb':'\\u21E4','larrbfs':'\\u291F','larrfs':'\\u291D','larrhk':'\\u21A9','larrlp':'\\u21AB','larrpl':'\\u2939','larrsim':'\\u2973','larrtl':'\\u21A2','lat':'\\u2AAB','latail':'\\u2919','lAtail':'\\u291B','late':'\\u2AAD','lates':'\\u2AAD\\uFE00','lbarr':'\\u290C','lBarr':'\\u290E','lbbrk':'\\u2772','lbrace':'{','lbrack':'[','lbrke':'\\u298B','lbrksld':'\\u298F','lbrkslu':'\\u298D','lcaron':'\\u013E','Lcaron':'\\u013D','lcedil':'\\u013C','Lcedil':'\\u013B','lceil':'\\u2308','lcub':'{','lcy':'\\u043B','Lcy':'\\u041B','ldca':'\\u2936','ldquo':'\\u201C','ldquor':'\\u201E','ldrdhar':'\\u2967','ldrushar':'\\u294B','ldsh':'\\u21B2','le':'\\u2264','lE':'\\u2266','LeftAngleBracket':'\\u27E8','leftarrow':'\\u2190','Leftarrow':'\\u21D0','LeftArrow':'\\u2190','LeftArrowBar':'\\u21E4','LeftArrowRightArrow':'\\u21C6','leftarrowtail':'\\u21A2','LeftCeiling':'\\u2308','LeftDoubleBracket':'\\u27E6','LeftDownTeeVector':'\\u2961','LeftDownVector':'\\u21C3','LeftDownVectorBar':'\\u2959','LeftFloor':'\\u230A','leftharpoondown':'\\u21BD','leftharpoonup':'\\u21BC','leftleftarrows':'\\u21C7','leftrightarrow':'\\u2194','Leftrightarrow':'\\u21D4','LeftRightArrow':'\\u2194','leftrightarrows':'\\u21C6','leftrightharpoons':'\\u21CB','leftrightsquigarrow':'\\u21AD','LeftRightVector':'\\u294E','LeftTee':'\\u22A3','LeftTeeArrow':'\\u21A4','LeftTeeVector':'\\u295A','leftthreetimes':'\\u22CB','LeftTriangle':'\\u22B2','LeftTriangleBar':'\\u29CF','LeftTriangleEqual':'\\u22B4','LeftUpDownVector':'\\u2951','LeftUpTeeVector':'\\u2960','LeftUpVector':'\\u21BF','LeftUpVectorBar':'\\u2958','LeftVector':'\\u21BC','LeftVectorBar':'\\u2952','leg':'\\u22DA','lEg':'\\u2A8B','leq':'\\u2264','leqq':'\\u2266','leqslant':'\\u2A7D','les':'\\u2A7D','lescc':'\\u2AA8','lesdot':'\\u2A7F','lesdoto':'\\u2A81','lesdotor':'\\u2A83','lesg':'\\u22DA\\uFE00','lesges':'\\u2A93','lessapprox':'\\u2A85','lessdot':'\\u22D6','lesseqgtr':'\\u22DA','lesseqqgtr':'\\u2A8B','LessEqualGreater':'\\u22DA','LessFullEqual':'\\u2266','LessGreater':'\\u2276','lessgtr':'\\u2276','LessLess':'\\u2AA1','lesssim':'\\u2272','LessSlantEqual':'\\u2A7D','LessTilde':'\\u2272','lfisht':'\\u297C','lfloor':'\\u230A','lfr':'\\uD835\\uDD29','Lfr':'\\uD835\\uDD0F','lg':'\\u2276','lgE':'\\u2A91','lHar':'\\u2962','lhard':'\\u21BD','lharu':'\\u21BC','lharul':'\\u296A','lhblk':'\\u2584','ljcy':'\\u0459','LJcy':'\\u0409','ll':'\\u226A','Ll':'\\u22D8','llarr':'\\u21C7','llcorner':'\\u231E','Lleftarrow':'\\u21DA','llhard':'\\u296B','lltri':'\\u25FA','lmidot':'\\u0140','Lmidot':'\\u013F','lmoust':'\\u23B0','lmoustache':'\\u23B0','lnap':'\\u2A89','lnapprox':'\\u2A89','lne':'\\u2A87','lnE':'\\u2268','lneq':'\\u2A87','lneqq':'\\u2268','lnsim':'\\u22E6','loang':'\\u27EC','loarr':'\\u21FD','lobrk':'\\u27E6','longleftarrow':'\\u27F5','Longleftarrow':'\\u27F8','LongLeftArrow':'\\u27F5','longleftrightarrow':'\\u27F7','Longleftrightarrow':'\\u27FA','LongLeftRightArrow':'\\u27F7','longmapsto':'\\u27FC','longrightarrow':'\\u27F6','Longrightarrow':'\\u27F9','LongRightArrow':'\\u27F6','looparrowleft':'\\u21AB','looparrowright':'\\u21AC','lopar':'\\u2985','lopf':'\\uD835\\uDD5D','Lopf':'\\uD835\\uDD43','loplus':'\\u2A2D','lotimes':'\\u2A34','lowast':'\\u2217','lowbar':'_','LowerLeftArrow':'\\u2199','LowerRightArrow':'\\u2198','loz':'\\u25CA','lozenge':'\\u25CA','lozf':'\\u29EB','lpar':'(','lparlt':'\\u2993','lrarr':'\\u21C6','lrcorner':'\\u231F','lrhar':'\\u21CB','lrhard':'\\u296D','lrm':'\\u200E','lrtri':'\\u22BF','lsaquo':'\\u2039','lscr':'\\uD835\\uDCC1','Lscr':'\\u2112','lsh':'\\u21B0','Lsh':'\\u21B0','lsim':'\\u2272','lsime':'\\u2A8D','lsimg':'\\u2A8F','lsqb':'[','lsquo':'\\u2018','lsquor':'\\u201A','lstrok':'\\u0142','Lstrok':'\\u0141','lt':'<','Lt':'\\u226A','LT':'<','ltcc':'\\u2AA6','ltcir':'\\u2A79','ltdot':'\\u22D6','lthree':'\\u22CB','ltimes':'\\u22C9','ltlarr':'\\u2976','ltquest':'\\u2A7B','ltri':'\\u25C3','ltrie':'\\u22B4','ltrif':'\\u25C2','ltrPar':'\\u2996','lurdshar':'\\u294A','luruhar':'\\u2966','lvertneqq':'\\u2268\\uFE00','lvnE':'\\u2268\\uFE00','macr':'\\xAF','male':'\\u2642','malt':'\\u2720','maltese':'\\u2720','map':'\\u21A6','Map':'\\u2905','mapsto':'\\u21A6','mapstodown':'\\u21A7','mapstoleft':'\\u21A4','mapstoup':'\\u21A5','marker':'\\u25AE','mcomma':'\\u2A29','mcy':'\\u043C','Mcy':'\\u041C','mdash':'\\u2014','mDDot':'\\u223A','measuredangle':'\\u2221','MediumSpace':'\\u205F','Mellintrf':'\\u2133','mfr':'\\uD835\\uDD2A','Mfr':'\\uD835\\uDD10','mho':'\\u2127','micro':'\\xB5','mid':'\\u2223','midast':'*','midcir':'\\u2AF0','middot':'\\xB7','minus':'\\u2212','minusb':'\\u229F','minusd':'\\u2238','minusdu':'\\u2A2A','MinusPlus':'\\u2213','mlcp':'\\u2ADB','mldr':'\\u2026','mnplus':'\\u2213','models':'\\u22A7','mopf':'\\uD835\\uDD5E','Mopf':'\\uD835\\uDD44','mp':'\\u2213','mscr':'\\uD835\\uDCC2','Mscr':'\\u2133','mstpos':'\\u223E','mu':'\\u03BC','Mu':'\\u039C','multimap':'\\u22B8','mumap':'\\u22B8','nabla':'\\u2207','nacute':'\\u0144','Nacute':'\\u0143','nang':'\\u2220\\u20D2','nap':'\\u2249','napE':'\\u2A70\\u0338','napid':'\\u224B\\u0338','napos':'\\u0149','napprox':'\\u2249','natur':'\\u266E','natural':'\\u266E','naturals':'\\u2115','nbsp':'\\xA0','nbump':'\\u224E\\u0338','nbumpe':'\\u224F\\u0338','ncap':'\\u2A43','ncaron':'\\u0148','Ncaron':'\\u0147','ncedil':'\\u0146','Ncedil':'\\u0145','ncong':'\\u2247','ncongdot':'\\u2A6D\\u0338','ncup':'\\u2A42','ncy':'\\u043D','Ncy':'\\u041D','ndash':'\\u2013','ne':'\\u2260','nearhk':'\\u2924','nearr':'\\u2197','neArr':'\\u21D7','nearrow':'\\u2197','nedot':'\\u2250\\u0338','NegativeMediumSpace':'\\u200B','NegativeThickSpace':'\\u200B','NegativeThinSpace':'\\u200B','NegativeVeryThinSpace':'\\u200B','nequiv':'\\u2262','nesear':'\\u2928','nesim':'\\u2242\\u0338','NestedGreaterGreater':'\\u226B','NestedLessLess':'\\u226A','NewLine':'\\n','nexist':'\\u2204','nexists':'\\u2204','nfr':'\\uD835\\uDD2B','Nfr':'\\uD835\\uDD11','nge':'\\u2271','ngE':'\\u2267\\u0338','ngeq':'\\u2271','ngeqq':'\\u2267\\u0338','ngeqslant':'\\u2A7E\\u0338','nges':'\\u2A7E\\u0338','nGg':'\\u22D9\\u0338','ngsim':'\\u2275','ngt':'\\u226F','nGt':'\\u226B\\u20D2','ngtr':'\\u226F','nGtv':'\\u226B\\u0338','nharr':'\\u21AE','nhArr':'\\u21CE','nhpar':'\\u2AF2','ni':'\\u220B','nis':'\\u22FC','nisd':'\\u22FA','niv':'\\u220B','njcy':'\\u045A','NJcy':'\\u040A','nlarr':'\\u219A','nlArr':'\\u21CD','nldr':'\\u2025','nle':'\\u2270','nlE':'\\u2266\\u0338','nleftarrow':'\\u219A','nLeftarrow':'\\u21CD','nleftrightarrow':'\\u21AE','nLeftrightarrow':'\\u21CE','nleq':'\\u2270','nleqq':'\\u2266\\u0338','nleqslant':'\\u2A7D\\u0338','nles':'\\u2A7D\\u0338','nless':'\\u226E','nLl':'\\u22D8\\u0338','nlsim':'\\u2274','nlt':'\\u226E','nLt':'\\u226A\\u20D2','nltri':'\\u22EA','nltrie':'\\u22EC','nLtv':'\\u226A\\u0338','nmid':'\\u2224','NoBreak':'\\u2060','NonBreakingSpace':'\\xA0','nopf':'\\uD835\\uDD5F','Nopf':'\\u2115','not':'\\xAC','Not':'\\u2AEC','NotCongruent':'\\u2262','NotCupCap':'\\u226D','NotDoubleVerticalBar':'\\u2226','NotElement':'\\u2209','NotEqual':'\\u2260','NotEqualTilde':'\\u2242\\u0338','NotExists':'\\u2204','NotGreater':'\\u226F','NotGreaterEqual':'\\u2271','NotGreaterFullEqual':'\\u2267\\u0338','NotGreaterGreater':'\\u226B\\u0338','NotGreaterLess':'\\u2279','NotGreaterSlantEqual':'\\u2A7E\\u0338','NotGreaterTilde':'\\u2275','NotHumpDownHump':'\\u224E\\u0338','NotHumpEqual':'\\u224F\\u0338','notin':'\\u2209','notindot':'\\u22F5\\u0338','notinE':'\\u22F9\\u0338','notinva':'\\u2209','notinvb':'\\u22F7','notinvc':'\\u22F6','NotLeftTriangle':'\\u22EA','NotLeftTriangleBar':'\\u29CF\\u0338','NotLeftTriangleEqual':'\\u22EC','NotLess':'\\u226E','NotLessEqual':'\\u2270','NotLessGreater':'\\u2278','NotLessLess':'\\u226A\\u0338','NotLessSlantEqual':'\\u2A7D\\u0338','NotLessTilde':'\\u2274','NotNestedGreaterGreater':'\\u2AA2\\u0338','NotNestedLessLess':'\\u2AA1\\u0338','notni':'\\u220C','notniva':'\\u220C','notnivb':'\\u22FE','notnivc':'\\u22FD','NotPrecedes':'\\u2280','NotPrecedesEqual':'\\u2AAF\\u0338','NotPrecedesSlantEqual':'\\u22E0','NotReverseElement':'\\u220C','NotRightTriangle':'\\u22EB','NotRightTriangleBar':'\\u29D0\\u0338','NotRightTriangleEqual':'\\u22ED','NotSquareSubset':'\\u228F\\u0338','NotSquareSubsetEqual':'\\u22E2','NotSquareSuperset':'\\u2290\\u0338','NotSquareSupersetEqual':'\\u22E3','NotSubset':'\\u2282\\u20D2','NotSubsetEqual':'\\u2288','NotSucceeds':'\\u2281','NotSucceedsEqual':'\\u2AB0\\u0338','NotSucceedsSlantEqual':'\\u22E1','NotSucceedsTilde':'\\u227F\\u0338','NotSuperset':'\\u2283\\u20D2','NotSupersetEqual':'\\u2289','NotTilde':'\\u2241','NotTildeEqual':'\\u2244','NotTildeFullEqual':'\\u2247','NotTildeTilde':'\\u2249','NotVerticalBar':'\\u2224','npar':'\\u2226','nparallel':'\\u2226','nparsl':'\\u2AFD\\u20E5','npart':'\\u2202\\u0338','npolint':'\\u2A14','npr':'\\u2280','nprcue':'\\u22E0','npre':'\\u2AAF\\u0338','nprec':'\\u2280','npreceq':'\\u2AAF\\u0338','nrarr':'\\u219B','nrArr':'\\u21CF','nrarrc':'\\u2933\\u0338','nrarrw':'\\u219D\\u0338','nrightarrow':'\\u219B','nRightarrow':'\\u21CF','nrtri':'\\u22EB','nrtrie':'\\u22ED','nsc':'\\u2281','nsccue':'\\u22E1','nsce':'\\u2AB0\\u0338','nscr':'\\uD835\\uDCC3','Nscr':'\\uD835\\uDCA9','nshortmid':'\\u2224','nshortparallel':'\\u2226','nsim':'\\u2241','nsime':'\\u2244','nsimeq':'\\u2244','nsmid':'\\u2224','nspar':'\\u2226','nsqsube':'\\u22E2','nsqsupe':'\\u22E3','nsub':'\\u2284','nsube':'\\u2288','nsubE':'\\u2AC5\\u0338','nsubset':'\\u2282\\u20D2','nsubseteq':'\\u2288','nsubseteqq':'\\u2AC5\\u0338','nsucc':'\\u2281','nsucceq':'\\u2AB0\\u0338','nsup':'\\u2285','nsupe':'\\u2289','nsupE':'\\u2AC6\\u0338','nsupset':'\\u2283\\u20D2','nsupseteq':'\\u2289','nsupseteqq':'\\u2AC6\\u0338','ntgl':'\\u2279','ntilde':'\\xF1','Ntilde':'\\xD1','ntlg':'\\u2278','ntriangleleft':'\\u22EA','ntrianglelefteq':'\\u22EC','ntriangleright':'\\u22EB','ntrianglerighteq':'\\u22ED','nu':'\\u03BD','Nu':'\\u039D','num':'#','numero':'\\u2116','numsp':'\\u2007','nvap':'\\u224D\\u20D2','nvdash':'\\u22AC','nvDash':'\\u22AD','nVdash':'\\u22AE','nVDash':'\\u22AF','nvge':'\\u2265\\u20D2','nvgt':'>\\u20D2','nvHarr':'\\u2904','nvinfin':'\\u29DE','nvlArr':'\\u2902','nvle':'\\u2264\\u20D2','nvlt':'<\\u20D2','nvltrie':'\\u22B4\\u20D2','nvrArr':'\\u2903','nvrtrie':'\\u22B5\\u20D2','nvsim':'\\u223C\\u20D2','nwarhk':'\\u2923','nwarr':'\\u2196','nwArr':'\\u21D6','nwarrow':'\\u2196','nwnear':'\\u2927','oacute':'\\xF3','Oacute':'\\xD3','oast':'\\u229B','ocir':'\\u229A','ocirc':'\\xF4','Ocirc':'\\xD4','ocy':'\\u043E','Ocy':'\\u041E','odash':'\\u229D','odblac':'\\u0151','Odblac':'\\u0150','odiv':'\\u2A38','odot':'\\u2299','odsold':'\\u29BC','oelig':'\\u0153','OElig':'\\u0152','ofcir':'\\u29BF','ofr':'\\uD835\\uDD2C','Ofr':'\\uD835\\uDD12','ogon':'\\u02DB','ograve':'\\xF2','Ograve':'\\xD2','ogt':'\\u29C1','ohbar':'\\u29B5','ohm':'\\u03A9','oint':'\\u222E','olarr':'\\u21BA','olcir':'\\u29BE','olcross':'\\u29BB','oline':'\\u203E','olt':'\\u29C0','omacr':'\\u014D','Omacr':'\\u014C','omega':'\\u03C9','Omega':'\\u03A9','omicron':'\\u03BF','Omicron':'\\u039F','omid':'\\u29B6','ominus':'\\u2296','oopf':'\\uD835\\uDD60','Oopf':'\\uD835\\uDD46','opar':'\\u29B7','OpenCurlyDoubleQuote':'\\u201C','OpenCurlyQuote':'\\u2018','operp':'\\u29B9','oplus':'\\u2295','or':'\\u2228','Or':'\\u2A54','orarr':'\\u21BB','ord':'\\u2A5D','order':'\\u2134','orderof':'\\u2134','ordf':'\\xAA','ordm':'\\xBA','origof':'\\u22B6','oror':'\\u2A56','orslope':'\\u2A57','orv':'\\u2A5B','oS':'\\u24C8','oscr':'\\u2134','Oscr':'\\uD835\\uDCAA','oslash':'\\xF8','Oslash':'\\xD8','osol':'\\u2298','otilde':'\\xF5','Otilde':'\\xD5','otimes':'\\u2297','Otimes':'\\u2A37','otimesas':'\\u2A36','ouml':'\\xF6','Ouml':'\\xD6','ovbar':'\\u233D','OverBar':'\\u203E','OverBrace':'\\u23DE','OverBracket':'\\u23B4','OverParenthesis':'\\u23DC','par':'\\u2225','para':'\\xB6','parallel':'\\u2225','parsim':'\\u2AF3','parsl':'\\u2AFD','part':'\\u2202','PartialD':'\\u2202','pcy':'\\u043F','Pcy':'\\u041F','percnt':'%','period':'.','permil':'\\u2030','perp':'\\u22A5','pertenk':'\\u2031','pfr':'\\uD835\\uDD2D','Pfr':'\\uD835\\uDD13','phi':'\\u03C6','Phi':'\\u03A6','phiv':'\\u03D5','phmmat':'\\u2133','phone':'\\u260E','pi':'\\u03C0','Pi':'\\u03A0','pitchfork':'\\u22D4','piv':'\\u03D6','planck':'\\u210F','planckh':'\\u210E','plankv':'\\u210F','plus':'+','plusacir':'\\u2A23','plusb':'\\u229E','pluscir':'\\u2A22','plusdo':'\\u2214','plusdu':'\\u2A25','pluse':'\\u2A72','PlusMinus':'\\xB1','plusmn':'\\xB1','plussim':'\\u2A26','plustwo':'\\u2A27','pm':'\\xB1','Poincareplane':'\\u210C','pointint':'\\u2A15','popf':'\\uD835\\uDD61','Popf':'\\u2119','pound':'\\xA3','pr':'\\u227A','Pr':'\\u2ABB','prap':'\\u2AB7','prcue':'\\u227C','pre':'\\u2AAF','prE':'\\u2AB3','prec':'\\u227A','precapprox':'\\u2AB7','preccurlyeq':'\\u227C','Precedes':'\\u227A','PrecedesEqual':'\\u2AAF','PrecedesSlantEqual':'\\u227C','PrecedesTilde':'\\u227E','preceq':'\\u2AAF','precnapprox':'\\u2AB9','precneqq':'\\u2AB5','precnsim':'\\u22E8','precsim':'\\u227E','prime':'\\u2032','Prime':'\\u2033','primes':'\\u2119','prnap':'\\u2AB9','prnE':'\\u2AB5','prnsim':'\\u22E8','prod':'\\u220F','Product':'\\u220F','profalar':'\\u232E','profline':'\\u2312','profsurf':'\\u2313','prop':'\\u221D','Proportion':'\\u2237','Proportional':'\\u221D','propto':'\\u221D','prsim':'\\u227E','prurel':'\\u22B0','pscr':'\\uD835\\uDCC5','Pscr':'\\uD835\\uDCAB','psi':'\\u03C8','Psi':'\\u03A8','puncsp':'\\u2008','qfr':'\\uD835\\uDD2E','Qfr':'\\uD835\\uDD14','qint':'\\u2A0C','qopf':'\\uD835\\uDD62','Qopf':'\\u211A','qprime':'\\u2057','qscr':'\\uD835\\uDCC6','Qscr':'\\uD835\\uDCAC','quaternions':'\\u210D','quatint':'\\u2A16','quest':'?','questeq':'\\u225F','quot':'\"','QUOT':'\"','rAarr':'\\u21DB','race':'\\u223D\\u0331','racute':'\\u0155','Racute':'\\u0154','radic':'\\u221A','raemptyv':'\\u29B3','rang':'\\u27E9','Rang':'\\u27EB','rangd':'\\u2992','range':'\\u29A5','rangle':'\\u27E9','raquo':'\\xBB','rarr':'\\u2192','rArr':'\\u21D2','Rarr':'\\u21A0','rarrap':'\\u2975','rarrb':'\\u21E5','rarrbfs':'\\u2920','rarrc':'\\u2933','rarrfs':'\\u291E','rarrhk':'\\u21AA','rarrlp':'\\u21AC','rarrpl':'\\u2945','rarrsim':'\\u2974','rarrtl':'\\u21A3','Rarrtl':'\\u2916','rarrw':'\\u219D','ratail':'\\u291A','rAtail':'\\u291C','ratio':'\\u2236','rationals':'\\u211A','rbarr':'\\u290D','rBarr':'\\u290F','RBarr':'\\u2910','rbbrk':'\\u2773','rbrace':'}','rbrack':']','rbrke':'\\u298C','rbrksld':'\\u298E','rbrkslu':'\\u2990','rcaron':'\\u0159','Rcaron':'\\u0158','rcedil':'\\u0157','Rcedil':'\\u0156','rceil':'\\u2309','rcub':'}','rcy':'\\u0440','Rcy':'\\u0420','rdca':'\\u2937','rdldhar':'\\u2969','rdquo':'\\u201D','rdquor':'\\u201D','rdsh':'\\u21B3','Re':'\\u211C','real':'\\u211C','realine':'\\u211B','realpart':'\\u211C','reals':'\\u211D','rect':'\\u25AD','reg':'\\xAE','REG':'\\xAE','ReverseElement':'\\u220B','ReverseEquilibrium':'\\u21CB','ReverseUpEquilibrium':'\\u296F','rfisht':'\\u297D','rfloor':'\\u230B','rfr':'\\uD835\\uDD2F','Rfr':'\\u211C','rHar':'\\u2964','rhard':'\\u21C1','rharu':'\\u21C0','rharul':'\\u296C','rho':'\\u03C1','Rho':'\\u03A1','rhov':'\\u03F1','RightAngleBracket':'\\u27E9','rightarrow':'\\u2192','Rightarrow':'\\u21D2','RightArrow':'\\u2192','RightArrowBar':'\\u21E5','RightArrowLeftArrow':'\\u21C4','rightarrowtail':'\\u21A3','RightCeiling':'\\u2309','RightDoubleBracket':'\\u27E7','RightDownTeeVector':'\\u295D','RightDownVector':'\\u21C2','RightDownVectorBar':'\\u2955','RightFloor':'\\u230B','rightharpoondown':'\\u21C1','rightharpoonup':'\\u21C0','rightleftarrows':'\\u21C4','rightleftharpoons':'\\u21CC','rightrightarrows':'\\u21C9','rightsquigarrow':'\\u219D','RightTee':'\\u22A2','RightTeeArrow':'\\u21A6','RightTeeVector':'\\u295B','rightthreetimes':'\\u22CC','RightTriangle':'\\u22B3','RightTriangleBar':'\\u29D0','RightTriangleEqual':'\\u22B5','RightUpDownVector':'\\u294F','RightUpTeeVector':'\\u295C','RightUpVector':'\\u21BE','RightUpVectorBar':'\\u2954','RightVector':'\\u21C0','RightVectorBar':'\\u2953','ring':'\\u02DA','risingdotseq':'\\u2253','rlarr':'\\u21C4','rlhar':'\\u21CC','rlm':'\\u200F','rmoust':'\\u23B1','rmoustache':'\\u23B1','rnmid':'\\u2AEE','roang':'\\u27ED','roarr':'\\u21FE','robrk':'\\u27E7','ropar':'\\u2986','ropf':'\\uD835\\uDD63','Ropf':'\\u211D','roplus':'\\u2A2E','rotimes':'\\u2A35','RoundImplies':'\\u2970','rpar':')','rpargt':'\\u2994','rppolint':'\\u2A12','rrarr':'\\u21C9','Rrightarrow':'\\u21DB','rsaquo':'\\u203A','rscr':'\\uD835\\uDCC7','Rscr':'\\u211B','rsh':'\\u21B1','Rsh':'\\u21B1','rsqb':']','rsquo':'\\u2019','rsquor':'\\u2019','rthree':'\\u22CC','rtimes':'\\u22CA','rtri':'\\u25B9','rtrie':'\\u22B5','rtrif':'\\u25B8','rtriltri':'\\u29CE','RuleDelayed':'\\u29F4','ruluhar':'\\u2968','rx':'\\u211E','sacute':'\\u015B','Sacute':'\\u015A','sbquo':'\\u201A','sc':'\\u227B','Sc':'\\u2ABC','scap':'\\u2AB8','scaron':'\\u0161','Scaron':'\\u0160','sccue':'\\u227D','sce':'\\u2AB0','scE':'\\u2AB4','scedil':'\\u015F','Scedil':'\\u015E','scirc':'\\u015D','Scirc':'\\u015C','scnap':'\\u2ABA','scnE':'\\u2AB6','scnsim':'\\u22E9','scpolint':'\\u2A13','scsim':'\\u227F','scy':'\\u0441','Scy':'\\u0421','sdot':'\\u22C5','sdotb':'\\u22A1','sdote':'\\u2A66','searhk':'\\u2925','searr':'\\u2198','seArr':'\\u21D8','searrow':'\\u2198','sect':'\\xA7','semi':';','seswar':'\\u2929','setminus':'\\u2216','setmn':'\\u2216','sext':'\\u2736','sfr':'\\uD835\\uDD30','Sfr':'\\uD835\\uDD16','sfrown':'\\u2322','sharp':'\\u266F','shchcy':'\\u0449','SHCHcy':'\\u0429','shcy':'\\u0448','SHcy':'\\u0428','ShortDownArrow':'\\u2193','ShortLeftArrow':'\\u2190','shortmid':'\\u2223','shortparallel':'\\u2225','ShortRightArrow':'\\u2192','ShortUpArrow':'\\u2191','shy':'\\xAD','sigma':'\\u03C3','Sigma':'\\u03A3','sigmaf':'\\u03C2','sigmav':'\\u03C2','sim':'\\u223C','simdot':'\\u2A6A','sime':'\\u2243','simeq':'\\u2243','simg':'\\u2A9E','simgE':'\\u2AA0','siml':'\\u2A9D','simlE':'\\u2A9F','simne':'\\u2246','simplus':'\\u2A24','simrarr':'\\u2972','slarr':'\\u2190','SmallCircle':'\\u2218','smallsetminus':'\\u2216','smashp':'\\u2A33','smeparsl':'\\u29E4','smid':'\\u2223','smile':'\\u2323','smt':'\\u2AAA','smte':'\\u2AAC','smtes':'\\u2AAC\\uFE00','softcy':'\\u044C','SOFTcy':'\\u042C','sol':'/','solb':'\\u29C4','solbar':'\\u233F','sopf':'\\uD835\\uDD64','Sopf':'\\uD835\\uDD4A','spades':'\\u2660','spadesuit':'\\u2660','spar':'\\u2225','sqcap':'\\u2293','sqcaps':'\\u2293\\uFE00','sqcup':'\\u2294','sqcups':'\\u2294\\uFE00','Sqrt':'\\u221A','sqsub':'\\u228F','sqsube':'\\u2291','sqsubset':'\\u228F','sqsubseteq':'\\u2291','sqsup':'\\u2290','sqsupe':'\\u2292','sqsupset':'\\u2290','sqsupseteq':'\\u2292','squ':'\\u25A1','square':'\\u25A1','Square':'\\u25A1','SquareIntersection':'\\u2293','SquareSubset':'\\u228F','SquareSubsetEqual':'\\u2291','SquareSuperset':'\\u2290','SquareSupersetEqual':'\\u2292','SquareUnion':'\\u2294','squarf':'\\u25AA','squf':'\\u25AA','srarr':'\\u2192','sscr':'\\uD835\\uDCC8','Sscr':'\\uD835\\uDCAE','ssetmn':'\\u2216','ssmile':'\\u2323','sstarf':'\\u22C6','star':'\\u2606','Star':'\\u22C6','starf':'\\u2605','straightepsilon':'\\u03F5','straightphi':'\\u03D5','strns':'\\xAF','sub':'\\u2282','Sub':'\\u22D0','subdot':'\\u2ABD','sube':'\\u2286','subE':'\\u2AC5','subedot':'\\u2AC3','submult':'\\u2AC1','subne':'\\u228A','subnE':'\\u2ACB','subplus':'\\u2ABF','subrarr':'\\u2979','subset':'\\u2282','Subset':'\\u22D0','subseteq':'\\u2286','subseteqq':'\\u2AC5','SubsetEqual':'\\u2286','subsetneq':'\\u228A','subsetneqq':'\\u2ACB','subsim':'\\u2AC7','subsub':'\\u2AD5','subsup':'\\u2AD3','succ':'\\u227B','succapprox':'\\u2AB8','succcurlyeq':'\\u227D','Succeeds':'\\u227B','SucceedsEqual':'\\u2AB0','SucceedsSlantEqual':'\\u227D','SucceedsTilde':'\\u227F','succeq':'\\u2AB0','succnapprox':'\\u2ABA','succneqq':'\\u2AB6','succnsim':'\\u22E9','succsim':'\\u227F','SuchThat':'\\u220B','sum':'\\u2211','Sum':'\\u2211','sung':'\\u266A','sup':'\\u2283','Sup':'\\u22D1','sup1':'\\xB9','sup2':'\\xB2','sup3':'\\xB3','supdot':'\\u2ABE','supdsub':'\\u2AD8','supe':'\\u2287','supE':'\\u2AC6','supedot':'\\u2AC4','Superset':'\\u2283','SupersetEqual':'\\u2287','suphsol':'\\u27C9','suphsub':'\\u2AD7','suplarr':'\\u297B','supmult':'\\u2AC2','supne':'\\u228B','supnE':'\\u2ACC','supplus':'\\u2AC0','supset':'\\u2283','Supset':'\\u22D1','supseteq':'\\u2287','supseteqq':'\\u2AC6','supsetneq':'\\u228B','supsetneqq':'\\u2ACC','supsim':'\\u2AC8','supsub':'\\u2AD4','supsup':'\\u2AD6','swarhk':'\\u2926','swarr':'\\u2199','swArr':'\\u21D9','swarrow':'\\u2199','swnwar':'\\u292A','szlig':'\\xDF','Tab':'\\t','target':'\\u2316','tau':'\\u03C4','Tau':'\\u03A4','tbrk':'\\u23B4','tcaron':'\\u0165','Tcaron':'\\u0164','tcedil':'\\u0163','Tcedil':'\\u0162','tcy':'\\u0442','Tcy':'\\u0422','tdot':'\\u20DB','telrec':'\\u2315','tfr':'\\uD835\\uDD31','Tfr':'\\uD835\\uDD17','there4':'\\u2234','therefore':'\\u2234','Therefore':'\\u2234','theta':'\\u03B8','Theta':'\\u0398','thetasym':'\\u03D1','thetav':'\\u03D1','thickapprox':'\\u2248','thicksim':'\\u223C','ThickSpace':'\\u205F\\u200A','thinsp':'\\u2009','ThinSpace':'\\u2009','thkap':'\\u2248','thksim':'\\u223C','thorn':'\\xFE','THORN':'\\xDE','tilde':'\\u02DC','Tilde':'\\u223C','TildeEqual':'\\u2243','TildeFullEqual':'\\u2245','TildeTilde':'\\u2248','times':'\\xD7','timesb':'\\u22A0','timesbar':'\\u2A31','timesd':'\\u2A30','tint':'\\u222D','toea':'\\u2928','top':'\\u22A4','topbot':'\\u2336','topcir':'\\u2AF1','topf':'\\uD835\\uDD65','Topf':'\\uD835\\uDD4B','topfork':'\\u2ADA','tosa':'\\u2929','tprime':'\\u2034','trade':'\\u2122','TRADE':'\\u2122','triangle':'\\u25B5','triangledown':'\\u25BF','triangleleft':'\\u25C3','trianglelefteq':'\\u22B4','triangleq':'\\u225C','triangleright':'\\u25B9','trianglerighteq':'\\u22B5','tridot':'\\u25EC','trie':'\\u225C','triminus':'\\u2A3A','TripleDot':'\\u20DB','triplus':'\\u2A39','trisb':'\\u29CD','tritime':'\\u2A3B','trpezium':'\\u23E2','tscr':'\\uD835\\uDCC9','Tscr':'\\uD835\\uDCAF','tscy':'\\u0446','TScy':'\\u0426','tshcy':'\\u045B','TSHcy':'\\u040B','tstrok':'\\u0167','Tstrok':'\\u0166','twixt':'\\u226C','twoheadleftarrow':'\\u219E','twoheadrightarrow':'\\u21A0','uacute':'\\xFA','Uacute':'\\xDA','uarr':'\\u2191','uArr':'\\u21D1','Uarr':'\\u219F','Uarrocir':'\\u2949','ubrcy':'\\u045E','Ubrcy':'\\u040E','ubreve':'\\u016D','Ubreve':'\\u016C','ucirc':'\\xFB','Ucirc':'\\xDB','ucy':'\\u0443','Ucy':'\\u0423','udarr':'\\u21C5','udblac':'\\u0171','Udblac':'\\u0170','udhar':'\\u296E','ufisht':'\\u297E','ufr':'\\uD835\\uDD32','Ufr':'\\uD835\\uDD18','ugrave':'\\xF9','Ugrave':'\\xD9','uHar':'\\u2963','uharl':'\\u21BF','uharr':'\\u21BE','uhblk':'\\u2580','ulcorn':'\\u231C','ulcorner':'\\u231C','ulcrop':'\\u230F','ultri':'\\u25F8','umacr':'\\u016B','Umacr':'\\u016A','uml':'\\xA8','UnderBar':'_','UnderBrace':'\\u23DF','UnderBracket':'\\u23B5','UnderParenthesis':'\\u23DD','Union':'\\u22C3','UnionPlus':'\\u228E','uogon':'\\u0173','Uogon':'\\u0172','uopf':'\\uD835\\uDD66','Uopf':'\\uD835\\uDD4C','uparrow':'\\u2191','Uparrow':'\\u21D1','UpArrow':'\\u2191','UpArrowBar':'\\u2912','UpArrowDownArrow':'\\u21C5','updownarrow':'\\u2195','Updownarrow':'\\u21D5','UpDownArrow':'\\u2195','UpEquilibrium':'\\u296E','upharpoonleft':'\\u21BF','upharpoonright':'\\u21BE','uplus':'\\u228E','UpperLeftArrow':'\\u2196','UpperRightArrow':'\\u2197','upsi':'\\u03C5','Upsi':'\\u03D2','upsih':'\\u03D2','upsilon':'\\u03C5','Upsilon':'\\u03A5','UpTee':'\\u22A5','UpTeeArrow':'\\u21A5','upuparrows':'\\u21C8','urcorn':'\\u231D','urcorner':'\\u231D','urcrop':'\\u230E','uring':'\\u016F','Uring':'\\u016E','urtri':'\\u25F9','uscr':'\\uD835\\uDCCA','Uscr':'\\uD835\\uDCB0','utdot':'\\u22F0','utilde':'\\u0169','Utilde':'\\u0168','utri':'\\u25B5','utrif':'\\u25B4','uuarr':'\\u21C8','uuml':'\\xFC','Uuml':'\\xDC','uwangle':'\\u29A7','vangrt':'\\u299C','varepsilon':'\\u03F5','varkappa':'\\u03F0','varnothing':'\\u2205','varphi':'\\u03D5','varpi':'\\u03D6','varpropto':'\\u221D','varr':'\\u2195','vArr':'\\u21D5','varrho':'\\u03F1','varsigma':'\\u03C2','varsubsetneq':'\\u228A\\uFE00','varsubsetneqq':'\\u2ACB\\uFE00','varsupsetneq':'\\u228B\\uFE00','varsupsetneqq':'\\u2ACC\\uFE00','vartheta':'\\u03D1','vartriangleleft':'\\u22B2','vartriangleright':'\\u22B3','vBar':'\\u2AE8','Vbar':'\\u2AEB','vBarv':'\\u2AE9','vcy':'\\u0432','Vcy':'\\u0412','vdash':'\\u22A2','vDash':'\\u22A8','Vdash':'\\u22A9','VDash':'\\u22AB','Vdashl':'\\u2AE6','vee':'\\u2228','Vee':'\\u22C1','veebar':'\\u22BB','veeeq':'\\u225A','vellip':'\\u22EE','verbar':'|','Verbar':'\\u2016','vert':'|','Vert':'\\u2016','VerticalBar':'\\u2223','VerticalLine':'|','VerticalSeparator':'\\u2758','VerticalTilde':'\\u2240','VeryThinSpace':'\\u200A','vfr':'\\uD835\\uDD33','Vfr':'\\uD835\\uDD19','vltri':'\\u22B2','vnsub':'\\u2282\\u20D2','vnsup':'\\u2283\\u20D2','vopf':'\\uD835\\uDD67','Vopf':'\\uD835\\uDD4D','vprop':'\\u221D','vrtri':'\\u22B3','vscr':'\\uD835\\uDCCB','Vscr':'\\uD835\\uDCB1','vsubne':'\\u228A\\uFE00','vsubnE':'\\u2ACB\\uFE00','vsupne':'\\u228B\\uFE00','vsupnE':'\\u2ACC\\uFE00','Vvdash':'\\u22AA','vzigzag':'\\u299A','wcirc':'\\u0175','Wcirc':'\\u0174','wedbar':'\\u2A5F','wedge':'\\u2227','Wedge':'\\u22C0','wedgeq':'\\u2259','weierp':'\\u2118','wfr':'\\uD835\\uDD34','Wfr':'\\uD835\\uDD1A','wopf':'\\uD835\\uDD68','Wopf':'\\uD835\\uDD4E','wp':'\\u2118','wr':'\\u2240','wreath':'\\u2240','wscr':'\\uD835\\uDCCC','Wscr':'\\uD835\\uDCB2','xcap':'\\u22C2','xcirc':'\\u25EF','xcup':'\\u22C3','xdtri':'\\u25BD','xfr':'\\uD835\\uDD35','Xfr':'\\uD835\\uDD1B','xharr':'\\u27F7','xhArr':'\\u27FA','xi':'\\u03BE','Xi':'\\u039E','xlarr':'\\u27F5','xlArr':'\\u27F8','xmap':'\\u27FC','xnis':'\\u22FB','xodot':'\\u2A00','xopf':'\\uD835\\uDD69','Xopf':'\\uD835\\uDD4F','xoplus':'\\u2A01','xotime':'\\u2A02','xrarr':'\\u27F6','xrArr':'\\u27F9','xscr':'\\uD835\\uDCCD','Xscr':'\\uD835\\uDCB3','xsqcup':'\\u2A06','xuplus':'\\u2A04','xutri':'\\u25B3','xvee':'\\u22C1','xwedge':'\\u22C0','yacute':'\\xFD','Yacute':'\\xDD','yacy':'\\u044F','YAcy':'\\u042F','ycirc':'\\u0177','Ycirc':'\\u0176','ycy':'\\u044B','Ycy':'\\u042B','yen':'\\xA5','yfr':'\\uD835\\uDD36','Yfr':'\\uD835\\uDD1C','yicy':'\\u0457','YIcy':'\\u0407','yopf':'\\uD835\\uDD6A','Yopf':'\\uD835\\uDD50','yscr':'\\uD835\\uDCCE','Yscr':'\\uD835\\uDCB4','yucy':'\\u044E','YUcy':'\\u042E','yuml':'\\xFF','Yuml':'\\u0178','zacute':'\\u017A','Zacute':'\\u0179','zcaron':'\\u017E','Zcaron':'\\u017D','zcy':'\\u0437','Zcy':'\\u0417','zdot':'\\u017C','Zdot':'\\u017B','zeetrf':'\\u2128','ZeroWidthSpace':'\\u200B','zeta':'\\u03B6','Zeta':'\\u0396','zfr':'\\uD835\\uDD37','Zfr':'\\u2128','zhcy':'\\u0436','ZHcy':'\\u0416','zigrarr':'\\u21DD','zopf':'\\uD835\\uDD6B','Zopf':'\\u2124','zscr':'\\uD835\\uDCCF','Zscr':'\\uD835\\uDCB5','zwj':'\\u200D','zwnj':'\\u200C'};\n\tvar decodeMapLegacy = {'aacute':'\\xE1','Aacute':'\\xC1','acirc':'\\xE2','Acirc':'\\xC2','acute':'\\xB4','aelig':'\\xE6','AElig':'\\xC6','agrave':'\\xE0','Agrave':'\\xC0','amp':'&','AMP':'&','aring':'\\xE5','Aring':'\\xC5','atilde':'\\xE3','Atilde':'\\xC3','auml':'\\xE4','Auml':'\\xC4','brvbar':'\\xA6','ccedil':'\\xE7','Ccedil':'\\xC7','cedil':'\\xB8','cent':'\\xA2','copy':'\\xA9','COPY':'\\xA9','curren':'\\xA4','deg':'\\xB0','divide':'\\xF7','eacute':'\\xE9','Eacute':'\\xC9','ecirc':'\\xEA','Ecirc':'\\xCA','egrave':'\\xE8','Egrave':'\\xC8','eth':'\\xF0','ETH':'\\xD0','euml':'\\xEB','Euml':'\\xCB','frac12':'\\xBD','frac14':'\\xBC','frac34':'\\xBE','gt':'>','GT':'>','iacute':'\\xED','Iacute':'\\xCD','icirc':'\\xEE','Icirc':'\\xCE','iexcl':'\\xA1','igrave':'\\xEC','Igrave':'\\xCC','iquest':'\\xBF','iuml':'\\xEF','Iuml':'\\xCF','laquo':'\\xAB','lt':'<','LT':'<','macr':'\\xAF','micro':'\\xB5','middot':'\\xB7','nbsp':'\\xA0','not':'\\xAC','ntilde':'\\xF1','Ntilde':'\\xD1','oacute':'\\xF3','Oacute':'\\xD3','ocirc':'\\xF4','Ocirc':'\\xD4','ograve':'\\xF2','Ograve':'\\xD2','ordf':'\\xAA','ordm':'\\xBA','oslash':'\\xF8','Oslash':'\\xD8','otilde':'\\xF5','Otilde':'\\xD5','ouml':'\\xF6','Ouml':'\\xD6','para':'\\xB6','plusmn':'\\xB1','pound':'\\xA3','quot':'\"','QUOT':'\"','raquo':'\\xBB','reg':'\\xAE','REG':'\\xAE','sect':'\\xA7','shy':'\\xAD','sup1':'\\xB9','sup2':'\\xB2','sup3':'\\xB3','szlig':'\\xDF','thorn':'\\xFE','THORN':'\\xDE','times':'\\xD7','uacute':'\\xFA','Uacute':'\\xDA','ucirc':'\\xFB','Ucirc':'\\xDB','ugrave':'\\xF9','Ugrave':'\\xD9','uml':'\\xA8','uuml':'\\xFC','Uuml':'\\xDC','yacute':'\\xFD','Yacute':'\\xDD','yen':'\\xA5','yuml':'\\xFF'};\n\tvar decodeMapNumeric = {'0':'\\uFFFD','128':'\\u20AC','130':'\\u201A','131':'\\u0192','132':'\\u201E','133':'\\u2026','134':'\\u2020','135':'\\u2021','136':'\\u02C6','137':'\\u2030','138':'\\u0160','139':'\\u2039','140':'\\u0152','142':'\\u017D','145':'\\u2018','146':'\\u2019','147':'\\u201C','148':'\\u201D','149':'\\u2022','150':'\\u2013','151':'\\u2014','152':'\\u02DC','153':'\\u2122','154':'\\u0161','155':'\\u203A','156':'\\u0153','158':'\\u017E','159':'\\u0178'};\n\tvar invalidReferenceCodePoints = [1,2,3,4,5,6,7,8,11,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,64976,64977,64978,64979,64980,64981,64982,64983,64984,64985,64986,64987,64988,64989,64990,64991,64992,64993,64994,64995,64996,64997,64998,64999,65000,65001,65002,65003,65004,65005,65006,65007,65534,65535,131070,131071,196606,196607,262142,262143,327678,327679,393214,393215,458750,458751,524286,524287,589822,589823,655358,655359,720894,720895,786430,786431,851966,851967,917502,917503,983038,983039,1048574,1048575,1114110,1114111];\n\n\t/*--------------------------------------------------------------------------*/\n\n\tvar stringFromCharCode = String.fromCharCode;\n\n\tvar object = {};\n\tvar hasOwnProperty = object.hasOwnProperty;\n\tvar has = function(object, propertyName) {\n\t\treturn hasOwnProperty.call(object, propertyName);\n\t};\n\n\tvar contains = function(array, value) {\n\t\tvar index = -1;\n\t\tvar length = array.length;\n\t\twhile (++index < length) {\n\t\t\tif (array[index] == value) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t};\n\n\tvar merge = function(options, defaults) {\n\t\tif (!options) {\n\t\t\treturn defaults;\n\t\t}\n\t\tvar result = {};\n\t\tvar key;\n\t\tfor (key in defaults) {\n\t\t\t// A `hasOwnProperty` check is not needed here, since only recognized\n\t\t\t// option names are used anyway. Any others are ignored.\n\t\t\tresult[key] = has(options, key) ? options[key] : defaults[key];\n\t\t}\n\t\treturn result;\n\t};\n\n\t// Modified version of `ucs2encode`; see https://mths.be/punycode.\n\tvar codePointToSymbol = function(codePoint, strict) {\n\t\tvar output = '';\n\t\tif ((codePoint >= 0xD800 && codePoint <= 0xDFFF) || codePoint > 0x10FFFF) {\n\t\t\t// See issue #4:\n\t\t\t// “Otherwise, if the number is in the range 0xD800 to 0xDFFF or is\n\t\t\t// greater than 0x10FFFF, then this is a parse error. Return a U+FFFD\n\t\t\t// REPLACEMENT CHARACTER.”\n\t\t\tif (strict) {\n\t\t\t\tparseError('character reference outside the permissible Unicode range');\n\t\t\t}\n\t\t\treturn '\\uFFFD';\n\t\t}\n\t\tif (has(decodeMapNumeric, codePoint)) {\n\t\t\tif (strict) {\n\t\t\t\tparseError('disallowed character reference');\n\t\t\t}\n\t\t\treturn decodeMapNumeric[codePoint];\n\t\t}\n\t\tif (strict && contains(invalidReferenceCodePoints, codePoint)) {\n\t\t\tparseError('disallowed character reference');\n\t\t}\n\t\tif (codePoint > 0xFFFF) {\n\t\t\tcodePoint -= 0x10000;\n\t\t\toutput += stringFromCharCode(codePoint >>> 10 & 0x3FF | 0xD800);\n\t\t\tcodePoint = 0xDC00 | codePoint & 0x3FF;\n\t\t}\n\t\toutput += stringFromCharCode(codePoint);\n\t\treturn output;\n\t};\n\n\tvar hexEscape = function(codePoint) {\n\t\treturn '&#x' + codePoint.toString(16).toUpperCase() + ';';\n\t};\n\n\tvar decEscape = function(codePoint) {\n\t\treturn '&#' + codePoint + ';';\n\t};\n\n\tvar parseError = function(message) {\n\t\tthrow Error('Parse error: ' + message);\n\t};\n\n\t/*--------------------------------------------------------------------------*/\n\n\tvar encode = function(string, options) {\n\t\toptions = merge(options, encode.options);\n\t\tvar strict = options.strict;\n\t\tif (strict && regexInvalidRawCodePoint.test(string)) {\n\t\t\tparseError('forbidden code point');\n\t\t}\n\t\tvar encodeEverything = options.encodeEverything;\n\t\tvar useNamedReferences = options.useNamedReferences;\n\t\tvar allowUnsafeSymbols = options.allowUnsafeSymbols;\n\t\tvar escapeCodePoint = options.decimal ? decEscape : hexEscape;\n\n\t\tvar escapeBmpSymbol = function(symbol) {\n\t\t\treturn escapeCodePoint(symbol.charCodeAt(0));\n\t\t};\n\n\t\tif (encodeEverything) {\n\t\t\t// Encode ASCII symbols.\n\t\t\tstring = string.replace(regexAsciiWhitelist, function(symbol) {\n\t\t\t\t// Use named references if requested & possible.\n\t\t\t\tif (useNamedReferences && has(encodeMap, symbol)) {\n\t\t\t\t\treturn '&' + encodeMap[symbol] + ';';\n\t\t\t\t}\n\t\t\t\treturn escapeBmpSymbol(symbol);\n\t\t\t});\n\t\t\t// Shorten a few escapes that represent two symbols, of which at least one\n\t\t\t// is within the ASCII range.\n\t\t\tif (useNamedReferences) {\n\t\t\t\tstring = string\n\t\t\t\t\t.replace(/&gt;\\u20D2/g, '&nvgt;')\n\t\t\t\t\t.replace(/&lt;\\u20D2/g, '&nvlt;')\n\t\t\t\t\t.replace(/&#x66;&#x6A;/g, '&fjlig;');\n\t\t\t}\n\t\t\t// Encode non-ASCII symbols.\n\t\t\tif (useNamedReferences) {\n\t\t\t\t// Encode non-ASCII symbols that can be replaced with a named reference.\n\t\t\t\tstring = string.replace(regexEncodeNonAscii, function(string) {\n\t\t\t\t\t// Note: there is no need to check `has(encodeMap, string)` here.\n\t\t\t\t\treturn '&' + encodeMap[string] + ';';\n\t\t\t\t});\n\t\t\t}\n\t\t\t// Note: any remaining non-ASCII symbols are handled outside of the `if`.\n\t\t} else if (useNamedReferences) {\n\t\t\t// Apply named character references.\n\t\t\t// Encode `<>\"'&` using named character references.\n\t\t\tif (!allowUnsafeSymbols) {\n\t\t\t\tstring = string.replace(regexEscape, function(string) {\n\t\t\t\t\treturn '&' + encodeMap[string] + ';'; // no need to check `has()` here\n\t\t\t\t});\n\t\t\t}\n\t\t\t// Shorten escapes that represent two symbols, of which at least one is\n\t\t\t// `<>\"'&`.\n\t\t\tstring = string\n\t\t\t\t.replace(/&gt;\\u20D2/g, '&nvgt;')\n\t\t\t\t.replace(/&lt;\\u20D2/g, '&nvlt;');\n\t\t\t// Encode non-ASCII symbols that can be replaced with a named reference.\n\t\t\tstring = string.replace(regexEncodeNonAscii, function(string) {\n\t\t\t\t// Note: there is no need to check `has(encodeMap, string)` here.\n\t\t\t\treturn '&' + encodeMap[string] + ';';\n\t\t\t});\n\t\t} else if (!allowUnsafeSymbols) {\n\t\t\t// Encode `<>\"'&` using hexadecimal escapes, now that they’re not handled\n\t\t\t// using named character references.\n\t\t\tstring = string.replace(regexEscape, escapeBmpSymbol);\n\t\t}\n\t\treturn string\n\t\t\t// Encode astral symbols.\n\t\t\t.replace(regexAstralSymbols, function($0) {\n\t\t\t\t// https://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae\n\t\t\t\tvar high = $0.charCodeAt(0);\n\t\t\t\tvar low = $0.charCodeAt(1);\n\t\t\t\tvar codePoint = (high - 0xD800) * 0x400 + low - 0xDC00 + 0x10000;\n\t\t\t\treturn escapeCodePoint(codePoint);\n\t\t\t})\n\t\t\t// Encode any remaining BMP symbols that are not printable ASCII symbols\n\t\t\t// using a hexadecimal escape.\n\t\t\t.replace(regexBmpWhitelist, escapeBmpSymbol);\n\t};\n\t// Expose default options (so they can be overridden globally).\n\tencode.options = {\n\t\t'allowUnsafeSymbols': false,\n\t\t'encodeEverything': false,\n\t\t'strict': false,\n\t\t'useNamedReferences': false,\n\t\t'decimal' : false\n\t};\n\n\tvar decode = function(html, options) {\n\t\toptions = merge(options, decode.options);\n\t\tvar strict = options.strict;\n\t\tif (strict && regexInvalidEntity.test(html)) {\n\t\t\tparseError('malformed character reference');\n\t\t}\n\t\treturn html.replace(regexDecode, function($0, $1, $2, $3, $4, $5, $6, $7, $8) {\n\t\t\tvar codePoint;\n\t\t\tvar semicolon;\n\t\t\tvar decDigits;\n\t\t\tvar hexDigits;\n\t\t\tvar reference;\n\t\t\tvar next;\n\n\t\t\tif ($1) {\n\t\t\t\treference = $1;\n\t\t\t\t// Note: there is no need to check `has(decodeMap, reference)`.\n\t\t\t\treturn decodeMap[reference];\n\t\t\t}\n\n\t\t\tif ($2) {\n\t\t\t\t// Decode named character references without trailing `;`, e.g. `&amp`.\n\t\t\t\t// This is only a parse error if it gets converted to `&`, or if it is\n\t\t\t\t// followed by `=` in an attribute context.\n\t\t\t\treference = $2;\n\t\t\t\tnext = $3;\n\t\t\t\tif (next && options.isAttributeValue) {\n\t\t\t\t\tif (strict && next == '=') {\n\t\t\t\t\t\tparseError('`&` did not start a character reference');\n\t\t\t\t\t}\n\t\t\t\t\treturn $0;\n\t\t\t\t} else {\n\t\t\t\t\tif (strict) {\n\t\t\t\t\t\tparseError(\n\t\t\t\t\t\t\t'named character reference was not terminated by a semicolon'\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t\t// Note: there is no need to check `has(decodeMapLegacy, reference)`.\n\t\t\t\t\treturn decodeMapLegacy[reference] + (next || '');\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ($4) {\n\t\t\t\t// Decode decimal escapes, e.g. `&#119558;`.\n\t\t\t\tdecDigits = $4;\n\t\t\t\tsemicolon = $5;\n\t\t\t\tif (strict && !semicolon) {\n\t\t\t\t\tparseError('character reference was not terminated by a semicolon');\n\t\t\t\t}\n\t\t\t\tcodePoint = parseInt(decDigits, 10);\n\t\t\t\treturn codePointToSymbol(codePoint, strict);\n\t\t\t}\n\n\t\t\tif ($6) {\n\t\t\t\t// Decode hexadecimal escapes, e.g. `&#x1D306;`.\n\t\t\t\thexDigits = $6;\n\t\t\t\tsemicolon = $7;\n\t\t\t\tif (strict && !semicolon) {\n\t\t\t\t\tparseError('character reference was not terminated by a semicolon');\n\t\t\t\t}\n\t\t\t\tcodePoint = parseInt(hexDigits, 16);\n\t\t\t\treturn codePointToSymbol(codePoint, strict);\n\t\t\t}\n\n\t\t\t// If we’re still here, `if ($7)` is implied; it’s an ambiguous\n\t\t\t// ampersand for sure. https://mths.be/notes/ambiguous-ampersands\n\t\t\tif (strict) {\n\t\t\t\tparseError(\n\t\t\t\t\t'named character reference was not terminated by a semicolon'\n\t\t\t\t);\n\t\t\t}\n\t\t\treturn $0;\n\t\t});\n\t};\n\t// Expose default options (so they can be overridden globally).\n\tdecode.options = {\n\t\t'isAttributeValue': false,\n\t\t'strict': false\n\t};\n\n\tvar escape = function(string) {\n\t\treturn string.replace(regexEscape, function($0) {\n\t\t\t// Note: there is no need to check `has(escapeMap, $0)` here.\n\t\t\treturn escapeMap[$0];\n\t\t});\n\t};\n\n\t/*--------------------------------------------------------------------------*/\n\n\tvar he = {\n\t\t'version': '1.2.0',\n\t\t'encode': encode,\n\t\t'decode': decode,\n\t\t'escape': escape,\n\t\t'unescape': decode\n\t};\n\n\t// Some AMD build optimizers, like r.js, check for specific condition patterns\n\t// like the following:\n\tif (\n\t\ttypeof define == 'function' &&\n\t\ttypeof define.amd == 'object' &&\n\t\tdefine.amd\n\t) {\n\t\tdefine(function() {\n\t\t\treturn he;\n\t\t});\n\t}\telse if (freeExports && !freeExports.nodeType) {\n\t\tif (freeModule) { // in Node.js, io.js, or RingoJS v0.8.0+\n\t\t\tfreeModule.exports = he;\n\t\t} else { // in Narwhal or RingoJS v0.7.0-\n\t\t\tfor (var key in he) {\n\t\t\t\thas(he, key) && (freeExports[key] = he[key]);\n\t\t\t}\n\t\t}\n\t} else { // in Rhino or a web browser\n\t\troot.he = he;\n\t}\n\n}(this));\n","module.exports = function(module) {\n\tif (!module.webpackPolyfill) {\n\t\tmodule.deprecate = function() {};\n\t\tmodule.paths = [];\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n","function _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nmodule.exports = _isNativeReflectConstruct;","var getPrototypeOf = require(\"./getPrototypeOf\");\n\nfunction _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = getPrototypeOf(object);\n    if (object === null) break;\n  }\n\n  return object;\n}\n\nmodule.exports = _superPropBase;","function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nmodule.exports = _arrayWithHoles;","function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nmodule.exports = _iterableToArrayLimit;","function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nmodule.exports = _nonIterableRest;","// can-promise has a crash in some versions of react native that dont have\n// standard global objects\n// https://github.com/soldair/node-qrcode/issues/157\n\nmodule.exports = function () {\n  return typeof Promise === 'function' && Promise.prototype && Promise.prototype.then\n}\n","var BufferUtil = require('../utils/buffer')\nvar Utils = require('./utils')\nvar ECLevel = require('./error-correction-level')\nvar BitBuffer = require('./bit-buffer')\nvar BitMatrix = require('./bit-matrix')\nvar AlignmentPattern = require('./alignment-pattern')\nvar FinderPattern = require('./finder-pattern')\nvar MaskPattern = require('./mask-pattern')\nvar ECCode = require('./error-correction-code')\nvar ReedSolomonEncoder = require('./reed-solomon-encoder')\nvar Version = require('./version')\nvar FormatInfo = require('./format-info')\nvar Mode = require('./mode')\nvar Segments = require('./segments')\nvar isArray = require('isarray')\n\n/**\n * QRCode for JavaScript\n *\n * modified by Ryan Day for nodejs support\n * Copyright (c) 2011 Ryan Day\n *\n * Licensed under the MIT license:\n *   http://www.opensource.org/licenses/mit-license.php\n *\n//---------------------------------------------------------------------\n// QRCode for JavaScript\n//\n// Copyright (c) 2009 Kazuhiko Arase\n//\n// URL: http://www.d-project.com/\n//\n// Licensed under the MIT license:\n//   http://www.opensource.org/licenses/mit-license.php\n//\n// The word \"QR Code\" is registered trademark of\n// DENSO WAVE INCORPORATED\n//   http://www.denso-wave.com/qrcode/faqpatent-e.html\n//\n//---------------------------------------------------------------------\n*/\n\n/**\n * Add finder patterns bits to matrix\n *\n * @param  {BitMatrix} matrix  Modules matrix\n * @param  {Number}    version QR Code version\n */\nfunction setupFinderPattern (matrix, version) {\n  var size = matrix.size\n  var pos = FinderPattern.getPositions(version)\n\n  for (var i = 0; i < pos.length; i++) {\n    var row = pos[i][0]\n    var col = pos[i][1]\n\n    for (var r = -1; r <= 7; r++) {\n      if (row + r <= -1 || size <= row + r) continue\n\n      for (var c = -1; c <= 7; c++) {\n        if (col + c <= -1 || size <= col + c) continue\n\n        if ((r >= 0 && r <= 6 && (c === 0 || c === 6)) ||\n          (c >= 0 && c <= 6 && (r === 0 || r === 6)) ||\n          (r >= 2 && r <= 4 && c >= 2 && c <= 4)) {\n          matrix.set(row + r, col + c, true, true)\n        } else {\n          matrix.set(row + r, col + c, false, true)\n        }\n      }\n    }\n  }\n}\n\n/**\n * Add timing pattern bits to matrix\n *\n * Note: this function must be called before {@link setupAlignmentPattern}\n *\n * @param  {BitMatrix} matrix Modules matrix\n */\nfunction setupTimingPattern (matrix) {\n  var size = matrix.size\n\n  for (var r = 8; r < size - 8; r++) {\n    var value = r % 2 === 0\n    matrix.set(r, 6, value, true)\n    matrix.set(6, r, value, true)\n  }\n}\n\n/**\n * Add alignment patterns bits to matrix\n *\n * Note: this function must be called after {@link setupTimingPattern}\n *\n * @param  {BitMatrix} matrix  Modules matrix\n * @param  {Number}    version QR Code version\n */\nfunction setupAlignmentPattern (matrix, version) {\n  var pos = AlignmentPattern.getPositions(version)\n\n  for (var i = 0; i < pos.length; i++) {\n    var row = pos[i][0]\n    var col = pos[i][1]\n\n    for (var r = -2; r <= 2; r++) {\n      for (var c = -2; c <= 2; c++) {\n        if (r === -2 || r === 2 || c === -2 || c === 2 ||\n          (r === 0 && c === 0)) {\n          matrix.set(row + r, col + c, true, true)\n        } else {\n          matrix.set(row + r, col + c, false, true)\n        }\n      }\n    }\n  }\n}\n\n/**\n * Add version info bits to matrix\n *\n * @param  {BitMatrix} matrix  Modules matrix\n * @param  {Number}    version QR Code version\n */\nfunction setupVersionInfo (matrix, version) {\n  var size = matrix.size\n  var bits = Version.getEncodedBits(version)\n  var row, col, mod\n\n  for (var i = 0; i < 18; i++) {\n    row = Math.floor(i / 3)\n    col = i % 3 + size - 8 - 3\n    mod = ((bits >> i) & 1) === 1\n\n    matrix.set(row, col, mod, true)\n    matrix.set(col, row, mod, true)\n  }\n}\n\n/**\n * Add format info bits to matrix\n *\n * @param  {BitMatrix} matrix               Modules matrix\n * @param  {ErrorCorrectionLevel}    errorCorrectionLevel Error correction level\n * @param  {Number}    maskPattern          Mask pattern reference value\n */\nfunction setupFormatInfo (matrix, errorCorrectionLevel, maskPattern) {\n  var size = matrix.size\n  var bits = FormatInfo.getEncodedBits(errorCorrectionLevel, maskPattern)\n  var i, mod\n\n  for (i = 0; i < 15; i++) {\n    mod = ((bits >> i) & 1) === 1\n\n    // vertical\n    if (i < 6) {\n      matrix.set(i, 8, mod, true)\n    } else if (i < 8) {\n      matrix.set(i + 1, 8, mod, true)\n    } else {\n      matrix.set(size - 15 + i, 8, mod, true)\n    }\n\n    // horizontal\n    if (i < 8) {\n      matrix.set(8, size - i - 1, mod, true)\n    } else if (i < 9) {\n      matrix.set(8, 15 - i - 1 + 1, mod, true)\n    } else {\n      matrix.set(8, 15 - i - 1, mod, true)\n    }\n  }\n\n  // fixed module\n  matrix.set(size - 8, 8, 1, true)\n}\n\n/**\n * Add encoded data bits to matrix\n *\n * @param  {BitMatrix} matrix Modules matrix\n * @param  {Buffer}    data   Data codewords\n */\nfunction setupData (matrix, data) {\n  var size = matrix.size\n  var inc = -1\n  var row = size - 1\n  var bitIndex = 7\n  var byteIndex = 0\n\n  for (var col = size - 1; col > 0; col -= 2) {\n    if (col === 6) col--\n\n    while (true) {\n      for (var c = 0; c < 2; c++) {\n        if (!matrix.isReserved(row, col - c)) {\n          var dark = false\n\n          if (byteIndex < data.length) {\n            dark = (((data[byteIndex] >>> bitIndex) & 1) === 1)\n          }\n\n          matrix.set(row, col - c, dark)\n          bitIndex--\n\n          if (bitIndex === -1) {\n            byteIndex++\n            bitIndex = 7\n          }\n        }\n      }\n\n      row += inc\n\n      if (row < 0 || size <= row) {\n        row -= inc\n        inc = -inc\n        break\n      }\n    }\n  }\n}\n\n/**\n * Create encoded codewords from data input\n *\n * @param  {Number}   version              QR Code version\n * @param  {ErrorCorrectionLevel}   errorCorrectionLevel Error correction level\n * @param  {ByteData} data                 Data input\n * @return {Buffer}                        Buffer containing encoded codewords\n */\nfunction createData (version, errorCorrectionLevel, segments) {\n  // Prepare data buffer\n  var buffer = new BitBuffer()\n\n  segments.forEach(function (data) {\n    // prefix data with mode indicator (4 bits)\n    buffer.put(data.mode.bit, 4)\n\n    // Prefix data with character count indicator.\n    // The character count indicator is a string of bits that represents the\n    // number of characters that are being encoded.\n    // The character count indicator must be placed after the mode indicator\n    // and must be a certain number of bits long, depending on the QR version\n    // and data mode\n    // @see {@link Mode.getCharCountIndicator}.\n    buffer.put(data.getLength(), Mode.getCharCountIndicator(data.mode, version))\n\n    // add binary data sequence to buffer\n    data.write(buffer)\n  })\n\n  // Calculate required number of bits\n  var totalCodewords = Utils.getSymbolTotalCodewords(version)\n  var ecTotalCodewords = ECCode.getTotalCodewordsCount(version, errorCorrectionLevel)\n  var dataTotalCodewordsBits = (totalCodewords - ecTotalCodewords) * 8\n\n  // Add a terminator.\n  // If the bit string is shorter than the total number of required bits,\n  // a terminator of up to four 0s must be added to the right side of the string.\n  // If the bit string is more than four bits shorter than the required number of bits,\n  // add four 0s to the end.\n  if (buffer.getLengthInBits() + 4 <= dataTotalCodewordsBits) {\n    buffer.put(0, 4)\n  }\n\n  // If the bit string is fewer than four bits shorter, add only the number of 0s that\n  // are needed to reach the required number of bits.\n\n  // After adding the terminator, if the number of bits in the string is not a multiple of 8,\n  // pad the string on the right with 0s to make the string's length a multiple of 8.\n  while (buffer.getLengthInBits() % 8 !== 0) {\n    buffer.putBit(0)\n  }\n\n  // Add pad bytes if the string is still shorter than the total number of required bits.\n  // Extend the buffer to fill the data capacity of the symbol corresponding to\n  // the Version and Error Correction Level by adding the Pad Codewords 11101100 (0xEC)\n  // and 00010001 (0x11) alternately.\n  var remainingByte = (dataTotalCodewordsBits - buffer.getLengthInBits()) / 8\n  for (var i = 0; i < remainingByte; i++) {\n    buffer.put(i % 2 ? 0x11 : 0xEC, 8)\n  }\n\n  return createCodewords(buffer, version, errorCorrectionLevel)\n}\n\n/**\n * Encode input data with Reed-Solomon and return codewords with\n * relative error correction bits\n *\n * @param  {BitBuffer} bitBuffer            Data to encode\n * @param  {Number}    version              QR Code version\n * @param  {ErrorCorrectionLevel} errorCorrectionLevel Error correction level\n * @return {Buffer}                         Buffer containing encoded codewords\n */\nfunction createCodewords (bitBuffer, version, errorCorrectionLevel) {\n  // Total codewords for this QR code version (Data + Error correction)\n  var totalCodewords = Utils.getSymbolTotalCodewords(version)\n\n  // Total number of error correction codewords\n  var ecTotalCodewords = ECCode.getTotalCodewordsCount(version, errorCorrectionLevel)\n\n  // Total number of data codewords\n  var dataTotalCodewords = totalCodewords - ecTotalCodewords\n\n  // Total number of blocks\n  var ecTotalBlocks = ECCode.getBlocksCount(version, errorCorrectionLevel)\n\n  // Calculate how many blocks each group should contain\n  var blocksInGroup2 = totalCodewords % ecTotalBlocks\n  var blocksInGroup1 = ecTotalBlocks - blocksInGroup2\n\n  var totalCodewordsInGroup1 = Math.floor(totalCodewords / ecTotalBlocks)\n\n  var dataCodewordsInGroup1 = Math.floor(dataTotalCodewords / ecTotalBlocks)\n  var dataCodewordsInGroup2 = dataCodewordsInGroup1 + 1\n\n  // Number of EC codewords is the same for both groups\n  var ecCount = totalCodewordsInGroup1 - dataCodewordsInGroup1\n\n  // Initialize a Reed-Solomon encoder with a generator polynomial of degree ecCount\n  var rs = new ReedSolomonEncoder(ecCount)\n\n  var offset = 0\n  var dcData = new Array(ecTotalBlocks)\n  var ecData = new Array(ecTotalBlocks)\n  var maxDataSize = 0\n  var buffer = BufferUtil.from(bitBuffer.buffer)\n\n  // Divide the buffer into the required number of blocks\n  for (var b = 0; b < ecTotalBlocks; b++) {\n    var dataSize = b < blocksInGroup1 ? dataCodewordsInGroup1 : dataCodewordsInGroup2\n\n    // extract a block of data from buffer\n    dcData[b] = buffer.slice(offset, offset + dataSize)\n\n    // Calculate EC codewords for this data block\n    ecData[b] = rs.encode(dcData[b])\n\n    offset += dataSize\n    maxDataSize = Math.max(maxDataSize, dataSize)\n  }\n\n  // Create final data\n  // Interleave the data and error correction codewords from each block\n  var data = BufferUtil.alloc(totalCodewords)\n  var index = 0\n  var i, r\n\n  // Add data codewords\n  for (i = 0; i < maxDataSize; i++) {\n    for (r = 0; r < ecTotalBlocks; r++) {\n      if (i < dcData[r].length) {\n        data[index++] = dcData[r][i]\n      }\n    }\n  }\n\n  // Apped EC codewords\n  for (i = 0; i < ecCount; i++) {\n    for (r = 0; r < ecTotalBlocks; r++) {\n      data[index++] = ecData[r][i]\n    }\n  }\n\n  return data\n}\n\n/**\n * Build QR Code symbol\n *\n * @param  {String} data                 Input string\n * @param  {Number} version              QR Code version\n * @param  {ErrorCorretionLevel} errorCorrectionLevel Error level\n * @param  {MaskPattern} maskPattern     Mask pattern\n * @return {Object}                      Object containing symbol data\n */\nfunction createSymbol (data, version, errorCorrectionLevel, maskPattern) {\n  var segments\n\n  if (isArray(data)) {\n    segments = Segments.fromArray(data)\n  } else if (typeof data === 'string') {\n    var estimatedVersion = version\n\n    if (!estimatedVersion) {\n      var rawSegments = Segments.rawSplit(data)\n\n      // Estimate best version that can contain raw splitted segments\n      estimatedVersion = Version.getBestVersionForData(rawSegments,\n        errorCorrectionLevel)\n    }\n\n    // Build optimized segments\n    // If estimated version is undefined, try with the highest version\n    segments = Segments.fromString(data, estimatedVersion || 40)\n  } else {\n    throw new Error('Invalid data')\n  }\n\n  // Get the min version that can contain data\n  var bestVersion = Version.getBestVersionForData(segments,\n      errorCorrectionLevel)\n\n  // If no version is found, data cannot be stored\n  if (!bestVersion) {\n    throw new Error('The amount of data is too big to be stored in a QR Code')\n  }\n\n  // If not specified, use min version as default\n  if (!version) {\n    version = bestVersion\n\n  // Check if the specified version can contain the data\n  } else if (version < bestVersion) {\n    throw new Error('\\n' +\n      'The chosen QR Code version cannot contain this amount of data.\\n' +\n      'Minimum version required to store current data is: ' + bestVersion + '.\\n'\n    )\n  }\n\n  var dataBits = createData(version, errorCorrectionLevel, segments)\n\n  // Allocate matrix buffer\n  var moduleCount = Utils.getSymbolSize(version)\n  var modules = new BitMatrix(moduleCount)\n\n  // Add function modules\n  setupFinderPattern(modules, version)\n  setupTimingPattern(modules)\n  setupAlignmentPattern(modules, version)\n\n  // Add temporary dummy bits for format info just to set them as reserved.\n  // This is needed to prevent these bits from being masked by {@link MaskPattern.applyMask}\n  // since the masking operation must be performed only on the encoding region.\n  // These blocks will be replaced with correct values later in code.\n  setupFormatInfo(modules, errorCorrectionLevel, 0)\n\n  if (version >= 7) {\n    setupVersionInfo(modules, version)\n  }\n\n  // Add data codewords\n  setupData(modules, dataBits)\n\n  if (isNaN(maskPattern)) {\n    // Find best mask pattern\n    maskPattern = MaskPattern.getBestMask(modules,\n      setupFormatInfo.bind(null, modules, errorCorrectionLevel))\n  }\n\n  // Apply mask pattern\n  MaskPattern.applyMask(maskPattern, modules)\n\n  // Replace format info bits with correct values\n  setupFormatInfo(modules, errorCorrectionLevel, maskPattern)\n\n  return {\n    modules: modules,\n    version: version,\n    errorCorrectionLevel: errorCorrectionLevel,\n    maskPattern: maskPattern,\n    segments: segments\n  }\n}\n\n/**\n * QR Code\n *\n * @param {String | Array} data                 Input data\n * @param {Object} options                      Optional configurations\n * @param {Number} options.version              QR Code version\n * @param {String} options.errorCorrectionLevel Error correction level\n * @param {Function} options.toSJISFunc         Helper func to convert utf8 to sjis\n */\nexports.create = function create (data, options) {\n  if (typeof data === 'undefined' || data === '') {\n    throw new Error('No input text')\n  }\n\n  var errorCorrectionLevel = ECLevel.M\n  var version\n  var mask\n\n  if (typeof options !== 'undefined') {\n    // Use higher error correction level as default\n    errorCorrectionLevel = ECLevel.from(options.errorCorrectionLevel, ECLevel.M)\n    version = Version.from(options.version)\n    mask = MaskPattern.from(options.maskPattern)\n\n    if (options.toSJISFunc) {\n      Utils.setToSJISFunction(options.toSJISFunc)\n    }\n  }\n\n  return createSymbol(data, version, errorCorrectionLevel, mask)\n}\n","function BitBuffer () {\n  this.buffer = []\n  this.length = 0\n}\n\nBitBuffer.prototype = {\n\n  get: function (index) {\n    var bufIndex = Math.floor(index / 8)\n    return ((this.buffer[bufIndex] >>> (7 - index % 8)) & 1) === 1\n  },\n\n  put: function (num, length) {\n    for (var i = 0; i < length; i++) {\n      this.putBit(((num >>> (length - i - 1)) & 1) === 1)\n    }\n  },\n\n  getLengthInBits: function () {\n    return this.length\n  },\n\n  putBit: function (bit) {\n    var bufIndex = Math.floor(this.length / 8)\n    if (this.buffer.length <= bufIndex) {\n      this.buffer.push(0)\n    }\n\n    if (bit) {\n      this.buffer[bufIndex] |= (0x80 >>> (this.length % 8))\n    }\n\n    this.length++\n  }\n}\n\nmodule.exports = BitBuffer\n","var BufferUtil = require('../utils/buffer')\n\n/**\n * Helper class to handle QR Code symbol modules\n *\n * @param {Number} size Symbol size\n */\nfunction BitMatrix (size) {\n  if (!size || size < 1) {\n    throw new Error('BitMatrix size must be defined and greater than 0')\n  }\n\n  this.size = size\n  this.data = BufferUtil.alloc(size * size)\n  this.reservedBit = BufferUtil.alloc(size * size)\n}\n\n/**\n * Set bit value at specified location\n * If reserved flag is set, this bit will be ignored during masking process\n *\n * @param {Number}  row\n * @param {Number}  col\n * @param {Boolean} value\n * @param {Boolean} reserved\n */\nBitMatrix.prototype.set = function (row, col, value, reserved) {\n  var index = row * this.size + col\n  this.data[index] = value\n  if (reserved) this.reservedBit[index] = true\n}\n\n/**\n * Returns bit value at specified location\n *\n * @param  {Number}  row\n * @param  {Number}  col\n * @return {Boolean}\n */\nBitMatrix.prototype.get = function (row, col) {\n  return this.data[row * this.size + col]\n}\n\n/**\n * Applies xor operator at specified location\n * (used during masking process)\n *\n * @param {Number}  row\n * @param {Number}  col\n * @param {Boolean} value\n */\nBitMatrix.prototype.xor = function (row, col, value) {\n  this.data[row * this.size + col] ^= value\n}\n\n/**\n * Check if bit at specified location is reserved\n *\n * @param {Number}   row\n * @param {Number}   col\n * @return {Boolean}\n */\nBitMatrix.prototype.isReserved = function (row, col) {\n  return this.reservedBit[row * this.size + col]\n}\n\nmodule.exports = BitMatrix\n","/**\n * Alignment pattern are fixed reference pattern in defined positions\n * in a matrix symbology, which enables the decode software to re-synchronise\n * the coordinate mapping of the image modules in the event of moderate amounts\n * of distortion of the image.\n *\n * Alignment patterns are present only in QR Code symbols of version 2 or larger\n * and their number depends on the symbol version.\n */\n\nvar getSymbolSize = require('./utils').getSymbolSize\n\n/**\n * Calculate the row/column coordinates of the center module of each alignment pattern\n * for the specified QR Code version.\n *\n * The alignment patterns are positioned symmetrically on either side of the diagonal\n * running from the top left corner of the symbol to the bottom right corner.\n *\n * Since positions are simmetrical only half of the coordinates are returned.\n * Each item of the array will represent in turn the x and y coordinate.\n * @see {@link getPositions}\n *\n * @param  {Number} version QR Code version\n * @return {Array}          Array of coordinate\n */\nexports.getRowColCoords = function getRowColCoords (version) {\n  if (version === 1) return []\n\n  var posCount = Math.floor(version / 7) + 2\n  var size = getSymbolSize(version)\n  var intervals = size === 145 ? 26 : Math.ceil((size - 13) / (2 * posCount - 2)) * 2\n  var positions = [size - 7] // Last coord is always (size - 7)\n\n  for (var i = 1; i < posCount - 1; i++) {\n    positions[i] = positions[i - 1] - intervals\n  }\n\n  positions.push(6) // First coord is always 6\n\n  return positions.reverse()\n}\n\n/**\n * Returns an array containing the positions of each alignment pattern.\n * Each array's element represent the center point of the pattern as (x, y) coordinates\n *\n * Coordinates are calculated expanding the row/column coordinates returned by {@link getRowColCoords}\n * and filtering out the items that overlaps with finder pattern\n *\n * @example\n * For a Version 7 symbol {@link getRowColCoords} returns values 6, 22 and 38.\n * The alignment patterns, therefore, are to be centered on (row, column)\n * positions (6,22), (22,6), (22,22), (22,38), (38,22), (38,38).\n * Note that the coordinates (6,6), (6,38), (38,6) are occupied by finder patterns\n * and are not therefore used for alignment patterns.\n *\n * var pos = getPositions(7)\n * // [[6,22], [22,6], [22,22], [22,38], [38,22], [38,38]]\n *\n * @param  {Number} version QR Code version\n * @return {Array}          Array of coordinates\n */\nexports.getPositions = function getPositions (version) {\n  var coords = []\n  var pos = exports.getRowColCoords(version)\n  var posLength = pos.length\n\n  for (var i = 0; i < posLength; i++) {\n    for (var j = 0; j < posLength; j++) {\n      // Skip if position is occupied by finder patterns\n      if ((i === 0 && j === 0) ||             // top-left\n          (i === 0 && j === posLength - 1) || // bottom-left\n          (i === posLength - 1 && j === 0)) { // top-right\n        continue\n      }\n\n      coords.push([pos[i], pos[j]])\n    }\n  }\n\n  return coords\n}\n","var getSymbolSize = require('./utils').getSymbolSize\nvar FINDER_PATTERN_SIZE = 7\n\n/**\n * Returns an array containing the positions of each finder pattern.\n * Each array's element represent the top-left point of the pattern as (x, y) coordinates\n *\n * @param  {Number} version QR Code version\n * @return {Array}          Array of coordinates\n */\nexports.getPositions = function getPositions (version) {\n  var size = getSymbolSize(version)\n\n  return [\n    // top-left\n    [0, 0],\n    // top-right\n    [size - FINDER_PATTERN_SIZE, 0],\n    // bottom-left\n    [0, size - FINDER_PATTERN_SIZE]\n  ]\n}\n","/**\n * Data mask pattern reference\n * @type {Object}\n */\nexports.Patterns = {\n  PATTERN000: 0,\n  PATTERN001: 1,\n  PATTERN010: 2,\n  PATTERN011: 3,\n  PATTERN100: 4,\n  PATTERN101: 5,\n  PATTERN110: 6,\n  PATTERN111: 7\n}\n\n/**\n * Weighted penalty scores for the undesirable features\n * @type {Object}\n */\nvar PenaltyScores = {\n  N1: 3,\n  N2: 3,\n  N3: 40,\n  N4: 10\n}\n\n/**\n * Check if mask pattern value is valid\n *\n * @param  {Number}  mask    Mask pattern\n * @return {Boolean}         true if valid, false otherwise\n */\nexports.isValid = function isValid (mask) {\n  return mask != null && mask !== '' && !isNaN(mask) && mask >= 0 && mask <= 7\n}\n\n/**\n * Returns mask pattern from a value.\n * If value is not valid, returns undefined\n *\n * @param  {Number|String} value        Mask pattern value\n * @return {Number}                     Valid mask pattern or undefined\n */\nexports.from = function from (value) {\n  return exports.isValid(value) ? parseInt(value, 10) : undefined\n}\n\n/**\n* Find adjacent modules in row/column with the same color\n* and assign a penalty value.\n*\n* Points: N1 + i\n* i is the amount by which the number of adjacent modules of the same color exceeds 5\n*/\nexports.getPenaltyN1 = function getPenaltyN1 (data) {\n  var size = data.size\n  var points = 0\n  var sameCountCol = 0\n  var sameCountRow = 0\n  var lastCol = null\n  var lastRow = null\n\n  for (var row = 0; row < size; row++) {\n    sameCountCol = sameCountRow = 0\n    lastCol = lastRow = null\n\n    for (var col = 0; col < size; col++) {\n      var module = data.get(row, col)\n      if (module === lastCol) {\n        sameCountCol++\n      } else {\n        if (sameCountCol >= 5) points += PenaltyScores.N1 + (sameCountCol - 5)\n        lastCol = module\n        sameCountCol = 1\n      }\n\n      module = data.get(col, row)\n      if (module === lastRow) {\n        sameCountRow++\n      } else {\n        if (sameCountRow >= 5) points += PenaltyScores.N1 + (sameCountRow - 5)\n        lastRow = module\n        sameCountRow = 1\n      }\n    }\n\n    if (sameCountCol >= 5) points += PenaltyScores.N1 + (sameCountCol - 5)\n    if (sameCountRow >= 5) points += PenaltyScores.N1 + (sameCountRow - 5)\n  }\n\n  return points\n}\n\n/**\n * Find 2x2 blocks with the same color and assign a penalty value\n *\n * Points: N2 * (m - 1) * (n - 1)\n */\nexports.getPenaltyN2 = function getPenaltyN2 (data) {\n  var size = data.size\n  var points = 0\n\n  for (var row = 0; row < size - 1; row++) {\n    for (var col = 0; col < size - 1; col++) {\n      var last = data.get(row, col) +\n        data.get(row, col + 1) +\n        data.get(row + 1, col) +\n        data.get(row + 1, col + 1)\n\n      if (last === 4 || last === 0) points++\n    }\n  }\n\n  return points * PenaltyScores.N2\n}\n\n/**\n * Find 1:1:3:1:1 ratio (dark:light:dark:light:dark) pattern in row/column,\n * preceded or followed by light area 4 modules wide\n *\n * Points: N3 * number of pattern found\n */\nexports.getPenaltyN3 = function getPenaltyN3 (data) {\n  var size = data.size\n  var points = 0\n  var bitsCol = 0\n  var bitsRow = 0\n\n  for (var row = 0; row < size; row++) {\n    bitsCol = bitsRow = 0\n    for (var col = 0; col < size; col++) {\n      bitsCol = ((bitsCol << 1) & 0x7FF) | data.get(row, col)\n      if (col >= 10 && (bitsCol === 0x5D0 || bitsCol === 0x05D)) points++\n\n      bitsRow = ((bitsRow << 1) & 0x7FF) | data.get(col, row)\n      if (col >= 10 && (bitsRow === 0x5D0 || bitsRow === 0x05D)) points++\n    }\n  }\n\n  return points * PenaltyScores.N3\n}\n\n/**\n * Calculate proportion of dark modules in entire symbol\n *\n * Points: N4 * k\n *\n * k is the rating of the deviation of the proportion of dark modules\n * in the symbol from 50% in steps of 5%\n */\nexports.getPenaltyN4 = function getPenaltyN4 (data) {\n  var darkCount = 0\n  var modulesCount = data.data.length\n\n  for (var i = 0; i < modulesCount; i++) darkCount += data.data[i]\n\n  var k = Math.abs(Math.ceil((darkCount * 100 / modulesCount) / 5) - 10)\n\n  return k * PenaltyScores.N4\n}\n\n/**\n * Return mask value at given position\n *\n * @param  {Number} maskPattern Pattern reference value\n * @param  {Number} i           Row\n * @param  {Number} j           Column\n * @return {Boolean}            Mask value\n */\nfunction getMaskAt (maskPattern, i, j) {\n  switch (maskPattern) {\n    case exports.Patterns.PATTERN000: return (i + j) % 2 === 0\n    case exports.Patterns.PATTERN001: return i % 2 === 0\n    case exports.Patterns.PATTERN010: return j % 3 === 0\n    case exports.Patterns.PATTERN011: return (i + j) % 3 === 0\n    case exports.Patterns.PATTERN100: return (Math.floor(i / 2) + Math.floor(j / 3)) % 2 === 0\n    case exports.Patterns.PATTERN101: return (i * j) % 2 + (i * j) % 3 === 0\n    case exports.Patterns.PATTERN110: return ((i * j) % 2 + (i * j) % 3) % 2 === 0\n    case exports.Patterns.PATTERN111: return ((i * j) % 3 + (i + j) % 2) % 2 === 0\n\n    default: throw new Error('bad maskPattern:' + maskPattern)\n  }\n}\n\n/**\n * Apply a mask pattern to a BitMatrix\n *\n * @param  {Number}    pattern Pattern reference number\n * @param  {BitMatrix} data    BitMatrix data\n */\nexports.applyMask = function applyMask (pattern, data) {\n  var size = data.size\n\n  for (var col = 0; col < size; col++) {\n    for (var row = 0; row < size; row++) {\n      if (data.isReserved(row, col)) continue\n      data.xor(row, col, getMaskAt(pattern, row, col))\n    }\n  }\n}\n\n/**\n * Returns the best mask pattern for data\n *\n * @param  {BitMatrix} data\n * @return {Number} Mask pattern reference number\n */\nexports.getBestMask = function getBestMask (data, setupFormatFunc) {\n  var numPatterns = Object.keys(exports.Patterns).length\n  var bestPattern = 0\n  var lowerPenalty = Infinity\n\n  for (var p = 0; p < numPatterns; p++) {\n    setupFormatFunc(p)\n    exports.applyMask(p, data)\n\n    // Calculate penalty\n    var penalty =\n      exports.getPenaltyN1(data) +\n      exports.getPenaltyN2(data) +\n      exports.getPenaltyN3(data) +\n      exports.getPenaltyN4(data)\n\n    // Undo previously applied mask\n    exports.applyMask(p, data)\n\n    if (penalty < lowerPenalty) {\n      lowerPenalty = penalty\n      bestPattern = p\n    }\n  }\n\n  return bestPattern\n}\n","var BufferUtil = require('../utils/buffer')\nvar Polynomial = require('./polynomial')\nvar Buffer = require('buffer').Buffer\n\nfunction ReedSolomonEncoder (degree) {\n  this.genPoly = undefined\n  this.degree = degree\n\n  if (this.degree) this.initialize(this.degree)\n}\n\n/**\n * Initialize the encoder.\n * The input param should correspond to the number of error correction codewords.\n *\n * @param  {Number} degree\n */\nReedSolomonEncoder.prototype.initialize = function initialize (degree) {\n  // create an irreducible generator polynomial\n  this.degree = degree\n  this.genPoly = Polynomial.generateECPolynomial(this.degree)\n}\n\n/**\n * Encodes a chunk of data\n *\n * @param  {Buffer} data Buffer containing input data\n * @return {Buffer}      Buffer containing encoded data\n */\nReedSolomonEncoder.prototype.encode = function encode (data) {\n  if (!this.genPoly) {\n    throw new Error('Encoder not initialized')\n  }\n\n  // Calculate EC for this data block\n  // extends data size to data+genPoly size\n  var pad = BufferUtil.alloc(this.degree)\n  var paddedData = Buffer.concat([data, pad], data.length + this.degree)\n\n  // The error correction codewords are the remainder after dividing the data codewords\n  // by a generator polynomial\n  var remainder = Polynomial.mod(paddedData, this.genPoly)\n\n  // return EC data blocks (last n byte, where n is the degree of genPoly)\n  // If coefficients number in remainder are less than genPoly degree,\n  // pad with 0s to the left to reach the needed number of coefficients\n  var start = this.degree - remainder.length\n  if (start > 0) {\n    var buff = BufferUtil.alloc(this.degree)\n    remainder.copy(buff, start)\n\n    return buff\n  }\n\n  return remainder\n}\n\nmodule.exports = ReedSolomonEncoder\n","var BufferUtil = require('../utils/buffer')\nvar GF = require('./galois-field')\n\n/**\n * Multiplies two polynomials inside Galois Field\n *\n * @param  {Buffer} p1 Polynomial\n * @param  {Buffer} p2 Polynomial\n * @return {Buffer}    Product of p1 and p2\n */\nexports.mul = function mul (p1, p2) {\n  var coeff = BufferUtil.alloc(p1.length + p2.length - 1)\n\n  for (var i = 0; i < p1.length; i++) {\n    for (var j = 0; j < p2.length; j++) {\n      coeff[i + j] ^= GF.mul(p1[i], p2[j])\n    }\n  }\n\n  return coeff\n}\n\n/**\n * Calculate the remainder of polynomials division\n *\n * @param  {Buffer} divident Polynomial\n * @param  {Buffer} divisor  Polynomial\n * @return {Buffer}          Remainder\n */\nexports.mod = function mod (divident, divisor) {\n  var result = BufferUtil.from(divident)\n\n  while ((result.length - divisor.length) >= 0) {\n    var coeff = result[0]\n\n    for (var i = 0; i < divisor.length; i++) {\n      result[i] ^= GF.mul(divisor[i], coeff)\n    }\n\n    // remove all zeros from buffer head\n    var offset = 0\n    while (offset < result.length && result[offset] === 0) offset++\n    result = result.slice(offset)\n  }\n\n  return result\n}\n\n/**\n * Generate an irreducible generator polynomial of specified degree\n * (used by Reed-Solomon encoder)\n *\n * @param  {Number} degree Degree of the generator polynomial\n * @return {Buffer}        Buffer containing polynomial coefficients\n */\nexports.generateECPolynomial = function generateECPolynomial (degree) {\n  var poly = BufferUtil.from([1])\n  for (var i = 0; i < degree; i++) {\n    poly = exports.mul(poly, [1, GF.exp(i)])\n  }\n\n  return poly\n}\n","var BufferUtil = require('../utils/buffer')\n\nvar EXP_TABLE = BufferUtil.alloc(512)\nvar LOG_TABLE = BufferUtil.alloc(256)\n/**\n * Precompute the log and anti-log tables for faster computation later\n *\n * For each possible value in the galois field 2^8, we will pre-compute\n * the logarithm and anti-logarithm (exponential) of this value\n *\n * ref {@link https://en.wikiversity.org/wiki/Reed%E2%80%93Solomon_codes_for_coders#Introduction_to_mathematical_fields}\n */\n;(function initTables () {\n  var x = 1\n  for (var i = 0; i < 255; i++) {\n    EXP_TABLE[i] = x\n    LOG_TABLE[x] = i\n\n    x <<= 1 // multiply by 2\n\n    // The QR code specification says to use byte-wise modulo 100011101 arithmetic.\n    // This means that when a number is 256 or larger, it should be XORed with 0x11D.\n    if (x & 0x100) { // similar to x >= 256, but a lot faster (because 0x100 == 256)\n      x ^= 0x11D\n    }\n  }\n\n  // Optimization: double the size of the anti-log table so that we don't need to mod 255 to\n  // stay inside the bounds (because we will mainly use this table for the multiplication of\n  // two GF numbers, no more).\n  // @see {@link mul}\n  for (i = 255; i < 512; i++) {\n    EXP_TABLE[i] = EXP_TABLE[i - 255]\n  }\n}())\n\n/**\n * Returns log value of n inside Galois Field\n *\n * @param  {Number} n\n * @return {Number}\n */\nexports.log = function log (n) {\n  if (n < 1) throw new Error('log(' + n + ')')\n  return LOG_TABLE[n]\n}\n\n/**\n * Returns anti-log value of n inside Galois Field\n *\n * @param  {Number} n\n * @return {Number}\n */\nexports.exp = function exp (n) {\n  return EXP_TABLE[n]\n}\n\n/**\n * Multiplies two number inside Galois Field\n *\n * @param  {Number} x\n * @param  {Number} y\n * @return {Number}\n */\nexports.mul = function mul (x, y) {\n  if (x === 0 || y === 0) return 0\n\n  // should be EXP_TABLE[(LOG_TABLE[x] + LOG_TABLE[y]) % 255] if EXP_TABLE wasn't oversized\n  // @see {@link initTables}\n  return EXP_TABLE[LOG_TABLE[x] + LOG_TABLE[y]]\n}\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <http://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\nvar isArray = require('isarray')\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Due to various browser bugs, sometimes the Object implementation will be used even\n * when the browser supports typed arrays.\n *\n * Note:\n *\n *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *     incorrect length in some situations.\n\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n * get the Object implementation, which is slower but behaves correctly.\n */\nBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined\n  ? global.TYPED_ARRAY_SUPPORT\n  : typedArraySupport()\n\n/*\n * Export kMaxLength after typed array support is determined.\n */\nexports.kMaxLength = kMaxLength()\n\nfunction typedArraySupport () {\n  try {\n    var arr = new Uint8Array(1)\n    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}\n    return arr.foo() === 42 && // typed array instances can be augmented\n        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`\n  } catch (e) {\n    return false\n  }\n}\n\nfunction kMaxLength () {\n  return Buffer.TYPED_ARRAY_SUPPORT\n    ? 0x7fffffff\n    : 0x3fffffff\n}\n\nfunction createBuffer (that, length) {\n  if (kMaxLength() < length) {\n    throw new RangeError('Invalid typed array length')\n  }\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = new Uint8Array(length)\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    if (that === null) {\n      that = new Buffer(length)\n    }\n    that.length = length\n  }\n\n  return that\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n    return new Buffer(arg, encodingOrOffset, length)\n  }\n\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new Error(\n        'If encoding is specified then the first argument must be a string'\n      )\n    }\n    return allocUnsafe(this, arg)\n  }\n  return from(this, arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\n// TODO: Legacy, not needed anymore. Remove in next major version.\nBuffer._augment = function (arr) {\n  arr.__proto__ = Buffer.prototype\n  return arr\n}\n\nfunction from (that, value, encodingOrOffset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number')\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n    return fromArrayBuffer(that, value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'string') {\n    return fromString(that, value, encodingOrOffset)\n  }\n\n  return fromObject(that, value)\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(null, value, encodingOrOffset, length)\n}\n\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n  Buffer.prototype.__proto__ = Uint8Array.prototype\n  Buffer.__proto__ = Uint8Array\n  if (typeof Symbol !== 'undefined' && Symbol.species &&\n      Buffer[Symbol.species] === Buffer) {\n    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\n    Object.defineProperty(Buffer, Symbol.species, {\n      value: null,\n      configurable: true\n    })\n  }\n}\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be a number')\n  } else if (size < 0) {\n    throw new RangeError('\"size\" argument must not be negative')\n  }\n}\n\nfunction alloc (that, size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(that, size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(that, size).fill(fill, encoding)\n      : createBuffer(that, size).fill(fill)\n  }\n  return createBuffer(that, size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(null, size, fill, encoding)\n}\n\nfunction allocUnsafe (that, size) {\n  assertSize(size)\n  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < size; ++i) {\n      that[i] = 0\n    }\n  }\n  return that\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(null, size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(null, size)\n}\n\nfunction fromString (that, string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('\"encoding\" must be a valid string encoding')\n  }\n\n  var length = byteLength(string, encoding) | 0\n  that = createBuffer(that, length)\n\n  var actual = that.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    that = that.slice(0, actual)\n  }\n\n  return that\n}\n\nfunction fromArrayLike (that, array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  that = createBuffer(that, length)\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255\n  }\n  return that\n}\n\nfunction fromArrayBuffer (that, array, byteOffset, length) {\n  array.byteLength // this throws if `array` is not a valid ArrayBuffer\n\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\\'offset\\' is out of bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\\'length\\' is out of bounds')\n  }\n\n  if (byteOffset === undefined && length === undefined) {\n    array = new Uint8Array(array)\n  } else if (length === undefined) {\n    array = new Uint8Array(array, byteOffset)\n  } else {\n    array = new Uint8Array(array, byteOffset, length)\n  }\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = array\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that = fromArrayLike(that, array)\n  }\n  return that\n}\n\nfunction fromObject (that, obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    that = createBuffer(that, len)\n\n    if (that.length === 0) {\n      return that\n    }\n\n    obj.copy(that, 0, 0, len)\n    return that\n  }\n\n  if (obj) {\n    if ((typeof ArrayBuffer !== 'undefined' &&\n        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {\n      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n        return createBuffer(that, 0)\n      }\n      return fromArrayLike(that, obj)\n    }\n\n    if (obj.type === 'Buffer' && isArray(obj.data)) {\n      return fromArrayLike(that, obj.data)\n    }\n  }\n\n  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < kMaxLength()` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= kMaxLength()) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + kMaxLength().toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return !!(b != null && b._isBuffer)\n}\n\nBuffer.compare = function compare (a, b) {\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers')\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos)\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&\n      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    string = '' + string\n  }\n\n  var len = string.length\n  if (len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n      case undefined:\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) return utf8ToBytes(string).length // assume utf8\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n// Buffer instances.\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length | 0\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n    if (this.length > max) str += ' ... '\n  }\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError('Argument must be a Buffer')\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset  // Coerce to Number.\n  if (isNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (Buffer.TYPED_ARRAY_SUPPORT &&\n        typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  // must be an even number of digits\n  var strLen = string.length\n  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (isNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction latin1Write (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset | 0\n    if (isFinite(length)) {\n      length = length | 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  // legacy write(string, encoding, offset, length) - remove in v0.13\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n      : (firstByte > 0xBF) ? 2\n      : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = this.subarray(start, end)\n    newBuf.__proto__ = Buffer.prototype\n  } else {\n    var sliceLen = end - start\n    newBuf = new Buffer(sliceLen, undefined)\n    for (var i = 0; i < sliceLen; ++i) {\n      newBuf[i] = this[i + start]\n    }\n  }\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\n    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n      (littleEndian ? i : 1 - i) * 8\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\n    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = (value >>> 24)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 1] = (value >>> 8)\n    this[offset] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 3] = (value >>> 24)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n  var i\n\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    // ascending copy from start\n    for (i = 0; i < len; ++i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, start + len),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if (code < 256) {\n        val = code\n      }\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : utf8ToBytes(new Buffer(val, encoding).toString())\n    var len = bytes.length\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction stringtrim (str) {\n  if (str.trim) return str.trim()\n  return str.replace(/^\\s+|\\s+$/g, '')\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\nfunction isnan (val) {\n  return val !== val // eslint-disable-line no-self-compare\n}\n","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(\n      uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)\n    ))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","exports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n","var Utils = require('./utils')\nvar ECCode = require('./error-correction-code')\nvar ECLevel = require('./error-correction-level')\nvar Mode = require('./mode')\nvar VersionCheck = require('./version-check')\nvar isArray = require('isarray')\n\n// Generator polynomial used to encode version information\nvar G18 = (1 << 12) | (1 << 11) | (1 << 10) | (1 << 9) | (1 << 8) | (1 << 5) | (1 << 2) | (1 << 0)\nvar G18_BCH = Utils.getBCHDigit(G18)\n\nfunction getBestVersionForDataLength (mode, length, errorCorrectionLevel) {\n  for (var currentVersion = 1; currentVersion <= 40; currentVersion++) {\n    if (length <= exports.getCapacity(currentVersion, errorCorrectionLevel, mode)) {\n      return currentVersion\n    }\n  }\n\n  return undefined\n}\n\nfunction getReservedBitsCount (mode, version) {\n  // Character count indicator + mode indicator bits\n  return Mode.getCharCountIndicator(mode, version) + 4\n}\n\nfunction getTotalBitsFromDataArray (segments, version) {\n  var totalBits = 0\n\n  segments.forEach(function (data) {\n    var reservedBits = getReservedBitsCount(data.mode, version)\n    totalBits += reservedBits + data.getBitsLength()\n  })\n\n  return totalBits\n}\n\nfunction getBestVersionForMixedData (segments, errorCorrectionLevel) {\n  for (var currentVersion = 1; currentVersion <= 40; currentVersion++) {\n    var length = getTotalBitsFromDataArray(segments, currentVersion)\n    if (length <= exports.getCapacity(currentVersion, errorCorrectionLevel, Mode.MIXED)) {\n      return currentVersion\n    }\n  }\n\n  return undefined\n}\n\n/**\n * Returns version number from a value.\n * If value is not a valid version, returns defaultValue\n *\n * @param  {Number|String} value        QR Code version\n * @param  {Number}        defaultValue Fallback value\n * @return {Number}                     QR Code version number\n */\nexports.from = function from (value, defaultValue) {\n  if (VersionCheck.isValid(value)) {\n    return parseInt(value, 10)\n  }\n\n  return defaultValue\n}\n\n/**\n * Returns how much data can be stored with the specified QR code version\n * and error correction level\n *\n * @param  {Number} version              QR Code version (1-40)\n * @param  {Number} errorCorrectionLevel Error correction level\n * @param  {Mode}   mode                 Data mode\n * @return {Number}                      Quantity of storable data\n */\nexports.getCapacity = function getCapacity (version, errorCorrectionLevel, mode) {\n  if (!VersionCheck.isValid(version)) {\n    throw new Error('Invalid QR Code version')\n  }\n\n  // Use Byte mode as default\n  if (typeof mode === 'undefined') mode = Mode.BYTE\n\n  // Total codewords for this QR code version (Data + Error correction)\n  var totalCodewords = Utils.getSymbolTotalCodewords(version)\n\n  // Total number of error correction codewords\n  var ecTotalCodewords = ECCode.getTotalCodewordsCount(version, errorCorrectionLevel)\n\n  // Total number of data codewords\n  var dataTotalCodewordsBits = (totalCodewords - ecTotalCodewords) * 8\n\n  if (mode === Mode.MIXED) return dataTotalCodewordsBits\n\n  var usableBits = dataTotalCodewordsBits - getReservedBitsCount(mode, version)\n\n  // Return max number of storable codewords\n  switch (mode) {\n    case Mode.NUMERIC:\n      return Math.floor((usableBits / 10) * 3)\n\n    case Mode.ALPHANUMERIC:\n      return Math.floor((usableBits / 11) * 2)\n\n    case Mode.KANJI:\n      return Math.floor(usableBits / 13)\n\n    case Mode.BYTE:\n    default:\n      return Math.floor(usableBits / 8)\n  }\n}\n\n/**\n * Returns the minimum version needed to contain the amount of data\n *\n * @param  {Segment} data                    Segment of data\n * @param  {Number} [errorCorrectionLevel=H] Error correction level\n * @param  {Mode} mode                       Data mode\n * @return {Number}                          QR Code version\n */\nexports.getBestVersionForData = function getBestVersionForData (data, errorCorrectionLevel) {\n  var seg\n\n  var ecl = ECLevel.from(errorCorrectionLevel, ECLevel.M)\n\n  if (isArray(data)) {\n    if (data.length > 1) {\n      return getBestVersionForMixedData(data, ecl)\n    }\n\n    if (data.length === 0) {\n      return 1\n    }\n\n    seg = data[0]\n  } else {\n    seg = data\n  }\n\n  return getBestVersionForDataLength(seg.mode, seg.getLength(), ecl)\n}\n\n/**\n * Returns version information with relative error correction bits\n *\n * The version information is included in QR Code symbols of version 7 or larger.\n * It consists of an 18-bit sequence containing 6 data bits,\n * with 12 error correction bits calculated using the (18, 6) Golay code.\n *\n * @param  {Number} version QR Code version\n * @return {Number}         Encoded version info bits\n */\nexports.getEncodedBits = function getEncodedBits (version) {\n  if (!VersionCheck.isValid(version) || version < 7) {\n    throw new Error('Invalid QR Code version')\n  }\n\n  var d = version << 12\n\n  while (Utils.getBCHDigit(d) - G18_BCH >= 0) {\n    d ^= (G18 << (Utils.getBCHDigit(d) - G18_BCH))\n  }\n\n  return (version << 12) | d\n}\n","var Utils = require('./utils')\n\nvar G15 = (1 << 10) | (1 << 8) | (1 << 5) | (1 << 4) | (1 << 2) | (1 << 1) | (1 << 0)\nvar G15_MASK = (1 << 14) | (1 << 12) | (1 << 10) | (1 << 4) | (1 << 1)\nvar G15_BCH = Utils.getBCHDigit(G15)\n\n/**\n * Returns format information with relative error correction bits\n *\n * The format information is a 15-bit sequence containing 5 data bits,\n * with 10 error correction bits calculated using the (15, 5) BCH code.\n *\n * @param  {Number} errorCorrectionLevel Error correction level\n * @param  {Number} mask                 Mask pattern\n * @return {Number}                      Encoded format information bits\n */\nexports.getEncodedBits = function getEncodedBits (errorCorrectionLevel, mask) {\n  var data = ((errorCorrectionLevel.bit << 3) | mask)\n  var d = data << 10\n\n  while (Utils.getBCHDigit(d) - G15_BCH >= 0) {\n    d ^= (G15 << (Utils.getBCHDigit(d) - G15_BCH))\n  }\n\n  // xor final data with mask pattern in order to ensure that\n  // no combination of Error Correction Level and data mask pattern\n  // will result in an all-zero data string\n  return ((data << 10) | d) ^ G15_MASK\n}\n","var Mode = require('./mode')\nvar NumericData = require('./numeric-data')\nvar AlphanumericData = require('./alphanumeric-data')\nvar ByteData = require('./byte-data')\nvar KanjiData = require('./kanji-data')\nvar Regex = require('./regex')\nvar Utils = require('./utils')\nvar dijkstra = require('dijkstrajs')\n\n/**\n * Returns UTF8 byte length\n *\n * @param  {String} str Input string\n * @return {Number}     Number of byte\n */\nfunction getStringByteLength (str) {\n  return unescape(encodeURIComponent(str)).length\n}\n\n/**\n * Get a list of segments of the specified mode\n * from a string\n *\n * @param  {Mode}   mode Segment mode\n * @param  {String} str  String to process\n * @return {Array}       Array of object with segments data\n */\nfunction getSegments (regex, mode, str) {\n  var segments = []\n  var result\n\n  while ((result = regex.exec(str)) !== null) {\n    segments.push({\n      data: result[0],\n      index: result.index,\n      mode: mode,\n      length: result[0].length\n    })\n  }\n\n  return segments\n}\n\n/**\n * Extracts a series of segments with the appropriate\n * modes from a string\n *\n * @param  {String} dataStr Input string\n * @return {Array}          Array of object with segments data\n */\nfunction getSegmentsFromString (dataStr) {\n  var numSegs = getSegments(Regex.NUMERIC, Mode.NUMERIC, dataStr)\n  var alphaNumSegs = getSegments(Regex.ALPHANUMERIC, Mode.ALPHANUMERIC, dataStr)\n  var byteSegs\n  var kanjiSegs\n\n  if (Utils.isKanjiModeEnabled()) {\n    byteSegs = getSegments(Regex.BYTE, Mode.BYTE, dataStr)\n    kanjiSegs = getSegments(Regex.KANJI, Mode.KANJI, dataStr)\n  } else {\n    byteSegs = getSegments(Regex.BYTE_KANJI, Mode.BYTE, dataStr)\n    kanjiSegs = []\n  }\n\n  var segs = numSegs.concat(alphaNumSegs, byteSegs, kanjiSegs)\n\n  return segs\n    .sort(function (s1, s2) {\n      return s1.index - s2.index\n    })\n    .map(function (obj) {\n      return {\n        data: obj.data,\n        mode: obj.mode,\n        length: obj.length\n      }\n    })\n}\n\n/**\n * Returns how many bits are needed to encode a string of\n * specified length with the specified mode\n *\n * @param  {Number} length String length\n * @param  {Mode} mode     Segment mode\n * @return {Number}        Bit length\n */\nfunction getSegmentBitsLength (length, mode) {\n  switch (mode) {\n    case Mode.NUMERIC:\n      return NumericData.getBitsLength(length)\n    case Mode.ALPHANUMERIC:\n      return AlphanumericData.getBitsLength(length)\n    case Mode.KANJI:\n      return KanjiData.getBitsLength(length)\n    case Mode.BYTE:\n      return ByteData.getBitsLength(length)\n  }\n}\n\n/**\n * Merges adjacent segments which have the same mode\n *\n * @param  {Array} segs Array of object with segments data\n * @return {Array}      Array of object with segments data\n */\nfunction mergeSegments (segs) {\n  return segs.reduce(function (acc, curr) {\n    var prevSeg = acc.length - 1 >= 0 ? acc[acc.length - 1] : null\n    if (prevSeg && prevSeg.mode === curr.mode) {\n      acc[acc.length - 1].data += curr.data\n      return acc\n    }\n\n    acc.push(curr)\n    return acc\n  }, [])\n}\n\n/**\n * Generates a list of all possible nodes combination which\n * will be used to build a segments graph.\n *\n * Nodes are divided by groups. Each group will contain a list of all the modes\n * in which is possible to encode the given text.\n *\n * For example the text '12345' can be encoded as Numeric, Alphanumeric or Byte.\n * The group for '12345' will contain then 3 objects, one for each\n * possible encoding mode.\n *\n * Each node represents a possible segment.\n *\n * @param  {Array} segs Array of object with segments data\n * @return {Array}      Array of object with segments data\n */\nfunction buildNodes (segs) {\n  var nodes = []\n  for (var i = 0; i < segs.length; i++) {\n    var seg = segs[i]\n\n    switch (seg.mode) {\n      case Mode.NUMERIC:\n        nodes.push([seg,\n          { data: seg.data, mode: Mode.ALPHANUMERIC, length: seg.length },\n          { data: seg.data, mode: Mode.BYTE, length: seg.length }\n        ])\n        break\n      case Mode.ALPHANUMERIC:\n        nodes.push([seg,\n          { data: seg.data, mode: Mode.BYTE, length: seg.length }\n        ])\n        break\n      case Mode.KANJI:\n        nodes.push([seg,\n          { data: seg.data, mode: Mode.BYTE, length: getStringByteLength(seg.data) }\n        ])\n        break\n      case Mode.BYTE:\n        nodes.push([\n          { data: seg.data, mode: Mode.BYTE, length: getStringByteLength(seg.data) }\n        ])\n    }\n  }\n\n  return nodes\n}\n\n/**\n * Builds a graph from a list of nodes.\n * All segments in each node group will be connected with all the segments of\n * the next group and so on.\n *\n * At each connection will be assigned a weight depending on the\n * segment's byte length.\n *\n * @param  {Array} nodes    Array of object with segments data\n * @param  {Number} version QR Code version\n * @return {Object}         Graph of all possible segments\n */\nfunction buildGraph (nodes, version) {\n  var table = {}\n  var graph = {'start': {}}\n  var prevNodeIds = ['start']\n\n  for (var i = 0; i < nodes.length; i++) {\n    var nodeGroup = nodes[i]\n    var currentNodeIds = []\n\n    for (var j = 0; j < nodeGroup.length; j++) {\n      var node = nodeGroup[j]\n      var key = '' + i + j\n\n      currentNodeIds.push(key)\n      table[key] = { node: node, lastCount: 0 }\n      graph[key] = {}\n\n      for (var n = 0; n < prevNodeIds.length; n++) {\n        var prevNodeId = prevNodeIds[n]\n\n        if (table[prevNodeId] && table[prevNodeId].node.mode === node.mode) {\n          graph[prevNodeId][key] =\n            getSegmentBitsLength(table[prevNodeId].lastCount + node.length, node.mode) -\n            getSegmentBitsLength(table[prevNodeId].lastCount, node.mode)\n\n          table[prevNodeId].lastCount += node.length\n        } else {\n          if (table[prevNodeId]) table[prevNodeId].lastCount = node.length\n\n          graph[prevNodeId][key] = getSegmentBitsLength(node.length, node.mode) +\n            4 + Mode.getCharCountIndicator(node.mode, version) // switch cost\n        }\n      }\n    }\n\n    prevNodeIds = currentNodeIds\n  }\n\n  for (n = 0; n < prevNodeIds.length; n++) {\n    graph[prevNodeIds[n]]['end'] = 0\n  }\n\n  return { map: graph, table: table }\n}\n\n/**\n * Builds a segment from a specified data and mode.\n * If a mode is not specified, the more suitable will be used.\n *\n * @param  {String} data             Input data\n * @param  {Mode | String} modesHint Data mode\n * @return {Segment}                 Segment\n */\nfunction buildSingleSegment (data, modesHint) {\n  var mode\n  var bestMode = Mode.getBestModeForData(data)\n\n  mode = Mode.from(modesHint, bestMode)\n\n  // Make sure data can be encoded\n  if (mode !== Mode.BYTE && mode.bit < bestMode.bit) {\n    throw new Error('\"' + data + '\"' +\n      ' cannot be encoded with mode ' + Mode.toString(mode) +\n      '.\\n Suggested mode is: ' + Mode.toString(bestMode))\n  }\n\n  // Use Mode.BYTE if Kanji support is disabled\n  if (mode === Mode.KANJI && !Utils.isKanjiModeEnabled()) {\n    mode = Mode.BYTE\n  }\n\n  switch (mode) {\n    case Mode.NUMERIC:\n      return new NumericData(data)\n\n    case Mode.ALPHANUMERIC:\n      return new AlphanumericData(data)\n\n    case Mode.KANJI:\n      return new KanjiData(data)\n\n    case Mode.BYTE:\n      return new ByteData(data)\n  }\n}\n\n/**\n * Builds a list of segments from an array.\n * Array can contain Strings or Objects with segment's info.\n *\n * For each item which is a string, will be generated a segment with the given\n * string and the more appropriate encoding mode.\n *\n * For each item which is an object, will be generated a segment with the given\n * data and mode.\n * Objects must contain at least the property \"data\".\n * If property \"mode\" is not present, the more suitable mode will be used.\n *\n * @param  {Array} array Array of objects with segments data\n * @return {Array}       Array of Segments\n */\nexports.fromArray = function fromArray (array) {\n  return array.reduce(function (acc, seg) {\n    if (typeof seg === 'string') {\n      acc.push(buildSingleSegment(seg, null))\n    } else if (seg.data) {\n      acc.push(buildSingleSegment(seg.data, seg.mode))\n    }\n\n    return acc\n  }, [])\n}\n\n/**\n * Builds an optimized sequence of segments from a string,\n * which will produce the shortest possible bitstream.\n *\n * @param  {String} data    Input string\n * @param  {Number} version QR Code version\n * @return {Array}          Array of segments\n */\nexports.fromString = function fromString (data, version) {\n  var segs = getSegmentsFromString(data, Utils.isKanjiModeEnabled())\n\n  var nodes = buildNodes(segs)\n  var graph = buildGraph(nodes, version)\n  var path = dijkstra.find_path(graph.map, 'start', 'end')\n\n  var optimizedSegs = []\n  for (var i = 1; i < path.length - 1; i++) {\n    optimizedSegs.push(graph.table[path[i]].node)\n  }\n\n  return exports.fromArray(mergeSegments(optimizedSegs))\n}\n\n/**\n * Splits a string in various segments with the modes which\n * best represent their content.\n * The produced segments are far from being optimized.\n * The output of this function is only used to estimate a QR Code version\n * which may contain the data.\n *\n * @param  {string} data Input string\n * @return {Array}       Array of segments\n */\nexports.rawSplit = function rawSplit (data) {\n  return exports.fromArray(\n    getSegmentsFromString(data, Utils.isKanjiModeEnabled())\n  )\n}\n","var Mode = require('./mode')\n\nfunction NumericData (data) {\n  this.mode = Mode.NUMERIC\n  this.data = data.toString()\n}\n\nNumericData.getBitsLength = function getBitsLength (length) {\n  return 10 * Math.floor(length / 3) + ((length % 3) ? ((length % 3) * 3 + 1) : 0)\n}\n\nNumericData.prototype.getLength = function getLength () {\n  return this.data.length\n}\n\nNumericData.prototype.getBitsLength = function getBitsLength () {\n  return NumericData.getBitsLength(this.data.length)\n}\n\nNumericData.prototype.write = function write (bitBuffer) {\n  var i, group, value\n\n  // The input data string is divided into groups of three digits,\n  // and each group is converted to its 10-bit binary equivalent.\n  for (i = 0; i + 3 <= this.data.length; i += 3) {\n    group = this.data.substr(i, 3)\n    value = parseInt(group, 10)\n\n    bitBuffer.put(value, 10)\n  }\n\n  // If the number of input digits is not an exact multiple of three,\n  // the final one or two digits are converted to 4 or 7 bits respectively.\n  var remainingNum = this.data.length - i\n  if (remainingNum > 0) {\n    group = this.data.substr(i)\n    value = parseInt(group, 10)\n\n    bitBuffer.put(value, remainingNum * 3 + 1)\n  }\n}\n\nmodule.exports = NumericData\n","var Mode = require('./mode')\n\n/**\n * Array of characters available in alphanumeric mode\n *\n * As per QR Code specification, to each character\n * is assigned a value from 0 to 44 which in this case coincides\n * with the array index\n *\n * @type {Array}\n */\nvar ALPHA_NUM_CHARS = [\n  '0', '1', '2', '3', '4', '5', '6', '7', '8', '9',\n  'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M',\n  'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z',\n  ' ', '$', '%', '*', '+', '-', '.', '/', ':'\n]\n\nfunction AlphanumericData (data) {\n  this.mode = Mode.ALPHANUMERIC\n  this.data = data\n}\n\nAlphanumericData.getBitsLength = function getBitsLength (length) {\n  return 11 * Math.floor(length / 2) + 6 * (length % 2)\n}\n\nAlphanumericData.prototype.getLength = function getLength () {\n  return this.data.length\n}\n\nAlphanumericData.prototype.getBitsLength = function getBitsLength () {\n  return AlphanumericData.getBitsLength(this.data.length)\n}\n\nAlphanumericData.prototype.write = function write (bitBuffer) {\n  var i\n\n  // Input data characters are divided into groups of two characters\n  // and encoded as 11-bit binary codes.\n  for (i = 0; i + 2 <= this.data.length; i += 2) {\n    // The character value of the first character is multiplied by 45\n    var value = ALPHA_NUM_CHARS.indexOf(this.data[i]) * 45\n\n    // The character value of the second digit is added to the product\n    value += ALPHA_NUM_CHARS.indexOf(this.data[i + 1])\n\n    // The sum is then stored as 11-bit binary number\n    bitBuffer.put(value, 11)\n  }\n\n  // If the number of input data characters is not a multiple of two,\n  // the character value of the final character is encoded as a 6-bit binary number.\n  if (this.data.length % 2) {\n    bitBuffer.put(ALPHA_NUM_CHARS.indexOf(this.data[i]), 6)\n  }\n}\n\nmodule.exports = AlphanumericData\n","var BufferUtil = require('../utils/buffer')\nvar Mode = require('./mode')\n\nfunction ByteData (data) {\n  this.mode = Mode.BYTE\n  this.data = BufferUtil.from(data)\n}\n\nByteData.getBitsLength = function getBitsLength (length) {\n  return length * 8\n}\n\nByteData.prototype.getLength = function getLength () {\n  return this.data.length\n}\n\nByteData.prototype.getBitsLength = function getBitsLength () {\n  return ByteData.getBitsLength(this.data.length)\n}\n\nByteData.prototype.write = function (bitBuffer) {\n  for (var i = 0, l = this.data.length; i < l; i++) {\n    bitBuffer.put(this.data[i], 8)\n  }\n}\n\nmodule.exports = ByteData\n","var Mode = require('./mode')\nvar Utils = require('./utils')\n\nfunction KanjiData (data) {\n  this.mode = Mode.KANJI\n  this.data = data\n}\n\nKanjiData.getBitsLength = function getBitsLength (length) {\n  return length * 13\n}\n\nKanjiData.prototype.getLength = function getLength () {\n  return this.data.length\n}\n\nKanjiData.prototype.getBitsLength = function getBitsLength () {\n  return KanjiData.getBitsLength(this.data.length)\n}\n\nKanjiData.prototype.write = function (bitBuffer) {\n  var i\n\n  // In the Shift JIS system, Kanji characters are represented by a two byte combination.\n  // These byte values are shifted from the JIS X 0208 values.\n  // JIS X 0208 gives details of the shift coded representation.\n  for (i = 0; i < this.data.length; i++) {\n    var value = Utils.toSJIS(this.data[i])\n\n    // For characters with Shift JIS values from 0x8140 to 0x9FFC:\n    if (value >= 0x8140 && value <= 0x9FFC) {\n      // Subtract 0x8140 from Shift JIS value\n      value -= 0x8140\n\n    // For characters with Shift JIS values from 0xE040 to 0xEBBF\n    } else if (value >= 0xE040 && value <= 0xEBBF) {\n      // Subtract 0xC140 from Shift JIS value\n      value -= 0xC140\n    } else {\n      throw new Error(\n        'Invalid SJIS character: ' + this.data[i] + '\\n' +\n        'Make sure your charset is UTF-8')\n    }\n\n    // Multiply most significant byte of result by 0xC0\n    // and add least significant byte to product\n    value = (((value >>> 8) & 0xff) * 0xC0) + (value & 0xff)\n\n    // Convert result to a 13-bit binary string\n    bitBuffer.put(value, 13)\n  }\n}\n\nmodule.exports = KanjiData\n","'use strict';\n\n/******************************************************************************\n * Created 2008-08-19.\n *\n * Dijkstra path-finding functions. Adapted from the Dijkstar Python project.\n *\n * Copyright (C) 2008\n *   Wyatt Baldwin <self@wyattbaldwin.com>\n *   All rights reserved\n *\n * Licensed under the MIT license.\n *\n *   http://www.opensource.org/licenses/mit-license.php\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n *****************************************************************************/\nvar dijkstra = {\n  single_source_shortest_paths: function(graph, s, d) {\n    // Predecessor map for each node that has been encountered.\n    // node ID => predecessor node ID\n    var predecessors = {};\n\n    // Costs of shortest paths from s to all nodes encountered.\n    // node ID => cost\n    var costs = {};\n    costs[s] = 0;\n\n    // Costs of shortest paths from s to all nodes encountered; differs from\n    // `costs` in that it provides easy access to the node that currently has\n    // the known shortest path from s.\n    // XXX: Do we actually need both `costs` and `open`?\n    var open = dijkstra.PriorityQueue.make();\n    open.push(s, 0);\n\n    var closest,\n        u, v,\n        cost_of_s_to_u,\n        adjacent_nodes,\n        cost_of_e,\n        cost_of_s_to_u_plus_cost_of_e,\n        cost_of_s_to_v,\n        first_visit;\n    while (!open.empty()) {\n      // In the nodes remaining in graph that have a known cost from s,\n      // find the node, u, that currently has the shortest path from s.\n      closest = open.pop();\n      u = closest.value;\n      cost_of_s_to_u = closest.cost;\n\n      // Get nodes adjacent to u...\n      adjacent_nodes = graph[u] || {};\n\n      // ...and explore the edges that connect u to those nodes, updating\n      // the cost of the shortest paths to any or all of those nodes as\n      // necessary. v is the node across the current edge from u.\n      for (v in adjacent_nodes) {\n        if (adjacent_nodes.hasOwnProperty(v)) {\n          // Get the cost of the edge running from u to v.\n          cost_of_e = adjacent_nodes[v];\n\n          // Cost of s to u plus the cost of u to v across e--this is *a*\n          // cost from s to v that may or may not be less than the current\n          // known cost to v.\n          cost_of_s_to_u_plus_cost_of_e = cost_of_s_to_u + cost_of_e;\n\n          // If we haven't visited v yet OR if the current known cost from s to\n          // v is greater than the new cost we just found (cost of s to u plus\n          // cost of u to v across e), update v's cost in the cost list and\n          // update v's predecessor in the predecessor list (it's now u).\n          cost_of_s_to_v = costs[v];\n          first_visit = (typeof costs[v] === 'undefined');\n          if (first_visit || cost_of_s_to_v > cost_of_s_to_u_plus_cost_of_e) {\n            costs[v] = cost_of_s_to_u_plus_cost_of_e;\n            open.push(v, cost_of_s_to_u_plus_cost_of_e);\n            predecessors[v] = u;\n          }\n        }\n      }\n    }\n\n    if (typeof d !== 'undefined' && typeof costs[d] === 'undefined') {\n      var msg = ['Could not find a path from ', s, ' to ', d, '.'].join('');\n      throw new Error(msg);\n    }\n\n    return predecessors;\n  },\n\n  extract_shortest_path_from_predecessor_list: function(predecessors, d) {\n    var nodes = [];\n    var u = d;\n    var predecessor;\n    while (u) {\n      nodes.push(u);\n      predecessor = predecessors[u];\n      u = predecessors[u];\n    }\n    nodes.reverse();\n    return nodes;\n  },\n\n  find_path: function(graph, s, d) {\n    var predecessors = dijkstra.single_source_shortest_paths(graph, s, d);\n    return dijkstra.extract_shortest_path_from_predecessor_list(\n      predecessors, d);\n  },\n\n  /**\n   * A very naive priority queue implementation.\n   */\n  PriorityQueue: {\n    make: function (opts) {\n      var T = dijkstra.PriorityQueue,\n          t = {},\n          key;\n      opts = opts || {};\n      for (key in T) {\n        if (T.hasOwnProperty(key)) {\n          t[key] = T[key];\n        }\n      }\n      t.queue = [];\n      t.sorter = opts.sorter || T.default_sorter;\n      return t;\n    },\n\n    default_sorter: function (a, b) {\n      return a.cost - b.cost;\n    },\n\n    /**\n     * Add a new item to the queue and ensure the highest priority element\n     * is at the front of the queue.\n     */\n    push: function (value, cost) {\n      var item = {value: value, cost: cost};\n      this.queue.push(item);\n      this.queue.sort(this.sorter);\n    },\n\n    /**\n     * Return the highest priority element in the queue.\n     */\n    pop: function () {\n      return this.queue.shift();\n    },\n\n    empty: function () {\n      return this.queue.length === 0;\n    }\n  }\n};\n\n\n// node.js module exports\nif (typeof module !== 'undefined') {\n  module.exports = dijkstra;\n}\n","var Utils = require('./utils')\n\nfunction clearCanvas (ctx, canvas, size) {\n  ctx.clearRect(0, 0, canvas.width, canvas.height)\n\n  if (!canvas.style) canvas.style = {}\n  canvas.height = size\n  canvas.width = size\n  canvas.style.height = size + 'px'\n  canvas.style.width = size + 'px'\n}\n\nfunction getCanvasElement () {\n  try {\n    return document.createElement('canvas')\n  } catch (e) {\n    throw new Error('You need to specify a canvas element')\n  }\n}\n\nexports.render = function render (qrData, canvas, options) {\n  var opts = options\n  var canvasEl = canvas\n\n  if (typeof opts === 'undefined' && (!canvas || !canvas.getContext)) {\n    opts = canvas\n    canvas = undefined\n  }\n\n  if (!canvas) {\n    canvasEl = getCanvasElement()\n  }\n\n  opts = Utils.getOptions(opts)\n  var size = Utils.getImageWidth(qrData.modules.size, opts)\n\n  var ctx = canvasEl.getContext('2d')\n  var image = ctx.createImageData(size, size)\n  Utils.qrToImageData(image.data, qrData, opts)\n\n  clearCanvas(ctx, canvasEl, size)\n  ctx.putImageData(image, 0, 0)\n\n  return canvasEl\n}\n\nexports.renderToDataURL = function renderToDataURL (qrData, canvas, options) {\n  var opts = options\n\n  if (typeof opts === 'undefined' && (!canvas || !canvas.getContext)) {\n    opts = canvas\n    canvas = undefined\n  }\n\n  if (!opts) opts = {}\n\n  var canvasEl = exports.render(qrData, canvas, opts)\n\n  var type = opts.type || 'image/png'\n  var rendererOpts = opts.rendererOpts || {}\n\n  return canvasEl.toDataURL(type, rendererOpts.quality)\n}\n","var Utils = require('./utils')\n\nfunction getColorAttrib (color, attrib) {\n  var alpha = color.a / 255\n  var str = attrib + '=\"' + color.hex + '\"'\n\n  return alpha < 1\n    ? str + ' ' + attrib + '-opacity=\"' + alpha.toFixed(2).slice(1) + '\"'\n    : str\n}\n\nfunction svgCmd (cmd, x, y) {\n  var str = cmd + x\n  if (typeof y !== 'undefined') str += ' ' + y\n\n  return str\n}\n\nfunction qrToPath (data, size, margin) {\n  var path = ''\n  var moveBy = 0\n  var newRow = false\n  var lineLength = 0\n\n  for (var i = 0; i < data.length; i++) {\n    var col = Math.floor(i % size)\n    var row = Math.floor(i / size)\n\n    if (!col && !newRow) newRow = true\n\n    if (data[i]) {\n      lineLength++\n\n      if (!(i > 0 && col > 0 && data[i - 1])) {\n        path += newRow\n          ? svgCmd('M', col + margin, 0.5 + row + margin)\n          : svgCmd('m', moveBy, 0)\n\n        moveBy = 0\n        newRow = false\n      }\n\n      if (!(col + 1 < size && data[i + 1])) {\n        path += svgCmd('h', lineLength)\n        lineLength = 0\n      }\n    } else {\n      moveBy++\n    }\n  }\n\n  return path\n}\n\nexports.render = function render (qrData, options, cb) {\n  var opts = Utils.getOptions(options)\n  var size = qrData.modules.size\n  var data = qrData.modules.data\n  var qrcodesize = size + opts.margin * 2\n\n  var bg = !opts.color.light.a\n    ? ''\n    : '<path ' + getColorAttrib(opts.color.light, 'fill') +\n      ' d=\"M0 0h' + qrcodesize + 'v' + qrcodesize + 'H0z\"/>'\n\n  var path =\n    '<path ' + getColorAttrib(opts.color.dark, 'stroke') +\n    ' d=\"' + qrToPath(data, size, opts.margin) + '\"/>'\n\n  var viewBox = 'viewBox=\"' + '0 0 ' + qrcodesize + ' ' + qrcodesize + '\"'\n\n  var width = !opts.width ? '' : 'width=\"' + opts.width + '\" height=\"' + opts.width + '\" '\n\n  var svgTag = '<svg xmlns=\"http://www.w3.org/2000/svg\" ' + width + viewBox + ' shape-rendering=\"crispEdges\">' + bg + path + '</svg>\\n'\n\n  if (typeof cb === 'function') {\n    cb(null, svgTag)\n  }\n\n  return svgTag\n}\n","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\nvar _internal_video_console = require('../internal_video_console');\n\nvar _internal_video_console2 = _interopRequireDefault(_internal_video_console);\n\nvar _vidyo = require('../external/vidyo/vidyo.client');\n\nvar _vidyo2 = _interopRequireDefault(_vidyo);\n\nvar _awcoresdk_vidyo_event_mapper = require('./awcoresdk_vidyo_event_mapper');\n\nvar _awcoresdk_vidyo_event_mapper2 = _interopRequireDefault(_awcoresdk_vidyo_event_mapper);\n\nvar _awcoresdk_visit_end_details = require('../awcoresdk_visit_end_details');\n\nvar _awcoresdk_visit_end_details2 = _interopRequireDefault(_awcoresdk_visit_end_details);\n\nvar _awcoresdk_vidyo_visit_state = require('./awcoresdk_vidyo_visit_state');\n\nvar _awcoresdk_vidyo_visit_state2 = _interopRequireDefault(_awcoresdk_vidyo_visit_state);\n\nvar _awcoresdk_operation_type = require('../awcoresdk_operation_type');\n\nvar _awcoresdk_operation_type2 = _interopRequireDefault(_awcoresdk_operation_type);\n\nvar _awcoresdk_vidyo_sendRequest_response = require('./awcoresdk_vidyo_sendRequest_response');\n\nvar _awcoresdk_vidyo_sendRequest_response2 = _interopRequireDefault(_awcoresdk_vidyo_sendRequest_response);\n\nvar _awcoresdk_video_participant_type = require('../awcoresdk_video_participant_type');\n\nvar _awcoresdk_video_participant_type2 = _interopRequireDefault(_awcoresdk_video_participant_type);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /*!\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * American Well Core Web SDK\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Copyright (c) 2018 American Well.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * All rights reserved.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * It is illegal to use, reproduce or distribute\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * any part of this Intellectual Property without\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * prior written authorization from American Well.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\n/**\n * A vidyo specific implementation of {@link AWCoreSDKInternalVideoConsole}\n * @class\n * @extends AWCoreSDKInternalVideoConsole\n */\nvar AWCoreSDKVidyoConsole = function (_AWCoreSDKInternalVid) {\n  _inherits(AWCoreSDKVidyoConsole, _AWCoreSDKInternalVid);\n\n  function AWCoreSDKVidyoConsole(videoConfig) {\n    _classCallCheck(this, AWCoreSDKVidyoConsole);\n\n    var _this = _possibleConstructorReturn(this, (AWCoreSDKVidyoConsole.__proto__ || Object.getPrototypeOf(AWCoreSDKVidyoConsole)).call(this, videoConfig));\n\n    _this.__setupVideoConsole();\n    _this.__eventMapper = new _awcoresdk_vidyo_event_mapper2.default();\n    _this.__visitState = new _awcoresdk_vidyo_visit_state2.default(_this.__videoConfig.providerFullName, _this.__videoConfig.consumerFullName, _this);\n    _this.__endDetailsCallback = videoConfig.endDetailsCallback;\n    _this.__checkForConnectivityCallback = videoConfig.checkForConnectivityCallback || null;\n    _this.__pollForConnectionCallback = videoConfig.pollForConnectionCallback || null;\n    _this.__setIds();\n    return _this;\n  }\n\n  /**\n   * Implementation of start()\n   *\n   * @inheritdoc\n   */\n\n\n  _createClass(AWCoreSDKVidyoConsole, [{\n    key: 'start',\n    value: function start() {\n      this.__isFullScreen = false;\n      this.__participantsCount = 0;\n      // create the client, then start it.\n      this.__createVidyoClient();\n      this.__setupConsoleEventHandlers();\n      return this.__startVidyoClient();\n    }\n\n    /**\n     * Implementation of stop()\n     *\n     * @inheritdoc\n     */\n\n  }, {\n    key: 'stop',\n    value: function stop() {\n      _get(AWCoreSDKVidyoConsole.prototype.__proto__ || Object.getPrototypeOf(AWCoreSDKVidyoConsole.prototype), 'stop', this).call(this);\n      this.leaveCall(false);\n    }\n\n    /**\n     * Implementation of sendEvent()\n     *\n     * @inheritdoc\n     */\n\n  }, {\n    key: 'sendEvent',\n    value: function sendEvent(event, success, failure) {\n      if ((typeof event === 'undefined' ? 'undefined' : _typeof(event)) !== 'object') {\n        throw Error('IllegalArgument. Event must be of type object');\n      }\n      var successfullySent = this.__vidyoClientObj.sendEvent(event);\n      if (successfullySent) {\n        success();\n      } else {\n        failure();\n      }\n      return successfullySent;\n    }\n\n    /**\n     * Implementation of leaveCall()\n     *\n     * @inheritdoc\n     */\n\n  }, {\n    key: 'leaveCall',\n    value: function leaveCall(wasUserRequested) {\n      var _this2 = this;\n\n      this.metrics.isEndRequested = wasUserRequested === true;\n      var leaveEvent = { type: 'InEventLeave' };\n      this.sendEvent(leaveEvent, function () {\n        return _this2.__logger.info('Sent Leave Event successfully');\n      }, function () {\n        return _this2.__logger.info('Could not send Leave Event successfully');\n      });\n      // needs handler\n      var leaveHandler = this.__findHandler(this.__eventMapper.mapFromType(leaveEvent.type));\n      if (leaveHandler) {\n        leaveHandler.handler();\n      } else {\n        this.__logger.warn('No handler found for ' + leaveEvent);\n      }\n    }\n\n    /**\n     * Implementation of toggleMic()\n     *\n     * @inheritdoc\n     */\n\n  }, {\n    key: 'toggleMic',\n    value: function toggleMic() {\n      var _this3 = this;\n\n      var tempState = {};\n      tempState.isAudioMuted = !this.__state.isAudioMuted;\n      this.__videoConfig.attachPoints.mic.classList.toggle('awcore-disabled', tempState.isAudioMuted);\n      this.__saveState(tempState);\n      var micEvent = { type: 'InEventMuteAudioIn', willMute: tempState.isAudioMuted };\n      return this.sendEvent(micEvent, function () {\n        return _this3.__logger.info('Sent Mute Mic successfully');\n      }, function () {\n        return _this3.__logger.info('Could not send Mute Mic successfully');\n      });\n    }\n\n    /**\n     * Implementation of toggleCamera()\n     *\n     * @inheritdoc\n     */\n\n  }, {\n    key: 'toggleCamera',\n    value: function toggleCamera() {\n      var _this4 = this;\n\n      var tempState = {};\n      tempState.isVideoMuted = !this.__state.isVideoMuted;\n      this.__videoConfig.attachPoints.camera.classList.toggle('awcore-disabled', tempState.isVideoMuted);\n      this.__videoConfig.attachPoints.mutedIcon.classList.toggle('awcore-hidden', !tempState.isVideoMuted);\n      this.__videoConfig.attachPoints.selfVideoParentContainer.classList.toggle('awcore-hidden', tempState.isVideoMuted);\n      this.__saveState(tempState);\n      var camEvent = { type: 'InEventMuteVideo', willMute: tempState.isVideoMuted };\n      return this.sendEvent(camEvent, function () {\n        return _this4.__logger.info('Sent Mute Camera successfully');\n      }, function () {\n        return _this4.__logger.info('Could not send Mute Camera successfully');\n      });\n    }\n\n    /**\n     * Implementation of sendRequest()\n     *\n     * @inheritdoc\n     */\n\n  }, {\n    key: 'sendRequest',\n    value: function sendRequest(event, success, failure) {\n      if ((typeof event === 'undefined' ? 'undefined' : _typeof(event)) !== 'object') {\n        throw Error('IllegalArgument. Event must be of type object');\n      }\n      if (!event.type || event.type.indexOf('Request') !== 0) {\n        throw Error('IllegalArgument. Event type must have property \"type\" with format \"Request*\"');\n      }\n      return this.__sendRequest(event, success, failure);\n    }\n\n    /**\n     * Implementation of checkParticipantsChanged()\n     *\n     * @returns {AWCoreSDKParticipantsChangedResult} an object that represents the operation (add/drop) and the {@link AWCoreSDKParticipant} who got added/dropped\n     */\n\n  }, {\n    key: 'checkParticipantsChanged',\n    value: function checkParticipantsChanged() {\n      var _this5 = this;\n\n      var participantRequest = { type: 'RequestGetParticipants' };\n      this.sendRequest(participantRequest, function () {\n        return _this5.__logger.info('Sent request to check participants.');\n      }, function () {\n        return _this5.__logger.warn('Request to check participants failed.');\n      });\n      var updatedParticipants = participantRequest.name;\n      // We need to assume each participant is identified by their name\n      var uniqueList = Array.from(new Set(updatedParticipants));\n      if (updatedParticipants) {\n        var participantsChangedResult = this.__visitState.checkUpdateParticipantList(uniqueList);\n\n        // check for backwards compatibility of multiway\n        if (this.__videoConfig.attachPoints.multiwayParticipantContainer !== undefined) {\n          this.__updateMultiway(participantsChangedResult);\n        }\n        return participantsChangedResult;\n      }\n      return null;\n    }\n\n    /**\n     * Updates the multi-way participant section of the video.\n     * Adds or removes participants, and hides or shows the multi-way participant container based on participants being added or dropped.\n     *\n     * @param {AWCoreSDKParticipantsChangedResult} participantsChangedResult The information about a {@link AWCoreSDKParticipant|Participant} that was added or dropped.\n     * @returns {undefined} This function has no return value.\n     * @private\n     */\n\n  }, {\n    key: '__updateMultiway',\n    value: function __updateMultiway(participantsChangedResult) {\n      var changedParticipant = participantsChangedResult.participant;\n      var numberOfRemoteParticipants = this.__visitState.numberOfRemoteParticipants(this.__videoConfig.localParticipant);\n\n      if (participantsChangedResult.type === _awcoresdk_operation_type2.default.ADD) {\n        this.__addMultiwayParticipantBox(changedParticipant);\n        if (numberOfRemoteParticipants > 1) {\n          this.__showMultiwayParticipantContainer();\n        }\n      }\n\n      if (participantsChangedResult.type === _awcoresdk_operation_type2.default.DROP) {\n        if (numberOfRemoteParticipants <= 1) {\n          this.__hideMultiwayParticipantContainer();\n        }\n        this.__removeMultiwayParticipantBox(changedParticipant);\n      }\n    }\n\n    /**\n     * Add a box in the multiway container for a new {@link AWCoreSDKParticipant|Participant}.\n     *\n     * @param {AWCoreSDKParticipant} participant The {@link AWCoreSDKParticipant|Participant} for which to add a new box.\n     * @returns {undefined} This function has no return value.\n     * @private\n     */\n\n  }, {\n    key: '__addMultiwayParticipantBox',\n    value: function __addMultiwayParticipantBox(participant) {\n      var boxElement = document.createElement('div');\n      boxElement.classList.add('awcore-multiwayParticipantBox');\n      boxElement.classList.add('inactive');\n\n      var nameElement = document.createElement('div');\n      nameElement.classList.add('participantName');\n      nameElement.innerHTML = participant.name;\n      boxElement.appendChild(nameElement);\n\n      var typeElement = document.createElement('div');\n      typeElement.classList.add('participantType');\n      typeElement.innerHTML = this.__createMultiwayParticipantTypeLabel(participant);\n      boxElement.appendChild(typeElement);\n\n      participant.multiwayParticipant = boxElement;\n      this.__videoConfig.attachPoints.multiwayParticipantContainer.appendChild(boxElement);\n    }\n\n    /**\n     * Creates the label for the participant type in the multiway container area.\n     *\n     * @param {AWCoreSDKParticipant} participant The {@link AWCoreSDKParticipant|Participant} for which to create the label.\n     * @returns {string} The label to be used.\n     * @private\n     */\n\n  }, {\n    key: '__createMultiwayParticipantTypeLabel',\n    value: function __createMultiwayParticipantTypeLabel(participant) {\n      var participantTypeLabel = '';\n      if (participant.participantType === _awcoresdk_video_participant_type2.default.CONSUMER) {\n        participantTypeLabel = this.messages.participant_type_label_consumer;\n      } else if (participant.participantType === _awcoresdk_video_participant_type2.default.PROVIDER) {\n        participantTypeLabel = this.messages.participant_type_label_provider;\n      } else if (participant.participantType === _awcoresdk_video_participant_type2.default.GUEST) {\n        var guestNumber = this.__visitState.numberOfParticipantsOfType(participant.participantType);\n        participantTypeLabel += this.messages.participant_type_label_guest + ' ' + guestNumber;\n      }\n\n      return participantTypeLabel;\n    }\n\n    /**\n     * Remove the multiway box for the given {@link AWCoreSDKParticipant|Participant} when they drop from the visit.\n     *\n     * @param {AWCoreSDKParticipant} participant The {@link AWCoreSDKParticipant|Participant} that has dropped from the visit.\n     * @returns {undefined} This function has no return value.\n     * @private\n     */\n\n  }, {\n    key: '__removeMultiwayParticipantBox',\n    value: function __removeMultiwayParticipantBox(participant) {\n      if (participant.multiwayParticipant) {\n        participant.multiwayParticipant.remove();\n        participant.multiwayParticipant = null;\n      }\n    }\n\n    /**\n     * Show the multiway container.\n     *\n     * @returns {undefined} This function has no return value.\n     * @private\n     */\n\n  }, {\n    key: '__showMultiwayParticipantContainer',\n    value: function __showMultiwayParticipantContainer() {\n      this.__videoConfig.attachPoints.multiwayParticipantContainer.classList.remove('awcore-hidden');\n    }\n\n    /**\n     * Hide the multiway container.\n     *\n     * @returns {undefined} This function has no return value.\n     * @private\n     */\n\n  }, {\n    key: '__hideMultiwayParticipantContainer',\n    value: function __hideMultiwayParticipantContainer() {\n      if (!this.__videoConfig.attachPoints.multiwayParticipantContainer.classList.contains('awcore-hidden')) {\n        this.__videoConfig.attachPoints.multiwayParticipantContainer.classList.add('awcore-hidden');\n      }\n    }\n  }, {\n    key: 'defaultOnOutEvent',\n\n\n    /**\n     * This method is called by the WebRTC server for OutEvents handling\n     *\n     * @param {Object} event the OutEvent being passed in\n     * @returns {*} various types\n     */\n    value: function defaultOnOutEvent(event) {\n      var _this6 = this;\n\n      var eventObj = event || {};\n      this.__logger.debug('Received an outEvent ' + JSON.stringify(event) + ' with type ' + eventObj.type);\n      if (event.type === 'OutEventPluginConnectionSuccess') {\n        var guestName = !this.__videoConfig.loopbackMode ? this.__videoConfig.localParticipant.name : this.__videoConfig.remoteParticipants[0].name;\n        this.__sendGuestLogin(guestName);\n        this.__videoConfig.localParticipant.nameNode.innerHTML = this.__videoConfig.localParticipant.name;\n        this.__visitState.addParticipant(this.__videoConfig.localParticipant.name);\n      } else if (event.type === 'OutEventSignIn') {\n        this.metrics.isSignedIn = true;\n        if (parseInt(event.activeEid, 10) === 0) {\n          this.__vidyoClientObj.sendEvent({\n            type: 'InEventLicense'\n          });\n        }\n      } else if (event.type === 'OutEventConferenceActive') {\n        this.metrics.isJoined = true;\n        this.__videoConfig.attachPoints.videoContainer.classList.add('awcore-call-active');\n        this.__videoConfig.attachPoints.videoControlsContainer.classList.add('awcore-call-active');\n        this.__videoConfig.attachPoints.spinnerContainer.classList.add('awcore-call-active');\n        this.__videoConfig.remoteParticipants[0].videoNode.classList.remove('awcore-hidden');\n        this.__videoConfig.attachPoints.mutedIcon.classList.toggle('awcore-hidden');\n        this.updateRemoteParticipantLabelsFromConfig();\n        this.__refreshInProgress = false;\n      } else if (event.type === 'OutEventConferenceEnded') {\n        var connected = this.__checkForConnectivityCallback ? this.__checkForConnectivityCallback(9000) : Promise.resolve();\n        connected.then(function () {\n          _this6.__videoConfig.attachPoints.videoContainer.classList.remove('awcore-call-active');\n          _this6.__videoConfig.attachPoints.topPaneWrapper.classList.remove('awcore-call-active');\n          _this6.__videoConfig.attachPoints.videoContainer.classList.add('videoWrapperSmall');\n          _this6.__videoConfig.attachPoints.videoControlsContainer.classList.remove('awcore-call-active');\n          _this6.__vidyoClientObj.stop();\n          _this6.__sendEndDetails();\n        }).catch(function (error) {\n          // Check for error code 'networkUnavailableError' and Request timeout message, which is one of the code\n          // thrown when when local device looses connection\n          // When request times out there is no error code, error object just contains error description.\n          // Checking error description for request time out calls.\n          if (error && (error.errorCode === 'networkUnavailableError' || error.message === 'Request timeout')) {\n            _this6.handleInternetDisconnection();\n          }\n        });\n      } else if (event.type === 'OutEventVideoStreamsChanged') {\n        this.__participantsCount = event.streamCount;\n      } else if (event.type === 'OutEventParticipantsChanged') {\n        var res = this.checkParticipantsChanged();\n        this.handleParticipantChange(res);\n        this.indicateLocalVideoActive();\n      }\n      this.__delegateToHandler(event);\n    }\n\n    /* Beginning of Private methods */\n    /**\n     * This method will send a request to the vidyo client\n     *\n     * @callback success(arg)\n     * @callback failure(arg)\n     * @param {Object} request the request object to be sent\n     * @param {success} [success] an optional callback to be called in case of success. Takes an object argument.\n     * @param {failure} [failure] an optional callback to be called in case of failure. Takes an object argument.\n     * @returns {string|null} a string or null value\n     */\n\n  }, {\n    key: '__sendRequest',\n    value: function __sendRequest(request, success, failure) {\n      var stringifiedRequest = JSON.stringify(request);\n      var res = this.__vidyoClientObj.sendRequest(request);\n      this.__logger.trace('Sending request: ' + stringifiedRequest);\n      if (res === _awcoresdk_vidyo_sendRequest_response2.default.ERROR_OK) {\n        if (success) {\n          success(request);\n        }\n        return request;\n      }\n      this.__logger.error('Failed to send request: ' + stringifiedRequest);\n      if (failure) {\n        failure(request);\n      }\n      return null;\n    }\n\n    /* @private */\n\n  }, {\n    key: '__sendGuestLogin',\n    value: function __sendGuestLogin(guestName) {\n      var _this7 = this;\n\n      var inEvent = void 0;\n      var portalUri = this.__videoConfig.portalUri;\n      var roomKey = this.__videoConfig.roomKey;\n      var roomPin = this.__videoConfig.roomPin;\n\n      if (roomPin) {\n        inEvent = {\n          type: 'PrivateInEventVcsoapGuestLink',\n          typeRequest: 'GuestLink',\n          requestId: 1234,\n          portalUri: portalUri,\n          roomKey: roomKey,\n          pin: roomPin,\n          guestName: guestName\n        };\n      } else {\n        inEvent = {\n          type: 'PrivateInEventVcsoapGuestLink',\n          typeRequest: 'GuestLink',\n          requestId: 1234,\n          portalUri: portalUri,\n          roomKey: roomKey,\n          pin: '',\n          guestName: guestName\n        };\n      }\n      this.sendEvent(inEvent, function () {\n        return _this7.__logger.info('Sent guest login event successfully');\n      }, function () {\n        return _this7.__logger.warn('Could not send guest login event successfully');\n      });\n    }\n\n    /* @private */\n\n  }, {\n    key: '__sendEndDetails',\n    value: function __sendEndDetails() {\n      // If we are still waiting on the other party to return when the visit ends we\n      // will send up information about a possible visit end reason\n      if (this.__visitState.__waitingOnReconnectName !== undefined) {\n        if (this.__videoConfig.localParticipant.isConsumer) {\n          this.__endDetailsCallback(_awcoresdk_visit_end_details2.default.PROVIDER_DISCONNECT);\n        } else if (this.__videoConfig.visitConfig.localParticipant.isProvider) {\n          this.__endDetailsCallback(_awcoresdk_visit_end_details2.default.CONSUMER_DISCONNECT);\n        }\n      }\n    }\n\n    /* @private */\n\n  }, {\n    key: '__callMe',\n    value: function __callMe() {\n      // black box needs to register for this event.\n      this.__delegateToHandler({ type: 'callEvent' });\n      // disable call me button when clicked\n      this.__enterPhoneOnlyMode();\n    }\n\n    /* @private */\n\n  }, {\n    key: '__populateSettings',\n    value: function __populateSettings(settingsConfig) {\n      var _this8 = this;\n\n      return this.__renderSettings().then(function (sections) {\n        if (!sections) {\n          return;\n        }\n        var cameraSection = sections.cameraSection,\n            micSection = sections.micSection,\n            speakerSection = sections.speakerSection;\n\n\n        var cameras = settingsConfig.cameras;\n        _this8.__addElementToNode(cameras, cameraSection, settingsConfig.currentCamera, 'camera');\n\n        var mics = settingsConfig.microphones;\n        _this8.__addElementToNode(mics, micSection, settingsConfig.currentMicrophone, 'microphone');\n\n        var speakers = settingsConfig.speakers;\n        _this8.__addElementToNode(speakers, speakerSection, settingsConfig.currentSpeaker, 'speaker');\n      });\n    }\n\n    /* @private */\n\n  }, {\n    key: '__addElementToNode',\n    value: function __addElementToNode(devices, parentNode, currentMediaIndex, deviceType) {\n      var _this9 = this;\n\n      var select = document.createElement('select');\n      select.classList.add('awcore-settings-camera-select');\n      select.onchange = function () {\n        _this9.__settingsChangedListener(deviceType, select.selectedIndex);\n      };\n\n      this.__removeDuplicateDefaultMediaTypes(devices).forEach(function (deviceName, index) {\n        var option = document.createElement('option');\n        var id = '' + deviceType + index;\n        option.setAttribute('value', id);\n        option.id = id;\n        option.innerHTML = deviceName;\n        if (index === currentMediaIndex) {\n          option.selected = true;\n        }\n        select.appendChild(option);\n      });\n\n      parentNode.appendChild(select);\n      this.__settingsCreated = true;\n    }\n\n    /**\n     * Some browsers return multiple media types (camera, microphone) which all have the name \"Default\".\n     * If this is the case, this method returns an array with just the first media type, to avoid a list of mics or cameras that all say \"Default\".\n     *\n     * @param {string[]} mediaTypeArray The media type array from vidyo.\n     * @returns {string[]} Either the original array, or an array with a single \"Default\" media type.\n     * @private\n     */\n\n  }, {\n    key: '__removeDuplicateDefaultMediaTypes',\n    value: function __removeDuplicateDefaultMediaTypes(mediaTypeArray) {\n      var defaultMediaTypeArray = mediaTypeArray.filter(function (deviceName) {\n        return deviceName.toLowerCase() === 'default';\n      });\n      if (defaultMediaTypeArray.length === mediaTypeArray.length) {\n        return [mediaTypeArray[0]];\n      }\n      return mediaTypeArray;\n    }\n\n    /* @private */\n\n  }, {\n    key: '__settingsChangedListener',\n    value: function __settingsChangedListener(deviceType, index) {\n      // this.__logger.debug(`Setting media: ${deviceType} to value: ${deviceName}`);\n      var settingRequest = this.__createSettingRequestFor(deviceType, index);\n      if (settingRequest) {\n        this.sendRequest(settingRequest);\n      } else {\n        this.__logger.warn('Unable to create setting request for deviceType: ' + deviceType);\n      }\n    }\n\n    /* @private */\n\n  }, {\n    key: '__createSettingRequestFor',\n    value: function __createSettingRequestFor(devType, index) {\n      switch (devType) {\n        case 'camera':\n          return {\n            type: 'RequestSetConfiguration',\n            currentCamera: index\n          };\n        case 'microphone':\n          return {\n            type: 'RequestSetConfiguration',\n            currentMicrophone: index\n          };\n        case 'speaker':\n          return {\n            type: 'RequestSetConfiguration',\n            currentSpeaker: index\n          };\n        default:\n          return null;\n      }\n    }\n\n    /**\n     * Handle one participant waiting for their counter-part to join the visit. This is shown as soon as we detect the participant has left\n     *\n     * @param {string} name the name of the other primary participant (provider or consumer) we are waiting for.\n     * @returns {undefined} this function has no return value.\n     */\n\n  }, {\n    key: 'handleWaitingForParticipant',\n    value: function handleWaitingForParticipant(name) {\n      // DETERMINE WHO THE USER IS to display correct message\n      if (this.__videoConfig.attachPoints.waitDisplayMessage) {\n        var hangTightMessage = this.messages.connecting_with_remote.replace('{remoteName}', name);\n        this.__videoConfig.attachPoints.waitDisplayMessage.innerHTML = hangTightMessage;\n      }\n    }\n\n    /**\n     * Show dom state allowing the user to cancel the visit. This should appear after the consumer has waited over 30 seconds for the provider to return\n     * to the call.\n     *\n     * @param {string} name the participant who is missing from the visit.\n     * @param {boolean} isReturn indicates if this disconnect was for a return or a participant who never arrived in the call.\n     * @returns {undefined} This function has no return.\n     */\n\n  }, {\n    key: 'showDisconnectOption',\n    value: function showDisconnectOption(name, isReturn) {\n      if (this.__visitState.getParticipant(name) === undefined) {\n        var connectionMessage = '';\n        if (isReturn) {\n          connectionMessage = this.messages.can_cancel_rejoin.replace('{participantName}', name);\n        } else {\n          connectionMessage = this.messages.can_cancel.replace('{participantName}', name);\n        }\n        this.__videoConfig.attachPoints.waitDisplayMessage.innerHTML = connectionMessage;\n      }\n    }\n\n    /**\n     * Handle dom manipulation for a resumed call.\n     *\n     * @returns {undefined} this function has no return value.\n     */\n\n  }, {\n    key: 'handleReconnectedDisplay',\n    value: function handleReconnectedDisplay() {\n      this.__videoConfig.attachPoints.mutedIcon.classList.toggle('awcore-hidden');\n      this.__videoConfig.attachPoints.topPaneWrapper.classList.add('awcore-call-active');\n      this.__videoConfig.attachPoints.videoContainer.classList.add('awcore-call-active');\n      this.__videoConfig.attachPoints.videoControlsContainer.classList.add('awcore-call-active');\n      this.__videoConfig.attachPoints.spinnerContainer.classList.add('awcore-call-active');\n      this.__videoConfig.remoteParticipants[0].videoNode.classList.remove('awcore-hidden');\n    }\n\n    /**\n     * Handle dom manipulation for a call pending reconnect in the call.\n     *\n     * @param {AWCoreSDKParticipant} participant the participant we are waiting to reconnect.\n     * @returns {undefined} this function has no return value.\n     */\n\n  }, {\n    key: 'handleReconnectingDisplay',\n    value: function handleReconnectingDisplay(participant) {\n      var reconnectingMessage = '';\n      if (participant.isConsumer) {\n        reconnectingMessage = this.messages.consumer_reconnecting.replace('{participantName}', participant.name);\n      }\n      if (participant.isProvider) {\n        reconnectingMessage = this.messages.provider_reconnecting.replace('{participantName}', participant.name);\n        this.__videoConfig.attachPoints.topPaneWrapper.classList.remove('awcore-call-active');\n      }\n      this.__videoConfig.attachPoints.mutedIcon.classList.toggle('awcore-hidden');\n      this.__videoConfig.attachPoints.videoContainer.classList.remove('awcore-call-active');\n      this.__videoConfig.attachPoints.videoControlsContainer.classList.remove('awcore-call-active');\n      this.__videoConfig.remoteParticipants[0].videoNode.classList.add('awcore-hidden');\n      this.__videoConfig.attachPoints.spinnerContainer.classList.remove('awcore-call-active');\n      this.__videoConfig.attachPoints.waitDisplayMessage.innerHTML = reconnectingMessage;\n    }\n\n    /**\n     * Handle dom transition to second waiting screen.\n     *\n     * @param {AWCoreSDKParticipant} participant the participant we are waiting to reconnect.\n     * @returns {undefined} this function has no return value.\n     */\n\n  }, {\n    key: 'handleWaitingForReturn',\n    value: function handleWaitingForReturn(participant) {\n      if (this.__visitState.getParticipant(participant.name) === undefined) {\n        this.showDisconnectOption(participant.name, true);\n      }\n    }\n\n    /**\n     * Handle a participant being removed from an ongoing call.\n     *\n     * @param {AWCoreSDKParticipant} removedParticipant the participant we are waiting to reconnect.\n     * @returns {undefined} this function has no return value.\n     */\n\n  }, {\n    key: 'handleParticipantRemoved',\n    value: function handleParticipantRemoved(removedParticipant) {\n      var isCoreParticipant = removedParticipant.isProvider || removedParticipant.isConsumer;\n      if (!this.metrics.isEndRequested && isCoreParticipant) {\n        this.handleReconnectingDisplay(removedParticipant);\n        // Mark the user we are waiting on\n        this.__visitState.__waitingOnReconnectName = removedParticipant.name;\n        // Show a different display state for a consumer using the console\n        if (this.__videoConfig.localParticipant.isConsumer) {\n          setTimeout(this.handleWaitingForReturn.bind(this), this.__videoConfig.visitConfig.updateWaitingDisplayInterval, removedParticipant);\n        }\n      }\n    }\n\n    /**\n     * Handle a participant being added or removed from the call.\n     *\n     * @param {AWCoreSDKParticipantsChangedResult} result the change results we need to respond too.\n     * @returns {undefined} This function has no return value.\n     */\n\n  }, {\n    key: 'handleParticipantChange',\n    value: function handleParticipantChange(result) {\n      if (result.type === _awcoresdk_operation_type2.default.ADD) {\n        if (this.__visitState.__waitingOnReconnectName !== undefined && result.participant.name === this.__visitState.__waitingOnReconnectName) {\n          this.handleReconnectedDisplay();\n          this.__visitState.__waitingOnReconnectName = undefined;\n        } else {\n          var name = this.__visitState.determineWhoToWaitFor(result.participant);\n          if (name) {\n            this.handleWaitingForParticipant(name);\n          }\n        }\n      }\n      var participant = result.participant;\n      if (result.type === _awcoresdk_operation_type2.default.DROP) {\n        this.handleParticipantRemoved(participant);\n      }\n    }\n\n    /* @private */\n\n  }, {\n    key: '__checkForConnectivityCallback',\n    value: function __checkForConnectivityCallback() {\n      return this.checkForConnectivityCallback();\n    }\n\n    /**\n     * Setup console's event handlers\n     *\n     * @private\n     * @returns {undefined} This function has no return value.\n     */\n\n  }, {\n    key: '__setupConsoleEventHandlers',\n    value: function __setupConsoleEventHandlers() {\n      var _this10 = this;\n\n      this.__setupDOMEventHandlers();\n      // stop hiding it if it's hidden for any reason\n      this.__videoConfig.attachPoints.settings.classList.remove('awcore-invisible');\n\n      // wire-up onclick\n      this.__videoConfig.attachPoints.settings.onclick = function (event) {\n        _this10.__handleSettingsClick(event);\n      };\n\n      setTimeout(this.showDisconnectOption.bind(this), this.__videoConfig.visitConfig.updateWaitingDisplayInterval, this.__videoConfig.localParticipant.isConsumer ? this.__visitState.__providerKey : this.__visitState.__consumerKey, false);\n    }\n  }, {\n    key: '__handleSettingsClick',\n    value: function __handleSettingsClick(event) {\n      this.__logger.info(event);\n      event.preventDefault();\n      if (this.__videoConfig.attachPoints.selfVideo.srcObject && this.__videoConfig.attachPoints.settingsContent.classList.contains('awcore-hidden')) {\n        event.stopPropagation();\n        this.__videoConfig.attachPoints.settingsContent.classList.remove('awcore-hidden');\n        var res = null;\n        if (!this.__settingsConfig) {\n          res = this.mediaConfigurations;\n          if (res && !this.__settingsCreated) {\n            this.__populateSettings(res);\n          }\n          this.__settingsConfig = res;\n        }\n      }\n    }\n\n    /**\n     * Setup the Vidyo client event handlers\n     *\n     * @private\n     * @param {vidyoClient} vidyo the vidyo client to setup event handlers for.\n     * @returns {undefined} This function has no return value.\n     */\n\n  }, {\n    key: '__setupVidyoClientEventHandlers',\n    value: function __setupVidyoClientEventHandlers(vidyo) {\n      if (vidyo) {\n        vidyo.setDefaultOutEventCallbackMethod('defaultOnOutEvent');\n        vidyo.setOutEventCallbackObject(this);\n        vidyo.setLogCallback(this.__logger.debug.bind(this.__logger));\n        vidyo.setSessionManager(this.__videoConfig.sessionManager);\n      }\n    }\n\n    /**\n     * Creates a Vidyo client and setup its event handlers\n     *\n     * @private\n     * @returns {Promise} Returns a promise which resolves to a Vidyo client or rejects with an error.\n     */\n\n  }, {\n    key: '__createVidyoClient',\n    value: function __createVidyoClient() {\n      this.__vidyoClientObj = (0, _vidyo2.default)();\n    }\n  }, {\n    key: '__startVidyoClient',\n    value: function __startVidyoClient() {\n      var _this11 = this;\n\n      this.__setupVidyoClientEventHandlers(this.__vidyoClientObj);\n      return new Promise(function (resolve, reject) {\n        var startSucceeded = _this11.__vidyoClientObj.start();\n        _this11.__logger.debug(startSucceeded ? 'started successfully' : 'did not start successfully');\n        if (startSucceeded) {\n          resolve(_this11);\n        } else {\n          reject(startSucceeded);\n        }\n      });\n    }\n\n    // set the hard coded ID's needed by Vidyo\n\n  }, {\n    key: '__setIds',\n    value: function __setIds() {\n      this.__videoConfig.attachPoints.selfVideo.id = 'localVideo';\n      this.__videoConfig.attachPoints.mainVideo.id = 'remoteVideo0';\n      this.__videoConfig.attachPoints.participant0.id = 'participant0';\n      this.__videoConfig.attachPoints.remoteVideo1.id = 'remoteVideo1';\n      this.__videoConfig.attachPoints.participant1.id = 'participant1';\n      this.__videoConfig.attachPoints.remoteVideo2.id = 'remoteVideo2';\n      this.__videoConfig.attachPoints.participant2.id = 'participant2';\n      this.__videoConfig.attachPoints.remoteVideo3.id = 'remoteVideo3';\n      this.__videoConfig.attachPoints.participant3.id = 'participant3';\n    }\n  }, {\n    key: 'isInFullScreenMode',\n    get: function get() {\n      return this.__countScreen === 0;\n    }\n\n    /**\n     * The implementation of mediaConfigurations()\n     *\n     * @inheritdoc\n     */\n\n  }, {\n    key: 'mediaConfigurations',\n    get: function get() {\n      var _this12 = this;\n\n      var configRequest = {\n        type: 'RequestGetConfiguration'\n      };\n      return this.sendRequest(configRequest, function (result) {\n        return _this12.__logger.info(JSON.stringify(result));\n      });\n    },\n    set: function set(configRequest) {\n      this.sendRequest(configRequest);\n    }\n  }]);\n\n  return AWCoreSDKVidyoConsole;\n}(_internal_video_console2.default);\n\nexports.default = AWCoreSDKVidyoConsole;","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\n/*!\n * American Well Core Web SDK\n *\n * Copyright (c) 2019 American Well.\n * All rights reserved.\n *\n * It is illegal to use, reproduce or distribute\n * any part of this Intellectual Property without\n * prior written authorization from American Well.\n */\n\nvar prefix = void 0; // the vendor prefix we'll use for the event\nvar method = void 0; // the full method name once detected\nvar found = void 0; // whether or not we found an `opener` function\n\n// all the [supported] combinations of prefix / methodName\nvar openers = [':requestFullscreen', 'moz:RequestFullScreen', 'webkit:RequestFullScreen'];\n\n/*\n * A feature detection test to help determine which\n * event name is fired when the browser changes fullscreen state\n */\nvar eventName = function () {\n  var node = document.createElement('div');\n  found = openers.some(function (name) {\n    var _name$split = name.split(':'),\n        _name$split2 = _slicedToArray(_name$split, 2),\n        pre = _name$split2[0],\n        meth = _name$split2[1];\n\n    prefix = pre;\n    method = [pre + meth];\n    return typeof node[method] === 'function';\n  });\n  return prefix + 'fullscreenchange';\n}();\n\n/**\n * Request fullscreen mode of a `node` in a cross browser way\n *\n * @param {HTMLElement} node the node to make fullscreen\n * @returns {boolean} if no method found or executed, this is false. Otherwise true.\n */\nvar on = function on(node) {\n  return found && node[method]() && true;\n};\n\n/**\n * The correct event name to use when listening for fullscreenchange\n * @type {String}\n */\non.CHANGE = eventName;\n\n/**\n * Minimize a browser fullscreen mode\n *\n * @returns {undefined} nothing\n */\non.off = function () {\n  if (document.exitFullscreen) {\n    document.exitFullscreen();\n  } else if (document.webkitIsFullScreen) {\n    document.webkitExitFullscreen();\n  } else if (document.mozFullScreen) {\n    document.mozCancelFullScreen();\n  }\n};\n\non.isOn = function () {\n  return document.fullScreen || document.mozFullScreen || document.webkitIsFullScreen || window.outerHeight - window.innerHeight <= 1;\n};\n\nexports.default = on;","module.exports = \"<div data-aw-attach='rootContainer' class='awcore-container'>\\n  <div data-aw-attach='topPaneWrapper' class='awcore-top-pane-wrapper'>\\n    <div class='awcore-disconnect-call-container'>\\n      <div data-aw-attach='endVisitButton' role=\\\"button\\\" tabindex=\\\"0\\\" class='awcore-disconnect-button'>{ messages.webrtc_end_visit }</div>\\n    </div>\\n  </div>\\n  <div data-aw-attach='videoContainer' class='awcore-video-container awcore-video-wrapper-small'>\\n    <div class='awcore-video-node-0 awcore-participant-wrapper'>\\n      <div data-aw-attach='mutedIcon' class='awcore-mutedIcon awcore-hidden'></div>\\n      <video data-aw-attach='mainVideo' autoplay='' playsinline class='awcore-remote-video-0 awcore-remotevideo-default'></video>\\n      <div class='awcore-participant-title-container'>\\n        <div class='awcore-participant-title-container-bg'>\\n          <h3 data-aw-attach='participant0' class='awcore-participant-0 awcore-participant-title'></h3>\\n          <h4 data-aw-attach='rootParticipantSubtitle' class='awcore-participant-0 awcore-participant-subtitle'></h4>\\n        </div>\\n        <div class='awcore-call-me-control-container'>\\n          <div data-aw-attach='callMe' class='awcore-call-me-div awcore-hidden' role=\\\"button\\\" tabindex=\\\"0\\\">\\n            <span class='not-calling-problems'>{ messages.call_me_video_problems }</span>\\n            <span class='not-calling'>{ messages.call_me }</span>\\n            <span class='calling awcore-hidden'>{ messages.talk_via_phone_calling }</span>\\n            <span class='connected awcore-hidden'>{ messages.call_me_active }</span>\\n          </div>\\n        </div>\\n      </div>\\n\\n    </div>\\n    <div class='awcore-participant-wrapper '>\\n      <video data-aw-attach='remoteVideo1' autoplay='' playsinline class='awcore-remotevideo-default'></video>\\n      <span data-aw-attach='participant1' class='awcore-participant-title'></span>\\n    </div>\\n    <div class='awcore-participant-wrapper '>\\n      <video data-aw-attach='remoteVideo2' autoplay='' playsinline class='awcore-remotevideo-default'></video>\\n      <span data-aw-attach='participant2' class='awcore-participant-title'></span>\\n    </div>\\n    <div class='awcore-participant-wrapper '>\\n      <video data-aw-attach='remoteVideo3' autoplay='' playsinline class='awcore-remotevideo-default'></video>\\n      <span data-aw-attach='participant3' class='awcore-participant-title'></span>\\n    </div>\\n    <div data-aw-attach='selfVideoParentContainer' class='awcore-self-container'>\\n      <div data-aw-attach='selfVideoContainer' class='awcore-local-view awcore-local-participant-wrapper'>\\n        <video data-aw-attach='selfVideo' autoplay='' playsinline muted='muted' class='awcore-local-video awcore-localvideo-default'></video>\\n        <span data-aw-attach='localViewName' class='awcore-local-view-name awcore-local-participant-title awcore-hidden'></span>\\n      </div>\\n      <div class='awcore-hide-self-video-container' >\\n        <div data-aw-attach='hideSelfVideo' role=\\\"button\\\" tabindex=\\\"0\\\" class='awcore-hide-self-video'><span>{ messages.self_video }</span></div>\\n      </div>\\n    </div>\\n  </div>\\n\\n  <div class='awcore-video-controls-container'>\\n    <div data-aw-attach='bottomPaneWrapper' class='awcore-bottom-pane-wrapper'>\\n      <div data-aw-attach='settingsContainer' class='awcore-settings-container'>\\n        <div data-aw-attach='settingsContent' class='awcore-hidden awcore-settings-content-wrapper'>\\n          <h2>{ messages.settings }</h2>\\n          <h3>{ messages.settings_details }</h3>\\n          <div data-aw-attach='settingsContentCamera' class='awcore-settings-content-div'></div>\\n          <div data-aw-attach='settingsContentMic' class='awcore-settings-content-div'></div>\\n          <div data-aw-attach='settingsContentSpeaker' class='awcore-settings-content-div'></div>\\n          <div class='awcore-settings-chevron'></div>\\n        </div>\\n        <div data-aw-attach='settings' class='awcore-settings-div awcore-control-button' role=\\\"switch\\\" aria-checked=\\\"false\\\" tabindex='0'><span>{ messages.settings}</span></div>\\n      </div>\\n      <div data-aw-attach='videoControlsContainer' class='awcore-toggle-buttons-container'>\\n        <div data-aw-attach='camera' class='awcore-camera-button awcore-control-button awcore-camera' role=\\\"switch\\\" aria-checked=\\\"true\\\" tabindex='0'><span>{ messages.camera }</span></div>\\n        <div data-aw-attach='mic' class='awcore-mic-button awcore-control-button awcore-mic' role=\\\"switch\\\" aria-checked=\\\"true\\\" tabindex='0'><span>{ messages.mic }</span></div>\\n        <div data-aw-attach='fullScreen' class='awcore-full-screen-button awcore-control-button awcore-full-screen' role=\\\"switch\\\" aria-checked=\\\"false\\\" tabindex='0'>\\n          <span>{ messages.full_screen }</span>\\n        </div>\\n        <div data-aw-attach='refreshButton' class='awcore-refresh-button awcore-control-button awcore-refresh' role=\\\"button\\\" tabindex='0'><span>{ messages.refresh }</span></div>\\n        <div data-aw-attach='screenshareButton'></div>\\n        <div data-aw-attach='switchCameraButton' class='awcore-control-button awcore-switch-camera' role=\\\"button\\\" tabindex='0'><span>{ messages.switch }</span></div>\\n\\n      </div>\\n      <div class='awcore-far-control-container'>\\n      </div>\\n    </div>\\n    <div data-aw-attach='multiwayParticipantContainer' class='awcore-multiway-participant-container awcore-hidden'></div>\\n  </div>\\n  <div data-aw-attach='promptForBrowserPermissionsModal' class='awcore-modal-container awcore-modal-container-flat awcore-browser-permissions awcore-hidden'>\\n    <div class='awcore-modal'>\\n      <div class='awcore-modal-body'>\\n          <span class=\\\"awcore-dialog-icon\\\"></span>\\n          <h1>{messages.header_browser_permission}</h1>\\n          <p data-aw-attach=\\\"promptForBrowserPermissionsAccept\\\">\\n            {messages.accept_permission}\\n          </p>\\n      </div>\\n      <div data-aw-attach='permissionsCallMeContainer' class='awcore-modal-footer'>\\n        <p data-aw-attach='callMePretext' id=\\\"callMePretextText\\\" class='awcore-modal-footer-text'>{ messages.talk_via_phone_pretext }</p>\\n        <div data-aw-attach='permissionIvrButton' class='awcore-button awcore-button-inverted' tabindex=\\\"0\\\" role=\\\"button\\\" aria-describedby=\\\"callMePretextText\\\"> { messages.talk_via_phone }</div>\\n      </div>\\n    </div>\\n  </div>\\n  <div data-aw-attach='phoneOnlyContainer' class='awcore-phone-only-container awcore-hidden'>\\n    <div class='awcore-icon-calling'></div>\\n    <div data-aw-attach='phoneOnly' class='awcore-calling-heading'>{ messages.phone_only }</div>\\n    <div data-aw-attach='phoneOnlySub' class='awcore-calling-subtext'>{ messages.phone_only_sub }</div>\\n  </div>\\n  <div data-aw-attach='spinnerContainer' class='awcore-spinner-container'>\\n    <div class='awcore-wait-image-box'>\\n      <div class='awcore-loader'>\\n        <div class='awcore-loading-spinner'>\\n          <svg class='awcore-circle-svg' viewBox='25 25 50 50'>\\n            <circle class='awcore-circle-stroke-static' fill='none' cx='50' cy='50' r='20' stroke-width='2' stroke-miterlimit='10' />\\n          </svg>\\n          <svg class='awcore-loading-icon-static-camera' viewBox=\\\"0 0 72 72\\\">\\n            <g fill=\\\"#25ABFD\\\" fill-rule=\\\"evenodd\\\">\\n              <path d=\\\"M42.824 54H11.176C8.87 54 7 52.158 7 49.886V22.114C7 19.842 8.87 18 11.176 18h31.648C45.13 18 47 19.842 47 22.114v27.772C47 52.158 45.13 54 42.824 54M63.713 49.78l-11.98-7.268a1.53 1.53 0 0 1-.733-1.31V30.8c0-.538.278-1.035.733-1.311l11.98-7.268c1.006-.61 2.287.123 2.287 1.31v24.94c0 1.187-1.28 1.92-2.287 1.31\\\"/>\\n            </g>\\n          </svg>\\n          <svg class='awcore-loading-icon-static-waves' viewBox=\\\"0 0 72 72\\\">\\n            <g fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n              <path stroke=\\\"#9485ED\\\" stroke-linecap=\\\"round\\\" stroke-width=\\\"4\\\" d=\\\"M58.01 60.648A34.288 34.288 0 0 0 68 36.396 34.285 34.285 0 0 0 57.86 12M45.134 47.663a15.867 15.867 0 0 0 4.675-11.268c0-4.492-1.86-8.549-4.854-11.443l-.025-.022\\\"/>\\n              <path stroke=\\\"#9485ED\\\" stroke-linecap=\\\"round\\\" stroke-width=\\\"4\\\" d=\\\"M51.968 54.497a25.504 25.504 0 0 0 7.505-18.101c0-7.161-2.943-13.634-7.684-18.278l-.024-.023M13.99 60.648A34.288 34.288 0 0 1 4 36.396 34.281 34.281 0 0 1 14.14 12M26.866 47.663a15.867 15.867 0 0 1-4.675-11.268c0-4.492 1.861-8.549 4.854-11.443l.025-.022\\\"/>\\n              <path stroke=\\\"#9485ED\\\" stroke-linecap=\\\"round\\\" stroke-width=\\\"4\\\" d=\\\"M20.032 54.497a25.5 25.5 0 0 1-7.505-18.101 25.503 25.503 0 0 1 7.684-18.278l.024-.023\\\"/>\\n              <path fill=\\\"#9485ED\\\" d=\\\"M42.091 36.23a5.685 5.685 0 1 1-11.37-.001 5.685 5.685 0 0 1 11.37 0\\\"/>\\n            </g>\\n          </svg>\\n          <svg class='awcore-loading-icon-static-nodes' viewBox=\\\"0 0 72 72\\\">\\n            <g fill=\\\"none\\\" fill-rule=\\\"evenodd\\\" stroke=\\\"#FCD54E\\\" stroke-width=\\\"4\\\">\\n              <circle cx=\\\"24\\\" cy=\\\"10\\\" r=\\\"8\\\"/>\\n              <circle cx=\\\"24\\\" cy=\\\"60\\\" r=\\\"8\\\"/>\\n              <path stroke-linecap=\\\"round\\\" d=\\\"M30.367 16.367l6.867 6.867\\\"/>\\n              <circle cx=\\\"48\\\" cy=\\\"35\\\" r=\\\"8\\\" fill=\\\"#FCD54E\\\"/>\\n              <path fill=\\\"#D8D8D8\\\" stroke-linecap=\\\"round\\\" d=\\\"M34.924 47.974l6.9-7.048\\\"/>\\n            </g>\\n          </svg>\\n        </div>\\n      </div>\\n    </div>\\n    <span data-aw-attach='waitDisplayMessage'></span>\\n    <div data-aw-attach='waitSpinnerButtonsParent' class='awcore-spinner-buttons-div awcore-hidden'>\\n      <div data-aw-attach='spinnerRefreshButton' class='awcore-spinner-button' role=\\\"button\\\" tabindex=\\\"0\\\">{ messages.webrtc_refresh_visit }</div>\\n      <div data-aw-attach='spinnerIvrButton' class='awcore-spinner-button' role=\\\"button\\\" tabindex=\\\"0\\\">{ messages.talk_via_phone }</div>\\n    </div>\\n    <div data-aw-attach='cancelVisitButtonParent' class='awcore-cancel-waiting-button-div awcore-hidden'>\\n      <div data-aw-attach='cancelVisitButton' class='awcore-cancel-text' role=\\\"button\\\" tabindex=\\\"0\\\">{ messages.webrtc_cancel_visit }</div>\\n      <div data-aw-attach='endVisitLink' class='awcore-cancel-text awcore-hidden' role=\\\"button\\\" tabindex=\\\"0\\\">{ messages.webrtc_end_visit }</div>\\n      <div data-aw-attach='cancelVisitButtonSubText' class='awcore-cancel-sub-text' role=\\\"button\\\" tabindex=\\\"0\\\">{ messages.webrtc_cancel_visit_sub }</div>\\n    </div>\\n  </div>\\n</div>\\n<div class='awcore-modal-container awcore-hidden' data-aw-attach='endVisitModal'>\\n  <div class='awcore-modal'>\\n    <div class='awcore-modal-header'>\\n      <h5 class='awcore-hidden' data-aw-attach='cancelVisitModalTitle'>{ messages.webrtc_cancel_visit }</h5>\\n      <h5 data-aw-attach='endVisitModalTitle'>{ messages.end_visit_confirmation_title }</h5>\\n      <div data-aw-attach='closeModal' class='awcore-modalClose'></div>\\n    </div>\\n    <div class='awcore-modal-body'>\\n      <div id='awcore-exit-visit-content' class='awcore-exit-visit-content'>\\n        <div data-aw-attach='endVisitDescription' class='awcore-end-visit-description'>{ messages.webrtc_end_visit_confirmation }</div>\\n        <div data-aw-attach='cancelVisitDescription' class='awcore-hidden'>{ messages.webrtc_cancel_visit_confirmation }\\n          </div>\\n        <div data-aw-attach='exitVisitModalProviderBody' class='awcore-exit-visit-provider-body'>\\n          <div data-aw-attach='exitVisitModalProviderButtonContainer' class='awcore-exit-visit-modal-buttons-container' role=\\\"radiogroup\\\">\\n            <label class='awcore-form-radio' data-aw-attach='endVisitRadio'>\\n              <input data-aw-attach='endVisitRadioButton' type='radio' name='awcore-visit-end-type' value='end' class='awcore-exit-visit-radio' checked>\\n              <i class='form-icon'></i> <span id='awcore-end-visit-radio-text' class='awcore-end-visit-radio-text'>{ messages.webrtc_end_visit }</span>\\n            </label>\\n            <label class='awcore-form-radio'>\\n              <input data-aw-attach='cancelVisitRadioButton' type='radio' name='awcore-visit-end-type' value='cancel' class='awcore-exit-visit-radio'>\\n              <i class='awcore-form-icon'></i> <span id='awcore-cancel-visit-radio-text' class='awcore-end-visit-radio-text'>{ messages.webrtc_cancel_visit }</span>\\n            </label>\\n          </div>\\n          <div data-aw-attach='exitVisitModalProviderCancelContainer' class='awcore-hidden'>\\n            <p class='awcore-exit-visit-report-note'>{ messages.webrtc_visit_report_note }</p>\\n            <div class='awcore-exit-visit-comments'>\\n              <label>{ messages.webrtc_additional_comments }</label>\\n              <textarea data-aw-attach='exitVisitModalProviderComments'></textarea>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n\\n    <div data-aw-attach='exitVisitModalFooter' class='awcore-modal-footer'>\\n      <button data-aw-attach='confirmEnd' class='awcore-confirm-end-button'>{ messages.webrtc_confirm_end }</button>\\n      <button data-aw-attach='disregardEnd' class='awcore-disregard-end-button'>{ messages.webrtc_disregard_end }</button>\\n    </div>\\n\\n    <div data-aw-attach='exitVisitModalProviderFooter' class='awcore-modal-footer awcore-hidden'>\\n      <button data-aw-attach='exitVisitModalGoBack' class='awcore-modal-button-ghost'>{ messages.webrtc_back }</button>\\n      <button data-aw-attach='exitVisitModalContinueExit' value='end' class='awcore-modal-button-confirm'></button>\\n    </div>\\n  </div>\\n</div>\\n\"","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/*!\r\n * American Well Common Web SDK\r\n *\r\n * Copyright © 2018 American Well.\r\n * All rights reserved.\r\n *\r\n * It is illegal to use, reproduce or distribute\r\n * any part of this Intellectual Property without\r\n * prior written authorization from American Well.\r\n */\n/**\r\n * Enum for AWCoreSDKErrorCode.\r\n * @readonly\r\n * @enum {string}\r\n */\nvar AWCoreSDKErrorCode = {\n  /**\r\n   * Generic error. For dev purposes in alpha only.\r\n   * @since 1.0.0\r\n   */\n  genericError: 'genericError'\n};\n\nObject.freeze(AWCoreSDKErrorCode);\nexports.default = AWCoreSDKErrorCode;","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); /*!\nmerican Well Core Web SDK\nnopyright (c) 2019 American Well.\nll rights reserved.\nnt is illegal to use, reproduce or distribute\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      * any part of this Intellectual Property without\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      * prior written authorization from American Well.\nn\nvar _spinner_template = require('../templates/spinner_template.html');\n\nvar _spinner_template2 = _interopRequireDefault(_spinner_template);\n\nvar _awcoresdk_video_participant_type = require('../awcoresdk_video_participant_type');\n\nvar _awcoresdk_video_participant_type2 = _interopRequireDefault(_awcoresdk_video_participant_type);\n\nvar _replace = require('../util/replace');\n\nvar _replace2 = _interopRequireDefault(_replace);\n\nvar _performance = require('../util/performance');\n\nvar _performance2 = _interopRequireDefault(_performance);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar supportedStates = {\n  START: 'START',\n  CONNECTING: 'CONNECTING',\n  CONNECTED: 'CONNECTED',\n  RECONNECTING: 'RECONNECTING',\n  REMOTE_CONNECTING: 'REMOTE_CONNECTING',\n  END: 'END'\n};\n\nvar stateMap = {\n  START: 'onStart',\n  CONNECTING: 'onConnecting',\n  CONNECTED: 'onConnected',\n  RECONNECTING: 'onLocalReconnecting',\n  REMOTE_CONNECTING: 'onRemoteReconnecting'\n};\n\nvar messageMap = {\n  connecting_screen_1: {\n    main: 'messages.connecting_screen_1_header',\n    main_sub: 'messages.connecting_screen_1_subtext'\n  },\n  connecting_screen_2: {\n    main: 'messages.connecting_screen_2_header',\n    main_sub: 'messages.connecting_screen_2_subtext'\n  },\n  connecting_screen_3: {\n    main: 'messages.connecting_screen_3_header',\n    main_sub: 'messages.connecting_screen_3_subtext'\n  },\n  connecting: {\n    main: 'messages.connecting_with_remote'\n  },\n  connectGuest: {\n    main: 'messages.connecting_guest',\n    main_sub: 'messages.connecting_guest_subtext'\n  },\n  connectExtended: {\n    main: 'messages.connecting_your_video_extended',\n    main_sub: 'messages.connecting_your_video_subtext_extended'\n  },\n  connectExtendedIVR: {\n    main: 'messages.connecting_your_video_extended',\n    main_sub: 'messages.connecting_your_video_subtext_extended_ivr'\n  },\n  reconnect: {\n    main: 'messages.reconnecting_your_video_main',\n    main_sub: 'messages.reconnecting_your_video_subtext'\n  },\n  reconnectRemoteGuest: {\n    main: 'messages.connecting_guest',\n    main_sub: 'messages.reconnecting_remote_as_guest_subtext'\n  },\n  reconnectRemoteProvider: {\n    main: 'messages.reconnecting_remote',\n    main_sub: 'messages.reconnecting_provider_subtext'\n  },\n  reconnectRemoteConsumer: {\n    main: 'messages.reconnecting_remote',\n    main_sub: 'messages.reconnecting_consumer_subtext'\n  },\n  reconnectExt: {\n    main: 'messages.reconnecting_your_video_extended',\n    main_sub: 'messages.reconnecting_your_video_extended_subtext'\n  },\n  reconnectExtIVR: {\n    main: 'messages.reconnecting_your_video_extended',\n    main_sub: 'messages.reconnecting_your_video_extended_subtext_ivr'\n  },\n  connectRemoteExt: {\n    main: 'messages.connecting_remote_extended',\n    main_sub: 'messages.connecting_remote_extended_subtext'\n  },\n  connectRemoteExtIVR: {\n    main: 'messages.connecting_remote_extended',\n    main_sub: 'messages.connecting_remote_extended_subtext_ivr'\n  }\n};\n\nvar SpinnerManager = function () {\n  /**\n   * The constructor of the SpinnerManager class\n   *\n   * @param {Object} config the configuration object to pass into this manager\n   * @param {AWCoreSDKVideoParticipant} config.localParticipant the local participant in this console\n   * @param {AWCoreSDKVideoParticipant[]} config.remoteParticipants the remote participants in this console\n   * @param {Object} config.messages the bundle of key/value for this console\n   * @param {Object} config.logger the logger to be used for logging purposes\n   * @param {boolean} config.isAllowToCancel indecate if show or hide cancel button\n   * @param {AWCoreSDKVideoConfiguration} config.context the video configuration object, so that we can access attach points and message context\n   * @param {SpinnerViewRenderer} config.viewRenderer the object that renders views on nodes\n   */\n  function SpinnerManager(config) {\n    _classCallCheck(this, SpinnerManager);\n\n    this.__currentState = supportedStates.START;\n    this.__self = config.localParticipant;\n    this.__remoteParticipants = config.remoteParticipants;\n    this.__messages = config.messages;\n    this.__logger = config.logger;\n    this.__context = config.context;\n    this.__viewRenderer = config.viewRenderer;\n    this.__isRefresh = config.isRefresh;\n    this.__isIVRCallbackEnabled = config.isIVRCallbackEnabled;\n    this.__timeoutHandles = [];\n    this.__init();\n  }\n\n  _createClass(SpinnerManager, [{\n    key: '__init',\n    value: function __init() {\n      this.__currentState = supportedStates.START;\n      this.__clear();\n      this.__contexts = [{ messages: this.__messages }, {\n        participantName: this.__remoteParticipants[0].name,\n        remoteName: this.__remoteParticipants[0].name\n      }];\n      this.transition({ name: 'start' });\n    }\n  }, {\n    key: 'transition',\n    value: function transition(spinnerEvent) {\n      if (this.__currentState === 'END') {\n        throw Error('State machine not initialized');\n      }\n      var fn = this[stateMap[this.__currentState]];\n      if (fn && typeof fn === 'function') {\n        fn.call(this, spinnerEvent);\n      } else {\n        throw new Error('Bad Current State ' + this.__currentState);\n      }\n    }\n\n    /* SPINNER STATES */\n\n  }, {\n    key: 'onStart',\n    value: function onStart() {\n      var _this = this;\n\n      this.__currentState = supportedStates.CONNECTING;\n\n      // show the 'setting up video' screen\n      this.__showSpinnerBackground('waves');\n\n      if (this.__self.isGuest) {\n        // if we're a guest just show the normal guest stuff\n        this.__viewRenderer.render(this.__createViewForSimpleTemplate(this.__replace(messageMap.connectGuest)));\n      } else {\n        // if we're a consumer/provider show the chained screens\n        this.__viewRenderer.render(this.__createViewForNestedTemplate(this.__replace(messageMap.connecting_screen_1)));\n\n        var delay = function delay(time) {\n          return new Promise(function (resolve) {\n            // append to the handles array so they can be cleared if we join mid-delay\n            _this.__timeoutHandles.push(setTimeout(function () {\n              return resolve();\n            }, time));\n          });\n        };\n\n        delay(20000).then(function () {\n          _this.__showSpinnerBackground('camera');\n          _this.__viewRenderer.render(_this.__createViewForNestedTemplate(_this.__replace(messageMap.connecting_screen_2)));\n          return delay(20000);\n        }).then(function () {\n          // show the '____ is connecting' screen\n          _this.__showCallMeSectionIfAllowed(); // after first step, show call me if allowed\n          _this.__showSpinnerBackground('nodes');\n          _this.__viewRenderer.render(_this.__createViewForNestedTemplate(_this.__replace(messageMap.connecting_screen_3)));\n        });\n\n        // if we start trying to connect and are still waiting for 30 sec, fire off a 'timeout' spinnerEvent\n        this.__startTimer();\n      }\n    }\n  }, {\n    key: 'onConnecting',\n    value: function onConnecting(spinnerEvent) {\n      if (spinnerEvent.name === 'connect' || spinnerEvent.name === 'participant_added' && spinnerEvent.selfUuid !== spinnerEvent.uuid) {\n        this.__connectParticipant();\n        this.__hasConferenceStarted = true;\n        // taking forever for local to connect?\n      } else if (spinnerEvent.name === 'timeout' && !this.__self.isGuest) {\n        var messages = this.__isIVRCallbackEnabled ? messageMap.connectExtendedIVR : messageMap.connectExtended;\n        this.__displaySpinnerView(this.__createViewForNestedTemplate(this.__replace(messages)), true);\n      }\n    }\n  }, {\n    key: 'onConnected',\n    value: function onConnected(spinnerEvent) {\n      // participant was disconnected\n      if (spinnerEvent.name === 'participant_deleted') {\n        // self was dropped\n        if (spinnerEvent.selfUuid === spinnerEvent.uuid) {\n          this.__reconnectSelf();\n\n          // if no uuid is provided then assume it's just the remote party, otherwise we only care when non-guests disconnect\n        } else if (!spinnerEvent.uuid || _awcoresdk_video_participant_type2.default.GUEST.toUpperCase() !== this.__getType(spinnerEvent.uuid).toUpperCase()) {\n          this.__reconnectRemote();\n\n          // start a timer in case remote reconnect takes a long time\n          this.__startTimer();\n        }\n\n        // something broken\n      } else if (spinnerEvent.name === 'error') {\n        this.__reconnectSelf();\n      }\n    }\n  }, {\n    key: 'onLocalReconnecting',\n    value: function onLocalReconnecting(spinnerEvent) {\n      // we have connected\n      if (spinnerEvent.name === 'connect') {\n        this.__connectParticipant();\n\n        // taking forever for local to reconnect?\n      } else if (spinnerEvent.name === 'timeout' && !this.__self.isGuest) {\n        var messages = this.__isIVRCallbackEnabled ? messageMap.reconnectExtIVR : messageMap.reconnectExt;\n        this.__displaySpinnerView(this.__createViewForNestedTemplate(this.__replace(messages)), true);\n\n        // something broke\n      } else if (spinnerEvent.name === 'error') {\n        this.__logger.error('There was an error', spinnerEvent.error);\n      }\n    }\n\n    // NOTE: will only ever be in this state if remote we're waiting on is not a guest\n\n  }, {\n    key: 'onRemoteReconnecting',\n    value: function onRemoteReconnecting(spinnerEvent) {\n      // remote has reconnected\n      if (spinnerEvent.name === 'participant_added') {\n        this.__connectParticipant();\n\n        // taking forever for non-guest remote to reconnect?\n      } else if (spinnerEvent.name === 'timeout' && !this.__self.isGuest) {\n        var messages = this.__isIVRCallbackEnabled ? messageMap.connectRemoteExtIVR : messageMap.connectRemoteExt;\n        this.__displaySpinnerView(this.__createViewForNestedTemplate(this.__replace(messages)), true);\n\n        // something broke\n      } else if (spinnerEvent.name === 'error') {\n        this.__logger.error('There was an error', spinnerEvent.error);\n      }\n    }\n\n    /* DISPLAY CONNECTED */\n\n  }, {\n    key: '__connectParticipant',\n    value: function __connectParticipant() {\n      this.__currentState = supportedStates.CONNECTED;\n\n      this.__hideSpinnerBackground();\n      if (!this.__self.isGuest) {\n        this.__context.attachPoints.waitSpinnerButtonsParent.classList.add('awcore-hidden');\n      }\n      this.__context.attachPoints.videoControlsContainer.classList.remove('awcore-hidden');\n      this.__clearTimers();\n    }\n\n    /* DISPLAY RECONNECTING */\n\n  }, {\n    key: '__reconnectRemote',\n    value: function __reconnectRemote() {\n      this.__currentState = supportedStates.REMOTE_CONNECTING;\n      var view = void 0;\n\n      // show basic connecting spinner if we're a guest\n      if (this.__self.isGuest) {\n        view = this.__createViewForNestedTemplate(this.__replace(messageMap.reconnectRemoteGuest));\n\n        // show more specific message if we're a consumer or provider\n      } else {\n        var reconnectRemote = this.__self.isConsumer ? this.__replace(messageMap.reconnectRemoteProvider) : this.__replace(messageMap.reconnectRemoteConsumer);\n        view = this.__createViewForNestedTemplate(reconnectRemote);\n      }\n\n      this.__displaySpinnerView(view);\n    }\n  }, {\n    key: '__reconnectSelf',\n    value: function __reconnectSelf() {\n      this.__currentState = supportedStates.RECONNECTING;\n      var view = this.__createViewForSimpleTemplate(this.__replace(messageMap.reconnect));\n      this.__displaySpinnerView(view);\n\n      // start a timer in case local reconnect takes a long time\n      this.__startTimer();\n    }\n\n    /* DISPLAY UTILITIES */\n\n  }, {\n    key: '__displaySpinnerView',\n    value: function __displaySpinnerView(view, showButtons) {\n      this.__showSpinnerBackground();\n      this.__viewRenderer.render(view);\n\n      if (showButtons) {\n        this.__hideControlButtons();\n        this.__context.attachPoints.waitSpinnerButtonsParent.classList.remove('awcore-hidden');\n        this.__context.attachPoints.spinnerRefreshButton.classList.remove('awcore-hidden');\n        this.__showCancelOrEndVisitButton();\n        this.__showCallButton();\n      }\n    }\n  }, {\n    key: '__getType',\n    value: function __getType(uuid) {\n      var participant = this.__findMatchInVisit(uuid);\n      if (!participant) {\n        this.__logger.error(\"Didn't find participant with uuid: \", uuid);\n      }\n      // we don't keep track of guests in the conference so we can assume if there is no participant found it's a guest\n      return participant && participant.type || _awcoresdk_video_participant_type2.default.GUEST;\n    }\n  }, {\n    key: '__findMatchInVisit',\n    value: function __findMatchInVisit(uuid) {\n      var visit = this.__context.visitConfig.visit;\n      return visit && visit.participantById(uuid);\n    }\n  }, {\n    key: '__showCallButton',\n    value: function __showCallButton() {\n      var spinnerIvrButton = this.__context.attachPoints.spinnerIvrButton;\n\n      if (this.__isIVRCallbackEnabled) {\n        spinnerIvrButton.classList.remove('awcore-hidden');\n        spinnerIvrButton.classList.remove('awcore-disabled');\n        spinnerIvrButton.innerHTML = this.__messages.talk_via_phone;\n      } else {\n        spinnerIvrButton.classList.add('awcore-hidden');\n      }\n    }\n  }, {\n    key: '__showCancelOrEndVisitButton',\n    value: function __showCancelOrEndVisitButton() {\n      var providerAllowedToCancel = this.__self.participantType === _awcoresdk_video_participant_type2.default.PROVIDER && !this.__context.systemConfiguration.disableProviderCancelDuringVisit;\n      var consumerAllowedToCancel = this.__self.participantType === _awcoresdk_video_participant_type2.default.CONSUMER && !this.__context.systemConfiguration.disableConsumerCancelDuringVisit;\n      if (!this.__self.isGuest && (providerAllowedToCancel || consumerAllowedToCancel)) {\n        this.__context.attachPoints.cancelVisitButtonParent.classList.add('awcore-spinner-ext');\n        this.__context.attachPoints.cancelVisitButtonParent.classList.remove('awcore-hidden');\n\n        if (this.__self.participantType === _awcoresdk_video_participant_type2.default.PROVIDER || this.__context.visitConfig.visit.providerConnected) {\n          this.__context.attachPoints.cancelVisitButtonSubText.classList.add('awcore-hidden');\n        } else if (!this.__self.isGuest) {\n          this.__context.attachPoints.cancelVisitButtonSubText.classList.remove('awcore-hidden');\n        }\n      }\n\n      if (!this.__self.isGuest && !this.__hasConferenceStarted && !this.__isRefresh) {\n        this.__context.attachPoints.cancelVisitButton.classList.remove('awcore-hidden');\n        this.__context.attachPoints.endVisitLink.classList.add('awcore-hidden');\n      } else {\n        this.__context.attachPoints.cancelVisitButton.classList.add('awcore-hidden');\n        this.__context.attachPoints.endVisitLink.classList.remove('awcore-hidden');\n      }\n    }\n  }, {\n    key: '__createViewForNestedTemplate',\n    value: function __createViewForNestedTemplate(template) {\n      return this.__contexts.reduce(function (prev, next) {\n        return (0, _replace2.default)(prev, next);\n      }, template);\n    }\n  }, {\n    key: '__createViewForSimpleTemplate',\n    value: function __createViewForSimpleTemplate(template) {\n      return (0, _replace2.default)(template, this.__contexts[0]);\n    }\n  }, {\n    key: '__replace',\n    value: function __replace(context) {\n      return _spinner_template2.default.replace('{ spinner_main_msg }', '{ ' + context.main + ' }').replace('{ spinner_sub_msg }', context.main_sub ? '{ ' + context.main_sub + ' }' : '');\n    }\n  }, {\n    key: '__showSpinnerBackground',\n    value: function __showSpinnerBackground() {\n      var style = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'camera';\n      var _context$attachPoint = this.__context.attachPoints,\n          spinnerContainer = _context$attachPoint.spinnerContainer,\n          mainVideo = _context$attachPoint.mainVideo,\n          rootContainer = _context$attachPoint.rootContainer;\n\n      mainVideo.classList.add('awcore-hidden');\n      spinnerContainer.classList.remove('awcore-call-active');\n      rootContainer.classList.add('awcore-spinner-active');\n\n      // clear out any existing styles\n      spinnerContainer.classList.remove('awcore-spinner-style-waves');\n      spinnerContainer.classList.remove('awcore-spinner-style-nodes');\n      spinnerContainer.classList.remove('awcore-spinner-style-camera');\n      // add specific styling\n      spinnerContainer.classList.add('awcore-spinner-style-' + style);\n    }\n  }, {\n    key: '__hideSpinnerBackground',\n    value: function __hideSpinnerBackground() {\n      this.__context.attachPoints.mainVideo.classList.remove('awcore-hidden');\n      this.__context.attachPoints.spinnerContainer.classList.add('awcore-call-active');\n      this.__context.attachPoints.rootContainer.classList.remove('awcore-spinner-active');\n    }\n  }, {\n    key: '__hideControlButtons',\n    value: function __hideControlButtons() {\n      this.__context.attachPoints.videoControlsContainer.classList.add('awcore-hidden');\n    }\n\n    // Here be dragons\n\n  }, {\n    key: '__showCallMeSectionIfAllowed',\n    value: function __showCallMeSectionIfAllowed() {\n      var _context$attachPoint2 = this.__context.attachPoints,\n          waitSpinnerButtonsParent = _context$attachPoint2.waitSpinnerButtonsParent,\n          spinnerRefreshButton = _context$attachPoint2.spinnerRefreshButton,\n          spinnerIvrButton = _context$attachPoint2.spinnerIvrButton;\n\n\n      waitSpinnerButtonsParent.classList.remove('awcore-hidden');\n      spinnerRefreshButton.classList.add('awcore-hidden');\n      spinnerIvrButton.classList.remove('awcore-hidden');\n      spinnerIvrButton.classList.remove('awcore-disabled');\n      spinnerIvrButton.innerHTML = this.__messages.talk_via_phone;\n    }\n  }, {\n    key: '__startTimer',\n    value: function __startTimer() {\n      var _this2 = this;\n\n      var timeout = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 60000;\n\n      var handle = setTimeout(function () {\n        (0, _performance2.default)('pexip_timeout', true);\n        _this2.transition({ name: 'timeout' });\n      }, timeout);\n      this.__timeoutHandles.push(handle);\n    }\n  }, {\n    key: '__clearTimers',\n    value: function __clearTimers() {\n      while (this.__timeoutHandles.length) {\n        clearTimeout(this.__timeoutHandles.pop());\n      }\n    }\n  }, {\n    key: '__clearButtonNodes',\n    value: function __clearButtonNodes() {\n      this.__context.attachPoints.cancelVisitButtonParent.classList.remove('awcore-spinner-ext');\n      this.__context.attachPoints.cancelVisitButtonParent.classList.add('awcore-hidden');\n      this.__context.attachPoints.cancelVisitButtonSubText.classList.add('awcore-hidden');\n    }\n  }, {\n    key: '__clear',\n    value: function __clear() {\n      this.__clearTimers();\n      this.__clearButtonNodes();\n      this.__hideSpinnerBackground();\n    }\n  }, {\n    key: 'stop',\n    value: function stop() {\n      this.__currentState = supportedStates.END;\n      this.__viewRenderer.render(''); // clear the display node\n      this.__clear();\n    }\n  }]);\n\n  return SpinnerManager;\n}();\n\nexports.default = SpinnerManager;","module.exports = \"<div class='awcore-connect-display-wrapper'>\\n  <div class='awcore-connect-display-main'>{ spinner_main_msg }</div>\\n  <div class='awcore-connect-display-subtext'>{ spinner_sub_msg }</div>\\n</div>\\n\"","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); /*!\nmerican Well Core Web SDK\nnopyright (c) 2019 American Well.\nll rights reserved.\nnt is illegal to use, reproduce or distribute\nany part of this Intellectual Property without\nprior written authorization from American Well.\nn\n\nvar _empty = require('../util/empty');\n\nvar _empty2 = _interopRequireDefault(_empty);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar SpinnerViewRenderer = function () {\n  function SpinnerViewRenderer(node) {\n    _classCallCheck(this, SpinnerViewRenderer);\n\n    this.__node = node;\n  }\n\n  _createClass(SpinnerViewRenderer, [{\n    key: 'render',\n    value: function render(view) {\n      (0, _empty2.default)(this.__node);\n      this.__node.innerHTML = view;\n    }\n  }]);\n\n  return SpinnerViewRenderer;\n}();\n\nexports.default = SpinnerViewRenderer;","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }(); /*!\nmerican Well Core Web SDK\nnopyright (c) 2020 American Well.\nll rights reserved.\nnt is illegal to use, reproduce or distribute\nany part of this Intellectual Property without\nprior written authorization from American Well.\nn\n\nvar _i18n = require('../i18n');\n\nvar _i18n2 = _interopRequireDefault(_i18n);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Resolve the passed in locale string to one that common supports and return the associated messages dictionary.\n * Will default to 'en' if locale is not defined.\n *\n * @param {string} locale the locale string to be resolved\n * @returns {Object} the messages dictionary object\n */\nvar retrieveMessages = function retrieveMessages(locale) {\n  var _split = (locale || 'en').split(/_|-/),\n      _split2 = _slicedToArray(_split, 1),\n      base = _split2[0];\n\n  return _i18n2.default[locale] || _i18n2.default[base] || _i18n2.default.en;\n};\nexports.default = retrieveMessages;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; /*! @file vidyo.client.js\n                                                                                                                                                                                                                                                                                              @VidyoWeb API Library header.\n                                                                                                                                                                                                                                                                                              @copyright\n                                                                                                                                                                                                                                                                                              (c) 2012-2014 Vidyo, Inc.\n                                                                                                                                                                                                                                                                                              433 Hackensack Avenue, 7th Floor,\n                                                                                                                                                                                                                                                                                              Hackensack, NJ  07601.\n                                                                                                                                                                                                                                                                                              All rights reserved.\n                                                                                                                                                                                                                                                                                              The information contained herein is proprietary to Vidyo, Inc.\n                                                                                                                                                                                                                                                                                              and shall not be reproduced, copied (in whole or in part), adapted,\n                                                                                                                                                                                                                                                                                              modified, disseminated, transmitted, transcribed, stored in a retrieval\n                                                                                                                                                                                                                                                                                              system, or translated into any language in any form by any means\n                                                                                                                                                                                                                                                                                              without the express written consent of Vidyo, Inc.\n                                                                                                                                                                                                                                                                              */\n/**\n  * @fileOverview This file defines the module for the VidyoClient object.\n  * @author Vidyo Inc.\n  */\n\n/**\n  * Creates a VidyoClient object.\n  * @class Wrapper for VidyoClient.\n  *\n  * @param {Object} config Reference to configuration object.\n  * @return {Object} Reference to created VidyoClient wrapper object.\n*/\n\n\nvar _vidyoClient = require(\"./vidyo.client.messages\");\n\nvar VidyoClientMessages = _interopRequireWildcard(_vidyoClient);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nvar vcMessages = VidyoClientMessages.default;\n\nvar vidyoClient = function vidyoClient(config) {\n    // object created by this factory function\n    /** @private */var that = {};\n\n    // private instance variables for created object,\n    // initial values of which are potentially passed\n    // into this factory function\n    /** @private */\n    var webrtcPlugin = null;\n\n    /** @private */\n    var outEventCallbackObject = null;\n\n    /** @private */\n    var defaultOutEventCallbackMethod = \"\";\n\n    /** @private */\n    var logCallback = null;\n\n    /** @private */\n    var sessionManager = null;\n\n    // other private instance variables for created object\n    /** @private */\n    var outEventCallbackMethods = {};\n\n    // private helper functions\n    /** @private */\n    var setConfig = function setConfig(config) {\n        if (config && config.outEventCallbackObject !== undefined) {\n            outEventCallbackObject = config.outEventCallbackObject;\n        }\n        if (config && config.defaultOutEventCallbackMethod !== undefined) {\n            defaultOutEventCallbackMethod = config.defaultOutEventCallbackMethod;\n        }\n        if (config && config.logCallback !== undefined) {\n            logCallback = config.logCallback;\n        }\n        if (config && config.sessionManager !== undefined) {\n            sessionManager = config.sessionManager;\n        }\n    };\n\n    /** @private */\n    var log = function log(message) {\n        if (logCallback) {\n            logCallback(message);\n        }\n    };\n\n    /****************************************\n     * API accessor (getter/setter) functions\n     ****************************************/\n\n    /**\n     * Sets the callback object that will be used by the invoked\n     * VidyoClient wrapper object, for any out event callbacks.\n     * Will only be used if the callback method to be invoked was set\n     * to a non-function value type.\n     *\n     * @param {Object} outEventCallbackObjectArg Reference to out event\n     *                                           callback object.\n     * @return {Object} Reference to invoked VidyoClient wrapper object.\n     */\n    var setOutEventCallbackObject = function setOutEventCallbackObject(outEventCallbackObjectArg) {\n        outEventCallbackObject = outEventCallbackObjectArg;\n    };\n\n    /**\n     * Sets the callback method that will be used by the invoked\n     * VidyoClient wrapper object, for any out event type by default.\n     * If method is specified using a string value type, it will be\n     * invoked with variable 'this' set to the value set as the callback\n     * object.\n     * If method is specified using a function value type, it will be\n     * invoked with variable 'this' set to the wrapper object.\n     *\n     * @param {Object} defaultOutEventCallbackMethodArg Default out event\n     *                                                  callback method name\n     *                                                  (when String) or\n     *                                                  function object.\n     * @return {Object} Reference to invoked VidyoClient wrapper object.\n     */\n    var setDefaultOutEventCallbackMethod = function setDefaultOutEventCallbackMethod(defaultOutEventCallbackMethodArg) {\n        defaultOutEventCallbackMethod = defaultOutEventCallbackMethodArg;\n    };\n\n    /**\n     * Sets the callback function that will be used by the invoked\n     * VidyoClient wrapper object, for logging.\n     *\n     * @param {Function} logCallbackArg Reference to logging callback\n     *                                  function object.\n     * @return {Object} Reference to invoked VidyoClient wrapper object.\n     */\n    var setLogCallback = function setLogCallback(logCallbackArg) {\n        logCallback = logCallbackArg;\n    };\n\n    /**\n     * Sets the sessionManager address that will be used by the invoked\n     * VidyoClient wrapper object, for making call to\n     *\n     * @param {String} sessionManagerArg address of session manager\n     * @return {Object} Reference to invoked VidyoClient wrapper object.\n     */\n    var setSessionManager = function setSessionManager(sessionManagerArg) {\n        sessionManager = sessionManagerArg;\n    };\n\n    /**\n     * Sets the callback method that will be used by the invoked\n     * VidyoClient wrapper object, for the specified out event type.\n     * If method is specified using a string value type, it will be\n     * invoked with variable 'this' set to the value set as the callback\n     * object.\n     * If method is specified using a function value type, it will be\n     * invoked with variable 'this' set to the wrapper object.\n     *\n     * @param {String} outEventType String value for specific type of\n     *                              out event.\n     * @param {Object} callbackMethod Callback method name (when String)\n     *                                or function object.\n     * @return {Object} Reference to invoked VidyoClient wrapper object.\n     */\n    var setOutEventCallbackMethod = function setOutEventCallbackMethod(outEventType, callbackMethod) {\n        outEventCallbackMethods[outEventType] = callbackMethod;\n    };\n\n    /**\n     * Helper function to get a webrtc media server from session manager\n     *\n     * @param {String} session manager address\n     * @param {Object} callback callback to be invoked with the webrtc server address\n     */\n    var getWebRTCServer = function getWebRTCServer(sessionManager, callback) {\n        var url = window.location.protocol + \"//\" + sessionManager + \"/zincadmin/service/getinstance.htm\";\n        var webRTCServer = \"\";\n        var oReq = new XMLHttpRequest();\n        oReq.open(\"get\", url, true);\n        oReq.onload = function () {\n            var resp = JSON.parse(oReq.responseText);\n            webRTCServer = resp.ip;\n            callback(webRTCServer);\n        };\n\n        oReq.onerror = function (e) {\n            callback(\"\");\n        };\n\n        oReq.send();\n    };\n\n    var loadPlugin = function loadPlugin(webrtcServer, callback) {\n        var adapterLoaded = false;\n        if (window.attachMediaStream) {\n            adapterLoaded = true;\n        }\n        var pluginLoaded = false;\n        if (window.plugin) {\n            pluginLoaded = true;\n        }\n\n        if (adapterLoaded && pluginLoaded) {\n            callback(true);\n        }\n\n        if (!adapterLoaded) {\n            var adapterjs = document.createElement('script');\n\n            adapterjs.onload = function () {\n                log(\"adapterjs loaded\");\n                adapterLoaded = true;\n                if (pluginLoaded) {\n                    callback(true);\n                }\n            };\n\n            adapterjs.onerror = function (e) {\n                log(\"adapterjs load failed\");\n                log(e);\n                callback(false);\n            };\n\n            adapterjs.setAttribute('src', window.location.protocol + '//' + webrtcServer + '/web/scripts/vidyowebrtc/adapter.js');\n            document.getElementsByTagName(\"head\")[0].appendChild(adapterjs);\n        }\n\n        if (!pluginLoaded) {\n            var pluginjs = document.createElement('script');\n            pluginjs.onload = function () {\n                log(\"pluginjs loaded\");\n                pluginLoaded = true;\n                if (adapterLoaded) {\n                    callback(true);\n                }\n            };\n\n            pluginjs.onerror = function (e) {\n                log(\"pluginJs load failed\");\n                callback(false);\n            };\n\n            pluginjs.setAttribute('src', window.location.protocol + '//' + webrtcServer + '/web/scripts/vidyowebrtc/plugin.js');\n            document.getElementsByTagName(\"head\")[0].appendChild(pluginjs);\n        }\n    };\n\n    /****************************************\n     * API general functions\n     ****************************************/\n\n    /**\n     * Starts VidyoClient library, which only needs to be done\n     * before use or stopping of the VidyoClent plug-in object.\n     * If this function is invoked more than once, without an\n     * intervening call to stop(), there will be no\n     * side effects, and the value returned will not change.\n     * If this function is never invoked, invocation of other\n     * functions to send events or requests or stop the library\n     * will return an indication of failure.\n     *\n     * The passed in configuration object can store the following\n     * properties:\n     *\n     * @param {Object} config Reference to configuration object.\n     * @return {boolean} true if starting successful, false otherwise.\n     */\n    var start = function start(config) {\n        var retVal = true;\n        setConfig(config);\n        if (!sessionManager) {\n            log(\"start() invoked without sessionManager!\");\n            return false;\n        }\n\n        try {\n            getWebRTCServer(sessionManager, function (webrtcServer) {\n                log(\"start(): getWebRtcServer: sessionManager = \" + sessionManager + \" webrtcServer = \" + webrtcServer);\n                loadPlugin(webrtcServer, function (status) {\n                    if (!status) {\n                        log(\"start(): loadPlugin failed\");\n                        return;\n                    }\n\n                    webrtcPlugin = new window.plugin(vcMessages, webrtcServer);\n                    dispatchOutEvent({ type: \"OutEventLogicStarted\" });\n                    webrtcPlugin.useCallbackForOutEvents = true;\n                    webrtcPlugin.outEventCallbackObject = that;\n                    webrtcPlugin.outEventCallbackMethod = \"dispatchOutEvent\";\n                    retVal = webrtcPlugin.start();\n                });\n            });\n        } catch (e) {\n            log(\"start() threw an exception!\");\n            log(e);\n            return retVal;\n        }\n        if (retVal) {\n            log(\"start() called plug-in with successful return.\");\n        } else {\n            log(\"start() called plug-in with return of error!\");\n        }\n        return retVal;\n    };\n\n    /**\n     * Stops VidyoClient library, which only needs to be done\n     * after all use or before restart of the VidyoClent plug-in object.\n     * If this function is invoked without a prior invocation of\n     * start(), this function will do nothing.\n     * If this function is invoked more than once, without an\n     * intervening call to start(), there will be no\n     * side effects, and the value returned will not change.\n     * If this function is never invoked, resources may be\n     * leaked at the level of the underlying platform.\n     *\n     * @return {boolean} true if stopping successful, false otherwise.\n     */\n    var stop = function stop() {\n        var retVal = false;\n        if (!webrtcPlugin) {\n            log(\"stop() invoked without start!\");\n            return retVal;\n        }\n        /* DEBUG: retVal = true;*/\n        try {\n            retVal = webrtcPlugin.stop();\n        } catch (e) {\n            log(\"stop() threw an exception!\");\n            log(e);\n            return retVal;\n        }\n        if (retVal) {\n            log(\"stop() called plug-in with successful return.\");\n        } else {\n            log(\"stop() called plug-in with return of error!\");\n        }\n        return retVal;\n    };\n\n    /**\n     * Sends passed in event object to VidyoClient library.\n     * If this function is invoked without a prior invocation of\n     * start(), this function will do nothing and return an\n     * indication of failure.\n     * Event object passed to this function should be an in\n     * event, and not an out event.\n     * Event processing is performed on another thread internal\n     * to VidyoClient.\n     *\n     * @param {Object} event Reference to event object to send.\n     * @return {boolean} true if successful, false otherwise.\n     */\n    var sendEvent = function sendEvent(event) {\n        var retVal = false;\n        if (!webrtcPlugin) {\n            log(\"sendEvent() invoked without start!\");\n            return retVal;\n        }\n        if (!event || (typeof event === \"undefined\" ? \"undefined\" : _typeof(event)) !== 'object') {\n            log(\"sendEvent() invoked without valid event object!\");\n            return retVal;\n        }\n        if (typeof event.length === 'number' && !event.propertyIsEnumerable('length')) {\n            log(\"sendEvent() invoked without valid event object!\");\n            return retVal;\n        }\n        /* DEBUG: retVal = true;*/\n        try {\n            retVal = webrtcPlugin.sendEvent(event);\n        } catch (e) {\n            log(\"sendEvent() threw an exception!\");\n            log(e);\n            return retVal;\n        }\n        if (retVal) {\n            log(\"sendEvent() called plug-in with successful return.\");\n        } else {\n            log(\"sendEvent() called plug-in with return of error!\");\n        }\n        return retVal;\n    };\n\n    /**\n     * Sends passed in request object to VidyoClient library.\n     * If this function is invoked without a prior invocation of\n     * start(), this function will do nothing and return an\n     * indication of failure.\n     * Request object passed to this function will be modified\n     * for any output parameters of the request.\n     * Request processing is performed on the same thread as\n     * the caller.\n     *\n     * @param {Object} request Reference to request object to send.\n     * @return {String} \"ErrorOK\" if successful, error string otherwise:<br/>\n     *                   \"ErrorInvalidRequest\" if request object not valid<br/>\n     *                   \"ErrorRequestNoType\" if no type property in request object<br/>\n     *                   \"ErrorRequestTypeInvalid\" if value of type property not known<br/>\n     *                   \"ErrorRequestFailed\" if VidyoClient returns failure for request<br/>\n     */\n    var sendRequest = function sendRequest(request) {\n        var retVal = \"Error\";\n        if (!webrtcPlugin) {\n            log(\"sendRequest() invoked without start\");\n            return \"ErrorNoPlugin\";\n        }\n        if (!request || (typeof request === \"undefined\" ? \"undefined\" : _typeof(request)) !== 'object') {\n            log(\"sendRequest() invoked without valid request object!\");\n            return \"ErrorInvalidRequest\";\n        }\n        if (typeof request.length === 'number' && !request.propertyIsEnumerable('length')) {\n            log(\"sendRequest() invoked without valid request object!\");\n            return \"ErrorInvalidRequest\";\n        }\n        /* DEBUG: retVal = true;*/\n        try {\n            retVal = webrtcPlugin.sendRequest(request);\n        } catch (e) {\n            log(\"sendRequest() threw an exception!\");\n            log(e);\n            return \"ErrorInvalidPlugin\";\n        }\n        if (retVal === \"ErrorOk\") {\n            log(\"sendRequest() called plug-in with successful return.\");\n        } else {\n            log(\"sendRequest() called plug-in with return of \" + retVal + \"!\");\n        }\n        return retVal;\n    };\n\n    /**\n     * Indicates if VidyoClient library has been started,\n     * meaning that a prior invocation of start() returned an\n     * indication of success.\n     *\n     * @return {boolean} true if VidyoClient started, false otherwise.\n     */\n    var isStarted = function isStarted() {\n        var retVal = false;\n        if (!webrtcPlugin) {\n            log(\"isStarted() invoked without start!\");\n            return retVal;\n        }\n        /* DEBUG: retVal = true;*/\n        try {\n            retVal = webrtcPlugin.isStarted();\n        } catch (e) {\n            log(\"isStarted() threw an exception!\");\n            log(e);\n            return retVal;\n        }\n        log(\"isStarted() called plug-in.\");\n        return retVal;\n    };\n\n    /**\n     * Indicates if VidyoClient plug-in object (as known to this\n     * wrapper object) is valid, meaning that it should be safe to\n     * invoke the wrapper general API.\n     *\n     * @return {boolean} true if plug-in object valid, false otherwise.\n     */\n    var isLoaded = function isLoaded() {\n        if (!webrtcPlugin) {\n            log(\"isLoaded() invoked without start\");\n            return false;\n        }\n\n        try {\n            webrtcPlugin.isStarted();\n        } catch (e) {\n            log(\"isLoaded() threw an exception!\");\n            return false;\n        }\n\n        return true;\n    };\n\n    // callback and/or event handling functions (only called/triggered by plug-in object)\n    /** @private */\n    var dispatchOutEvent = function dispatchOutEvent(event) {\n        if (outEventCallbackObject) {\n            if (event && outEventCallbackMethods[event.type]) {\n                if (typeof outEventCallbackMethods[event.type] === 'function') {\n                    // if method is of function type, just invoke it with default this\n                    outEventCallbackMethods[event.type].call(outEventCallbackObject || this, event);\n                } else {\n                    // otherwise, assume method is of string type, invoke it with object as this\n                    outEventCallbackObject[outEventCallbackMethods[event.type]](event);\n                }\n                log(\"dispatchOutEvent() invoked specific out event callback method.\");\n            } else if (defaultOutEventCallbackMethod) {\n                if (typeof defaultOutEventCallbackMethod === 'function') {\n                    // if method is of function type, just invoke it with default this\n                    defaultOutEventCallbackMethod.call(outEventCallbackObject || this, event);\n                } else {\n                    // otherwise, assume method is of string type, invoke it with object as this\n                    outEventCallbackObject[defaultOutEventCallbackMethod](event);\n                }\n                log(\"dispatchOutEvent() invoked default out event callback method.\");\n            }\n        }\n    };\n\n    // set private instance variables for created object,\n    // to initial values potentially passed into this\n    // factory function\n    setConfig(config);\n\n    // bind private functions as methods of created object\n    that.setOutEventCallbackObject = setOutEventCallbackObject;\n    that.setDefaultOutEventCallbackMethod = setDefaultOutEventCallbackMethod;\n    that.setLogCallback = setLogCallback;\n    that.setOutEventCallbackMethod = setOutEventCallbackMethod;\n    that.setSessionManager = setSessionManager;\n    that.start = start;\n    that.stop = stop;\n    that.sendEvent = sendEvent;\n    that.sendRequest = sendRequest;\n    that.isStarted = isStarted;\n    that.isLoaded = isLoaded;\n    that.dispatchOutEvent = dispatchOutEvent;\n\n    // return object created by this factory function\n    return that;\n};\n\nexports.default = vidyoClient;","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n/*! @file vidyo.client.messages.js\n                @VidyoWeb API Library header.\n                @copyright\n                (c) 2012-2014 Vidyo, Inc.\n                433 Hackensack Avenue, 7th Floor,\n                Hackensack, NJ  07601.\n                All rights reserved.\n                The information contained herein is proprietary to Vidyo, Inc.\n                and shall not be reproduced, copied (in whole or in part), adapted,\n                modified, disseminated, transmitted, transcribed, stored in a retrieval\n                system, or translated into any language in any form by any means\n                without the express written consent of Vidyo, Inc.\n*/\n\n/**\n  * @fileOverview This file defines the module for the public VidyoClient message objects.\n  * @author Vidyo Inc.\n  */\n\n/**\n * Creates a VidyoClientMessages object.\n * @class Factories for VidyoClient messages and message types.\n */\nvar vidyoClientMessages = {\n    /**\n     * Creates a VidyoClient message object.\n     *\n     * @name vidyoClientMessages.message\n     * @function\n     * @param {String} type String value for specific type of message.\n     * @return {Object} Reference to created object.\n     */\n    'message': function message(type) {\n        // object created by this factory function\n        var that = {};\n\n        // public properties for created object\n        that.type = type;\n\n        // return object created by this factory function\n        return that;\n    },\n\n    /**\n     * Creates a VidyoClient in event object, for event messages\n     * which flow into VidyoClient.\n     *\n     * @name vidyoClientMessages.inEvent\n     * @function\n     * @param {String} type String value for specific type of message.\n     * @return {Object} Reference to created object.\n     */\n    'inEvent': function inEvent(type) {\n        // object created by this factory function\n        var that = this.message(type);\n\n        // return object created by this factory function\n        return that;\n    },\n\n    /**\n     * Creates a VidyoClient event object, for event messages\n     * which flow both into and out of VidyoClient.\n     *\n     * @name vidyoClientMessages.event\n     * @function\n     * @param {String} type String value for specific type of message.\n     * @return {Object} Reference to created object.\n     */\n    'event': function event(type) {\n        // object created by this factory function\n        var that = this.message(type);\n\n        // return object created by this factory function\n        return that;\n    },\n\n    /**\n     * Creates a VidyoClient request object, for request messages\n     * which flow into VidyoClient, and can return data.\n     *\n     * @name vidyoClientMessages.request\n     * @function\n     * @param {String} type String value for specific type of message.\n     * @return {Object} Reference to created object.\n     */\n    'request': function request(type) {\n        // object created by this factory function\n        var that = this.message(type);\n\n        // return object created by this factory function\n        return that;\n    },\n\n    /**\n     * Creates a VidyoClient leave in event object.\n     * Event used to leave a conference, already entered.\n     *\n     * @name vidyoClientMessages.inEventLeave\n     * @function\n     * @return {Object} Reference to created object.\n     */\n    'inEventLeave': function inEventLeave() {\n        // object created by this factory function\n        var that = this.inEvent(\"InEventLeave\");\n\n        // return object created by this factory function\n        return that;\n    },\n\n    /**\n     * Creates a VidyoClient preview event object.\n     * Event used to change or acknowledge how own video shown in\n     * video layout.\n     *\n     * The passed in parameter object can store the following\n     * properties:<br/>\n     *  - previewMode (\"None\", \"PIP\", \"Dock\")<br/>\n     *\n     * @name vidyoClientMessages.eventPreview\n     * @function\n     * @param {Object} params Reference to parameter object.\n     * @return {Object} Reference to created object.\n     */\n    'eventPreview': function eventPreview(params) {\n        // object created by this factory function\n        var that = this.event(\"EventPreview\");\n\n        // public properties for created object,\n        // initial values of which are potentially passed\n        // into this factory function\n        that.previewMode = params && params.previewMode || \"None\";\n\n        // return object created by this factory function\n        return that;\n    },\n\n    /**\n     * Creates a VidyoClient mute in event object.\n     * Event used to change mute state of various media devices.\n     *\n     * The passed in parameter object can store the following\n     * properties:<br/>\n     *  - willMute<br/>\n     *\n     * @name vidyoClientMessages.inEventMute\n     * @function\n     * @param {String} type String value for specific type of message.\n     * @param {Object} params Reference to parameter object.\n     * @return {Object} Reference to created object.\n     */\n    'inEventMute': function inEventMute(type, params) {\n        // object created by this factory function\n        var that = this.inEvent(type);\n\n        // public properties for created object,\n        // initial values of which are potentially passed\n        // into this factory function\n        that.willMute = params && params.willMute || false;\n\n        // return object created by this factory function\n        return that;\n    },\n\n    /**\n     * Creates a VidyoClient mute audio in in event object.\n     * Event used to change mute state of audio input (capture/microphone) device.\n     *\n     * The passed in parameter object can store the following\n     * properties:<br/>\n     *  - willMute<br/>\n     *\n     * @name vidyoClientMessages.inEventMuteAudioIn\n     * @function\n     * @param {Object} params Reference to parameter object.\n     * @return {Object} Reference to created object.\n     */\n    'inEventMuteAudioIn': function inEventMuteAudioIn(params) {\n        // object created by this factory function\n        var that = this.inEventMute(\"InEventMuteAudioIn\", params);\n\n        // return object created by this factory function\n        return that;\n    },\n\n    /**\n     * Creates a VidyoClient mute audio out in event object.\n     * Event used to change mute state of audio output (playback/speaker) device.\n     *\n     * The passed in parameter object can store the following\n     * properties:<br/>\n     *  - willMute<br/>\n     *\n     * @name vidyoClientMessages.inEventMuteAudioOut\n     * @function\n     * @param {Object} params Reference to parameter object.\n     * @return {Object} Reference to created object.\n     */\n    'inEventMuteAudioOut': function inEventMuteAudioOut(params) {\n        // object created by this factory function\n        var that = this.inEventMute(\"InEventMuteAudioOut\", params);\n\n        // return object created by this factory function\n        return that;\n    },\n\n    /**\n     * Creates a VidyoClient mute video in event object.\n     * Event used to change privacy state of video (capture/camera) device.\n     *\n     * The passed in parameter object can store the following\n     * properties:<br/>\n     *  - willMute<br/>\n     *\n     * @name vidyoClientMessages.inEventMuteVideo\n     * @function\n     * @param {Object} params Reference to parameter object.\n     * @return {Object} Reference to created object.\n     */\n    'inEventMuteVideo': function inEventMuteVideo(params) {\n        // object created by this factory function\n        var that = this.inEventMute(\"InEventMuteVideo\", params);\n\n        // return object created by this factory function\n        return that;\n    },\n\n    /**\n     * Creates a VidyoClient share in event object.\n     * Event used to share an application window or system desktop,\n     * during a conference.\n     *\n     * The passed in parameter object can store the following\n     * properties:<br/>\n     *  - window<br/>\n     *\n     * @name vidyoClientMessages.inEventShare\n     * @function\n     * @return {Object} Reference to created object.\n     */\n    'inEventShare': function inEventShare(params) {\n        // object created by this factory function\n        var that = this.inEvent(\"InEventShare\");\n\n        // public properties for created object,\n        // initial values of which are potentially passed\n        // into this factory function\n        that.window = params && params.window || \"0x0000000000000000\";\n\n        // return object created by this factory function\n        return that;\n    },\n\n    /**\n     * Creates a VidyoClient unshare in event object.\n     * Event used to stop sharing an application window or system desktop,\n     * during a conference.\n     *\n     * @name vidyoClientMessages.inEventUnshare\n     * @function\n     * @return {Object} Reference to created object.\n     */\n    'inEventUnshare': function inEventUnshare() {\n        // object created by this factory function\n        var that = this.inEvent(\"InEventUnshare\");\n\n        // return object created by this factory function\n        return that;\n    },\n\n    /**\n     * Creates a VidyoClient layout in event object.\n     * Event used to change number of preferred participants displayed in\n     * video layout.  Preferred participants appear in larger tiles than\n     * and in different positions from participants that are not preferred.\n     * Participants are usually selected to be preferred based on whether\n     * they are in the loudest speaker history, according to speech energy.\n     * The current capability allows for either 0 or 1 preferred participants.\n     *\n     * The passed in parameter object can store the following\n     * properties:<br/>\n     *  - numPreferred<br/>\n     *\n     * @name vidyoClientMessages.inEventLayout\n     * @function\n     * @param {Object} params Reference to parameter object.\n     * @return {Object} Reference to created object.\n     */\n    'inEventLayout': function inEventLayout(params) {\n        // object created by this factory function\n        var that = this.inEventMute(\"InEventLayout\", params);\n\n        // public properties for created object,\n        // initial values of which are potentially passed\n        // into this factory function\n        that.numPreferred = params && params.numPreferred || 0;\n\n        // return object created by this factory function\n        return that;\n    },\n\n    /**\n     * Creates a VidyoClient private chat event object.\n     * Event used to send a private message to a participant in the conference.\n     *\n     * The passed in parameter object can store the following\n     * properties:<br/>\n     *  - uri<br/>\n     *  - message<br/>\n     *\n     * @name vidyoClientMessages.inEventPrivateChat\n     * @function\n     * @param {Object} params Reference to parameter object.\n     * @return {Object} Reference to created object.\n     */\n    'inEventPrivateChat': function inEventPrivateChat(params) {\n        // object created by this factory function\n        var that = this.inEvent(\"InEventPrivateChat\");\n\n        // public properties for created object,\n        // initial values of which are potentially passed\n        // into this factory function\n        that.uri = params && params.uri || \"\";\n        that.message = params && params.message || \"\";\n\n        // return object created by this factory function\n        return that;\n    },\n\n    /**\n     * Creates a VidyoClient group chat event object.\n     * Event used to send a group message to all participants in the conference.\n     *\n     * The passed in parameter object can store the following\n     * properties:<br/>\n     *  - message<br/>\n     *\n     * @name vidyoClientMessages.inEventGroupChat\n     * @function\n     * @param {Object} params Reference to parameter object.\n     * @return {Object} Reference to created object.\n     */\n    'inEventGroupChat': function inEventGroupChat(params) {\n        // object created by this factory function\n        var that = this.inEvent(\"InEventGroupChat\");\n\n        // public properties for created object,\n        // initial values of which are potentially passed\n        // into this factory function\n        that.message = params && params.message || \"\";\n\n        // return object created by this factory function\n        return that;\n    },\n\n    /**\n     * Creates a VidyoClient set freeze image event object.\n     * Event used to freeze currently capture frame and don't get new frames from the camera\n     * or start getting new frames from the camera again.\n     *\n     * The passed in parameter object can store the following\n     * properties:<br/>\n     *  - freeze (true - freeze, false - unfreeze)<br/>\n     *\n     * @name vidyoClientMessages.inEventSetFreezeImage\n     * @function\n     * @param {Object} params Reference to parameter object.\n     * @return {Object} Reference to created object.\n     */\n    'inEventSetFreezeImage': function inEventSetFreezeImage(params) {\n        // object created by this factory function\n        var that = this.inEvent(\"InEventSetFreezeImage\");\n\n        // public properties for created object,\n        // initial values of which are potentially passed\n        // into this factory function\n        that.freeze = params && params.freeze !== undefined || true;\n\n        // return object created by this factory function\n        return that;\n    },\n\n    /**\n     * Returns type of a VidyoClient logic started out event object.\n     * Event used to signal completion of VidyoClient startup.\n     *\n     * @name vidyoClientMessages.outEventLogicStartedType\n     * @function\n     * @return {String} String value for type.\n     */\n    'outEventLogicStartedType': function outEventLogicStartedType() {\n        // return type of event\n        return \"OutEventLogicStarted\";\n    },\n\n    /**\n     * Returns type of a VidyoClient conference active out event object.\n     * Event used to signal that operation to join a conference is complete.\n     *\n     * @name vidyoClientMessages.outEventConferenceActiveType\n     * @function\n     * @return {String} String value for type.\n     */\n    'outEventConferenceActiveType': function outEventConferenceActiveType() {\n        // return type of event\n        return \"OutEventConferenceActive\";\n    },\n\n    /**\n     * Returns type of a VidyoClient conference ended out event object.\n     * Event used to signal that operation to leave a conference is complete.\n     *\n     * @name vidyoClientMessages.outEventConferenceEndedType\n     * @function\n     * @return {String} String value for type.\n     */\n    'outEventConferenceEndedType': function outEventConferenceEndedType() {\n        // return type of event\n        return \"OutEventConferenceEnded\";\n    },\n\n    /**\n     * Returns type of a VidyoClient participants changed out event object.\n     * Event used to signal that a participant has joined or left the current\n     * conference.\n     *\n     * The event object can store the following\n     * properties:<br/>\n     *  - participantCount<br/>\n     *\n     * @name vidyoClientMessages.outEventParticipantsChangedType\n     * @function\n     * @return {String} String value for type.\n     */\n    'outEventParticipantsChangedType': function outEventParticipantsChangedType() {\n        // return type of event\n        return \"OutEventParticipantsChanged\";\n    },\n\n    /**\n     * Returns type of a VidyoClient muted audio in out event object.\n     * Event used to acknowledge change of mute state of audio input\n     * (capture/microphone) device.\n     *\n     * The event object can store the following\n     * properties:<br/>\n     *  - isMuted<br/>\n     *  - errorCode<br/>\n     *\n     * @name vidyoClientMessages.outEventMutedAudioInType\n     * @function\n     * @return {String} String value for type.\n     */\n    'outEventMutedAudioInType': function outEventMutedAudioInType() {\n        // return type of event\n        return \"OutEventMutedAudioIn\";\n    },\n\n    /**\n     * Returns type of a VidyoClient muted audio out out event object.\n     * Event used to acknowledge change of mute state of audio output\n     * (playback/speaker) device.\n     *\n     * The event object can store the following\n     * properties:<br/>\n     *  - isMuted<br/>\n     *  - errorCode<br/>\n     *\n     * @name vidyoClientMessages.outEventMutedAudioOutType\n     * @function\n     * @return {String} String value for type.\n     */\n    'outEventMutedAudioOutType': function outEventMutedAudioOutType() {\n        // return type of event\n        return \"OutEventMutedAudioOut\";\n    },\n\n    /**\n     * Returns type of a VidyoClient muted video out event object.\n     * Event used to acknowledge change of privacy state of video\n     * (capture/camera) device.\n     *\n     * The event object can store the following\n     * properties:<br/>\n     *  - isMuted<br/>\n     *  - errorCode<br/>\n     *\n     * @name vidyoClientMessages.outEventMutedVideoType\n     * @function\n     * @return {String} String value for type.\n     */\n    'outEventMutedVideoType': function outEventMutedVideoType() {\n        // return type of event\n        return \"OutEventMutedVideo\";\n    },\n\n    /**\n     * Returns type of a VidyoClient muted server audio out event object.\n     * Event used to indicate change of mute state of audio input\n     * (capture/microphone) device, due to server.\n     *\n     * The event object can store the following\n     * properties:<br/>\n     *  - isMuted<br/>\n     *  - errorCode<br/>\n     *\n     * @name vidyoClientMessages.outEventMutedServerAudioInType\n     * @function\n     * @return {String} String value for type.\n     */\n    'outEventMutedServerAudioInType': function outEventMutedServerAudioInType() {\n        // return type of event\n        return \"OutEventMutedServerAudioIn\";\n    },\n\n    /**\n     * Returns type of a VidyoClient muted server video out event object.\n     * Event used to indicate change of privacy state of video\n     * (capture/camera) device, due to server.\n     *\n     * The event object can store the following\n     * properties:<br/>\n     *  - isMuted<br/>\n     *  - errorCode<br/>\n     *\n     * @name vidyoClientMessages.outEventMutedServerVideoType\n     * @function\n     * @return {String} String value for type.\n     */\n    'outEventMutedServerVideoType': function outEventMutedServerVideoType() {\n        // return type of event\n        return \"OutEventMutedServerVideo\";\n    },\n\n    /**\n     * Returns type of a VidyoClient add share out event object.\n     * Event used to indicate remote application window share added.\n     *\n     * The event object can store the following\n     * properties:<br/>\n     *  - URI<br/>\n     *\n     * @name vidyoClientMessages.outEventAddShareType\n     * @function\n     * @return {String} String value for type.\n     */\n    'outEventAddShareType': function outEventAddShareType() {\n        // return type of event\n        return \"OutEventAddShare\";\n    },\n\n    /**\n     * Returns type of a VidyoClient remove share out event object.\n     * Event used to indicate remote application window share removed.\n     *\n     * The event object can store the following\n     * properties:<br/>\n     *  - URI<br/>\n     *\n     * @name vidyoClientMessages.outEventRemoveShareType\n     * @function\n     * @return {String} String value for type.\n     */\n    'outEventRemoveShareType': function outEventRemoveShareType() {\n        // return type of event\n        return \"OutEventRemoveShare\";\n    },\n\n    /**\n     * Returns type of a VidyoClient private chat out event object.\n     * Event used to signal incoming chat message directed to the current user only.\n     *\n     * The event object can store the following\n     * properties:<br/>\n     *  - uri<br/>\n     *  - displayName<br/>\n     *  - message<br/>\n     *\n     * @name vidyoClientMessages.outEventPrivateChatType\n     * @function\n     * @return {String} String value for type.\n     */\n    'outEventPrivateChatType': function outEventPrivateChatType() {\n        // return type of event\n        return \"OutEventPrivateChat\";\n    },\n\n    /**\n     * Returns type of a VidyoClient group chat out event object.\n     * Event used to signal incoming chat message to all participants in the conference.\n     *\n     * The event object can store the following\n     * properties:<br/>\n     *  - uri<br/>\n     *  - displayName<br/>\n     *  - message<br/>\n     *\n     * @name vidyoClientMessages.outEventGroupChatType\n     * @function\n     * @return {String} String value for type.\n     */\n    'outEventGroupChatType': function outEventGroupChatType() {\n        // return type of event\n        return \"OutEventGroupChat\";\n    },\n\n    /**\n     * Returns type of a VidyoClient conference info update out event object.\n     * Event used to signal webcasting or recording status.\n     *\n     * The event object can store the following\n     * properties:<br/>\n     *  - event (\"Webcasting\", \"Recording\")<br/>\n     *  - eventStatus (true - on, false - off)<br/>\n     *\n     * @name vidyoClientMessages.outEventConferenceInfoUpdateType\n     * @function\n     * @return {String} String value for type.\n     */\n    'outEventConferenceInfoUpdateType': function outEventConferenceInfoUpdateType() {\n        // return type of event\n        return \"OutEventConferenceInfoUpdate\";\n    },\n\n    /**\n     * Returns type of a VidyoClient call state out event object.\n     * Event used to signal call state change.\n     *\n     * The event object can store the following\n     * properties:<br/>\n     *  - callState (\"Idle\", \"Ringing\", \"Calling\", \"Joining\", \"InConference\", \"Disconnecting\")<br/>\n     *\n     * @name vidyoClientMessages.outEventCallStateType\n     * @function\n     * @return {String} String value for type.\n     */\n    'outEventCallStateType': function outEventCallStateType() {\n        // return type of event\n        return \"OutEventCallState\";\n    },\n\n    /**\n     * Creates a VidyoClient configuration request object.\n     * Request used to get/set various configuration parameters.\n     *\n     * The passed in parameter object can store the following\n     * properties:<br/>\n     *  - microphones<br/>\n     *  - numberMicrophones<br/>\n     *  - currentMicrophone<br/>\n     *  - speakers<br/>\n     *  - numberSpeakers<br/>\n     *  - currentSpeaker<br/>\n     *  - cameras<br/>\n     *  - numberCameras<br/>\n     *  - currentCamera<br/>\n     *  - enableFeccEndpoint<br/>\n     *  - enableFeccController<br/>\n     *  - vidyoProxies<br/>\n     *  - numberVidyoProxies<br/>\n     *  - currentVidyoProxy<br/>\n     *  - userID<br/>\n     *  - password<br/>\n     *  - serverAddress<br/>\n     *  - serverPort<br/>\n     *  - vidyoProxyAddress<br/>\n     *  - vidyoProxyPort<br/>\n     *  - webProxyAddress<br/>\n     *  - webProxyPort<br/>\n     *  - webProxyUsername<br/>\n     *  - webProxyPassword<br/>\n     *  - webProxyIeAddress<br/>\n     *  - webProxyIePort<br/>\n     *  - portalAddress<br/>\n     *  - ringtoneDeviceName<br/>\n     *  - verifyCertPortalAcct<br/>\n     *  - webProxyScriptUrl<br/>\n     *  - webProxyIeScriptUrl<br/>\n     *  - mediaLowPort<br/>\n     *  - mediaHighPort<br/>\n     *  - proxySettings<br/>\n     *  - videoPreferences (\"BestQuality\", \"BestFramerate\", \"BestResolution\", \"LimitedBandwidth\",<br/>\n     *                      \"Advanced450p30\", \"Advanced720p15\", \"Advanced720p30\")<br/>\n     *  - enableLogging<br/>\n     *  - enableAutoAnswer<br/>\n     *  - enableForceProxy<br/>\n     *  - enableLogWindow<br/>\n     *  - enableEntryTone<br/>\n     *  - enableEchoDetection<br/>\n     *  - enableEchoCancellation<br/>\n     *  - enableFullScreenVideo<br/>\n     *  - showToolbarInFullScreenVideo<br/>\n     *  - enableAudioAGC<br/>\n     *  - enableAutoStart<br/>\n     *  - enableShowConfParticipantName<br/>\n     *  - enableMuteMicrophoneOnJoin<br/>\n     *  - enableHideCameraOnJoin<br/>\n     *  - enableMuteSpeakerOnJoin<br/>\n     *  - enableEulaAgreed<br/>\n     *  - enableRendering<br/>\n     *  - enableBackgrounding<br/>\n     *  - enableFullDisplaySharing<br/>\n     *  - selfViewLoopbackPolicy<br/>\n     *\n     * @name vidyoClientMessages.requestConfiguration\n     * @function\n     * @param {String} type String value for specific type of message.\n     * @param {Object} params Reference to parameter object.\n     * @return {Object} Reference to created object.\n     */\n    'requestConfiguration': function requestConfiguration(type, params) {\n        // object created by this factory function\n        var that = this.request(type);\n\n        // public properties for created object,\n        // initial values of which are potentially passed\n        // into this factory function\n        that.microphones = params && params.microphones || [\"\"];\n        that.numberMicrophones = params && params.numberMicrophones || 0;\n        that.currentMicrophone = params && params.currentMicrophone || 0;\n        that.speakers = params && params.speakers || [\"\"];\n        that.numberSpeakers = params && params.numberSpeakers || 0;\n        that.currentSpeaker = params && params.currentSpeaker || 0;\n        that.cameras = params && params.cameras || [\"\"];\n        that.numberCameras = params && params.numberCameras || 0;\n        that.currentCamera = params && params.currentCamera || 0;\n        that.enableFeccEndpoint = params && params.enableFeccEndpoint || 0;\n        that.enableFeccController = params && params.enableFeccController || 0;\n        that.vidyoProxies = params && params.vidyoProxies || [\"\"];\n        that.numberVidyoProxies = params && params.numberVidyoProxies || 0;\n        that.currentVidyoProxy = params && params.currentVidyoProxy || 0;\n        that.userID = params && params.userID || \"\";\n        that.password = params && params.password || \"\";\n        that.serverAddress = params && params.serverAddress || \"\";\n        that.serverPort = params && params.serverPort || \"\";\n        that.vidyoProxyAddress = params && params.vidyoProxyAddress || \"\";\n        that.vidyoProxyPort = params && params.vidyoProxyPort || \"\";\n        that.webProxyAddress = params && params.webProxyAddress || \"\";\n        that.webProxyPort = params && params.webProxyPort || \"\";\n        that.webProxyUsername = params && params.webProxyUsername || \"\";\n        that.webProxyPassword = params && params.webProxyPassword || \"\";\n        that.webProxyIeAddress = params && params.webProxyIeAddress || \"\";\n        that.webProxyIePort = params && params.webProxyIePort || \"\";\n        that.portalAddress = params && params.portalAddress || \"\";\n        that.ringtoneDeviceName = params && params.ringtoneDeviceName || \"\";\n        that.verifyCertPortalAcct = params && params.verifyCertPortalAcct || \"\";\n        that.webProxyScriptUrl = params && params.webProxyScriptUrl || \"\";\n        that.webProxyIeScriptUrl = params && params.webProxyIeScriptUrl || \"\";\n        that.mediaLowPort = params && params.mediaLowPort || 0;\n        that.mediaHighPort = params && params.mediaHighPort || 0;\n        that.proxySettings = params && params.proxySettings || 0;\n        that.videoPreferences = params && params.videoPreferences || \"BestQuality\";\n        that.enableLogging = params && params.enableLogging || 0;\n        that.enableAutoAnswer = params && params.enableAutoAnswer || 0;\n        that.enableForceProxy = params && params.enableForceProxy || 0;\n        that.enableLogWindow = params && params.enableLogWindow || 0;\n        that.enableEntryTone = params && params.enableEntryTone || 0;\n        that.enableEchoDetection = params && params.enableEchoDetection || 0;\n        that.enableEchoCancellation = params && params.enableEchoCancellation || 0;\n        that.enableFullScreenVideo = params && params.enableFullScreenVideo || 0;\n        that.showToolbarInFullScreenVideo = params && params.showToolbarInFullScreenVideo || 0;\n        that.enableAudioAGC = params && params.enableAudioAGC || 0;\n        that.enableAutoStart = params && params.enableAutoStart || 0;\n        that.enableShowConfParticipantName = params && params.enableShowConfParticipantName || 0;\n        that.enableMuteMicrophoneOnJoin = params && params.enableMuteMicrophoneOnJoin || 0;\n        that.enableHideCameraOnJoin = params && params.enableHideCameraOnJoin || 0;\n        that.enableMuteSpeakerOnJoin = params && params.enableMuteSpeakerOnJoin || 0;\n        that.enableEulaAgreed = params && params.enableEulaAgreed || 0;\n        that.enableRendering = params && params.enableRendering || 0;\n        that.enableBackgrounding = params && params.enableBackgrounding || 0;\n        that.enableFullDisplaySharing = params && params.enableFullDisplaySharing || 0;\n        that.selfViewLoopbackPolicy = params && params.selfViewLoopbackPolicy || 2;\n\n        // return object created by this factory function\n        return that;\n    },\n\n    /**\n     * Creates a VidyoClient get configuration request object.\n     * Request used to get various configuration parameters.\n     *\n     * The passed in parameter object can store the following\n     * properties:<br/>\n     *  - microphones<br/>\n     *  - numberMicrophones<br/>\n     *  - currentMicrophone<br/>\n     *  - speakers<br/>\n     *  - numberSpeakers<br/>\n     *  - currentSpeaker<br/>\n     *  - cameras<br/>\n     *  - numberCameras<br/>\n     *  - currentCamera<br/>\n     *  - enableFeccEndpoint<br/>\n     *  - enableFeccController<br/>\n     *  - vidyoProxies<br/>\n     *  - numberVidyoProxies<br/>\n     *  - currentVidyoProxy<br/>\n     *  - userID<br/>\n     *  - password<br/>\n     *  - serverAddress<br/>\n     *  - serverPort<br/>\n     *  - vidyoProxyAddress<br/>\n     *  - vidyoProxyPort<br/>\n     *  - webProxyAddress<br/>\n     *  - webProxyPort<br/>\n     *  - webProxyUsername<br/>\n     *  - webProxyPassword<br/>\n     *  - webProxyIeAddress<br/>\n     *  - webProxyIePort<br/>\n     *  - portalAddress<br/>\n     *  - ringtoneDeviceName<br/>\n     *  - verifyCertPortalAcct<br/>\n     *  - webProxyScriptUrl<br/>\n     *  - webProxyIeScriptUrl<br/>\n     *  - mediaLowPort<br/>\n     *  - mediaHighPort<br/>\n     *  - proxySettings<br/>\n     *  - videoPreferences (\"BestQuality\", \"BestFramerate\", \"BestResolution\", \"LimitedBandwidth\",<br/>\n     *                      \"Advanced450p30\", \"Advanced720p15\", \"Advanced720p30\")<br/>\n     *  - enableLogging<br/>\n     *  - enableAutoAnswer<br/>\n     *  - enableForceProxy<br/>\n     *  - enableLogWindow<br/>\n     *  - enableEntryTone<br/>\n     *  - enableEchoDetection<br/>\n     *  - enableEchoCancellation<br/>\n     *  - enableFullScreenVideo<br/>\n     *  - showToolbarInFullScreenVideo<br/>\n     *  - enableAudioAGC<br/>\n     *  - enableAutoStart<br/>\n     *  - enableShowConfParticipantName<br/>\n     *  - enableMuteMicrophoneOnJoin<br/>\n     *  - enableHideCameraOnJoin<br/>\n     *  - enableMuteSpeakerOnJoin<br/>\n     *  - enableEulaAgreed<br/>\n     *  - enableRendering<br/>\n     *  - enableBackgrounding<br/>\n     *  - enableFullDisplaySharing<br/>\n     *  - selfViewLoopbackPolicy<br/>\n     *\n     * @name vidyoClientMessages.requestGetConfiguration\n     * @function\n     * @param {Object} params Reference to parameter object.\n     * @return {Object} Reference to created object.\n     */\n    'requestGetConfiguration': function requestGetConfiguration(params) {\n        // object created by this factory function\n        var that = this.requestConfiguration(\"RequestGetConfiguration\", params);\n\n        // return object created by this factory function\n        return that;\n    },\n\n    /**\n     * Creates a VidyoClient set configuration request object.\n     * Request used to set various configuration parameters.\n     *\n     * The passed in parameter object can store the following\n     * properties:<br/>\n     *  - microphones<br/>\n     *  - numberMicrophones<br/>\n     *  - currentMicrophone<br/>\n     *  - speakers<br/>\n     *  - numberSpeakers<br/>\n     *  - currentSpeaker<br/>\n     *  - cameras<br/>\n     *  - numberCameras<br/>\n     *  - currentCamera<br/>\n     *  - enableFeccEndpoint<br/>\n     *  - enableFeccController<br/>\n     *  - vidyoProxies<br/>\n     *  - numberVidyoProxies<br/>\n     *  - currentVidyoProxy<br/>\n     *  - userID<br/>\n     *  - password<br/>\n     *  - serverAddress<br/>\n     *  - serverPort<br/>\n     *  - vidyoProxyAddress<br/>\n     *  - vidyoProxyPort<br/>\n     *  - webProxyAddress<br/>\n     *  - webProxyPort<br/>\n     *  - webProxyUsername<br/>\n     *  - webProxyPassword<br/>\n     *  - webProxyIeAddress<br/>\n     *  - webProxyIePort<br/>\n     *  - portalAddress<br/>\n     *  - ringtoneDeviceName<br/>\n     *  - verifyCertPortalAcct<br/>\n     *  - webProxyScriptUrl<br/>\n     *  - webProxyIeScriptUrl<br/>\n     *  - mediaLowPort<br/>\n     *  - mediaHighPort<br/>\n     *  - proxySettings<br/>\n     *  - videoPreferences (\"BestQuality\", \"BestFramerate\", \"BestResolution\", \"LimitedBandwidth\",<br/>\n     *                      \"Advanced450p30\", \"Advanced720p15\", \"Advanced720p30\")<br/>\n     *  - enableLogging<br/>\n     *  - enableAutoAnswer<br/>\n     *  - enableForceProxy<br/>\n     *  - enableLogWindow<br/>\n     *  - enableEntryTone<br/>\n     *  - enableEchoDetection<br/>\n     *  - enableEchoCancellation<br/>\n     *  - enableFullScreenVideo<br/>\n     *  - showToolbarInFullScreenVideo<br/>\n     *  - enableAudioAGC<br/>\n     *  - enableAutoStart<br/>\n     *  - enableShowConfParticipantName<br/>\n     *  - enableMuteMicrophoneOnJoin<br/>\n     *  - enableHideCameraOnJoin<br/>\n     *  - enableMuteSpeakerOnJoin<br/>\n     *  - enableEulaAgreed<br/>\n     *  - enableRendering<br/>\n     *  - enableBackgrounding<br/>\n     *  - enableFullDisplaySharing<br/>\n     *  - selfViewLoopbackPolicy<br/>\n     *\n     * @name vidyoClientMessages.requestSetConfiguration\n     * @function\n     * @param {Object} params Reference to parameter object.\n     * @return {Object} Reference to created object.\n     */\n    'requestSetConfiguration': function requestSetConfiguration(params) {\n        // object created by this factory function\n        var that = this.requestConfiguration(\"RequestSetConfiguration\", params);\n\n        // return object created by this factory function\n        return that;\n    },\n\n    /**\n     * Creates a VidyoClient volume audio request object.\n     * Request used to get/set volume of various media devices.\n     *\n     * The passed in parameter object can store the following\n     * properties:<br/>\n     *  - volume<br/>\n     *\n     * @name vidyoClientMessages.requestVolumeAudio\n     * @function\n     * @param {String} type String value for specific type of message.\n     * @param {Object} params Reference to parameter object.\n     * @return {Object} Reference to created object.\n     */\n    'requestVolumeAudio': function requestVolumeAudio(type, params) {\n        // object created by this factory function\n        var that = this.request(type);\n\n        // public properties for created object,\n        // initial values of which are potentially passed\n        // into this factory function\n        that.volume = params && params.volume || 0;\n\n        // return object created by this factory function\n        return that;\n    },\n\n    /**\n     * Creates a VidyoClient get volume audio in request object.\n     * Request used to get volume of audio input (capture/microphone) device.\n     *\n     * The passed in parameter object can store the following\n     * properties:<br/>\n     *  - volume<br/>\n     *\n     * @name vidyoClientMessages.requestGetVolumeAudioIn\n     * @function\n     * @param {Object} params Reference to parameter object.\n     * @return {Object} Reference to created object.\n     */\n    'requestGetVolumeAudioIn': function requestGetVolumeAudioIn(params) {\n        // object created by this factory function\n        var that = this.requestVolumeAudio(\"RequestGetVolumeAudioIn\", params);\n\n        // return object created by this factory function\n        return that;\n    },\n\n    /**\n     * Creates a VidyoClient set volume audio in request object.\n     * Request used to set volume of audio input (capture/microphone) device.\n     *\n     * The passed in parameter object can store the following\n     * properties:<br/>\n     *  - volume<br/>\n     *\n     * @name vidyoClientMessages.requestSetVolumeAudioIn\n     * @function\n     * @param {Object} params Reference to parameter object.\n     * @return {Object} Reference to created object.\n     */\n    'requestSetVolumeAudioIn': function requestSetVolumeAudioIn(params) {\n        // object created by this factory function\n        var that = this.requestVolumeAudio(\"RequestSetVolumeAudioIn\", params);\n\n        // return object created by this factory function\n        return that;\n    },\n\n    /**\n     * Creates a VidyoClient get volume audio out request object.\n     * Request used to get volume of audio output (playback/speaker) device.\n     *\n     * The passed in parameter object can store the following\n     * properties:<br/>\n     *  - volume<br/>\n     *\n     * @name vidyoClientMessages.requestGetVolumeAudioOut\n     * @function\n     * @param {Object} params Reference to parameter object.\n     * @return {Object} Reference to created object.\n     */\n    'requestGetVolumeAudioOut': function requestGetVolumeAudioOut(params) {\n        // object created by this factory function\n        var that = this.requestVolumeAudio(\"RequestGetVolumeAudioOut\", params);\n\n        // return object created by this factory function\n        return that;\n    },\n\n    /**\n     * Creates a VidyoClient set volume audio out request object.\n     * Request used to set volume of audio output (playback/speaker) device.\n     *\n     * The passed in parameter object can store the following\n     * properties:<br/>\n     *  - volume<br/>\n     *\n     * @name vidyoClientMessages.requestSetVolumeAudioOut\n     * @function\n     * @param {Object} params Reference to parameter object.\n     * @return {Object} Reference to created object.\n     */\n    'requestSetVolumeAudioOut': function requestSetVolumeAudioOut(params) {\n        // object created by this factory function\n        var that = this.requestVolumeAudio(\"RequestSetVolumeAudioOut\", params);\n\n        // return object created by this factory function\n        return that;\n    },\n\n    /**\n     * Creates a VidyoClient window shares request object.\n     * Request used to get list of or manage viewing of remote window shares.\n     *\n     * The passed in parameter object can store the following\n     * properties:<br/>\n     *  - requestType (\"ListSharingWindows\", \"ChangeSharingWindow\",\n     *                 \"ToggleSharingWindow\", \"StopSharingWindow\")<br/>\n     *  - remoteAppUri<br/>\n     *  - remoteAppName<br/>\n     *  - numApp<br/>\n     *  - currApp<br/>\n     *  - eventUri<br/>\n     *  - newApp<br/>\n     *\n     * @name vidyoClientMessages.requestWindowShares\n     * @function\n     * @param {String} type String value for specific type of message.\n     * @param {Object} params Reference to parameter object.\n     * @return {Object} Reference to created object.\n     */\n    'requestWindowShares': function requestWindowShares(type, params) {\n        // object created by this factory function\n        var that = this.request(type);\n\n        // public properties for created object,\n        // initial values of which are potentially passed\n        // into this factory function\n        that.requestType = params && params.requestType || \"\";\n        that.remoteAppUri = params && params.remoteAppUri || [\"\"];\n        that.remoteAppName = params && params.remoteAppName || [\"\"];\n        that.numApp = params && params.numApp || 0;\n        that.currApp = params && params.currApp || 0;\n        that.eventUri = params && params.eventUri || \"\";\n        that.newApp = params && params.newApp || 0;\n\n        // return object created by this factory function\n        return that;\n    },\n\n    /**\n     * Creates a VidyoClient get window shares request object.\n     * Request used to get list of remote window shares.\n     *\n     * The passed in parameter object can store the following\n     * properties:<br/>\n     *  - requestType (\"ListSharingWindows\")<br/>\n     *  - remoteAppUri<br/>\n     *  - remoteAppName<br/>\n     *  - numApp<br/>\n     *  - currApp<br/>\n     *\n     * @name vidyoClientMessages.requestGetWindowShares\n     * @function\n     * @param {String} type String value for specific type of message.\n     * @param {Object} params Reference to parameter object.\n     * @return {Object} Reference to created object.\n     */\n    'requestGetWindowShares': function requestGetWindowShares(params) {\n        // object created by this factory function\n        var that = this.requestWindowShares(\"RequestGetWindowShares\", params);\n\n        // return object created by this factory function\n        return that;\n    },\n\n    /**\n     * Creates a VidyoClient set window shares request object.\n     * Request used to manage viewing of remote window shares.\n     *\n     * The passed in parameter object can store the following\n     * properties:<br/>\n     *  - requestType (\"ChangeSharingWindow\",\n     *                 \"ToggleSharingWindow\", \"StopSharingWindow\")<br/>\n     *  - remoteAppUri<br/>\n     *  - remoteAppName<br/>\n     *  - numApp<br/>\n     *  - currApp<br/>\n     *  - eventUri<br/>\n     *  - newApp<br/>\n     *\n     * @name vidyoClientMessages.requestSetWindowShares\n     * @function\n     * @param {String} type String value for specific type of message.\n     * @param {Object} params Reference to parameter object.\n     * @return {Object} Reference to created object.\n     */\n    'requestSetWindowShares': function requestSetWindowShares(params) {\n        // object created by this factory function\n        var that = this.requestWindowShares(\"RequestSetWindowShares\", params);\n\n        // return object created by this factory function\n        return that;\n    },\n\n    /**\n     * Creates a VidyoClient get current session display info request object.\n     * Request used to get information that could be displayed to\n     * the user, relating to conference state.\n     *\n     * The passed in parameter object can store the following\n     * properties:<br/>\n     *  - sessionDisplayContext (\"Conf\", \"OutCall\", \"InCall\", \"Idle\")<br/>\n     *  - sessionDisplayText<br/>\n     *\n     * @name vidyoClientMessages.requestGetCurrentSessionDisplayInfo\n     * @function\n     * @param {Object} params Reference to parameter object.\n     * @return {Object} Reference to created object.\n     */\n    'requestGetCurrentSessionDisplayInfo': function requestGetCurrentSessionDisplayInfo(params) {\n        // object created by this factory function\n        var that = this.request(\"RequestGetCurrentSessionDisplayInfo\");\n\n        // public properties for created object,\n        // initial values of which are potentially passed\n        // into this factory function\n        that.sessionDisplayContext = params && params.sessionDisplayContext || \"Conf\";\n        that.sessionDisplayText = params && params.sessionDisplayText || \"\";\n\n        // return object created by this factory function\n        return that;\n    },\n\n    /**\n     * Creates a VidyoClient get participants request object.\n     * Request used to get list of participants in current conference.\n     *\n     * The passed in parameter object can store the following\n     * properties:<br/>\n     *  - name<br/>\n     *  - URI<br/>\n     *\n     * @name vidyoClientMessages.requestGetParticipants\n     * @function\n     * @param {Object} params Reference to parameter object.\n     * @return {Object} Reference to created object.\n     */\n    'requestGetParticipants': function requestGetParticipants(params) {\n        // object created by this factory function\n        var that = this.request(\"RequestGetParticipants\");\n\n        // public properties for created object,\n        // initial values of which are potentially passed\n        // into this factory function\n        that.name = params && params.name || [];\n\n        // return object created by this factory function\n        return that;\n    },\n\n    /**\n     * Creates a VidyoClient get number of participants request object.\n     * Request used to get number of participants in current conference.\n     *\n     * The passed in parameter object can store the following\n     * properties:<br/>\n     *  - numParticipants<br/>\n     *\n     * @name vidyoClientMessages.requestGetNumParticipants\n     * @function\n     * @param {Object} params Reference to parameter object.\n     * @return {Object} Reference to created object.\n     */\n    'requestGetNumParticipants': function requestGetNumParticipants(params) {\n        // object created by this factory function\n        var that = this.request(\"RequestGetNumParticipants\");\n\n        // public properties for created object,\n        // initial values of which are potentially passed\n        // into this factory function\n        that.numParticipants = params && params.numParticipants || 0;\n\n        // return object created by this factory function\n        return that;\n    },\n\n    /**\n     * Creates a VidyoClient get participant statistics at request object.\n     * Request used to get statistics for the specified participant\n     * (by index value) in current conference.\n     *\n     * The passed in parameter object can store the following\n     * properties:<br/>\n     *  - index<br/>\n     *  - result<br/>\n     *  - uri<br/>\n     *  - name<br/>\n     *  - videoResolution (containing following properties):<br/>\n     *    -- xPos<br/>\n     *    -- yPos<br/>\n     *    -- width<br/>\n     *    -- height<br/>\n     *  - videoKBitsPerSecRecv<br/>\n     *  - audioKBitsPerSecRecv<br/>\n     *  - firs<br/>\n     *  - nacks<br/>\n     *  - videoFrameRate<br/>\n     *  - videoDecodedFrameRate<br/>\n     *  - videoDisplayedFrameRate<br/>\n     *\n     * @name vidyoClientMessages.requestGetParticipantStatisticsAt\n     * @function\n     * @param {Object} params Reference to parameter object.\n     * @return {Object} Reference to created object.\n     */\n    'requestGetParticipantStatisticsAt': function requestGetParticipantStatisticsAt(params) {\n        // object created by this factory function\n        var that = this.request(\"RequestGetParticipantStatisticsAt\");\n\n        // public properties for created object,\n        // initial values of which are potentially passed\n        // into this factory function\n        that.index = params && params.index || 0;\n        that.result = params && params.result || false;\n        that.uri = params && params.uri || \"\";\n        that.name = params && params.name || \"\";\n        that.videoResolution = params && params.videoResolution || {\n            'xPos': 0,\n            'yPos': 0,\n            'width': 0,\n            'height': 0\n        };\n        that.videoKBitsPerSecRecv = params && params.videoKBitsPerSecRecv || 0;\n        that.audioKBitsPerSecRecv = params && params.audioKBitsPerSecRecv || 0;\n        that.firs = params && params.firs || 0;\n        that.nacks = params && params.nacks || 0;\n        that.videoFrameRate = params && params.videoFrameRate || 0;\n        that.videoDecodedFrameRate = params && params.videoDecodedFrameRate || 0;\n        that.videoDisplayedFrameRate = params && params.videoDisplayedFrameRate || 0;\n\n        // return object created by this factory function\n        return that;\n    },\n\n    /**\n     * Creates a VidyoClient get windows and desktops request object.\n     * Request used to get list of open application windows and\n     * list of available system desktops.\n     *\n     * The passed in parameter object can store the following\n     * properties:<br/>\n     *  - numApplicationWindows<br/>\n     *  - appWindowName<br/>\n     *  - appWindowAppName<br/>\n     *  - appWindowId<br/>\n     *  - numSystemDesktops<br/>\n     *  - sysDesktopName<br/>\n     *  - sysDesktopId<br/>\n     *\n     * @name vidyoClientMessages.requestGetWindowsAndDesktops\n     * @function\n     * @param {Object} params Reference to parameter object.\n     * @return {Object} Reference to created object.\n     */\n    'requestGetWindowsAndDesktops': function requestGetWindowsAndDesktops(params) {\n        // object created by this factory function\n        var that = this.request(\"RequestGetWindowsAndDesktops\");\n\n        // public properties for created object,\n        // initial values of which are potentially passed\n        // into this factory function\n        that.numApplicationWindows = params && params.numApplicationWindows || 0;\n        that.appWindowName = params && params.appWindowName || [\"\"];\n        that.appWindowAppName = params && params.appWindowAppName || [\"\"];\n        that.appWindowId = params && params.appWindowId || [\"0x0000000000000000\"];\n        that.numSystemDesktops = params && params.numSystemDesktops || 0;\n        that.sysDesktopName = params && params.sysDesktopName || [\"\"];\n        that.sysDesktopId = params && params.sysDesktopId || [\"0x0000000000000000\"];\n\n        // return object created by this factory function\n        return that;\n    },\n\n    /**\n     * Creates a VidyoClient get preview mode request object.\n     * Request used to get preview mode for self-view.\n     *\n     * The passed in parameter object can store the following\n     * properties:<br/>\n     *  - previewMode (\"None\", \"PIP\", \"Dock\")<br/>\n     *\n     * @name vidyoClientMessages.requestGetPreviewMode\n     * @function\n     * @param {Object} params Reference to parameter object.\n     * @return {Object} Reference to created object.\n     */\n    'requestGetPreviewMode': function requestGetPreviewMode(params) {\n        // object created by this factory function\n        var that = this.request(\"RequestGetPreviewMode\");\n\n        // public properties for created object,\n        // initial values of which are potentially passed\n        // into this factory function\n        that.previewMode = params && params.previewMode || \"\";\n        // return object created by this factory function\n        return that;\n    },\n\n    /**\n     * Creates a VidyoClient get microphone mute state request object.\n     * Request used to get a local mute state of microphone.\n     *\n     * The passed in parameter object can store the following\n     * properties:<br/>\n     *  - isMuted (true, false)<br/>\n     *\n     * @name vidyoClientMessages.requestGetMutedAudioIn\n     * @function\n     * @param {Object} params Reference to parameter object.\n     * @return {Object} Reference to created object.\n     */\n    'requestGetMutedAudioIn': function requestGetMutedAudioIn(params) {\n        // object created by this factory function\n        var that = this.request(\"RequestGetMutedAudioIn\");\n\n        // public properties for created object,\n        // initial values of which are potentially passed\n        // into this factory function\n        that.isMuted = params && params.isMuted || false;\n        // return object created by this factory function\n        return that;\n    },\n\n    /**\n     * Creates a VidyoClient get speaker mute state request object.\n     * Request used to get a local mute state of the speaker.\n     *\n     * The passed in parameter object can store the following\n     * properties:<br/>\n     *  - isMuted (true, false)<br/>\n     *\n     * @name vidyoClientMessages.requestGetMutedAudioOut\n     * @function\n     * @param {Object} params Reference to parameter object.\n     * @return {Object} Reference to created object.\n     */\n    'requestGetMutedAudioOut': function requestGetMutedAudioOut(params) {\n        // object created by this factory function\n        var that = this.request(\"RequestGetMutedAudioOut\");\n\n        // public properties for created object,\n        // initial values of which are potentially passed\n        // into this factory function\n        that.isMuted = params && params.isMuted || false;\n        // return object created by this factory function\n        return that;\n    },\n\n    /**\n     * Creates a VidyoClient get camera mute state request object.\n     * Request used to get a local mute state of camera.\n     *\n     * The passed in parameter object can store the following\n     * properties:<br/>\n     *  - isMuted (true, false)<br/>\n     *\n     * @name vidyoClientMessages.requestGetMutedVideo\n     * @function\n     * @param {Object} params Reference to parameter object.\n     * @return {Object} Reference to created object.\n     */\n    'requestGetMutedVideo': function requestGetMutedVideo(params) {\n        // object created by this factory function\n        var that = this.request(\"RequestGetMutedVideo\");\n\n        // public properties for created object,\n        // initial values of which are potentially passed\n        // into this factory function\n        that.isMuted = params && params.isMuted || false;\n        // return object created by this factory function\n        return that;\n    },\n\n    /**\n     * Creates a VidyoClient get microphone mute state on server request object.\n     * Request used to get a server mute state of microphone.\n     *\n     * The passed in parameter object can store the following\n     * properties:<br/>\n     *  - isMuted (true, false)<br/>\n     *\n     * @name vidyoClientMessages.requestGetMutedServerAudioIn\n     * @function\n     * @param {Object} params Reference to parameter object.\n     * @return {Object} Reference to created object.\n     */\n    'requestGetMutedServerAudioIn': function requestGetMutedServerAudioIn(params) {\n        // object created by this factory function\n        var that = this.request(\"RequestGetMutedServerAudioIn\");\n\n        // public properties for created object,\n        // initial values of which are potentially passed\n        // into this factory function\n        that.isMuted = params && params.isMuted || false;\n        // return object created by this factory function\n        return that;\n    },\n\n    /**\n     * Creates a VidyoClient get camera mute state on server request object.\n     * Request used to get a server mute state of camera.\n     *\n     * The passed in parameter object can store the following\n     * properties:<br/>\n     *  - isMuted (true, false)<br/>\n     *\n     * @name vidyoClientMessages.requestGetMutedServerVideo\n     * @function\n     * @param {Object} params Reference to parameter object.\n     * @return {Object} Reference to created object.\n     */\n    'requestGetMutedServerVideo': function requestGetMutedServerVideo(params) {\n        // object created by this factory function\n        var that = this.request(\"RequestGetMutedServerVideo\");\n\n        // public properties for created object,\n        // initial values of which are potentially passed\n        // into this factory function\n        that.isMuted = params && params.isMuted || false;\n        // return object created by this factory function\n        return that;\n    },\n\n    /**\n     * Creates a VidyoClient get current user information request object.\n     * Request used to get current user information.\n     *\n     * The passed in parameter object can store the following\n     * properties:<br/>\n     *  - currentUserID<br/>\n     *  - currentUserDisplay<br/>\n     *\n     * @name vidyoClientMessages.requestGetCurrentUser\n     * @function\n     * @param {Object} params Reference to parameter object.\n     * @return {Object} Reference to created object.\n     */\n    'requestGetCurrentUser': function requestGetCurrentUser(params) {\n        // object created by this factory function\n        var that = this.request(\"RequestGetCurrentUser\");\n\n        // public properties for created object,\n        // initial values of which are potentially passed\n        // into this factory function\n        that.currentUserID = params && params.currentUserID || \"\";\n        that.currentUserDisplay = params && params.currentUserDisplay || \"\";\n        // return object created by this factory function\n        return that;\n    },\n\n    /**\n     * Creates a VidyoClient get information about conference request object.\n     * Request used to get inforamation about conference activity like webcasting or recording.\n     *\n     * The passed in parameter object can store the following\n     * properties:<br/>\n     *  - recording<br/>\n     *  - webcasting<br/>\n     *\n     * @name vidyoClientMessages.requestGetConferenceInfo\n     * @function\n     * @param {Object} params Reference to parameter object.\n     * @return {Object} Reference to created object.\n     */\n    'requestGetConferenceInfo': function requestGetConferenceInfo(params) {\n        // object created by this factory function\n        var that = this.request(\"RequestGetConferenceInfo\");\n\n        // public properties for created object,\n        // initial values of which are potentially passed\n        // into this factory function\n        that.recording = params && params.recording || false;\n        that.webcasting = params && params.webcasting || false;\n        // return object created by this factory function\n        return that;\n    },\n\n    /**\n     * Creates a VidyoClient get current call state request object.\n     * Request used to get current call state.\n     *\n     * The passed in parameter object can store the following\n     * properties:<br/>\n     *  - callState (\"Idle\", \"Ringing\", \"Calling\", \"Joining\", \"InConference\", \"Disconnecting\")<br/>\n     *\n     * @name vidyoClientMessages.requestGetCallState\n     * @function\n     * @param {Object} params Reference to parameter object.\n     * @return {Object} Reference to created object.\n     */\n    'requestGetCallState': function requestGetCallState(params) {\n        // object created by this factory function\n        var that = this.request(\"RequestGetCallState\");\n\n        // public properties for created object,\n        // initial values of which are potentially passed\n        // into this factory function\n        that.callState = params && params.callState || \"\";\n        // return object created by this factory function\n        return that;\n    },\n\n    /**\n     * Creates a VidyoClient get video encoder resolution request object.\n     * Request used to get video encoder resolution.\n     *\n     * The passed in parameter object can store the following\n     * properties:<br/>\n     *  - rect (containing following properties):<br/>\n     *    -- xPos<br/>\n     *    -- yPos<br/>\n     *    -- width<br/>\n     *    -- height<br/>\n     *\n     * @name vidyoClientMessages.requestGetEncodeResolution\n     * @function\n     * @param {Object} params Reference to parameter object.\n     * @return {Object} Reference to created object.\n     */\n    'requestGetEncodeResolution': function requestGetEncodeResolution(params) {\n        // object created by this factory function\n        var that = this.request(\"RequestGetEncodeResolution\");\n\n        // public properties for created object,\n        // initial values of which are potentially passed\n        // into this factory function\n        that.rect = params && params.rect || { xPos: 0, yPos: 0, width: 0, height: 0 };\n        // return object created by this factory function\n        return that;\n    },\n\n    /**\n     * Creates a VidyoClient get video frame rate info request object.\n     * Request used to get video encoder frame rate info.\n     *\n     * The passed in parameter object can store the following\n     * properties:<br/>\n     *  - captureFrameRate\n     *  - encodeFrameRate\n     *  - sendFrameRate\n     *\n     * @name vidyoClientMessages.requestGetVideoFrameRateInfo\n     * @function\n     * @param {Object} params Reference to parameter object.\n     * @return {Object} Reference to created object.\n     */\n    'requestGetVideoFrameRateInfo': function requestGetVideoFrameRateInfo(params) {\n        // object created by this factory function\n        var that = this.request(\"RequestGetVideoFrameRateInfo\");\n\n        // public properties for created object,\n        // initial values of which are potentially passed\n        // into this factory function\n        that.captureFrameRate = params && params.captureFrameRate || 0;\n        that.encodeFrameRate = params && params.encodeFrameRate || 0;\n        that.sendFrameRate = params && params.sendFrameRate || 0;\n        // return object created by this factory function\n        return that;\n    },\n\n    /**\n     * Creates a VidyoClient get media info request object.\n     * Request used to get information about media plane.\n     *\n     * The passed in parameter object can store the following\n     * properties:<br/>\n     *  - numIFrames<br/>\n     *  - numFirs<br/>\n     *  - numNacks<br/>\n     *  - mediaRTT<br/>\n     *\n     * @name vidyoClientMessages.requestGetMediaInfo\n     * @function\n     * @param {Object} params Reference to parameter object.\n     * @return {Object} Reference to created object.\n     */\n    'requestGetMediaInfo': function requestGetMediaInfo(params) {\n        // object created by this factory function\n        var that = this.request(\"RequestGetMediaInfo\");\n\n        // public properties for created object,\n        // initial values of which are potentially passed\n        // into this factory function\n        that.numIFrames = params && params.numIFrames || 0;\n        that.numFirs = params && params.numFirs || 0;\n        that.numNacks = params && params.numNacks || 0;\n        that.mediaRTT = params && params.mediaRTT || 0;\n        // return object created by this factory function\n        return that;\n    }\n\n};\n\nexports.default = vidyoClientMessages;","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _awcoresdk_base_event_mapper = require('../awcoresdk_base_event_mapper');\n\nvar _awcoresdk_base_event_mapper2 = _interopRequireDefault(_awcoresdk_base_event_mapper);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /*!\r\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * American Well Core Web SDK\r\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *\r\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Copyright (c) 2018 American Well.\r\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * All rights reserved.\r\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *\r\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * It is illegal to use, reproduce or distribute\r\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * any part of this Intellectual Property without\r\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * prior written authorization from American Well.\r\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\n\n/**\r\n * A vidyo specific implementation of {@link AWCoreSDKBaseEventMapper}\r\n * @class\r\n * @extends AWCoreSDKBaseEventMapper\r\n */\nvar AWCoreSDKVidyoEventMapper = function (_AWCoreSDKBaseEventMa) {\n  _inherits(AWCoreSDKVidyoEventMapper, _AWCoreSDKBaseEventMa);\n\n  function AWCoreSDKVidyoEventMapper() {\n    _classCallCheck(this, AWCoreSDKVidyoEventMapper);\n\n    return _possibleConstructorReturn(this, (AWCoreSDKVidyoEventMapper.__proto__ || Object.getPrototypeOf(AWCoreSDKVidyoEventMapper)).apply(this, arguments));\n  }\n\n  _createClass(AWCoreSDKVidyoEventMapper, [{\n    key: 'mapFromType',\n\n    /**\r\n     * Implementation.\r\n     *\r\n     * @inheritdoc\r\n     */\n    value: function mapFromType(eventType) {\n      if (typeof eventType === 'string') {\n        switch (eventType) {\n          case 'OutEventConferenceEnded':\n            return 'conferenceEndedEvent';\n          case 'OutEventParticipantsChanged':\n            return 'remoteParticipantNumberChangedEvent';\n          case 'OutEventConferenceActive':\n          case 'remoteJoined':\n            return 'remoteParticipantJoinedEvent';\n          case 'remoteLeft':\n            return 'remoteParticipantLeftEvent';\n          case 'InEventLeave':\n            return 'localParticipantLeftEvent';\n          case 'callEvent':\n            return 'callMeEvent';\n          default:\n            return 'sdkDefaultVideoEvent';\n        }\n      }\n      throw Error('IllegalArgument. \"eventType\" must be a string');\n    }\n  }]);\n\n  return AWCoreSDKVidyoEventMapper;\n}(_awcoresdk_base_event_mapper2.default);\n\nexports.default = AWCoreSDKVidyoEventMapper;","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _visit_state = require('../visit_state');\n\nvar _visit_state2 = _interopRequireDefault(_visit_state);\n\nvar _awcoresdk_participants_changed_result = require('../awcoresdk_participants_changed_result');\n\nvar _awcoresdk_participants_changed_result2 = _interopRequireDefault(_awcoresdk_participants_changed_result);\n\nvar _awcoresdk_operation_type = require('../awcoresdk_operation_type');\n\nvar _awcoresdk_operation_type2 = _interopRequireDefault(_awcoresdk_operation_type);\n\nvar _awcoresdk_video_participant_type = require('../awcoresdk_video_participant_type');\n\nvar _awcoresdk_video_participant_type2 = _interopRequireDefault(_awcoresdk_video_participant_type);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar AWCoreSDKVidyoVisitState = function (_AWCoreSDKVisitState) {\n  _inherits(AWCoreSDKVidyoVisitState, _AWCoreSDKVisitState);\n\n  function AWCoreSDKVidyoVisitState() {\n    _classCallCheck(this, AWCoreSDKVidyoVisitState);\n\n    return _possibleConstructorReturn(this, (AWCoreSDKVidyoVisitState.__proto__ || Object.getPrototypeOf(AWCoreSDKVidyoVisitState)).apply(this, arguments));\n  }\n\n  _createClass(AWCoreSDKVidyoVisitState, [{\n    key: 'handleParticipantAdded',\n\n    /**\r\n     * Implementation\r\n     *\r\n     * @inheritdoc\r\n     */\n    value: function handleParticipantAdded(participant) {\n      participant.name();\n    }\n\n    /**\r\n     * Implementation\r\n     *\r\n     * @inheritdoc\r\n     */\n\n  }, {\n    key: 'handleAllParticipantsLeft',\n    value: function handleAllParticipantsLeft() {}\n\n    /**\r\n     * Implementation\r\n     *\r\n     * @inheritdoc\r\n     */\n\n  }, {\n    key: 'handleParticipantLeft',\n    value: function handleParticipantLeft() {}\n\n    /**\r\n     * Implementation\r\n     *\r\n     * @inheritdoc\r\n     */\n\n  }, {\n    key: 'handleProviderEntered',\n    value: function handleProviderEntered() {}\n\n    /**\r\n     * Implementation\r\n     *\r\n     * @inheritdoc\r\n     */\n\n  }, {\n    key: 'determineParticipantType',\n    value: function determineParticipantType(key) {\n      switch (key) {\n        case this.__providerKey:\n          return _awcoresdk_video_participant_type2.default.PROVIDER;\n        case this.__consumerKey:\n          return _awcoresdk_video_participant_type2.default.CONSUMER;\n        default:\n          return _awcoresdk_video_participant_type2.default.GUEST;\n      }\n    }\n\n    /**\r\n     * Implementation\r\n     *\r\n     * @inheritdoc\r\n     */\n\n  }, {\n    key: 'checkUpdateParticipantList',\n    value: function checkUpdateParticipantList(newList) {\n      var keyArray = Array.from(this.__participantMap.keys());\n      var participant = null;\n      var operationType = null;\n      if (newList.length > this.__participantMap.size) {\n        var newParticipants = newList.filter(function (key) {\n          return !keyArray.includes(key);\n        });\n        if (newParticipants.length >= 1) {\n          participant = this.addParticipant(newParticipants[0]);\n          operationType = _awcoresdk_operation_type2.default.ADD;\n        }\n      } else {\n        var removedParticipants = keyArray.filter(function (key) {\n          return !newList.includes(key);\n        });\n        if (removedParticipants.length >= 1) {\n          participant = this.removeParticipant(removedParticipants[0]);\n          operationType = _awcoresdk_operation_type2.default.DROP;\n        }\n      }\n      return new _awcoresdk_participants_changed_result2.default({ type: operationType, participant: participant });\n    }\n\n    /**\r\n     * Implementation\r\n     *\r\n     * @inheritdoc\r\n     */\n\n  }, {\n    key: 'numberOfParticipantsOfType',\n    value: function numberOfParticipantsOfType(type) {\n      var _this2 = this;\n\n      var mapKeys = Array.from(this.__participantMap.keys());\n      var guests = mapKeys.filter(function (key) {\n        return _this2.determineParticipantType(key) === type;\n      });\n      return guests.length;\n    }\n  }]);\n\n  return AWCoreSDKVidyoVisitState;\n}(_visit_state2.default);\n\nexports.default = AWCoreSDKVidyoVisitState;","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _participant = require('./participant');\n\nvar _participant2 = _interopRequireDefault(_participant);\n\nvar _awcoresdk_operation_type = require('./awcoresdk_operation_type');\n\nvar _awcoresdk_operation_type2 = _interopRequireDefault(_awcoresdk_operation_type);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar AWCoreSDKVisitState = function () {\n  /**\r\n   * Construct an empty map which will maintain our list of participants.\r\n   *\r\n   * @param {string} providerKey key used to match the provider for the call.\r\n   * @param {string} consumerKey key used to match the consumer for the call.\r\n   * @param {AWCoreSDKInternalVideoConsole} videoConsole the video console implementation to be used.\r\n   * NOTE: the __unusedParticipantNodes would reflect our dom nodes showing the participant names.\r\n   * The management of this list will change soon.\r\n   */\n  function AWCoreSDKVisitState(providerKey, consumerKey, videoConsole) {\n    _classCallCheck(this, AWCoreSDKVisitState);\n\n    this.__participantMap = new Map();\n    this.__providerKey = providerKey;\n    this.__consumerKey = consumerKey;\n    this.__videoConsole = videoConsole;\n  }\n\n  /**\r\n  * Handles adding a participant to the map of active participants in the call\r\n  *\r\n  * @param {string} key Any key to be used as an identifier for participants.\r\n  * @param {AWCoreSDKVideoParticipant=} participant The participant to be added.  If not provided, a new one will be created.\r\n  * @returns {AWCoreSDKVideoParticipant} this function returns added participant.\r\n  */\n\n\n  _createClass(AWCoreSDKVisitState, [{\n    key: 'addParticipant',\n    value: function addParticipant(key, participant) {\n      if (participant === undefined) {\n        participant = new _participant2.default({\n          name: key,\n          participantType: this.determineParticipantType(key),\n          videoNode: null,\n          nameNode: null\n        });\n      }\n      this.__participantMap.set(key, participant);\n      return participant;\n    }\n\n    /**\r\n     * Check to see if our new list of keys is more or less than our current list maintained in our state.\r\n     * This method should handle adding or removing participants as needed.\r\n     *\r\n     * @param {array} newList most recent list of participant keys matching participants expected to be in the call.\r\n     * @returns {AWCoreSDKParticipantsChangedResult} a wrapper object that represents the operation + the participant added or removed\r\n     */\n    /* eslint-disable no-unused-vars */\n\n  }, {\n    key: 'checkUpdateParticipantList',\n    value: function checkUpdateParticipantList(newList) {\n      throw Error('This method must be implemented in a subclass');\n    }\n\n    /**\r\n    * Looks up and returns the participant mapped to the given key.\r\n    *\r\n    * @param {string} key Any key to be used as a an identifier for participants.\r\n    * @returns {AWCoreSDKVideoParticipant} The participant associated with passed in key.\r\n    */\n\n  }, {\n    key: 'getParticipant',\n    value: function getParticipant(key) {\n      return this.__participantMap.get(key);\n    }\n\n    /**\r\n    * Removes a participant from the internal map of current participants in the call.\r\n    *\r\n    * @param {string} key Any key to be used as a an identifier for participant to be removed.\r\n    * @returns {AWCoreSDKVideoParticipant} The participant that was removed.\r\n    */\n\n  }, {\n    key: 'removeParticipant',\n    value: function removeParticipant(key) {\n      var participant = this.__participantMap.get(key);\n      if (participant) {\n        this.__participantMap.delete(key);\n      }\n      return participant;\n    }\n\n    /**\r\n    * Determine the type of user for the passed in key.\r\n    *\r\n    * @param {string} key Any key to be used as a an identifier for participants.\r\n    * @returns {string} a string to indicate the type of participant matching the passed key.\r\n    */\n    /* eslint-disable no-unused-vars */\n\n  }, {\n    key: 'determineParticipantType',\n    value: function determineParticipantType(key) {\n      throw Error('This method must be implemented in a subclass');\n    }\n\n    /**\r\n     * Determine the number of {@link AWCoreSDKVideoParticipant}s with the given type.\r\n     *\r\n     * @param {AWCoreSDKVideoParticipantType} type The type of the {@link AWCoreSDKVideoParticipant} that are being counted.\r\n     * @returns {number} The number of {@link AWCoreSDKVideoParticipant}s with the given type.\r\n     */\n\n  }, {\n    key: 'numberOfParticipantsOfType',\n    value: function numberOfParticipantsOfType(type) {\n      throw Error('This method must be implemented in a subclass');\n    }\n\n    /**\r\n     * Based on a participant changed event, this method determines who to wait for, so that appropriate message is displayed\r\n    *\r\n     * @param {AWCoreSDKParticipantsChangedResult} participantChangeResult the object wrapper representing a change in the participant count\r\n     * @returns {string} the name of the participant to wait for.\r\n     */\n\n  }, {\n    key: 'determineWhoToWaitFor',\n    value: function determineWhoToWaitFor(participantChangeResult) {\n      var name = void 0;\n      if (participantChangeResult && this.__participantMap.size === 1 && participantChangeResult.type === _awcoresdk_operation_type2.default.DROP) {\n        if (participantChangeResult.participant && participantChangeResult.participant.isConsumer) {\n          name = this.__providerKey;\n        } else {\n          name = this.__consumerKey;\n        }\n      }\n      return name;\n    }\n\n    /**\r\n     * Return the number of participants.\r\n     *\r\n     * @returns {number} the number of {@link AWCoreSDKVideoParticipant}s in the visit.\r\n     */\n\n  }, {\n    key: 'numberOfParticipants',\n    value: function numberOfParticipants() {\n      return this.__participantMap.size;\n    }\n\n    /**\r\n     * Determine the number of remote participants in the visit.\r\n     *\r\n     * @param {AWCoreSDKVideoParticipant} localParticipant The local {@link AWCoreSDKVideoParticipant} in the video\r\n     * @returns {number} the number of remote {@link AWCoreSDKVideoParticipant}s in the visit.\r\n     */\n\n  }, {\n    key: 'numberOfRemoteParticipants',\n    value: function numberOfRemoteParticipants(localParticipant) {\n      var mapKeys = Array.from(this.__participantMap.keys());\n      var remoteParticipants = mapKeys.filter(function (key) {\n        return key !== localParticipant.name;\n      });\n      return remoteParticipants.length;\n    }\n  }]);\n\n  return AWCoreSDKVisitState;\n}();\n\nexports.default = AWCoreSDKVisitState;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/*!\r\n * American Well Core Web SDK\r\n *\r\n * Copyright (c) 2018 American Well.\r\n * All rights reserved.\r\n *\r\n * It is illegal to use, reproduce or distribute\r\n * any part of this Intellectual Property without\r\n * prior written authorization from American Well.\r\n */\n\n/**\r\n * Represents the result to a call to check whether the participant list has changed.\r\n *\r\n * @property {AWCoreSDKOperationType} type the type of operation that happened to a call participant (ADD or DROP).\r\n * @property {AWCoreSDKVideoParticipant} participant the participant who was dropped or added to the call\r\n *\r\n */\nvar AWCoreSDKCheckParticipantsChangedResult = function () {\n  /**\r\n   * Constructor for CheckParticipantsChangeResult\r\n   *\r\n   * @param {Object} data Dictionary of constructor arguments\r\n   * @param {AWCoreSDKOperationType} data.type the type of operation that happened to a call participant\r\n   * @param {AWCoreSDKVideoParticipant} data.participant the participant who was dropped or added to the call\r\n   */\n  function AWCoreSDKCheckParticipantsChangedResult(data) {\n    _classCallCheck(this, AWCoreSDKCheckParticipantsChangedResult);\n\n    this.__data = data;\n  }\n\n  _createClass(AWCoreSDKCheckParticipantsChangedResult, [{\n    key: \"type\",\n    get: function get() {\n      return this.__data.type;\n    }\n  }, {\n    key: \"participant\",\n    get: function get() {\n      return this.__data.participant;\n    }\n  }]);\n\n  return AWCoreSDKCheckParticipantsChangedResult;\n}();\n\nexports.default = AWCoreSDKCheckParticipantsChangedResult;","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/*!\r\n * American Well Core Web SDK\r\n *\r\n * Copyright (c) 2018 American Well.\r\n * All rights reserved.\r\n *\r\n * It is illegal to use, reproduce or distribute\r\n * any part of this Intellectual Property without\r\n * prior written authorization from American Well.\r\n */\n\n/**\r\n * @enum\r\n * @readonly\r\n */\nvar AWCoreSDKVidyoSendRequestResponse = {\n  /**\r\n   * Represents a <em>successful</em> response to a send request to vidyo client\r\n   */\n  ERROR_OK: 'ErrorOk',\n  /**\r\n   * Represents a <em>failure</em> response to a send request to vidyo client\r\n   */\n  ERROR_INVALID_REQUEST: 'ErrorInvalidRequest'\n};\n\nexports.default = AWCoreSDKVidyoSendRequestResponse;","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\nvar _internal_video_console = require('../internal_video_console');\n\nvar _internal_video_console2 = _interopRequireDefault(_internal_video_console);\n\nvar _awcoresdk_pexip_event_mapper = require('./awcoresdk_pexip_event_mapper');\n\nvar _awcoresdk_pexip_event_mapper2 = _interopRequireDefault(_awcoresdk_pexip_event_mapper);\n\nvar _media_devices = require('../util/media_devices');\n\nvar _media_devices2 = _interopRequireDefault(_media_devices);\n\nvar _awcoresdk_video_participant_type = require('../awcoresdk_video_participant_type');\n\nvar _awcoresdk_video_participant_type2 = _interopRequireDefault(_awcoresdk_video_participant_type);\n\nvar _pubsub = require('../util/pubsub');\n\nvar _performance = require('../util/performance');\n\nvar _performance2 = _interopRequireDefault(_performance);\n\nvar _mobile_browser_detector = require('../util/mobile_browser_detector');\n\nvar _mobile_browser_detector2 = _interopRequireDefault(_mobile_browser_detector);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /* eslint-disable no-console */\n/*!\n * American Well Core Web SDK\n *\n * Copyright (c) 2018 American Well.\n * All rights reserved.\n *\n * It is illegal to use, reproduce or distribute\n * any part of this Intellectual Property without\n * prior written authorization from American Well.\n */\n\nvar load = require('load-script');\n\n/**\n * A Pexip implementation of {@link AWCoreSDKInternalVideoConsole}\n * @class\n * @extends AWCoreSDKInternalVideoConsole\n */\n\nvar AWCoreSDKPexipConsole = function (_AWCoreSDKInternalVid) {\n  _inherits(AWCoreSDKPexipConsole, _AWCoreSDKInternalVid);\n\n  function AWCoreSDKPexipConsole(videoConfig) {\n    _classCallCheck(this, AWCoreSDKPexipConsole);\n\n    // start tracking time:\n    var _this = _possibleConstructorReturn(this, (AWCoreSDKPexipConsole.__proto__ || Object.getPrototypeOf(AWCoreSDKPexipConsole)).call(this, videoConfig));\n\n    _performance2.default.logger = _this.__logger.info.bind(_this.__logger);\n\n    _this.__adapterUrl = _this.__getPexipUrl(videoConfig);\n    _this.__setupVideoConsole();\n    _this.__eventMapper = new _awcoresdk_pexip_event_mapper2.default();\n    _this.__visitState = undefined;\n    _this.__retryTimeout = 15000;\n    _this.__maxRetryTimeout = 15000;\n    _this.__retries = 0;\n    _this.__maxRetries = 20;\n    _this.__pexipParticipants = [];\n    _this.__shouldRefresh = true;\n    _this.__isConnected = false; // whether or not the pexip client is in a connected state\n    _this.__allLocalMediaStreams = []; // need to keep track of all local mediaStreams for proper device access cleanup when visit is finished\n    _this.__remoteStream = null; // keep track of the remote video stream that pexip hands back\n    _this.__speakingParticipant = null; // keep track of the currently speaking participant\n\n    _this.__stopMediaTracks(window.AWAudioStream);\n    _this.__stopMediaTracks(window.AWVideoStream);\n\n    // allows us to keep track of which participants have been added and removed from pexip but aren't represented in the visit's list of participants yet\n    _this.__unsyncedPexipParticipants = [];\n    return _this;\n  }\n\n  /**\n   * Implementation of start()\n   *\n   * @inheritdoc\n   */\n\n\n  _createClass(AWCoreSDKPexipConsole, [{\n    key: 'start',\n    value: function start() {\n      var _this2 = this;\n\n      // fire this regardless if we have a pexip client or not so that we can do things like end the visit + show useful spinners\n      this.__setupConsoleEventHandlers();\n\n      // first thing is first, ensure we have access to the media devices\n      var startPromise = _media_devices2.default.getUserMedia({\n        audio: true,\n        video: true\n      }).then(function (stream) {\n        _this2.__allLocalMediaStreams.push(stream);\n        _this2.__hideBrowserPermissionDialog();\n        // create the client\n        return _this2.__createPexipClient(_this2.__adapterUrl).then(function () {\n          _this2.pexRTC.turn_server = _this2.__videoConfig.turnServerConfiguration;\n          _this2.__setupPexRTCEventHandlers();\n          return _this2.__setupDeviceIds().then(function () {\n            _this2.__makeCall();\n          });\n        });\n      }).catch(function (e) {\n        _this2.__showBrowserPermissionDialog();\n        _this2.__logger.error('Permission Failure', e);\n        return Promise.reject(e);\n      });\n\n      // Set a timeout for either onSetup or onError; if it fails, assume the browser is asking for media permissions\n      this.__setPermissionTimeout();\n      return startPromise;\n    }\n  }, {\n    key: 'cancelTokenRefresh',\n    value: function cancelTokenRefresh() {\n      this.__shouldRefresh = false;\n      if (this.pexRTC) {\n        this.pexRTC.disconnect();\n      }\n    }\n\n    /**\n     * Implementation of stop()\n     *\n     * @inheritdoc\n     */\n\n  }, {\n    key: 'stop',\n    value: function stop() {\n      if (this.pexRTC) {\n        try {\n          this.pexRTC.disconnect();\n          this.__shouldRefresh = false;\n        } catch (ex) {\n          this.__logger.error('Couldn\\'t disconnect: ', ex);\n        }\n      }\n      // ensure we kill remote stream and all local streams since pexip seems to leak sometimes\n      this.__stopMediaTracks(this.__remoteStream);\n      this.__allLocalMediaStreams.forEach(this.__stopMediaTracks);\n      this.__allLocalMediaStreams = [];\n      _get(AWCoreSDKPexipConsole.prototype.__proto__ || Object.getPrototypeOf(AWCoreSDKPexipConsole.prototype), 'stop', this).call(this);\n    }\n\n    /**\n     * Stop all tracks on the MediaStream.\n     *\n     * @private\n     * @param {MediaStream} mediaStream The stream to stop all tracks on.\n     * @returns {undefined} does not return a value\n     */\n\n  }, {\n    key: '__stopMediaTracks',\n    value: function __stopMediaTracks(mediaStream) {\n      if (mediaStream) {\n        var tracks = mediaStream.getTracks();\n        tracks.forEach(function (track) {\n          track.stop();\n        });\n      }\n    }\n\n    /**\n     * Pexip specific implementation of handleInternetDisconnection()\n     *\n     * @inheritdoc\n     */\n\n  }, {\n    key: 'handleInternetDisconnection',\n    value: function handleInternetDisconnection() {\n      this.__spinnerManager.transition({ name: 'error' });\n    }\n\n    /* @private */\n\n  }, {\n    key: '__populateSettings',\n    value: function __populateSettings() {\n      var _this3 = this;\n\n      return this.__renderSettings().then(function (sections) {\n        var micSection = sections.micSection,\n            speakerSection = sections.speakerSection,\n            cameraSection = sections.cameraSection;\n\n        var defaultLabel = { label: _this3.messages.settings_default };\n        return _media_devices2.default.enumerateDevices().then(function (devices) {\n          var localAudioSettings = _this3.__getCurrentTrackSettings('audio');\n          var localVideoSettings = _this3.__getCurrentTrackSettings('video');\n          var currentAudioOutputId = _this3.__videoConfig.attachPoints.mainVideo.sinkId;\n\n          var microphones = devices.filter(function (device) {\n            return device.kind === 'audioinput';\n          });\n          if (!microphones.length) {\n            microphones.push(defaultLabel);\n          }\n          _this3.__constructMediaOptions(microphones, micSection, 'microphone', localAudioSettings.deviceId);\n\n          var speakers = devices.filter(function (device) {\n            return device.kind === 'audiooutput';\n          });\n          if (!speakers.length) {\n            speakers.push(defaultLabel);\n          }\n          _this3.__constructMediaOptions(speakers, speakerSection, 'speaker', currentAudioOutputId);\n\n          var cameras = devices.filter(function (device) {\n            return device.kind === 'videoinput';\n          });\n          if (!cameras.length) {\n            cameras.push(defaultLabel);\n          }\n          _this3.__constructMediaOptions(cameras, cameraSection, 'camera', localVideoSettings.deviceId);\n        });\n      });\n    }\n  }, {\n    key: '__constructMediaOptions',\n    value: function __constructMediaOptions(devices, parentNode, deviceType, currentDeviceId) {\n      this.__logger.debug('For', deviceType, 'Current devices are', devices);\n\n      var self = this;\n      var deviceSelect = self.__createNode('select');\n      deviceSelect.classList.add('awcore-settings-camera-select');\n      deviceSelect.onchange = function () {\n        self.selectDevice(devices[deviceSelect.selectedIndex], deviceType);\n      };\n\n      devices.forEach(function (device, index) {\n        var deviceOption = self.__createNode('option');\n        deviceOption.setAttribute('value', device.deviceId);\n        deviceOption.id = '' + deviceType + index;\n        deviceOption.innerHTML = device.label;\n        deviceSelect.appendChild(deviceOption);\n        if (device.deviceId === currentDeviceId || device.deviceId === 'default' && !currentDeviceId) {\n          deviceOption.selected = true;\n        }\n      });\n      parentNode.appendChild(deviceSelect);\n    }\n  }, {\n    key: '__getPexipUrl',\n    value: function __getPexipUrl(videoConfig) {\n      var pexipInfo = videoConfig.systemConfiguration.modalityVendors.find(function (vendor) {\n        return vendor.name === 'PEXIP';\n      });\n      return pexipInfo && pexipInfo.clientApiUrl;\n    }\n  }, {\n    key: 'selectDevice',\n    value: function selectDevice(device) {\n      var _this4 = this;\n\n      var currentDevices = {};\n\n      // if the device is speaker we need to set the sink id on the video src, it's not through pexip\n      if (device.kind === 'audiooutput') {\n        this.__videoConfig.attachPoints.mainVideo.setSinkId(device.deviceId).then(function () {\n          return _this4.__logger.debug('Audio output switched: ', device);\n        }).catch(function (error) {\n          return _this4.__logger.error(error);\n        });\n\n        currentDevices.speakerDeviceId = device.deviceId;\n        currentDevices.speakerDeviceLabel = device.label;\n        this.__setDevices(currentDevices);\n      } else {\n        if (device.kind === 'videoinput') {\n          currentDevices.cameraDeviceId = device.deviceId;\n          currentDevices.cameraDeviceLabel = device.label;\n\n          if (this.__videoConfig.attachPoints.selfVideo && this.__videoConfig.attachPoints.selfVideo.srcObject) {\n            this.__logger.debug('>>> Switching camera devices');\n            this.__stopMediaTracks(this.__videoConfig.attachPoints.selfVideo.srcObject);\n            this.__videoConfig.attachPoints.selfVideo.srcObject = null;\n          }\n        }\n        if (device.kind === 'audioinput') {\n          currentDevices.microphoneDeviceId = device.deviceId;\n          currentDevices.microphoneDeviceLabel = device.label;\n        }\n        this.__setDevices(currentDevices);\n      }\n\n      this.__renegotiate();\n    }\n\n    /**\n     * Apply changes in selected camera/microphone (via audio_source and video_source properties) to the call.\n     *\n     * @private\n     * @returns {undefined} does not return a value\n     */\n\n  }, {\n    key: '__renegotiate',\n    value: function __renegotiate() {\n      this.__logger.debug('>> Renegotiate devices');\n      this.pexRTC.renegotiate();\n    }\n\n    /**\n       * Implementation of leaveCall()\n       *\n       * @inheritdoc\n       */\n\n  }, {\n    key: 'leaveCall',\n    value: function leaveCall(wasUserRequested) {\n      this.metrics.isEndRequested = wasUserRequested === true;\n      if (this.pexRTC) {\n        this.pexRTC.disconnect();\n      }\n      var leaveHandler = this.__findHandler(this.__eventMapper.mapFromType('localParticipantLeftEvent'));\n      if (leaveHandler) {\n        leaveHandler.handler();\n      }\n    }\n\n    /**\n       * Implementation of toggleMic()\n       *\n       * @inheritdoc\n       */\n\n  }, {\n    key: 'toggleMic',\n    value: function toggleMic() {\n      this.__saveState({\n        isAudioMuted: !this.__state.isAudioMuted\n      });\n      this.__syncConsoleMute();\n      this.__logger.debug('Audio muted is now ', this.__state.isAudioMuted);\n    }\n\n    /**\n       * Implementation of toggleCamera()\n       *\n       * @inheritdoc\n       */\n\n  }, {\n    key: 'toggleCamera',\n    value: function toggleCamera() {\n      this.__saveState({\n        isVideoMuted: !this.__state.isVideoMuted\n      });\n      this.__syncConsoleMute();\n      this.__logger.debug('Video muted is now ', this.__state.isVideoMuted);\n    }\n\n    /**\n     * Implementation of toggleSwitchCamera()\n     *\n     * @inheritdoc\n     */\n\n  }, {\n    key: 'toggleSwitchCamera',\n    value: function toggleSwitchCamera() {\n      var _this5 = this;\n\n      _media_devices2.default.enumerateDevices().then(function (devices) {\n        var kind = 'video';\n        var deviceType = 'camera';\n        var currentVideoSettings = _this5.__getCurrentTrackSettings(kind);\n        var cameras = devices.filter(function (device) {\n          return device.kind === 'videoinput';\n        });\n        _this5.__allLocalMediaStreams.forEach(_this5.__stopMediaTracks);\n        for (var i = 0; i < cameras.length; i++) {\n          var selectId = 0;\n          if (currentVideoSettings.deviceId === cameras[i].deviceId) {\n            selectId = i;\n            var newSelectId = (selectId + 1) % cameras.length;\n            _this5.__logger.debug('>> Selecting device ' + cameras[newSelectId] + ' with device label ' + cameras[newSelectId].label);\n            _this5.selectDevice(cameras[newSelectId], deviceType);\n            break;\n          }\n        }\n      }).catch(function (err) {\n        _this5.__logger.error('Failed to enumerate devices', err);\n      });\n    }\n  }, {\n    key: '__syncConsoleMute',\n\n\n    // update pexip and state of buttons to the current audio / video muted state\n    value: function __syncConsoleMute() {\n      var attachPoints = this.__videoConfig.attachPoints;\n      var _state = this.__state,\n          isVideoMuted = _state.isVideoMuted,\n          isAudioMuted = _state.isAudioMuted;\n\n\n      if (isVideoMuted !== undefined) {\n        this.__toggleClass(attachPoints.camera, 'awcore-disabled', isVideoMuted);\n        this.__toggleClass(attachPoints.mutedIcon, 'awcore-hidden', !isVideoMuted);\n        this.__toggleClass(attachPoints.selfVideoParentContainer, 'awcore-hidden', isVideoMuted);\n        this._setNodeAttribute(attachPoints.camera, 'aria-checked', !isVideoMuted);\n        this.pexRTC.muteVideo(this.__state.isVideoMuted);\n      }\n\n      if (isAudioMuted !== undefined) {\n        this.__toggleClass(attachPoints.mic, 'awcore-disabled', isAudioMuted);\n        this._setNodeAttribute(attachPoints.mic, 'aria-checked', !isAudioMuted);\n        this.pexRTC.muteAudio(isAudioMuted);\n      }\n    }\n\n    /* @private */\n\n  }, {\n    key: '__callMe',\n    value: function __callMe() {\n      // black box needs to register for this event.\n      this.__delegateToHandler({ type: 'callMeEvent' });\n      this.__enterPhoneOnlyMode();\n    }\n\n    /**\n       * Handle one participant waiting for their counter-part to join the visit. This is shown as soon as we detect the participant has left\n       *\n       * @param {string} name the name of the other primary participant (provider or consumer) we are waiting for.\n       * @returns {undefined} this function has no return value.\n       */\n\n  }, {\n    key: 'handleWaitingForParticipant',\n    value: function handleWaitingForParticipant(name) {\n      // DETERMINE WHO THE USER IS to display correct message\n      if (this.__videoConfig.attachPoints.waitDisplayMessage) {\n        var message = this.messages.connecting_with_remote.replace('{remoteName}', name);\n        this.__videoConfig.attachPoints.waitDisplayMessage.innerHTML = message;\n      }\n    }\n\n    /**\n       * Show dom state allowing the user to cancel the visit. This should appear after the consumer has waited over 30 seconds for the provider to return\n       * to the call.\n       *\n       * @param {string} name the participant who is missing from the visit.\n       * @param {boolean} isReturn indicates if this disconnect was for a return or a participant who never arrived in the call.\n       * @returns {undefined} This function has no return.\n       */\n\n  }, {\n    key: 'showDisconnectOption',\n    value: function showDisconnectOption(name, isReturn) {\n      if (this.__visitState.getParticipant(name) === undefined) {\n        var connectionMessage = '';\n        if (isReturn) {\n          connectionMessage = this.messages.can_cancel_rejoin.replace('{participantName}', name);\n        } else {\n          connectionMessage = this.messages.can_cancel.replace('{participantName}', name);\n        }\n        this.__videoConfig.attachPoints.waitDisplayMessage.innerHTML = connectionMessage;\n      }\n    }\n  }, {\n    key: '__setupConsoleEventHandlers',\n\n\n    /**\n    * Setup console's event handlers\n    *\n    * @private\n    * @returns {undefined} This function has no return value.\n    */\n    value: function __setupConsoleEventHandlers() {\n      var _this6 = this;\n\n      this.__setupDOMEventHandlers();\n      var settings = this.__videoConfig.attachPoints.settings;\n      settings.onclick = function (event) {\n        _this6.__handleSettingsButtonAction(event);\n      };\n\n      settings.onkeypress = function (event) {\n        if (!_this6._isEnterKeyPressed(event)) return;\n        _this6.__handleSettingsButtonAction(event);\n      };\n\n      // setTimeout(this.showDisconnectOption.bind(this), this.__videoConfig.visitConfig.updateWaitingDisplayInterval, this.__videoConfig.localParticipant.isConsumer ? this.__visitState.__providerKey : this.__visitState.__consumerKey, false);\n      window.removeEventListener('unload', this.__OnunloadEventHandler.bind(this), { once: true });\n      window.addEventListener('unload', this.__OnunloadEventHandler.bind(this), { once: true });\n    }\n  }, {\n    key: '__handleSettingsButtonAction',\n    value: function __handleSettingsButtonAction(event) {\n      var _this7 = this;\n\n      var settings = this.__videoConfig.attachPoints.settings;\n      event.preventDefault();\n      var settingsContent = this.__videoConfig.attachPoints.settingsContent;\n      if (!settingsContent.classList.contains('awcore-hidden')) {\n        this._setNodeAttribute(settingsContent, 'aria-checked', false);\n        settings.classList.remove('open');\n        settingsContent.classList.add('awcore-hidden');\n      } else {\n        this.__populateSettings().then(function () {\n          if (settingsContent.classList.contains('awcore-hidden')) {\n            event.stopPropagation();\n            _this7._setNodeAttribute(settingsContent, 'aria-checked', true);\n            settingsContent.classList.remove('awcore-hidden');\n            settings.classList.add('open');\n          }\n        });\n      }\n    }\n\n    /**\n     * process an individual device\n     *\n     * @param {Object} device the mediaDevice to process\n     * @param {Object} currentDevices the shared currentDevices\n     * @private\n     * @returns {undefined} nothing\n     */\n\n  }, {\n    key: '__processDevice',\n    value: function __processDevice(device, currentDevices) {\n      switch (device.kind) {\n        case 'audioinput':\n          if (device.deviceId === this.__videoConfig.audioDeviceId || !currentDevices.microphoneDeviceId && (device.deviceId === this.__currentDevices.microphoneDeviceId || device.label === this.__currentDevices.microphoneDeviceLabel)) {\n            currentDevices.microphoneDeviceId = device.deviceId;\n            currentDevices.microphoneDeviceLabel = device.label;\n            this.__logger.debug('currentDevices.microphoneDeviceId = ' + currentDevices.microphoneDeviceId);\n            this.__logger.debug('currentDevices.microphoneDeviceLabel = ' + currentDevices.microphoneDeviceLabel);\n          }\n          break;\n        case 'videoinput':\n          if (device.deviceId === this.__videoConfig.videoDeviceId || !currentDevices.cameraDeviceId && (device.deviceId === this.__currentDevices.cameraDeviceId || device.label === this.__currentDevices.cameraDeviceLabel)) {\n            currentDevices.cameraDeviceId = device.deviceId;\n            currentDevices.cameraDeviceLabel = device.label;\n            this.__logger.debug('currentDevices.cameraDeviceId = ' + currentDevices.cameraDeviceId);\n            this.__logger.debug('currentDevices.cameraDeviceLabel = ' + currentDevices.cameraDeviceLabel);\n          }\n          break;\n        case 'audiooutput':\n          if (!currentDevices.speakerDeviceId && (device.deviceId === this.__currentDevices.speakerDeviceId || device.label === this.__currentDevices.speakerDeviceLabel)) {\n            currentDevices.speakerDeviceId = device.deviceId;\n            currentDevices.speakerDeviceLabel = device.label;\n            this.__logger.debug('currentDevices.speakerDeviceId = ' + currentDevices.speakerDeviceId);\n            this.__logger.debug('currentDevices.speakerDeviceLabel = ' + currentDevices.speakerDeviceLabel);\n          }\n          break;\n        default:\n          break;\n      }\n    }\n\n    /**\n    * Setup all device Ids\n    *\n    * Attempts to use whatever devices are provided in config or kept in localStorage before falling back to defaults.\n    *\n    * @private\n    * @returns {undefined} this function does not return a value.\n    */\n\n  }, {\n    key: '__setupDeviceIds',\n    value: function __setupDeviceIds() {\n      var _this8 = this;\n\n      return this.__preselectFrontDevice().then(function () {\n        return _media_devices2.default.enumerateDevices().then(function (devices) {\n          // start with the assumption that none of the devices will match whats in localStorage\n          var currentDevices = { microphoneDeviceId: '', cameraDeviceId: '', speakerDeviceId: '' };\n          // iterate through all the devices and use this order of preference for which to try to use:\n          // videoConfig -> localStorage by id -> localStorage by label -> nothing (use default)\n          devices.forEach(function (device) {\n            _this8.__processDevice(device, currentDevices);\n          });\n          _this8.__setDevices(currentDevices);\n        });\n      });\n    }\n\n    /**\n     * Default to first found front device, if such device exists, and __videoConfig\n     * videoDeviceId is not a front device.\n     *\n     * This code serves as a fix for Samsung devices where if a user is on the back camera\n     * and reloads/refreshes the visit, or page, they can no longer get into a visit (resulting\n     * in a DOMException saying back camera is locked.) To remedy we start with the front camera.\n     *\n     * It makes sense to start with a front device anyway.\n     *\n     * @returns {undefined} this function does not return a value\n     */\n\n  }, {\n    key: '__preselectFrontDevice',\n    value: function __preselectFrontDevice() {\n      var _this9 = this;\n\n      return _media_devices2.default.enumerateDevices().then(function (devices) {\n        var frontDevices = devices.filter(function (device) {\n          return (/front/i.test(device.label) && device.kind === 'videoinput'\n          );\n        });\n        if (frontDevices.length > 0) {\n          var matchingFrontDevice = frontDevices.find(function (device) {\n            return device.deviceId === _this9.__videoConfig.videoDeviceId;\n          });\n          if (!matchingFrontDevice) {\n            var frontDevice = frontDevices[0];\n            _this9.__videoConfig.videoDeviceId = frontDevice.deviceId;\n            _this9.__logger.debug('>>> Preselect front device id = ' + frontDevice.deviceId + ', kind = ' + frontDevice.kind + ', label = ' + frontDevice.label);\n          }\n        }\n      }).catch(function (e) {\n        return _this9.__logger.error(e);\n      });\n    }\n\n    /**\n     * Set all the devices if present\n     *\n     * @param {Object} currentDevices the device id map\n     * @private\n     * @returns {undefined} this function does not return a value.\n     */\n\n  }, {\n    key: '__setDevices',\n    value: function __setDevices(currentDevices) {\n      var _this10 = this;\n\n      this.__updateCurrentDevices(currentDevices);\n      if (this.__currentDevices.microphoneDeviceId) {\n        this.pexRTC.audio_source = this.__currentDevices.microphoneDeviceId;\n        this.__logger.debug('>> __setDevices: pexRTC.audio_source = ' + this.__currentDevices.microphoneDeviceId);\n      }\n      if (this.__currentDevices.cameraDeviceId) {\n        this.pexRTC.video_source = this.__currentDevices.cameraDeviceId;\n        this.__logger.debug('>> __setDevices: pexRTC.video_source = ' + this.__currentDevices.cameraDeviceId);\n      }\n      if (this.__currentDevices.speakerDeviceId) {\n        this.__videoConfig.attachPoints.mainVideo.setSinkId(this.__currentDevices.speakerDeviceId).then(function () {\n          return _this10.__logger.debug('>> __setDevices: Using audio output = ' + _this10.__currentDevices.speakerDeviceId);\n        }).catch(function (error) {\n          return _this10.__logger.error(error);\n        });\n      }\n    }\n\n    /**\n     * Setup the Pexip client event handlers\n     *\n     * @private\n     * @returns {undefined} This function has no return value.\n     */\n\n  }, {\n    key: '__setupPexRTCEventHandlers',\n    value: function __setupPexRTCEventHandlers() {\n      var _this11 = this;\n\n      // Note: Up until this method (or onError) has been called, we should presume\n      // the user is looking at the \"Request media permissions\" native browser dialog.\n      this.pexRTC.onSetup = function (stream) {\n        (0, _performance2.default)('pexip_make_call', true);\n        _this11.__allLocalMediaStreams.push(stream);\n\n        // Stop prompting user to accept browser permission dialog\n        _this11.__hideBrowserPermissionDialog();\n\n        var videoContainer = _this11.__videoConfig.attachPoints.videoContainer;\n        if (videoContainer) {\n          videoContainer.classList.add('awcore-call-active');\n        }\n        var buttonsContainer = _this11.__videoConfig.attachPoints.videoControlsContainer;\n        if (buttonsContainer) {\n          buttonsContainer.classList.add('awcore-call-active');\n        }\n        _this11.__localStream = stream;\n\n        var localVideoElement = _this11.__videoConfig.attachPoints.selfVideo;\n        if (localVideoElement) {\n          localVideoElement.poster = '';\n          localVideoElement.srcObject = stream;\n        }\n        _this11.metrics.isSignedIn = true;\n        // ensure that we wait for the video to load before we allow anyone to hide it\n        localVideoElement.addEventListener('loadeddata', function () {\n          _this11.indicateLocalVideoActive();\n        });\n\n        _this11.__syncConsoleMute();\n        _this11.pexRTC.connect(_this11.__videoConfig.visitConfig.visit.conferenceDetails.accessCode);\n      };\n\n      this.pexRTC.onConnect = function (stream) {\n        (0, _performance2.default)('pexip_local_connect', true);\n        _this11.__remoteStream = stream;\n        _this11.__retries = 0;\n        _this11.__retryTimeout = 15000;\n        _this11.__isConnected = true;\n\n        // if I'm a provider -> there better be a consumer, if I'm a consumer -> there better be a provider, if I'm a guest continue\n        if (_this11.__verifyAllParticipants()) {\n          (0, _performance2.default)('pexip_video_ready', true);\n          _this11.__spinnerManager.transition({ name: 'connect' });\n        }\n\n        _this11.__refreshInProgress = false;\n\n        // now that we have both parties connected, display controls\n        var _videoConfig$attachP = _this11.__videoConfig.attachPoints,\n            refreshButton = _videoConfig$attachP.refreshButton,\n            rootContainer = _videoConfig$attachP.rootContainer,\n            mainVideo = _videoConfig$attachP.mainVideo;\n\n\n        if (rootContainer) {\n          rootContainer.classList.add('awcore-call-connected');\n        }\n\n        if (refreshButton) {\n          refreshButton.classList.remove('awcore-disabled-button');\n        }\n\n        if (mainVideo) {\n          mainVideo.poster = '';\n          mainVideo.srcObject = stream;\n        }\n\n        if (_this11.__videoConfig.onRemoteStream) {\n          _this11.__videoConfig.onRemoteStream(stream);\n        }\n\n        var handler = _this11.__findHandler(_this11.__eventMapper.mapFromType('remoteParticipantJoinedEvent'));\n        if (handler) {\n          handler.handler();\n        }\n\n        // update the remote label to reflect the remote user being loaded into the conference\n        _this11.updateRemoteParticipantLabelsFromConfig();\n      };\n\n      this.pexRTC.onParticipantCreate = function (participant) {\n        _this11.__logger.debug('PexipClientEvent - Participant - Received Create event for vendor ID ' + participant.uuid);\n\n        // if visit doesn't know about the participant yet add it to unsynced list\n        if (!_this11.__videoConfig.visitConfig.visit.participantById(participant.uuid)) {\n          _this11.__unsyncedPexipParticipants.push(participant);\n        }\n        _this11.__pexipParticipants.push(participant);\n      };\n\n      this.pexRTC.onParticipantDelete = function (participant) {\n        _this11.__logger.debug('PexipClientEvent - Participant - Received Delete event for vendor ID ' + participant.uuid);\n\n        // hide the stream for the spinner if the participant that disconnected isn't a guest\n        var visit = _this11.__videoConfig.visitConfig.visit;\n        var video = _this11.__videoConfig.attachPoints.mainVideo;\n        if (visit.participantById(participant.uuid) && video) {\n          video.srcObject = null;\n        }\n\n        _this11.__spinnerManager.transition({ name: 'participant_deleted', uuid: participant.uuid, selfUuid: _this11.pexRTC.uuid });\n        _this11.__pexipParticipants = _this11.__pexipParticipants.filter(function (item) {\n          return item.uuid !== participant.uuid;\n        });\n      };\n\n      this.pexRTC.onLayoutUpdate = function (layout) {\n        _this11.__logger.debug('PexipClientEvent - Layout - Received updated event');\n        _this11.__videoConfig.visitConfig.visitPollingDelegate.pollForVisit(_this11.__videoConfig.visitConfig.visit).then(function (visit) {\n          _this11.__videoConfig.visitConfig.visit = visit;\n          var mainVideo = _this11.__videoConfig.attachPoints.mainVideo;\n\n          var numberOfParticipants = layout.participants ? layout.participants.length : 0;\n          mainVideo.classList.toggle('multiway', numberOfParticipants > 1);\n        });\n      };\n\n      this.pexRTC.onError = function (error) {\n        (0, _performance2.default)('pexip_error', true);\n        var hideBrowserPermissionDialog = true;\n        if (typeof error === 'string' && error.indexOf(_this11.pexRTC.trans.ERROR_USER_MEDIA) !== -1) {\n          // User has blocked the media permissions dialog\n          hideBrowserPermissionDialog = false;\n          _this11.__logger.error('User blocked browser permissions', error);\n        } else if (_this11.__retries < _this11.__maxRetries) {\n          _this11.__makeCallWithExponentialBackOff();\n          _this11.__retries += 1;\n          _this11.metrics.autoRetryCount += 1;\n        } else {\n          _this11.metrics.videoFailureReason = error.toString();\n        }\n\n        _this11.__videoConfig.attachPoints.refreshButton.classList.remove('awcore-disabled-button');\n\n        // If there was an error setting up Pexip, it's not the user's fault that we don't have cam/mic, so hide this dialog.\n        if (hideBrowserPermissionDialog) {\n          _this11.__hideBrowserPermissionDialog();\n        }\n\n        // relay a generic error up the stream to all the people:\n        // do this in all cases. error handling coming out of the SDK\n        // should treat errors as non-terminal, and just a mechanism to\n        // react as they would:\n        var visitConfig = _this11.__videoConfig.visitConfig;\n\n        var delegate = visitConfig.visitPollingDelegate;\n        delegate.onVisitError(visitConfig.visit, error);\n      };\n\n      this.pexRTC.onDisconnect = function () {\n        _this11.__isConnected = false;\n\n        var rootContainer = _this11.__videoConfig.attachPoints.rootContainer;\n\n        if (rootContainer) {\n          rootContainer.classList.remove('awcore-call-connected');\n        }\n\n        (0, _performance2.default)('pexip_disconnect', true);\n\n        // Wait until pexip has disconnected to stop spinner\n        if (_this11.__spinnerManager) {\n          _this11.__spinnerManager.stop();\n        }\n      };\n\n      this.pexRTC.onStageUpdate = function (stage) {\n        var firstStage = stage.find(function (p) {\n          return p.stage_index === 0;\n        });\n        _this11.__speakingParticipant = _this11.__pexipParticipants.find(function (p) {\n          return p.uuid === firstStage.participant_uuid;\n        });\n\n        if (_this11.__speakingParticipant) {\n          _this11.__logger.info('PexipClientEvent - Stage - Received entry event with vendor ID ' + _this11.__speakingParticipant.uuid + ' now on stage');\n          _this11.updateLabelForCurrentRemoteSpeaker();\n        }\n      };\n    }\n  }, {\n    key: 'updateLabelForCurrentRemoteSpeaker',\n    value: function updateLabelForCurrentRemoteSpeaker() {\n      // update if it's not the self user\n      if (this.__speakingParticipant && this.__speakingParticipant.uuid !== this.pexRTC.uuid) {\n        this.updateActiveSpeaker(this.__speakingParticipant.uuid, this.__speakingParticipant.display_name);\n      }\n    }\n\n    /**\n     * Creates a Pexip client and setup its event handlers\n     *\n     * @param {string} url The URL from which to load the Pexip JavaScript.\n     * @private\n     * @returns {Promise} Returns a promise which resolves to a PexRTC client or rejects with an error.\n     */\n\n  }, {\n    key: '__createPexipClient',\n    value: function __createPexipClient(url) {\n      var _this12 = this;\n\n      return new Promise(function (resolve, reject) {\n        load(url, function (err) {\n          if (err) {\n            reject(err);\n          } else {\n            _this12.pexRTC = new window.PexRTC(_this12.__videoConfig);\n            _this12.pexRTC.return_media_stream = true;\n            (0, _pubsub.publish)('/vendor/start', _this12.pexRTC);\n            _this12.pexRTC.ice_timeout = _this12.__videoConfig.systemConfiguration.iceWebTimeoutSeconds || 5;\n            resolve(_this12);\n          }\n        });\n      });\n    }\n  }, {\n    key: '__setPermissionTimeout',\n    value: function __setPermissionTimeout() {\n      var _this13 = this;\n\n      this.__noPermissionTimeout = setTimeout(function () {\n        _this13.__showBrowserPermissionDialog();\n        _this13.__noPermissionTimeout = null;\n      }, 4000);\n    }\n  }, {\n    key: '__showBrowserPermissionDialog',\n    value: function __showBrowserPermissionDialog() {\n      // to stop the IVR button from randomly disappearing we only want to toggle all these CSS classes\n      // once when this function is first called since it can be called multiple times on reload\n      if (!this.__isShowingPermissionDialog) {\n        this.__logger.debug('Showing dialog to request browser permissions');\n        this.__videoConfig.attachPoints.promptForBrowserPermissionsModal.classList.remove('awcore-hidden');\n        this.__videoConfig.videoConsoleContainer.classList.add('awcore-requesting-browser-permission');\n      }\n      this.__isShowingPermissionDialog = true;\n    }\n  }, {\n    key: '__hideBrowserPermissionDialog',\n    value: function __hideBrowserPermissionDialog() {\n      if (this.__noPermissionTimeout) {\n        clearTimeout(this.__noPermissionTimeout);\n        this.__noPermissionTimeout = null;\n      }\n      this.__videoConfig.attachPoints.promptForBrowserPermissionsModal.classList.add('awcore-hidden');\n      this.__videoConfig.videoConsoleContainer.classList.remove('awcore-requesting-browser-permission');\n      this.__isShowingPermissionDialog = false;\n    }\n\n    /**\n     * Performs Pexip disconnection when the console window unloads\n     *\n     * @private\n     * @returns {undefined} this function does not return a value.\n     */\n\n  }, {\n    key: '__OnunloadEventHandler',\n    value: function __OnunloadEventHandler() {\n      this.stop();\n    }\n\n    /** Make the actual pexip call\n     *\n     * @private\n     * @returns {undefined} this function does not return a value.\n     */\n\n  }, {\n    key: '__makeCall',\n    value: function __makeCall() {\n      // Do not make a call if we attempted to disconnect\n      if (this.__shouldRefresh) {\n        var visitConfig = this.__videoConfig.visitConfig;\n\n        this.__logger.info('PexipClientEvent - Request Token Request Sent');\n        var visit = visitConfig.visit;\n        var bandwidth = this.__determineBandwidth();\n        this.pexRTC.makeCall(visit.conferenceDetails.serviceURL, visit.conferenceDetails.roomId, this.__videoConfig.localParticipant.name, bandwidth);\n      }\n    }\n  }, {\n    key: '__determineBandwidth',\n    value: function __determineBandwidth() {\n      if (this.__videoConfig.systemConfiguration) {\n        var _videoConfig$systemC = this.__videoConfig.systemConfiguration,\n            maxMobileVideoBandwidthKbps = _videoConfig$systemC.maxMobileVideoBandwidthKbps,\n            maxWebVideoBandwidthKbps = _videoConfig$systemC.maxWebVideoBandwidthKbps;\n\n\n        if ((0, _mobile_browser_detector2.default)() && parseInt(maxMobileVideoBandwidthKbps, 10) > 0) {\n          return maxMobileVideoBandwidthKbps;\n        }\n        if (parseInt(maxWebVideoBandwidthKbps, 10) > 0) {\n          return maxWebVideoBandwidthKbps;\n        }\n      }\n      return '576';\n    }\n\n    /** Retry the call with exponential back off\n     *\n     * @private\n     * @returns {undefined} this function does not return a value.\n     */\n\n  }, {\n    key: '__makeCallWithExponentialBackOff',\n    value: function __makeCallWithExponentialBackOff() {\n      var _this14 = this;\n\n      (0, _performance2.default)('make-call-with-backoff', true);\n      // try the call after waiting the current timeout\n      this.__retryTimer = setTimeout(function () {\n        return _this14.__makeCall();\n      }, this.__retryTimeout);\n\n      // double the current timeout if we're not already at the maximum polling time\n      if (this.__retryTimeout < this.__maxRetryTimeout) {\n        this.__retryTimeout *= 2;\n      }\n    }\n\n    /**\n     * Stop any retries\n     *\n     * @returns {undefined} this function does not return a value.\n     */\n\n  }, {\n    key: 'stopRetries',\n    value: function stopRetries() {\n      clearTimeout(this.__retryTimer);\n    }\n\n    /**\n     * update the visit and check if participants changed\n     *\n     * @inheritdoc\n     */\n\n  }, {\n    key: 'updateConfigVisit',\n    value: function updateConfigVisit(visit) {\n      _get(AWCoreSDKPexipConsole.prototype.__proto__ || Object.getPrototypeOf(AWCoreSDKPexipConsole.prototype), 'updateConfigVisit', this).call(this, visit);\n      this.__reconcileUnsyncedParticipants();\n    }\n  }, {\n    key: '__reconcileUnsyncedParticipants',\n    value: function __reconcileUnsyncedParticipants() {\n      var _this15 = this;\n\n      this.__unsyncedPexipParticipants = this.__unsyncedPexipParticipants.filter(function (p) {\n        // if in visit, remove from unsynced list, fire off participant added transition in spinner\n        if (_this15.__videoConfig.visitConfig.visit.participantById(p.uuid)) {\n          // display the stream when a non-guest participant is present on the visit conference again\n          if (_this15.__videoConfig.attachPoints.mainVideo) {\n            _this15.__videoConfig.attachPoints.mainVideo.srcObject = _this15.__remoteStream;\n          }\n\n          // only fire this when we're actually in a connected state\n          if (_this15.__isConnected) {\n            (0, _performance2.default)('pexip_remote_connect', true);\n            _this15.__spinnerManager.transition({ name: 'participant_added', uuid: p.uuid, selfUuid: _this15.pexRTC.uuid });\n          }\n\n          _this15.updateLabelForCurrentRemoteSpeaker();\n          return false;\n        }\n        return true;\n      });\n    }\n  }, {\n    key: '__isParticipantTypeInPexip',\n    value: function __isParticipantTypeInPexip(participantType) {\n      var _this16 = this;\n\n      return [].concat(_toConsumableArray(this.__pexipParticipants), _toConsumableArray(this.__unsyncedPexipParticipants)).some(function (p) {\n        var participant = _this16.__videoConfig.visitConfig.visit.participantById(p.uuid);\n        return participant && participant.type && participant.type === participantType;\n      });\n    }\n  }, {\n    key: '__enterPhoneOnlyMode',\n    value: function __enterPhoneOnlyMode() {\n      _get(AWCoreSDKPexipConsole.prototype.__proto__ || Object.getPrototypeOf(AWCoreSDKPexipConsole.prototype), '__enterPhoneOnlyMode', this).call(this);\n      if (this.__spinnerManager) {\n        this.__spinnerManager.stop();\n      }\n      if (this.pexRTC) {\n        this.pexRTC.onDisconnect = null;\n        this.pexRTC.disconnect();\n      }\n      this.__videoConfig.attachPoints.phoneOnlyContainer.classList.remove('awcore-hidden');\n      this.__hideBrowserPermissionDialog();\n    }\n\n    /**\n     * Overload base refresh behavior to only update metrics and forcefully reload the page\n     *\n     * @returns {undefined} nothing\n     */\n\n  }, {\n    key: 'refresh',\n    value: function refresh() {\n      if (this.pexRTC) {\n        _get(AWCoreSDKPexipConsole.prototype.__proto__ || Object.getPrototypeOf(AWCoreSDKPexipConsole.prototype), 'refresh', this).call(this);\n      } else {\n        window.location.reload();\n      }\n    }\n\n    /**\n     * Final function to verify all necessary participants are in a room\n     *\n     * @private\n     * @returns {boolean} true if everyone present, false otherwise\n     */\n\n  }, {\n    key: '__verifyAllParticipants',\n    value: function __verifyAllParticipants() {\n      return this.__videoConfig.localParticipant.isConsumer && this.__isParticipantTypeInPexip(_awcoresdk_video_participant_type2.default.PROVIDER) || this.__videoConfig.localParticipant.isProvider && this.__isParticipantTypeInPexip(_awcoresdk_video_participant_type2.default.CONSUMER) || this.__videoConfig.localParticipant.isGuest;\n    }\n  }, {\n    key: 'isInFullScreenMode',\n    get: function get() {\n      return this.isFullScreen;\n    }\n  }, {\n    key: 'participantVendorId',\n    get: function get() {\n      return this.pexRTC.uuid;\n    }\n  }]);\n\n  return AWCoreSDKPexipConsole;\n}(_internal_video_console2.default);\n\nexports.default = AWCoreSDKPexipConsole;","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _awcoresdk_base_event_mapper = require('../awcoresdk_base_event_mapper');\n\nvar _awcoresdk_base_event_mapper2 = _interopRequireDefault(_awcoresdk_base_event_mapper);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /*!\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * American Well Core Web SDK\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Copyright (c) 2018 American Well.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * All rights reserved.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * It is illegal to use, reproduce or distribute\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * any part of this Intellectual Property without\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * prior written authorization from American Well.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\n\nvar AWCoreSDKPexipEventMapper = function (_AWCoreSDKBaseEventMa) {\n  _inherits(AWCoreSDKPexipEventMapper, _AWCoreSDKBaseEventMa);\n\n  function AWCoreSDKPexipEventMapper() {\n    _classCallCheck(this, AWCoreSDKPexipEventMapper);\n\n    return _possibleConstructorReturn(this, (AWCoreSDKPexipEventMapper.__proto__ || Object.getPrototypeOf(AWCoreSDKPexipEventMapper)).apply(this, arguments));\n  }\n\n  _createClass(AWCoreSDKPexipEventMapper, [{\n    key: 'mapFromType',\n    value: function mapFromType(eventType) {\n      if (typeof eventType === 'string') {\n        return eventType;\n      }\n      throw Error('IllegalArgument. \"eventType\" must be a string');\n    }\n  }]);\n\n  return AWCoreSDKPexipEventMapper;\n}(_awcoresdk_base_event_mapper2.default);\n\nexports.default = AWCoreSDKPexipEventMapper;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/*!\r\n * American Well Core Web SDK\r\n *\r\n * Copyright © 2020 American Well.\r\n * All rights reserved.\r\n *\r\n * It is illegal to use, reproduce or distribute\r\n * any part of this Intellectual Property without\r\n * prior written authorization from American Well.\r\n */\n\n/**\r\n * Comprehensive regex check of the userAgent to determine if on a mobile browser or not\r\n *\r\n * @returns {boolean} true if the browser is a browser running on a mobile device.\r\n */\n\n// eslint-disable-next-line no-useless-escape\nvar absurdPrefixRegex = /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\\-(n|u)|c55\\/|capi|ccwa|cdm\\-|cell|chtm|cldc|cmd\\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\\-s|devi|dica|dmob|do(c|p)o|ds(12|\\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\\-|_)|g1 u|g560|gene|gf\\-5|g\\-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd\\-(m|p|t)|hei\\-|hi(pt|ta)|hp( i|ip)|hs\\-c|ht(c(\\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\\-(20|go|ma)|i230|iac( |\\-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc\\-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|\\-[a-w])|libw|lynx|m1\\-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m\\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\\-2|po(ck|rt|se)|prox|psio|pt\\-g|qa\\-a|qc(07|12|21|32|60|\\-[2-7]|i\\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\\-|oo|p\\-)|sdk\\/|se(c(\\-|0|1)|47|mc|nd|ri)|sgh\\-|shar|sie(\\-|m)|sk\\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\\-|v\\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\\-|tdg\\-|tel(i|m)|tim\\-|t\\-mo|to(pl|sh)|ts(70|m\\-|m3|m5)|tx\\-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\\-|your|zeto|zte\\-/i;\n// eslint-disable-next-line no-useless-escape\nvar absurdMobileRegex = /(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows ce|xda|xiino|android|ipad|playbook|silk/i;\n\nvar isMobileBrowser = function isMobileBrowser() {\n  var userAgent = navigator.userAgent || navigator.vendor || window.opera;\n  return absurdPrefixRegex.test(userAgent.substr(0, 4)) || absurdMobileRegex.test(userAgent);\n};\n\nexports.default = isMobileBrowser;","\nmodule.exports = function load (src, opts, cb) {\n  var head = document.head || document.getElementsByTagName('head')[0]\n  var script = document.createElement('script')\n\n  if (typeof opts === 'function') {\n    cb = opts\n    opts = {}\n  }\n\n  opts = opts || {}\n  cb = cb || function() {}\n\n  script.type = opts.type || 'text/javascript'\n  script.charset = opts.charset || 'utf8';\n  script.async = 'async' in opts ? !!opts.async : true\n  script.src = src\n\n  if (opts.attrs) {\n    setAttributes(script, opts.attrs)\n  }\n\n  if (opts.text) {\n    script.text = '' + opts.text\n  }\n\n  var onend = 'onload' in script ? stdOnEnd : ieOnEnd\n  onend(script, cb)\n\n  // some good legacy browsers (firefox) fail the 'in' detection above\n  // so as a fallback we always set onload\n  // old IE will ignore this and new IE will set onload\n  if (!script.onload) {\n    stdOnEnd(script, cb);\n  }\n\n  head.appendChild(script)\n}\n\nfunction setAttributes(script, attrs) {\n  for (var attr in attrs) {\n    script.setAttribute(attr, attrs[attr]);\n  }\n}\n\nfunction stdOnEnd (script, cb) {\n  script.onload = function () {\n    this.onerror = this.onload = null\n    cb(null, script)\n  }\n  script.onerror = function () {\n    // this.onload = null here is necessary\n    // because even IE9 works not like others\n    this.onerror = this.onload = null\n    cb(new Error('Failed to load ' + this.src), script)\n  }\n}\n\nfunction ieOnEnd (script, cb) {\n  script.onreadystatechange = function () {\n    if (this.readyState != 'complete' && this.readyState != 'loaded') return\n    this.onreadystatechange = null\n    cb(null, script) // there is no way to catch loading errors in IE8\n  }\n}\n","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _detectBrowser = require('detect-browser');\n\nvar _plugin = require('../../plugin');\n\nvar _plugin2 = _interopRequireDefault(_plugin);\n\nvar _awcoresdk_vendor = require('../../../awcoresdk_vendor');\n\nvar _awcoresdk_vendor2 = _interopRequireDefault(_awcoresdk_vendor);\n\nvar _awcoresdk_video_participant_type = require('../../../awcoresdk_video_participant_type');\n\nvar _awcoresdk_video_participant_type2 = _interopRequireDefault(_awcoresdk_video_participant_type);\n\nvar _is_electron = require('../../../util/is_electron');\n\nvar _is_electron2 = _interopRequireDefault(_is_electron);\n\nvar _template = require('./template.html');\n\nvar _template2 = _interopRequireDefault(_template);\n\nrequire('./index.scss');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n/**\n * Registers a \"screen sharing\" button on the Video Console,\n * and manages sharing state and interaction.\n */\nvar Screenshare = function (_Plugin) {\n  _inherits(Screenshare, _Plugin);\n\n  function Screenshare() {\n    _classCallCheck(this, Screenshare);\n\n    return _possibleConstructorReturn(this, (Screenshare.__proto__ || Object.getPrototypeOf(Screenshare)).apply(this, arguments));\n  }\n\n  _createClass(Screenshare, [{\n    key: 'init',\n    value: function init() {\n      this.showScreenShareButton = false;\n      this.disableScreenShareButton = false;\n\n      console.log('*** screenSharingBrowserFilteringDisabled: ', this.console.__videoConfig.systemConfiguration.screenSharingBrowserFilteringDisabled);\n      // Browser Filtering is enabled\n      if (!this.console.__videoConfig.systemConfiguration.screenSharingBrowserFilteringDisabled) {\n        // FIXME: This should be configurable in the future\n        var __supportedBrowsers = {\n          CHROME: 78,\n          FIREFOX: 70,\n          EDGE: 79,\n          SAFARI: 12\n        };\n\n        console.log('*** Supported Browsers: ', Object.keys(__supportedBrowsers));\n\n        var participants = [];\n        if (this.console.currentVisit && this.console.currentVisit.conferenceDetails && this.console.currentVisit.conferenceDetails.participants && this.console.currentVisit.conferenceDetails.participants.length > 0) {\n          // There are conference participants on the visit\n          participants = this.console.currentVisit.conferenceDetails.participants;\n          console.log('*** Conference Participants: ', participants.length);\n\n          // get provider and consumer participants and determine if they are using supported browsers.\n          // Provider logic\n          var providerCanShare = false;\n          var provider = participants.find(function (participant) {\n            return participant.role === 'PROVIDER';\n          });\n          console.log('*** Provider User Agent: ', provider.userAgent);\n          var providerParsedUserAgent = (0, _detectBrowser.parseUserAgent)(provider.userAgent);\n          if (providerParsedUserAgent) {\n            console.log('*** Provider User Agent Parsed: ', providerParsedUserAgent);\n            providerCanShare = this.__browserCanShare(providerParsedUserAgent, provider.userAgent, __supportedBrowsers);\n          }\n          console.log('*** Provider Browser Can Share: ', providerCanShare);\n          var providerCanReceive = this.__browserCanReceive(providerParsedUserAgent, provider.userAgent, __supportedBrowsers);\n          console.log('*** Provider Can Receive Screen Share: ', providerCanReceive);\n\n          // consumer logic\n          var consumerCanShare = false;\n          var consumer = participants.find(function (participant) {\n            return participant.role === 'MEMBER' || participant.role === 'CONSUMER';\n          });\n          console.log('*** Consumer User Agent: ', consumer.userAgent);\n\n          var consumerParsedUserAgent = (0, _detectBrowser.parseUserAgent)(consumer.userAgent);\n          if (consumerParsedUserAgent) {\n            console.log('*** Consumer User Agent Parsed: ', consumerParsedUserAgent);\n            consumerCanShare = this.__browserCanShare(consumerParsedUserAgent, consumer.userAgent, __supportedBrowsers);\n          }\n          console.log('*** Consumer Can Share Screen: ', consumerCanShare);\n          var consumerCanReceive = this.__browserCanReceive(consumerParsedUserAgent, consumer.userAgent, __supportedBrowsers);\n          console.log('**** Consumer Can receive screen share: ', consumerCanReceive);\n\n          // apply the logics to current vs remote contexts\n          var canRemoteReceive = false;\n          if (this.console.__videoConfig.participantType === _awcoresdk_video_participant_type2.default.PROVIDER) {\n            // provider context, so consumer is remote\n            canRemoteReceive = consumerCanShare || consumerCanReceive;\n            this.__setScreenShareDisplayState(providerCanShare, canRemoteReceive, _awcoresdk_video_participant_type2.default.PROVIDER);\n          } else if (this.console.__videoConfig.participantType === _awcoresdk_video_participant_type2.default.CONSUMER) {\n            // consumer context, so provider is remote\n            canRemoteReceive = providerCanShare || providerCanReceive;\n            this.__setScreenShareDisplayState(consumerCanShare, canRemoteReceive, _awcoresdk_video_participant_type2.default.CONSUMER);\n          } else {\n            // GUEST\n            // Guests will never see a screenshare button.\n            console.log('*** Guests will never see a screenshare button');\n            this.showScreenShareButton = false;\n          }\n        } else {\n          console.log('*** NO Conference Participants!! ');\n        }\n      } else {\n        // Browser filtering has been disabled, so show the share screen button, except to guests\n        this.showScreenShareButton = this.console.__videoConfig.participantType !== _awcoresdk_video_participant_type2.default.GUEST;\n      }\n\n      if (this.showScreenShareButton) {\n        this.__sharingState = false;\n        this.attachTo('screenshareButton');\n      } else {\n        // hide the share screen button\n        this.refs.button.classList.add('awcore-screenshare-button-hidden');\n        console.log('*** Hiding the screenshare button!');\n      }\n    }\n  }, {\n    key: '__setScreenShareDisplayState',\n    value: function __setScreenShareDisplayState(currentCanShare, remoteCanReceiveShare, currentType) {\n      // Show current participant button, if current can share and remote can, at least, receive. Also if current is not in\n      // a mobile browser (mobile browsers can receive, but not share).\n      // display a disabled share button, if current participant can share, but remote cannot receive.\n      this.showScreenShareButton = currentCanShare;\n\n      // If remote participant cannot receive a screen share disable the\n      // share button, and add enable the tooltip.\n      if (this.showScreenShareButton && !remoteCanReceiveShare) {\n        this.refs.button.setAttribute('title', this.messages.screenshare_disabled);\n        this.refs.button.classList.add('awcore-screenshare-button-disabled');\n        this.disableScreenShareButton = true;\n        console.log('***  ' + (currentType === _awcoresdk_video_participant_type2.default.PROVIDER ? 'Provider' : 'Consumer') + ' Share Button disabled and tooltip added!');\n      }\n    }\n\n    /**\n     * Either the browser can share, i.e., it's fully supported, or is electron, or a mobile app (no user Agent), or\n     * it's one of the two supported mobile browsers that can receive, but not share:\n     * <ul>\n     * <li>Chrome on Android</li>\n     * <li>Safari on iOS</li>\n     * </ul>\n     *\n     * @private\n     * @param {Object} parsedUserAgent an object that contains info extracted from ua string\n     * @param {string} userAgentString the User Agent header string value passed\n     * @param {string[]} supportedBrowsers the array of supported browsers that can share a screen\n     * @return {boolean} True if the browser can share or receive a screen share, false otherwise\n     */\n\n  }, {\n    key: '__browserCanReceive',\n    value: function __browserCanReceive(parsedUserAgent, userAgentString, supportedBrowsers) {\n      return !parsedUserAgent || this.__isSupportedBrowserForSharing(parsedUserAgent, supportedBrowsers) || this.__matchesElectron(parsedUserAgent, userAgentString) || this.__isSupportedMobileBrowser(parsedUserAgent);\n    }\n\n    /**\n     * Either the browser can share, i.e., it's fully supported, but not if a mobile browser\n     *\n     * @private\n     * @param {Object} parsedUserAgent an object that contains info extracted from ua string\n     * @param {string} userAgentString the User Agent header string value passed\n     * @param {string[]} supportedBrowsers the array of supported browsers that can share a screen\n     * @return {boolean} True if the browser can share or receive a screen share, false otherwise\n     */\n\n  }, {\n    key: '__browserCanShare',\n    value: function __browserCanShare(parsedUserAgent, userAgentString, supportedBrowsers) {\n      return (this.__matchesElectron(parsedUserAgent, userAgentString) || this.__isSupportedBrowserForSharing(parsedUserAgent, supportedBrowsers)) && !this.__isSupportedMobileBrowser(parsedUserAgent);\n    }\n  }, {\n    key: '__isSupportedBrowserForSharing',\n    value: function __isSupportedBrowserForSharing(parsedUserAgent, supportedBrowsers) {\n      return Object.keys(supportedBrowsers).filter(function (item) {\n        return typeof item === 'string' && parsedUserAgent.name.toUpperCase().indexOf(item) > -1 && supportedBrowsers[item] <= parseFloat(parsedUserAgent.version);\n      }).length > 0;\n    }\n\n    // Hack!! The UA string for a remote participant using electron can be (normally is) that of the underlying\n    // browser that initiated the session. However, if on webRTC and using IE, then must be on electron\n    // so try:\n    // 1. to see if electron from parsed ua or\n    // 2. Check if IE on windows\n\n  }, {\n    key: '__matchesElectron',\n    value: function __matchesElectron(parsedUserAgent, userAgentString) {\n      return (0, _is_electron2.default)(userAgentString) || parsedUserAgent.name.toLowerCase().indexOf('ie') > -1 && /windows\\s[0-9]{1,2}/.test(parsedUserAgent.os.toLowerCase()) > -1;\n    }\n\n    // check if chrome on Android or safari on iOS.\n\n  }, {\n    key: '__isSupportedMobileBrowser',\n    value: function __isSupportedMobileBrowser(parsedUserAgent) {\n      return this.__isSafariOniOS(parsedUserAgent) || this.__isChromeOnAndroid(parsedUserAgent);\n    }\n\n    // the parse can sometimes identify Safari as 'ios', so it would miss our filter\n\n  }, {\n    key: '__isSafariOniOS',\n    value: function __isSafariOniOS(parsedUserAgent) {\n      return parsedUserAgent.os.toLowerCase() === 'ios' && ['ios', 'safari'].indexOf(parsedUserAgent.name.toLowerCase()) > -1;\n    }\n\n    // check if chrome on Android\n\n  }, {\n    key: '__isChromeOnAndroid',\n    value: function __isChromeOnAndroid(parsedUserAgent) {\n      return parsedUserAgent.os.toLowerCase() === 'android os' && ['chrome', 'android'].indexOf(parsedUserAgent.name.toLowerCase()) > -1;\n    }\n  }, {\n    key: 'start',\n    value: function start() {\n      this.subscribe('/vendor/start', this.__registerVendor.bind(this));\n      if (this.console.internalVideoConsole.pexRTC) {\n        this.__registerVendor(this.console.internalVideoConsole.pexRTC);\n        this.__registerElectronScreenSharingListener();\n      }\n    }\n  }, {\n    key: '__registerVendor',\n    value: function __registerVendor(pexRTC) {\n      pexRTC.onPresentation = this.onPresentation.bind(this);\n      pexRTC.onPresentationConnected = this.onPresentationConnected.bind(this);\n      pexRTC.onPresentationDisconnected = this.onPresentationDisconnected.bind(this);\n      pexRTC.onScreenshareConnected = this.onScreenshareConnected.bind(this);\n      pexRTC.onScreenshareStopped = this.onScreenshareStopped.bind(this);\n      this.pexRTC = pexRTC;\n    }\n  }, {\n    key: '__getCurrentUserTypeString',\n    value: function __getCurrentUserTypeString() {\n      if (this.console.__videoConfig.participantType === _awcoresdk_video_participant_type2.default.PROVIDER) {\n        return 'Provider';\n      }if (this.console.__videoConfig.participantType === _awcoresdk_video_participant_type2.default.CONSUMER) {\n        return 'Consumer';\n      }\n      return 'Guest';\n    }\n\n    // This intercepts the Pexip screen sharing message and\n    // hands off to the custom screen picker in Electron\n\n  }, {\n    key: '__registerElectronScreenSharingListener',\n    value: function __registerElectronScreenSharingListener() {\n      var _this2 = this;\n\n      if (this.pexRTC.is_electron) {\n        window.addEventListener('message', function (event) {\n          if (event.data.type === 'pexGetScreen') {\n            event.data.type = 'pexGetScreenPending';\n            window.postMessage(event.data, event.origin);\n            window.api.captureDesktop(_this2.console.config.locale).then(function (desktopSourceId) {\n              if (desktopSourceId !== -1) {\n                event.data.type = 'pexGetScreenDone';\n                event.data.sourceId = desktopSourceId;\n                window.postMessage(event.data, event.origin);\n              } else {\n                _this2.toggle();\n              }\n            });\n          }\n        }, false);\n      }\n    }\n  }, {\n    key: 'handleClick',\n    value: function handleClick(event) {\n      if (!this.disableScreenShareButton) {\n        this.logger.info(event);\n        event.preventDefault();\n        this.toggle();\n      }\n    }\n  }, {\n    key: 'conferenceActive',\n    value: function conferenceActive() {\n      this.refs.button.classList.remove('awcore-screenshare-button-hidden');\n    }\n  }, {\n    key: 'toggle',\n    value: function toggle() {\n      console.log('**** Toggle Screen Sharing ****');\n      this.__sharingState = !this.__sharingState;\n      this.refs.button.classList.toggle('awcore-disabled', !this.__sharingState);\n      if (this.__sharingState) {\n        this.startSharing();\n      } else {\n        this.stopSharing();\n      }\n    }\n  }, {\n    key: 'startSharing',\n    value: function startSharing() {\n      console.log('**** Start Screen Sharing ****');\n      this.logger.info(this.__getCurrentUserTypeString() + ' started sharing screen');\n      if (this.pexRTC) {\n        this.pexRTC.present('screen');\n      }\n    }\n  }, {\n    key: 'stopSharing',\n    value: function stopSharing() {\n      console.log('**** Stop Screen Sharing ****');\n      // Guests can't share so this should only resolve to Provider or Consumer.\n      this.logger.info(this.__getCurrentUserTypeString() + ' stopped sharing screen');\n      if (this.pexRTC) {\n        this.pexRTC.present(null);\n        this.pexRTC.stopPresentation();\n      }\n    }\n\n    /* functions needing bound to internalVideoConsole.pexRTC */\n\n  }, {\n    key: 'onPresentation',\n    value: function onPresentation(setting, presenter) {\n      if (setting) {\n        console.log('**** A presentation has started with: ' + presenter);\n        this.pexRTC.getPresentation();\n      } else {\n        console.log('**** A presentation has ended with: ' + presenter);\n        this.pexRTC.stopPresentation();\n      }\n    }\n  }, {\n    key: 'onPresentationConnected',\n    value: function onPresentationConnected(stream) {\n      var adapter = this.console.internalVideoConsole;\n\n\n      console.log('**** Presentation connected: ', stream);\n      var video = this.console.__videoConfig.attachPoints.mainVideo;\n      console.log('**** About to attach to remote element: ', video);\n\n      var audioTrack = adapter.__remoteStream.getAudioTracks()[0];\n      console.log('**** Adding audio track to screen sharing feed: ', audioTrack);\n      stream.addTrack(audioTrack);\n\n      if (video) {\n        video.poster = '';\n        video.srcObject = stream;\n      }\n\n      if (this.console.__videoConfig.onRemoteStream) {\n        this.console.__videoConfig.onRemoteStream(stream);\n      }\n    }\n  }, {\n    key: 'onPresentationDisconnected',\n    value: function onPresentationDisconnected(reason) {\n      var adapter = this.console.internalVideoConsole;\n\n\n      console.log('**** Presentation disconnected: ', reason);\n      var video = this.console.__videoConfig.attachPoints.mainVideo;\n      console.log('**** About to reset remote element to main video feed: ', video);\n      if (video) {\n        video.poster = '';\n        video.srcObject = adapter.__remoteStream;\n      }\n\n      if (this.console.__videoConfig.onRemoteStream) {\n        this.console.__videoConfig.onRemoteStream(adapter.__remoteStream);\n      }\n    }\n  }, {\n    key: 'onScreenshareConnected',\n    value: function onScreenshareConnected(stream) {\n      console.log('**** Screenshare connected: ', stream);\n      var localVideoElement = this.console.__videoConfig.attachPoints.selfVideo;\n      console.log('**** About set local element to presentation feed: ', localVideoElement);\n      localVideoElement.poster = '';\n      if ('srcObject' in localVideoElement) {\n        try {\n          localVideoElement.srcObject = stream;\n        } catch (err) {\n          this.logger.error('Failed to set stream on self-view', err);\n        }\n      }\n    }\n  }, {\n    key: 'onScreenshareStopped',\n    value: function onScreenshareStopped(reason) {\n      console.log('**** Screenshare stopped: ', reason);\n      this.__sharingState = false;\n      this.refs.button.classList.toggle('awcore-disabled', !this.__sharingState);\n\n      var adapter = this.console.internalVideoConsole;\n\n      var localVideoElement = this.console.__videoConfig.attachPoints.selfVideo;\n      console.log('**** About to reset local element to local video feed: ', localVideoElement);\n      if (localVideoElement) {\n        localVideoElement.poster = '';\n        localVideoElement.srcObject = adapter.__localStream;\n      }\n    }\n  }, {\n    key: 'defaults',\n    get: function get() {\n      return { template: _template2.default };\n    }\n\n    // This feature must be enabled at system level and only supports Pexip\n\n  }], [{\n    key: 'predicate',\n    value: function predicate(videoConsole) {\n      console.log('*** Config: ', videoConsole.__videoConfig);\n      console.log('*** Visit: ', videoConsole.currentVisit);\n      return videoConsole.currentVisit.assignedProvider ? videoConsole.currentVisit.assignedProvider.practice.screenSharingEnabled && videoConsole.__videoConfig.vendor === _awcoresdk_vendor2.default.PEXIP : videoConsole.__videoConfig.participantType === _awcoresdk_video_participant_type2.default.GUEST;\n    }\n  }]);\n\n  return Screenshare;\n}(_plugin2.default);\n\nexports.default = Screenshare;\n\n\nScreenshare.prototype.name = 'Screenshare';","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); /*!\nmerican Well Core Web SDK\nnopyright © 2019 American Well.\nll rights reserved.\nnt is illegal to use, reproduce or distribute\nany part of this Intellectual Property without\nprior written authorization from American Well.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      */\n\n// import place from './util/place';\n\n\nvar _attach = require('../util/attach');\n\nvar _attach2 = _interopRequireDefault(_attach);\n\nvar _attach_event = require('../util/attach_event');\n\nvar _attach_event2 = _interopRequireDefault(_attach_event);\n\nvar _replace = require('../util/replace');\n\nvar _replace2 = _interopRequireDefault(_replace);\n\nvar _pubsub = require('../util/pubsub');\n\nvar _event = require('../util/event');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n// almost too small to extract into a module?\nvar createDom = function createDom(html) {\n  return document.createRange().createContextualFragment(html);\n};\n\n/**\n * A base `AWCoreSDKVideoConsole` plugin to inherit from.\n *\n * @since 4.1.0\n * @property {Object} defaults default values for things anticipating overrides\n * @property {String} name the display-name of this plugin\n * @property {AWCoreSDKVideoConsole} console the attached VideoConsole (external)\n * @property {Object} config the result of `defaults`, overridden by constructor property bag.\n * @property {Object} messages the i18n keys passed to the VideoConsole\n */\n\nvar Plugin = function () {\n  _createClass(Plugin, [{\n    key: 'defaults',\n    get: function get() {\n      return {};\n    }\n  }]);\n\n  function Plugin(parent, opts) {\n    _classCallCheck(this, Plugin);\n\n    // we attach ourselves to a videoConsole instance\n    this.console = parent;\n\n    // if a logger thing exists on the parent, use it. `attachLogger` presumably already satisfied,\n    // at this point we're either jumping on _that_ or just dumping to console. We lose per-plugin\n    // filter logging, but I'm ok with `this.log` being a shorthand for `this.logger.debug('why!?!')`\n    // as a fallback\n    this.logger = parent && parent.__logger || console;\n\n    // populate our config from defaults and params\n    this.config = Object.assign({}, this.defaults, opts);\n\n    // FIXME: these messages should be on `console`, but we also want them available here\n    this.messages = this.console.internalVideoConsole.messages;\n\n    // pubsub and connect need to safely assume they can push to these, for later cleanup:\n    this.__topics = [];\n    this.__connections = [];\n\n    // check for template, et al\n    this.__buildDom();\n\n    // signal we are about to be post-constructor\n    this.init(parent, opts);\n\n    // if our parent init _doesn't_ have a state assigned, build one by default.\n    // check session storage for recent.\n    if (!this.state) {\n      this.__loadState();\n    }\n  }\n\n  /**\n   * A lifecycle method called immediately after instantiation, ensuring your `console` and `config` are ready,\n   * provided as a hook prior to `start` being called.\n   *\n   * @param {AWCoreSDKVideoConsole} console the Console this plugin is attached to\n   * @param {Object=} opts the options passed originally to our `constructor` function. Unless necessary, prefer `this.config` at this point.\n   * @returns {undefined} nothing\n   */\n  // eslint-disable-next-line no-unused-vars\n\n\n  _createClass(Plugin, [{\n    key: 'init',\n    value: function init(console, opts) {}\n    // this function intentionally left blank\n\n\n    /**\n     * Plugin lifecycle method, called for each registered Plugin when `start` called on the\n     * owning Video Console. Expectation is that anything a Plugin creates/connects/subscribes\n     * doesn't happen _until_ start, and is torn down in a companion `stop` function\n     *\n     * @returns {undefined} nothing\n     */\n\n  }, {\n    key: 'start',\n    value: function start() {}\n    // this function intentionally left blank\n\n\n    /**\n     * Plugin lifecycle method, called for each registered Plugin when `stop` called on the\n     * owning Video Console. Expectation is that anything built up in `start` is cleanly\n     * torn down inside `stop`, such that the Console and plugins can repeatedly be restarted.\n     *\n     * @returns {undefined} nothing\n     */\n\n  }, {\n    key: 'stop',\n    value: function stop() {}\n    // this function intentionally left blank\n\n\n    /**\n     * Private implementation of `start`, ensuring internal control over the lifecycle,\n     * leaving `start` as a stub function that can _optionally_ be overridden\n     *\n     * @private\n     * @returns {undefined} nothing\n     */\n\n  }, {\n    key: '__start',\n    value: function __start() {\n      this.start();\n    }\n\n    /**\n     * Internal version of stop, doing global type cleanups for helper functions\n     *\n     * @private\n     * @returns {undefined} nothing\n     */\n\n  }, {\n    key: '__stop',\n    value: function __stop() {\n      this.__topics.forEach(_pubsub.unsubscribe);\n      this.__topics = [];\n      this.__connections.forEach(_event.disconnect);\n      this.__connections = [];\n      this.stop();\n    }\n\n    /**\n     * If provided a `template` value (either as a default, or externally), build up a DOM representation\n     * from that template. First, allow simple string substitution, reading from our instance as the object.\n     * Then, populate `this.refs` with pointers to the individually referenced nodes.\n     * Then, scan for any event bindings, and connect them.\n     * `this.dom` will be available on the instance, representing the completed template.\n     *\n     * @private\n     * @returns {undefined} nothing\n     */\n\n  }, {\n    key: '__buildDom',\n    value: function __buildDom() {\n      if (this.config.template) {\n        var html = (0, _replace2.default)(this.config.template, this);\n        this.dom = createDom(html);\n        this.refs = (0, _attach2.default)(this.dom);\n        (0, _attach_event2.default)(this.dom, this);\n        /*\n        // debating this API:\n        if (this.config.placeAt) {\n          this.placeAt(this.config.placeAt);\n        }\n        */\n      }\n    }\n\n    /**\n     * Allow plugins to register public API interface on the parent console directly\n     *\n     * @param {string} property the name of a property to hijack on the console\n     * @param {Object} definition a property definition to be passed through to `Object.defineProperty`, defining the property on the console.\n     * @returns {undefined} nothing\n     */\n\n  }, {\n    key: 'define',\n    value: function define(property, definition) {\n      Object.defineProperty(this.console, property, definition);\n    }\n\n    // event-ish-type things\n    //\n    // TODO: should these topics be prefixed by some kind of unique identifier from\n    // the video console? eg publish('/toggle/mute', {}) actually publishes on `${consoleID}/toggle/mute`,\n    // and `this.subscribe(/toggle/mute, () => {})` actually listens on `${consoleID}/toggle/mute`?\n\n    /**\n     * Monitor some event, and fire a callback when even occurs. Callback will be called with positional\n     * arguments provided to the initial publish\n     *\n     * @param {string} topic the event name to monitor\n     * @param {Function} callback callback to execute when `topic` receives a publication\n     * @returns {Object} a handle to the subscription, can be used to later `unsubscribe` on the fly\n     */\n\n  }, {\n    key: 'subscribe',\n    value: function subscribe(topic, callback) {\n      var handle = (0, _pubsub.subscribe)(topic, callback);\n      this.__topics.push(handle);\n      return handle;\n    }\n\n    /**\n     * Emit/publish some arbitrary data on an event name, triggering any subscriptions on that event.\n     *\n     * @param {string} topic the event name to publish data on\n     * @param  {...any} data positional arguments that will be passed to any potential subscribers\n     * @returns {undefined} nothing\n     */\n\n  }, {\n    key: 'publish',\n    value: function publish(topic) {\n      for (var _len = arguments.length, data = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        data[_key - 1] = arguments[_key];\n      }\n\n      _pubsub.publish.apply(undefined, [topic].concat(data));\n    }\n\n    /**\n     * Stop monitoring some event, utilizing the handle created when monitoring started\n     *\n     * @param {Object} handle the returned handle from `subscribe` calls\n     * @returns {undefined} nothing\n     */\n\n  }, {\n    key: 'unsubscribe',\n    value: function unsubscribe(handle) {\n      (0, _pubsub.unsubscribe)(handle);\n    }\n\n    /**\n     * Connect some function to an element event, scoped to ourselves.\n     * eg:\n     * ```\n     * const handle = this.connect(this.refs.tempNode, 'onclick', this.tempClick);\n     * this.disconnect(handle);\n     * ```\n     *\n     * @param {HTMLElement} el a dom node to connect an event to\n     * @param {string} event the name of the event to connect to\n     * @param {Function} callback function to be executed when the event fires\n     * @returns {Array} a handle to be utilized with `disconnect`\n     */\n\n  }, {\n    key: 'connect',\n    value: function connect(el, event, callback) {\n      var handle = (0, _event.connect)(el, event, callback.bind(this));\n      this.__connections.push(handle);\n      return handle;\n    }\n\n    /**\n     * Disconnect an event from a node\n     *\n     * @param {Array} handle a connection handle used to disconnect an event\n     * @returns {undefined} nothing\n     */\n\n  }, {\n    key: 'disconnect',\n    value: function disconnect(handle) {\n      (0, _event.disconnect)(handle);\n    }\n\n    /**\n     * Quick and Dirty development logger, dumping messages prefixed with the `name` associated with this Plugin instance\n     *\n     * @param  {...any} args stuff to dump to logging. Any number of anything of any type.\n     * @returns {undefined} nothing\n     */\n\n  }, {\n    key: 'log',\n    value: function log() {\n      var _console;\n\n      for (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        args[_key2] = arguments[_key2];\n      }\n\n      // eslint-disable-next-line no-console\n      (_console = console).log.apply(_console, ['{' + this.name + '}'].concat(args));\n    }\n\n    /**\n     * Replace some console attachPoint with our rendering\n     *\n     * @param {string} string the name of the attachPoint to replace\n     * @returns {undefined} nothing\n     */\n\n  }, {\n    key: 'attachTo',\n    value: function attachTo(string) {\n      var node = this.console.__videoConfig.attachPoints[string];\n      if (this.dom && node) {\n        node.parentNode.replaceChild(this.dom, node);\n        this.console.__videoConfig.attachPoints[string] = this.dom;\n      }\n    }\n\n    /*\n    // place ourselves somewhere in the DOM\n    placeAt(target, orientation) {\n      if (this.dom) {\n        const targetNode = this.console.__videoConfig.attachPoints[target];\n        place(this.dom, targetNode, orientation);\n        this.console.__videoConfig.attachPoints[target] = this.dom;\n      }\n    }\n    */\n\n    /**\n     * Modify (or create) an instance-level state object, which persists to sessionStorage\n     *\n     * @param {Object} obj a property bag of items to mix in over existing state\n     * @returns {undefined} nothing.\n     */\n\n  }, {\n    key: 'setState',\n    value: function setState(obj) {\n      if (!this.state) {\n        this.state = {};\n      }\n      Object.assign(this.state, obj);\n      sessionStorage.setItem(this._id, JSON.stringify(this.state));\n    }\n\n    /**\n     * Clear our state object out of the sessionStorage state. The console will trigger\n     * this across all plugins as it sees fit, though we can internally call it if we\n     * know of cases where we want to reset our own state.\n     *\n     * @private\n     * @returns {undefined} nothing\n     */\n\n  }, {\n    key: '__clearState',\n    value: function __clearState() {\n      sessionStorage.removeItem(this._id);\n    }\n\n    /**\n     * Load our state object from sessionStorage\n     *\n     * @private\n     * @returns {undefined} nothing\n     */\n\n  }, {\n    key: '__loadState',\n    value: function __loadState() {\n      var json = sessionStorage.getItem(this._id);\n      var state = void 0;\n      try {\n        state = JSON.parse(json);\n      } catch (e) {\n        /* snarf() */\n      }\n      this.state = state || {};\n    }\n  }, {\n    key: '_id',\n    get: function get() {\n      return 'AW_' + this.name + '_state';\n    }\n\n    // not a blank line\n\n  }]);\n\n  return Plugin;\n}();\n\nPlugin.prototype.name = 'BasePlugin';\n\nexports.default = Plugin;","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/*!\n * American Well Core Web SDK\n *\n * Copyright (c) 2019 American Well.\n * All rights reserved.\n *\n * It is illegal to use, reproduce or distribute\n * any part of this Intellectual Property without\n * prior written authorization from American Well.\n */\n\nvar defaults = {\n  selector: '[data-aw-event]',\n  key: function key(node) {\n    return node.getAttribute('data-aw-event');\n  }\n};\n\n/**\n * Scan dom nodes for special decoration, and attach an event name to a contextual function.\n *\n * eg: <button data-aw-event='onclick: handleClick'> will attach the button's `onclick` event to\n * a passed context's `handleClick` method\n *\n * Only one event name can exist per node, though multiple events can be defined in a single\n * attribute by separating the pairs with a comma, eg:\n *\n * ```\n * <p data-aw-event='onclick: handler, onmouseover: onMouse'>Hello, World</p>\n * ```\n *\n * @param {HTMLElement} root the root dom node to scan\n * @param {Object} context the instance to use for attaching events\n * @param {Object} [opts] an object to mix over default paramaters\n * @param {string} [opts.selector] the selector to use to find elements, defaults to `data-aw-event`\n * @param {Function} [opts.key] a function that is passed a matching node element to return the value used in event-attaching\n * @returns {undefined} nothing\n */\nvar attach = function attach(root, context, opts) {\n  var config = Object.assign({}, defaults, opts);\n  Array.prototype.slice.call(root.querySelectorAll(config.selector)).forEach(function (node) {\n    var attr = config.key(node);\n    attr.split(',').forEach(function (match) {\n      var parts = match.split(':');\n      var event = parts[0].trim();\n      var handler = parts[1].trim();\n      node[event] = context[handler].bind(context);\n    });\n  });\n};\n\nexports.default = attach;","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/*!\n * American Well Core Web SDK\n *\n * Copyright (c) 2020 American Well.\n * All rights reserved.\n *\n * It is illegal to use, reproduce or distribute\n * any part of this Intellectual Property without\n * prior written authorization from American Well.\n */\n\n/**\n * Analyzes the User Agent to determine if the current browser is an electron browser\n *\n * @param {string} [ua] The user agent to be used. Will default to navigator.userAgent if none is passed.\n * @returns {boolean} True if the browser is an electron browser, false otherwise.\n */\nvar isElectron = function isElectron(ua) {\n  var userAgent = navigator.userAgent;\n  if (ua) {\n    userAgent = ua;\n  }\n  return userAgent.toLowerCase().indexOf(' electron/') > -1;\n};\n\nexports.default = isElectron;","module.exports = \"<div class='awcore-screenshare-button awcore-control-button awcore-disabled awcore-screenshare-button-hidden'\\n  data-aw-attach='button'\\n  data-aw-event='onclick: handleClick'\\n  >\\n  <span>{ messages.screenshare }</span>\\n</div>\"","var arrayLikeToArray = require(\"./arrayLikeToArray\");\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}\n\nmodule.exports = _arrayWithoutHoles;","function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}\n\nmodule.exports = _iterableToArray;","function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nmodule.exports = _nonIterableSpread;","module.exports = \"<div class=\\\"awcore-tmc-lite-container\\\">\\n  <label>\\n      <span>{ messages.select_camera }</span>\\n      <select class=\\\"awcore-tmc-lite-cameras\\\"></select>\\n  </label>\\n  <div class=\\\"awcore-tmc-lite-camera-error-box awcore-hidden\\\">\\n      <div class=\\\"awcore-tmc-lite-error-header\\\"></div>\\n      <div class=\\\"awcore-tmc-lite-error-sub\\\"></div>\\n      <button class=\\\"awcore-tmc-lite-button\\\">{ messages.tmc_lite_retry }</button>\\n  </div>\\n  <div class=\\\"awcore-tmc-lite-video-container\\\">\\n    <video class=\\\"awcore-tmc-lite-video\\\" autoplay playsinline></video>\\n  </div>\\n  <div>\\n    { messages.tmc_lite_camera_description }\\n  </div>\\n  <hr/>\\n  <label class=\\\"awcore-tmc-select-microphone\\\">\\n      <span>{ messages.select_microphone }</span>\\n      <select class=\\\"awcore-tmc-lite-microphones\\\"></select>\\n  </label>\\n  <div class=\\\"awcore-tmc-microphone-meter\\\">\\n      <div class=\\\"awcore-tmc-microphone-meter-bar\\\"></div>\\n      <div class=\\\"awcore-tmc-microphone-meter-bar\\\"></div>\\n      <div class=\\\"awcore-tmc-microphone-meter-bar\\\"></div>\\n      <div class=\\\"awcore-tmc-microphone-meter-bar\\\"></div>\\n      <div class=\\\"awcore-tmc-microphone-meter-bar\\\"></div>\\n      <div class=\\\"awcore-tmc-microphone-meter-bar\\\"></div>\\n      <div class=\\\"awcore-tmc-microphone-meter-bar\\\"></div>\\n  </div>\\n  <div class=\\\"awcore-tmc-microphone-meter-description\\\">\\n      { messages.tmc_lite_microphone_meter_description }\\n  </div>\\n  <div class=\\\"awcore-tmc-lite-microphone-error-box awcore-hidden\\\">\\n      <div class=\\\"awcore-tmc-lite-error-header\\\"></div>\\n      <div class=\\\"awcore-tmc-lite-error-sub\\\"></div>\\n      <button class=\\\"awcore-tmc-lite-button\\\">{ messages.tmc_lite_retry }</button>\\n  </div>\\n</div>\\n\"","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\nvar _Base = require('./Base');\n\nvar _Base2 = _interopRequireDefault(_Base);\n\nvar _camera = require('./camera.html');\n\nvar _camera2 = _interopRequireDefault(_camera);\n\nvar _replace = require('../../util/replace');\n\nvar _replace2 = _interopRequireDefault(_replace);\n\nvar _media_devices = require('../../util/media_devices');\n\nvar _media_devices2 = _interopRequireDefault(_media_devices);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /*!\r\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * American Well Core Web SDK\r\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *\r\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Copyright © 2019 American Well.\r\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * All rights reserved.\r\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *\r\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * It is illegal to use, reproduce or distribute\r\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * any part of this Intellectual Property without\r\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * prior written authorization from American Well.\r\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\n/**\r\n * The CAMERA step of the Test My Computer wizard\r\n */\nvar CameraStep = function (_Step) {\n  _inherits(CameraStep, _Step);\n\n  function CameraStep() {\n    _classCallCheck(this, CameraStep);\n\n    return _possibleConstructorReturn(this, (CameraStep.__proto__ || Object.getPrototypeOf(CameraStep)).apply(this, arguments));\n  }\n\n  _createClass(CameraStep, [{\n    key: 'finishStep',\n    value: function finishStep(passed) {\n      var _this2 = this;\n\n      if (this.__wizard.cameras.length) {\n        this.__wizard.testMyComputerResult.cameraDeviceName = this.__wizard.cameras.find(function (s) {\n          return s.deviceId === _this2.__cameraSelect.value;\n        }).label;\n        if (passed) {\n          this.__storeDevice('camera', this.__cameraSelect.value, this.__wizard.testMyComputerResult.cameraDeviceName);\n        }\n      }\n      this.__wizard.testMyComputerResult.cameraPassed = passed;\n    }\n  }, {\n    key: 'hasPassed',\n    value: function hasPassed() {\n      return this.__wizard.testMyComputerResult.cameraPassed;\n    }\n  }, {\n    key: 'setupDOMEventHandlers',\n    value: function setupDOMEventHandlers() {\n      var _this3 = this;\n\n      _get(CameraStep.prototype.__proto__ || Object.getPrototypeOf(CameraStep.prototype), 'setupDOMEventHandlers', this).call(this);\n      this.__cameraSelect = this.__wizard.drawerDOMNode.querySelector('.awcore-tmc-camera-select');\n\n      this.__wizard.cameras.forEach(function (camera) {\n        var option = document.createElement('option');\n        option.value = camera.deviceId;\n        option.text = camera.label;\n        _this3.__cameraSelect.appendChild(option);\n      });\n\n      this.__cameraSelect.onchange = function (event) {\n        var deviceId = event.target.value;\n\n        _media_devices2.default.getUserMedia({\n          video: { deviceId: deviceId }\n        }).then(function (stream) {\n          _this3.__wizard.videoStream = stream;\n          _this3.__wizard.videoDOMNode.srcObject = stream;\n        });\n      };\n    }\n  }, {\n    key: 'getDrawerHTMLTemplate',\n    value: function getDrawerHTMLTemplate() {\n      // Select a Camera\n      return (0, _replace2.default)(_camera2.default, this);\n    }\n  }, {\n    key: 'getTitle',\n    value: function getTitle() {\n      return this.messages.step_camera_title;\n    }\n  }, {\n    key: 'getStepTooltip',\n    value: function getStepTooltip() {\n      return this.messages.test_camera_tooltip.toUpperCase();\n    }\n  }]);\n\n  return CameraStep;\n}(_Base2.default);\n\nexports.default = CameraStep;","module.exports = \"<div class='awcore-drawer-content awcore-drawer-content-get-started'>\\n  <div class='awcore-tmc-step-test'>\\n    <div class='awcore-tcm-select-container'>\\n      <label>\\n        <span>{ messages.select_camera }</span>\\n        <select class='awcore-tmc-camera-select'></select>\\n      </label>\\n    </div>\\n    <h3>{ messages.video_prompt }</h3>\\n    <div class='awcore-drawer-multi-button-container'>\\n      <button class='awcore-tmc-step-fail-button'>{ messages.no }</button>\\n      <button class='awcore-tmc-step-pass-button'>{ messages.yes }</button>\\n    </div>\\n  </div>\\n  <div class=\\\"awcore-tmc-step-failed\\\">\\n    <h3>{ messages.camera_failed }</h3>\\n    <p>{ messages.camera_failed_help }</p>\\n    <div class='awcore-tmc-troubleshoot'>\\n      <h4>{ messages.troubleshoot_tips }</h4>\\n      <ul>\\n        <li>{ messages.camera_troubleshoot_0 }</li>\\n        <li>{ messages.camera_troubleshoot_1 }</li>\\n        <li>{ messages.camera_troubleshoot_2 }</li>\\n        <li>{ messages.camera_troubleshoot_3 }</li>\\n        <li>{ messages.camera_troubleshoot_4 }</li>\\n        <li>{ messages.camera_troubleshoot_5 }</li>\\n      </ul>\\n    </div>\\n    <div class='awcore-drawer-multi-button-container'>\\n      <button class='awcore-tmc-step-retry-button'>{ messages.step_retry }</button>\\n      <button class='awcore-tmc-step-skip-button'>{ messages.step_skip }</button>\\n    </div>\\n  </div>\\n</div>\"","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\nvar _Base = require('./Base');\n\nvar _Base2 = _interopRequireDefault(_Base);\n\nvar _microphone = require('./microphone.html');\n\nvar _microphone2 = _interopRequireDefault(_microphone);\n\nvar _replace = require('../../util/replace');\n\nvar _replace2 = _interopRequireDefault(_replace);\n\nvar _media_devices = require('../../util/media_devices');\n\nvar _media_devices2 = _interopRequireDefault(_media_devices);\n\nvar _monitor_stream = require('../monitor_stream');\n\nvar _monitor_stream2 = _interopRequireDefault(_monitor_stream);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /*!\r\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * American Well Core Web SDK\r\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *\r\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Copyright © 2019 American Well.\r\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * All rights reserved.\r\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *\r\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * It is illegal to use, reproduce or distribute\r\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * any part of this Intellectual Property without\r\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * prior written authorization from American Well.\r\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\n/**\r\n * The microphone step of the Test My Computer wizard\r\n */\nvar MicrophoneStep = function (_BaseStep) {\n  _inherits(MicrophoneStep, _BaseStep);\n\n  function MicrophoneStep() {\n    _classCallCheck(this, MicrophoneStep);\n\n    return _possibleConstructorReturn(this, (MicrophoneStep.__proto__ || Object.getPrototypeOf(MicrophoneStep)).apply(this, arguments));\n  }\n\n  _createClass(MicrophoneStep, [{\n    key: 'finishStep',\n    value: function finishStep(passed) {\n      var _this2 = this;\n\n      if (this.__wizard.microphones.length) {\n        this.__wizard.testMyComputerResult.microphoneDeviceName = this.__wizard.microphones.find(function (s) {\n          return s.deviceId === _this2.__microphoneSelect.value;\n        }).label;\n        if (passed) {\n          this.__storeDevice('microphone', this.__microphoneSelect.value, this.__wizard.testMyComputerResult.microphoneDeviceName);\n        }\n      }\n      this.__wizard.testMyComputerResult.microphonePassed = passed;\n      if (this.__wizard.microphoneStream) {\n        this.__wizard.microphoneStream.getTracks().forEach(function (t) {\n          return t.stop();\n        });\n      }\n      if (this.__audioContext) {\n        this.__audioContext.close();\n      }\n    }\n  }, {\n    key: 'hasPassed',\n    value: function hasPassed() {\n      return this.__wizard.testMyComputerResult.microphonePassed;\n    }\n  }, {\n    key: 'setupDOMEventHandlers',\n    value: function setupDOMEventHandlers() {\n      var _this3 = this;\n\n      _get(MicrophoneStep.prototype.__proto__ || Object.getPrototypeOf(MicrophoneStep.prototype), 'setupDOMEventHandlers', this).call(this);\n      this.__microphoneSelect = this.__wizard.drawerDOMNode.querySelector('.awcore-tmc-microphone-select');\n      this.__microphoneMeter = this.__wizard.drawerDOMNode.querySelector('.awcore-tmc-microphone-meter');\n\n      this.__wizard.microphones.forEach(function (microphone) {\n        var option = document.createElement('option');\n        option.value = microphone.deviceId;\n        option.text = microphone.label;\n        _this3.__microphoneSelect.appendChild(option);\n      });\n\n      if (this.__microphoneSelect.value) {\n        this.__getMicrophoneStream(this.__microphoneSelect.value);\n      }\n\n      this.__microphoneSelect.onchange = function (event) {\n        var microphoneId = event.target.value;\n\n        _this3.__getMicrophoneStream(microphoneId);\n      };\n    }\n  }, {\n    key: '__getMicrophoneStream',\n    value: function __getMicrophoneStream(deviceId) {\n      var _this4 = this;\n\n      _media_devices2.default.getUserMedia({\n        audio: { deviceId: deviceId }\n      }).then(function (stream) {\n        if (_this4.__audioContext) {\n          // kill any existing audioContext - this returns a promise, not sure we care.\n          _this4.__audioContext.close();\n        }\n\n        _this4.__audioContext = (0, _monitor_stream2.default)(stream, _this4.__colorMeterBars.bind(_this4));\n        _this4.__wizard.microphoneStream = stream;\n      });\n    }\n  }, {\n    key: '__colorMeterBars',\n    value: function __colorMeterBars(volume) {\n      var bars = Array.from(this.__microphoneMeter.querySelectorAll('.awcore-tmc-microphone-meter-bar'));\n\n      // determine how many of the total number of bars are actually lit\n      var numberLit = Math.round(volume * 0.07);\n      var litBars = bars.slice(0, numberLit);\n\n      // set class appropriately for lit and unlit bars\n      for (var i = 0; i < bars.length; i++) {\n        if (i < litBars.length) {\n          bars[i].classList.add('awcore-tmc-microphone-meter-bar-lit');\n        } else {\n          bars[i].classList.remove('awcore-tmc-microphone-meter-bar-lit');\n        }\n      }\n    }\n  }, {\n    key: 'getDrawerHTMLTemplate',\n    value: function getDrawerHTMLTemplate() {\n      return (0, _replace2.default)(_microphone2.default, this);\n    }\n  }, {\n    key: 'getTitle',\n    value: function getTitle() {\n      return this.messages.step_microphone_title;\n    }\n  }, {\n    key: 'getProgressTrackerTitle',\n    value: function getProgressTrackerTitle() {\n      return this.messages.mic;\n    }\n  }, {\n    key: 'getStepTooltip',\n    value: function getStepTooltip() {\n      return this.messages.test_microphone_tooltip.toUpperCase();\n    }\n  }]);\n\n  return MicrophoneStep;\n}(_Base2.default);\n\nexports.default = MicrophoneStep;","module.exports = \"<div class='awcore-drawer-content awcore-drawer-content-microphone'>\\n  <div class=\\\"awcore-tmc-step-test\\\">\\n    <div class='awcore-tcm-select-container'>\\n      <label>\\n        <span>{ messages.select_microphone }</span>\\n        <select class=\\\"awcore-tmc-microphone-select\\\"></select>\\n      </label>\\n    </div>\\n    <h3>{ messages.step_microphone_heading }</h3>\\n    <div class=\\\"awcore-tmc-microphone-meter\\\">\\n      <div class=\\\"awcore-tmc-microphone-meter-bar\\\"></div>\\n      <div class=\\\"awcore-tmc-microphone-meter-bar\\\"></div>\\n      <div class=\\\"awcore-tmc-microphone-meter-bar\\\"></div>\\n      <div class=\\\"awcore-tmc-microphone-meter-bar\\\"></div>\\n      <div class=\\\"awcore-tmc-microphone-meter-bar\\\"></div>\\n      <div class=\\\"awcore-tmc-microphone-meter-bar\\\"></div>\\n      <div class=\\\"awcore-tmc-microphone-meter-bar\\\"></div>\\n    </div>\\n    <div class='awcore-drawer-multi-button-container'>\\n      <button class='awcore-tmc-step-fail-button'>{ messages.no }</button>\\n      <button class='awcore-tmc-step-pass-button'>{ messages.yes }</button>\\n    </div>\\n  </div>\\n  <div class=\\\"awcore-tmc-step-failed\\\">\\n    <h3>{ messages.step_microphone_fail }</h3>\\n    <p>{ messages.step_microphone_details }</p>\\n    <div class='awcore-tmc-troubleshoot'>\\n      <h4>{ messages.troubleshoot_tips }</h4>\\n      <ul>\\n        <li>{ messages.microphone_troubleshoot_0 }</li>\\n        <li>{ messages.microphone_troubleshoot_1 }</li>\\n        <li>{ messages.microphone_troubleshoot_2 }</li>\\n        <li>{ messages.microphone_troubleshoot_3 }</li>\\n        <li>{ messages.microphone_troubleshoot_4 }</li>\\n        <li>{ messages.microphone_troubleshoot_5 }</li>\\n      </ul>\\n    </div>\\n    <div class='awcore-drawer-multi-button-container'>\\n      <button class='awcore-tmc-step-retry-button'>{ messages.step_retry }</button>\\n      <button class='awcore-tmc-step-skip-button'>{ messages.step_skip }</button>\\n    </div>\\n  </div>\\n</div>\"","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\nvar _Base = require('./Base');\n\nvar _Base2 = _interopRequireDefault(_Base);\n\nvar _speaker = require('./speaker.html');\n\nvar _speaker2 = _interopRequireDefault(_speaker);\n\nvar _replace = require('../../util/replace');\n\nvar _replace2 = _interopRequireDefault(_replace);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /*!\r\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * American Well Core Web SDK\r\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *\r\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Copyright © 2019 American Well.\r\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * All rights reserved.\r\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *\r\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * It is illegal to use, reproduce or distribute\r\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * any part of this Intellectual Property without\r\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * prior written authorization from American Well.\r\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\n/**\r\n * The speaker step of the Test My Computer wizard\r\n */\nvar SpeakerStep = function (_BaseStep) {\n  _inherits(SpeakerStep, _BaseStep);\n\n  function SpeakerStep(props) {\n    _classCallCheck(this, SpeakerStep);\n\n    // MDN says i can declare these as props inline, but syntax errors galore? halp.\n    var _this = _possibleConstructorReturn(this, (SpeakerStep.__proto__ || Object.getPrototypeOf(SpeakerStep)).call(this, props));\n\n    _this.audio_test_url = _this.__wizard.systemConfiguration.audioFileUriForTestMyComputerTest;\n    return _this;\n  }\n\n  _createClass(SpeakerStep, [{\n    key: 'finishStep',\n    value: function finishStep(passed) {\n      var _this2 = this;\n\n      if (this.__wizard.speakers.length) {\n        this.__wizard.testMyComputerResult.speakerDeviceName = this.__wizard.speakers.find(function (s) {\n          return s.deviceId === _this2.__speakerSelect.value;\n        }).label;\n        if (passed) {\n          this.__storeDevice('speaker', this.__speakerSelect.value, this.__wizard.testMyComputerResult.speakerDeviceName);\n        }\n      }\n      this.__wizard.testMyComputerResult.speakerPassed = passed;\n      this.__audioDOMNode.pause();\n    }\n  }, {\n    key: 'hasPassed',\n    value: function hasPassed() {\n      return this.__wizard.testMyComputerResult.speakerPassed;\n    }\n  }, {\n    key: 'setupDOMEventHandlers',\n    value: function setupDOMEventHandlers() {\n      var _this3 = this;\n\n      _get(SpeakerStep.prototype.__proto__ || Object.getPrototypeOf(SpeakerStep.prototype), 'setupDOMEventHandlers', this).call(this);\n      this.__speakerSelect = this.__wizard.drawerDOMNode.querySelector('.awcore-tmc-speaker-select');\n      this.__audioDOMNode = this.__wizard.drawerDOMNode.querySelector('.awcore-tmc-audio-sample');\n      this.__audioControls = this.__wizard.drawerDOMNode.querySelector('.awcore-tmc-audio-controls');\n      this.__playPause = this.__audioControls.querySelector('button');\n      this.__audioProgress = this.__audioControls.querySelector('progress');\n\n      // Speakers, unlike cameras and microphones, seem to be treated differently and are not\n      // always guaranteed to be returned from a call to mediaDevices.enumerateDevices().\n      // This is heavily browser dependent and as of right now Safari and FireFox do not\n      // have any 'audiooutput' device types in the list of devices that come back from enumerateDevices.\n      // We display a fallback option of 'Default' in this case.\n      if (this.__wizard.speakers.length > 0) {\n        this.__wizard.speakers.forEach(function (speaker) {\n          var option = document.createElement('option');\n          option.value = speaker.deviceId;\n          option.text = speaker.label;\n          _this3.__speakerSelect.appendChild(option);\n        });\n      } else {\n        var option = document.createElement('option');\n        option.text = this.messages.settings_default;\n        this.__speakerSelect.appendChild(option);\n      }\n\n      this.__speakerSelect.onchange = function (event) {\n        var speakerId = event.target.value;\n        _this3.__audioDOMNode.setSinkId(speakerId);\n      };\n\n      this.__playPause.onclick = function () {\n        if (_this3.__audioDOMNode.paused || _this3.__audioDOMNode.ended) {\n          _this3.__audioDOMNode.play();\n          _this3.__playPause.classList.add('awcore-audio-stopped');\n        } else {\n          _this3.__audioDOMNode.pause();\n          _this3.__audioDOMNode.currentTime = 0;\n          _this3.__playPause.classList.remove('awcore-audio-stopped');\n        }\n      };\n\n      // set the max of progress bar to slightly less than duration of track for smoother animation\n      this.__audioDOMNode.onloadedmetadata = function () {\n        _this3.__audioProgress.setAttribute('max', _this3.__audioDOMNode.duration * 0.9);\n      };\n\n      // update the progress bar\n      this.__audioDOMNode.ontimeupdate = function () {\n        _this3.__audioProgress.value = _this3.__audioDOMNode.currentTime;\n\n        // if we're at end of the audio, change button from start tos top\n        if (_this3.__audioDOMNode.currentTime === _this3.__audioDOMNode.duration) {\n          _this3.__playPause.classList.remove('awcore-audio-stopped');\n        }\n      };\n    }\n  }, {\n    key: 'getDrawerHTMLTemplate',\n    value: function getDrawerHTMLTemplate() {\n      return (0, _replace2.default)(_speaker2.default, this);\n    }\n  }, {\n    key: 'getTitle',\n    value: function getTitle() {\n      return this.messages.step_speaker_title;\n    }\n  }, {\n    key: 'getStepTooltip',\n    value: function getStepTooltip() {\n      return this.messages.test_speaker_tooltip.toUpperCase();\n    }\n  }]);\n\n  return SpeakerStep;\n}(_Base2.default);\n\nexports.default = SpeakerStep;","module.exports = \"<div class='awcore-drawer-content awcore-drawer-content-microphone'>\\r\\n  <div class=\\\"awcore-tmc-step-test\\\">\\r\\n    <div class='awcore-tcm-select-container'>\\r\\n      <label>\\r\\n        <span>{ messages.select_speaker }</span>\\r\\n        <select class=\\\"awcore-tmc-speaker-select\\\"></select>\\r\\n      </label>\\r\\n    </div>\\r\\n    <h3>{ messages.step_speaker_intro }</h3>\\r\\n    <audio src=\\\"{ audio_test_url }\\\" class=\\\"awcore-tmc-audio-sample\\\"></audio>\\r\\n    <div dir='ltr' class=\\\"awcore-tmc-audio-controls\\\">\\r\\n      <button type=\\\"button\\\"><span></span></button>\\r\\n      <progress value=\\\"0\\\" min=\\\"0\\\"></progress>\\r\\n    </div>\\r\\n    <div class='awcore-drawer-multi-button-container'>\\r\\n      <button class='awcore-tmc-step-fail-button'>{ messages.no }</button>\\r\\n      <button class='awcore-tmc-step-pass-button'>{ messages.yes }</button>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"awcore-tmc-step-failed\\\">\\r\\n    <h3>{ messages.step_speaker_failed }</h3>\\r\\n    <p>{ messages.step_speaker_failed_help }</p>\\r\\n    <div class='awcore-tmc-troubleshoot'>\\r\\n      <h4>{ messages.troubleshoot_tips }</h4>\\r\\n      <ul>\\r\\n        <li>{ messages.speaker_troubleshoot_0 }</li>\\r\\n        <li>{ messages.speaker_troubleshoot_1 }</li>\\r\\n        <li>{ messages.speaker_troubleshoot_2 }</li>\\r\\n        <li>{ messages.speaker_troubleshoot_3 }</li>\\r\\n      </ul>\\r\\n    </div>\\r\\n    <div class='awcore-drawer-multi-button-container'>\\r\\n      <button class='awcore-tmc-step-retry-button'>{ messages.step_retry }</button>\\r\\n      <button class='awcore-tmc-step-skip-button'>{ messages.step_skip }</button>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\"","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\nvar _Base = require('./Base');\n\nvar _Base2 = _interopRequireDefault(_Base);\n\nvar _internet = require('./internet.html');\n\nvar _internet2 = _interopRequireDefault(_internet);\n\nvar _empty = require('../../util/empty');\n\nvar _empty2 = _interopRequireDefault(_empty);\n\nvar _replace = require('../../util/replace');\n\nvar _replace2 = _interopRequireDefault(_replace);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /*!\r\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * American Well Core Web SDK\r\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *\r\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Copyright © 2019 American Well.\r\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * All rights reserved.\r\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *\r\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * It is illegal to use, reproduce or distribute\r\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * any part of this Intellectual Property without\r\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * prior written authorization from American Well.\r\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\n/**\r\n * The INTERNET step of the Test My Computer wizard\r\n */\nvar InternetStep = function (_BaseStep) {\n  _inherits(InternetStep, _BaseStep);\n\n  function InternetStep(wizard) {\n    _classCallCheck(this, InternetStep);\n\n    var _this = _possibleConstructorReturn(this, (InternetStep.__proto__ || Object.getPrototypeOf(InternetStep)).call(this, wizard));\n\n    _this.__speedTestConfig = _this.__wizard.speedTestConfig;\n    return _this;\n  }\n\n  _createClass(InternetStep, [{\n    key: 'drawDOM',\n    value: function drawDOM() {\n      _get(InternetStep.prototype.__proto__ || Object.getPrototypeOf(InternetStep.prototype), 'drawDOM', this).call(this);\n\n      // set up speed test iframe\n      var iframeDOMNode = document.createElement('iframe');\n      iframeDOMNode.src = this.__speedTestConfig.url;\n      this.__wizard.internetDOMNode.appendChild(iframeDOMNode);\n\n      // grab step test and result dom nodes for future use\n      this.__stepInternetTestDOMNode = this.__wizard.drawerDOMNode.querySelector('.awcore-tmc-step-test');\n      this.__stepInternetResultsSuccessDOMNode = this.__wizard.drawerDOMNode.querySelector('.awcore-tmc-step-results-success');\n      this.__stepInternetResultsFailDOMNode = this.__wizard.drawerDOMNode.querySelector('.awcore-tmc-step-results-fail');\n\n      // hide the video and show the speed test\n      this.__wizard.showInternetContent();\n    }\n  }, {\n    key: 'teardownDOM',\n    value: function teardownDOM() {\n      _get(InternetStep.prototype.__proto__ || Object.getPrototypeOf(InternetStep.prototype), 'teardownDOM', this).call(this);\n\n      // hide the speed test and show the video\n      this.__wizard.showVideoContent();\n\n      // remove the speed test iframe\n      (0, _empty2.default)(this.__wizard.internetDOMNode);\n    }\n  }, {\n    key: 'setupDOMEventHandlers',\n    value: function setupDOMEventHandlers() {\n      var _this2 = this;\n\n      // this intentionally doesn't call super(), the speed test flow differs\n      // from the other steps and most of the buttons aren't reusable for this step\n      var passButton = this.__wizard.drawerDOMNode.querySelector('.awcore-tmc-step-pass-button');\n      if (passButton) {\n        passButton.onclick = function (event) {\n          event.preventDefault();\n          _this2.finishStep(true);\n          _this2.__wizard.stepDone();\n        };\n      }\n\n      // speed test can be skipped, and it does not fail the overall TMC flow\n      var skipButton = this.__wizard.drawerDOMNode.querySelector('.awcore-tmc-step-skip-button');\n      if (skipButton) {\n        skipButton.onclick = function (event) {\n          event.preventDefault();\n          _this2.__wizard.stepDone();\n        };\n      }\n\n      // side note: failed speed test will fail the overall TMC flow,\n      // but appointment readiness will still be marked as ready\n      var failButton = this.__wizard.drawerDOMNode.querySelector('.awcore-tmc-step-fail-button');\n      if (failButton) {\n        failButton.onclick = function (event) {\n          event.preventDefault();\n          _this2.finishStep(false);\n          _this2.__wizard.stepDone();\n          _this2.__wizard.drawerDOMNode.classList.add('awcore-tmc-failed');\n        };\n      }\n\n      // listen for the completion of the speed test\n      window.addEventListener('message', this.speedTestComplete.bind(this));\n    }\n  }, {\n    key: 'speedTestComplete',\n    value: function speedTestComplete(event) {\n      if (this.__speedTestConfig.url.startsWith(event.origin)) {\n        var data = event.data;\n        this.__internetPassed = this.evaluateSpeedTestResult(event.data);\n\n        // store the speed test results on the shared TCM results\n        var tmcResult = this.__wizard.testMyComputerResult;\n        tmcResult.downloadSpeedMbps = data.download;\n        tmcResult.uploadSpeedMbps = data.upload;\n        tmcResult.latencyMs = data.latency.minimum;\n        tmcResult.jitter = data.latency.jitter;\n\n        // switch to the completed part of the step\n        this.__stepInternetTestDOMNode.classList.add('awcore-hidden');\n        if (this.__internetPassed) {\n          this.__stepInternetResultsSuccessDOMNode.classList.remove('awcore-hidden');\n          this.__stepInternetResultsFailDOMNode.classList.add('awcore-hidden');\n        } else {\n          this.__stepInternetResultsSuccessDOMNode.classList.add('awcore-hidden');\n          this.__stepInternetResultsFailDOMNode.classList.remove('awcore-hidden');\n        }\n      }\n    }\n  }, {\n    key: 'evaluateSpeedTestResult',\n    value: function evaluateSpeedTestResult(data) {\n      var config = this.__speedTestConfig;\n      return data.download > config.minimumDownload && data.upload > config.minimumUpload && data.latency.minimum < config.minimumLatency;\n    }\n  }, {\n    key: 'hasPassed',\n    value: function hasPassed() {\n      return this.__internetPassed;\n    }\n  }, {\n    key: 'getDrawerHTMLTemplate',\n    value: function getDrawerHTMLTemplate() {\n      return (0, _replace2.default)(_internet2.default, this);\n    }\n  }, {\n    key: 'getTitle',\n    value: function getTitle() {\n      return this.messages.step_internet_title;\n    }\n  }, {\n    key: 'getStepTooltip',\n    value: function getStepTooltip() {\n      return this.messages.test_internet_tooltip.toUpperCase();\n    }\n  }]);\n\n  return InternetStep;\n}(_Base2.default);\n\nexports.default = InternetStep;","module.exports = \"<div class='awcore-drawer-content awcore-drawer-content-internet'>\\n  <div class='awcore-tmc-step-test'>\\n    <h3>{ messages.step_internet_heading }</h3>\\n    <div class='awcore-drawer-single-button-container'>\\n      <button class='awcore-tmc-step-skip-button awcore-drawer-content-ghost-button'>{ messages.step_internet_skip }</button>\\n    </div>\\n  </div>\\n  <div class='awcore-tmc-step-results-success awcore-hidden'>\\n    <h3>{ messages.step_internet_pass }</h3>\\n    <div class='awcore-drawer-single-button-container'>\\n      <button class='awcore-tmc-step-pass-button'>{ messages.continue }</button>\\n    </div>\\n  </div>\\n  <div class='awcore-tmc-step-results-fail awcore-hidden'>\\n    <h3>{ messages.step_internet_fail }</h3>\\n    <p>{ messages.step_internet_fail_help }</p>\\n    <div class='awcore-tmc-troubleshoot'>\\n      <h4>{ messages.troubleshoot_tips }</h4>\\n      <ul>\\n        <li>{ messages.internet_troubleshoot_0 }</li>\\n        <li>{ messages.internet_troubleshoot_1 }</li>\\n        <li>{ messages.internet_troubleshoot_2 }</li>\\n      </ul>\\n    </div>\\n    <div class='awcore-drawer-single-button-container'>\\n      <button class='awcore-tmc-step-fail-button'>{ messages.continue }</button>\\n    </div>\\n  </div>\\n</div>\"","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\nvar _Base = require('./Base');\n\nvar _Base2 = _interopRequireDefault(_Base);\n\nvar _get_started = require('./get_started.html');\n\nvar _get_started2 = _interopRequireDefault(_get_started);\n\nvar _replace = require('../../util/replace');\n\nvar _replace2 = _interopRequireDefault(_replace);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /*!\r\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * American Well Core Web SDK\r\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *\r\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Copyright © 2019 American Well.\r\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * All rights reserved.\r\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *\r\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * It is illegal to use, reproduce or distribute\r\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * any part of this Intellectual Property without\r\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * prior written authorization from American Well.\r\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\n/**\r\n * The GET_STARTED step of the Test My Computer wizard\r\n */\nvar GetStartedStep = function (_BaseStep) {\n  _inherits(GetStartedStep, _BaseStep);\n\n  function GetStartedStep() {\n    _classCallCheck(this, GetStartedStep);\n\n    return _possibleConstructorReturn(this, (GetStartedStep.__proto__ || Object.getPrototypeOf(GetStartedStep)).apply(this, arguments));\n  }\n\n  _createClass(GetStartedStep, [{\n    key: 'drawDOM',\n    value: function drawDOM() {\n      _get(GetStartedStep.prototype.__proto__ || Object.getPrototypeOf(GetStartedStep.prototype), 'drawDOM', this).call(this);\n      this.__wizard.videoDOMNode.classList.add('awcore-tmc-blur');\n    }\n  }, {\n    key: 'teardownDOM',\n    value: function teardownDOM() {\n      _get(GetStartedStep.prototype.__proto__ || Object.getPrototypeOf(GetStartedStep.prototype), 'teardownDOM', this).call(this);\n      this.__wizard.videoDOMNode.classList.remove('awcore-tmc-blur');\n    }\n  }, {\n    key: 'setupDOMEventHandlers',\n    value: function setupDOMEventHandlers() {\n      var _this2 = this;\n\n      _get(GetStartedStep.prototype.__proto__ || Object.getPrototypeOf(GetStartedStep.prototype), 'setupDOMEventHandlers', this).call(this);\n      this.__wizard.drawerDOMNode.querySelector('.awcore-tmc-step-start-test-button').onclick = function (event) {\n        event.preventDefault();\n        _this2.__getStartedPassed = true;\n        _this2.__wizard.stepDone();\n      };\n    }\n  }, {\n    key: 'getDrawerHTMLTemplate',\n    value: function getDrawerHTMLTemplate() {\n      return (0, _replace2.default)(_get_started2.default, this);\n    }\n  }, {\n    key: 'getTitle',\n    value: function getTitle() {\n      return this.messages.step_get_started_title;\n    }\n  }, {\n    key: 'getProgressTrackerTitle',\n    value: function getProgressTrackerTitle() {\n      return this.messages.step_get_started_progress_title;\n    }\n  }, {\n    key: 'hasPassed',\n    value: function hasPassed() {\n      return this.__getStartedPassed;\n    }\n  }]);\n\n  return GetStartedStep;\n}(_Base2.default);\n\nexports.default = GetStartedStep;","module.exports = \"<div class='awcore-drawer-content awcore-drawer-content-get-started'>\\n  <div class='awcore-drawer-content-image'></div>\\n  <h3>{ messages.get_started }</h3>\\n  <div class='awcore-drawer-content-details'>\\n    { messages.get_started_detail }\\n  </div>\\n  <div class='awcore-drawer-single-button-container'>\\n    <button class='awcore-tmc-step-start-test-button'>{ messages.start_test }</button>\\n  </div>\\n</div>\"","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _Base = require('./Base');\n\nvar _Base2 = _interopRequireDefault(_Base);\n\nvar _summaryPass = require('./summary-pass.html');\n\nvar _summaryPass2 = _interopRequireDefault(_summaryPass);\n\nvar _summaryFail = require('./summary-fail.html');\n\nvar _summaryFail2 = _interopRequireDefault(_summaryFail);\n\nvar _replace = require('../../util/replace');\n\nvar _replace2 = _interopRequireDefault(_replace);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /*!\r\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * American Well Core Web SDK\r\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *\r\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Copyright © 2019 American Well.\r\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * All rights reserved.\r\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *\r\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * It is illegal to use, reproduce or distribute\r\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * any part of this Intellectual Property without\r\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * prior written authorization from American Well.\r\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\n/**\r\n * The summary step of the Test My Computer wizard\r\n */\nvar SummaryStep = function (_BaseStep) {\n  _inherits(SummaryStep, _BaseStep);\n\n  function SummaryStep() {\n    _classCallCheck(this, SummaryStep);\n\n    return _possibleConstructorReturn(this, (SummaryStep.__proto__ || Object.getPrototypeOf(SummaryStep)).apply(this, arguments));\n  }\n\n  _createClass(SummaryStep, [{\n    key: 'getDrawerHTMLTemplate',\n    value: function getDrawerHTMLTemplate() {\n      if (this.__wizard.testMyComputerResult.techCheckPassed) {\n        return (0, _replace2.default)(_summaryPass2.default, this);\n      }\n      return (0, _replace2.default)(_summaryFail2.default, this);\n    }\n  }, {\n    key: 'setupDOMEventHandlers',\n    value: function setupDOMEventHandlers() {\n      var _this2 = this;\n\n      var stepDone = this.__wizard.__drawerDOMNode.querySelector('.awcore-tmc-summary-step-done');\n      if (stepDone) {\n        stepDone.onclick = function (event) {\n          event.preventDefault();\n          _this2.__wizard.stepDone();\n        };\n      }\n\n      var retry = this.__wizard.__drawerDOMNode.querySelector('.awcore-tmc-step-start-test-button');\n      if (retry) {\n        retry.onclick = function (event) {\n          event.preventDefault();\n          _this2.teardownDOM();\n          _this2.__wizard.runStep(_this2.__wizard.stepNames.CAMERA);\n        };\n      }\n\n      // need to use the configured formatted customer support phone number.\n      if (!this.__wizard.testMyComputerResult.techCheckPassed && this.__wizard.systemConfiguration.formattedCustomerSupportPhone) {\n        var contactSupportNode = this.__wizard.__drawerDOMNode.querySelector('.awcore-drawer-content-details');\n        contactSupportNode.innerHTML = (0, _replace2.default)(this.messages.step_summary_fail_details, this.__wizard.systemConfiguration);\n      }\n    }\n  }, {\n    key: 'getTitle',\n    value: function getTitle() {\n      return this.messages.step_summary_title;\n    }\n  }]);\n\n  return SummaryStep;\n}(_Base2.default);\n\nexports.default = SummaryStep;","module.exports = \"<div class='awcore-drawer-content awcore-drawer-content-summary-success'>\\r\\n  <div class='awcore-drawer-content-image'></div>\\r\\n  <h3>{ messages.step_summary_pass }</h3>\\r\\n  <div class='awcore-drawer-single-button-container'>\\r\\n    <button class='awcore-tmc-summary-step-done'>{ messages.done }</button>\\r\\n  </div>\\r\\n</div>\"","module.exports = \"<div class='awcore-drawer-content awcore-drawer-content-summary-failed'>\\r\\n  <div class='awcore-drawer-content-image'></div>\\r\\n  <h3>{ messages.step_summary_fail }</h3>\\r\\n  <div class='awcore-drawer-content-details'>\\r\\n    { messages.step_summary_fail_details_no_phone }\\r\\n  </div>\\r\\n  <div class='awcore-drawer-multi-button-container'>\\r\\n    <button class='awcore-tmc-step-start-test-button'>{ messages.try_again }</button>\\r\\n    <button class='awcore-tmc-summary-step-done'>{ messages.done }</button>\\r\\n  </div>\\r\\n</div>\"","module.exports = \"<div class=\\\"awcore-tmc-container\\\">\\n  <div class=\\\"awcore-tmc-drawer\\\">\\n    <div class=\\\"awcore-tmc-drawer-header\\\">\\n      <div class=\\\"awcore-tmc-progress-back\\\"></div>\\n      <h3 class=\\\"awcore-tmc-step-title\\\"></h3>\\n      <div class=\\\"awcore-tmc-progress-container\\\"></div>\\n    </div>\\n    <div class=\\\"awcore-tmc-drawer-content\\\"></div>\\n  </div>\\n  <div class=\\\"awcore-tmc-content\\\">\\n    <video autoplay=\\\"true\\\" class=\\\"awcore-tmc-video\\\"></video>\\n    <div class=\\\"awcore-tmc-no-video-container awcore-hidden\\\">\\n      <div class=\\\"awcore-tmc-no-video-content\\\">\\n        <div class='awcore-no-video-content-image'></div>\\n        <h3>{ messages.video_no_access }</h3>\\n        <p>{ messages.video_no_access_details }</p>\\n      </div>\\n    </div>\\n    <div class=\\\"awcore-tmc-internet-content awcore-hidden\\\"></div>\\n  </div>\\n</div>\"","var global =\n  (typeof globalThis !== 'undefined' && globalThis) ||\n  (typeof self !== 'undefined' && self) ||\n  (typeof global !== 'undefined' && global)\n\nvar support = {\n  searchParams: 'URLSearchParams' in global,\n  iterable: 'Symbol' in global && 'iterator' in Symbol,\n  blob:\n    'FileReader' in global &&\n    'Blob' in global &&\n    (function() {\n      try {\n        new Blob()\n        return true\n      } catch (e) {\n        return false\n      }\n    })(),\n  formData: 'FormData' in global,\n  arrayBuffer: 'ArrayBuffer' in global\n}\n\nfunction isDataView(obj) {\n  return obj && DataView.prototype.isPrototypeOf(obj)\n}\n\nif (support.arrayBuffer) {\n  var viewClasses = [\n    '[object Int8Array]',\n    '[object Uint8Array]',\n    '[object Uint8ClampedArray]',\n    '[object Int16Array]',\n    '[object Uint16Array]',\n    '[object Int32Array]',\n    '[object Uint32Array]',\n    '[object Float32Array]',\n    '[object Float64Array]'\n  ]\n\n  var isArrayBufferView =\n    ArrayBuffer.isView ||\n    function(obj) {\n      return obj && viewClasses.indexOf(Object.prototype.toString.call(obj)) > -1\n    }\n}\n\nfunction normalizeName(name) {\n  if (typeof name !== 'string') {\n    name = String(name)\n  }\n  if (/[^a-z0-9\\-#$%&'*+.^_`|~!]/i.test(name) || name === '') {\n    throw new TypeError('Invalid character in header field name')\n  }\n  return name.toLowerCase()\n}\n\nfunction normalizeValue(value) {\n  if (typeof value !== 'string') {\n    value = String(value)\n  }\n  return value\n}\n\n// Build a destructive iterator for the value list\nfunction iteratorFor(items) {\n  var iterator = {\n    next: function() {\n      var value = items.shift()\n      return {done: value === undefined, value: value}\n    }\n  }\n\n  if (support.iterable) {\n    iterator[Symbol.iterator] = function() {\n      return iterator\n    }\n  }\n\n  return iterator\n}\n\nexport function Headers(headers) {\n  this.map = {}\n\n  if (headers instanceof Headers) {\n    headers.forEach(function(value, name) {\n      this.append(name, value)\n    }, this)\n  } else if (Array.isArray(headers)) {\n    headers.forEach(function(header) {\n      this.append(header[0], header[1])\n    }, this)\n  } else if (headers) {\n    Object.getOwnPropertyNames(headers).forEach(function(name) {\n      this.append(name, headers[name])\n    }, this)\n  }\n}\n\nHeaders.prototype.append = function(name, value) {\n  name = normalizeName(name)\n  value = normalizeValue(value)\n  var oldValue = this.map[name]\n  this.map[name] = oldValue ? oldValue + ', ' + value : value\n}\n\nHeaders.prototype['delete'] = function(name) {\n  delete this.map[normalizeName(name)]\n}\n\nHeaders.prototype.get = function(name) {\n  name = normalizeName(name)\n  return this.has(name) ? this.map[name] : null\n}\n\nHeaders.prototype.has = function(name) {\n  return this.map.hasOwnProperty(normalizeName(name))\n}\n\nHeaders.prototype.set = function(name, value) {\n  this.map[normalizeName(name)] = normalizeValue(value)\n}\n\nHeaders.prototype.forEach = function(callback, thisArg) {\n  for (var name in this.map) {\n    if (this.map.hasOwnProperty(name)) {\n      callback.call(thisArg, this.map[name], name, this)\n    }\n  }\n}\n\nHeaders.prototype.keys = function() {\n  var items = []\n  this.forEach(function(value, name) {\n    items.push(name)\n  })\n  return iteratorFor(items)\n}\n\nHeaders.prototype.values = function() {\n  var items = []\n  this.forEach(function(value) {\n    items.push(value)\n  })\n  return iteratorFor(items)\n}\n\nHeaders.prototype.entries = function() {\n  var items = []\n  this.forEach(function(value, name) {\n    items.push([name, value])\n  })\n  return iteratorFor(items)\n}\n\nif (support.iterable) {\n  Headers.prototype[Symbol.iterator] = Headers.prototype.entries\n}\n\nfunction consumed(body) {\n  if (body.bodyUsed) {\n    return Promise.reject(new TypeError('Already read'))\n  }\n  body.bodyUsed = true\n}\n\nfunction fileReaderReady(reader) {\n  return new Promise(function(resolve, reject) {\n    reader.onload = function() {\n      resolve(reader.result)\n    }\n    reader.onerror = function() {\n      reject(reader.error)\n    }\n  })\n}\n\nfunction readBlobAsArrayBuffer(blob) {\n  var reader = new FileReader()\n  var promise = fileReaderReady(reader)\n  reader.readAsArrayBuffer(blob)\n  return promise\n}\n\nfunction readBlobAsText(blob) {\n  var reader = new FileReader()\n  var promise = fileReaderReady(reader)\n  reader.readAsText(blob)\n  return promise\n}\n\nfunction readArrayBufferAsText(buf) {\n  var view = new Uint8Array(buf)\n  var chars = new Array(view.length)\n\n  for (var i = 0; i < view.length; i++) {\n    chars[i] = String.fromCharCode(view[i])\n  }\n  return chars.join('')\n}\n\nfunction bufferClone(buf) {\n  if (buf.slice) {\n    return buf.slice(0)\n  } else {\n    var view = new Uint8Array(buf.byteLength)\n    view.set(new Uint8Array(buf))\n    return view.buffer\n  }\n}\n\nfunction Body() {\n  this.bodyUsed = false\n\n  this._initBody = function(body) {\n    /*\n      fetch-mock wraps the Response object in an ES6 Proxy to\n      provide useful test harness features such as flush. However, on\n      ES5 browsers without fetch or Proxy support pollyfills must be used;\n      the proxy-pollyfill is unable to proxy an attribute unless it exists\n      on the object before the Proxy is created. This change ensures\n      Response.bodyUsed exists on the instance, while maintaining the\n      semantic of setting Request.bodyUsed in the constructor before\n      _initBody is called.\n    */\n    this.bodyUsed = this.bodyUsed\n    this._bodyInit = body\n    if (!body) {\n      this._bodyText = ''\n    } else if (typeof body === 'string') {\n      this._bodyText = body\n    } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {\n      this._bodyBlob = body\n    } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {\n      this._bodyFormData = body\n    } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n      this._bodyText = body.toString()\n    } else if (support.arrayBuffer && support.blob && isDataView(body)) {\n      this._bodyArrayBuffer = bufferClone(body.buffer)\n      // IE 10-11 can't handle a DataView body.\n      this._bodyInit = new Blob([this._bodyArrayBuffer])\n    } else if (support.arrayBuffer && (ArrayBuffer.prototype.isPrototypeOf(body) || isArrayBufferView(body))) {\n      this._bodyArrayBuffer = bufferClone(body)\n    } else {\n      this._bodyText = body = Object.prototype.toString.call(body)\n    }\n\n    if (!this.headers.get('content-type')) {\n      if (typeof body === 'string') {\n        this.headers.set('content-type', 'text/plain;charset=UTF-8')\n      } else if (this._bodyBlob && this._bodyBlob.type) {\n        this.headers.set('content-type', this._bodyBlob.type)\n      } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n        this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8')\n      }\n    }\n  }\n\n  if (support.blob) {\n    this.blob = function() {\n      var rejected = consumed(this)\n      if (rejected) {\n        return rejected\n      }\n\n      if (this._bodyBlob) {\n        return Promise.resolve(this._bodyBlob)\n      } else if (this._bodyArrayBuffer) {\n        return Promise.resolve(new Blob([this._bodyArrayBuffer]))\n      } else if (this._bodyFormData) {\n        throw new Error('could not read FormData body as blob')\n      } else {\n        return Promise.resolve(new Blob([this._bodyText]))\n      }\n    }\n\n    this.arrayBuffer = function() {\n      if (this._bodyArrayBuffer) {\n        var isConsumed = consumed(this)\n        if (isConsumed) {\n          return isConsumed\n        }\n        if (ArrayBuffer.isView(this._bodyArrayBuffer)) {\n          return Promise.resolve(\n            this._bodyArrayBuffer.buffer.slice(\n              this._bodyArrayBuffer.byteOffset,\n              this._bodyArrayBuffer.byteOffset + this._bodyArrayBuffer.byteLength\n            )\n          )\n        } else {\n          return Promise.resolve(this._bodyArrayBuffer)\n        }\n      } else {\n        return this.blob().then(readBlobAsArrayBuffer)\n      }\n    }\n  }\n\n  this.text = function() {\n    var rejected = consumed(this)\n    if (rejected) {\n      return rejected\n    }\n\n    if (this._bodyBlob) {\n      return readBlobAsText(this._bodyBlob)\n    } else if (this._bodyArrayBuffer) {\n      return Promise.resolve(readArrayBufferAsText(this._bodyArrayBuffer))\n    } else if (this._bodyFormData) {\n      throw new Error('could not read FormData body as text')\n    } else {\n      return Promise.resolve(this._bodyText)\n    }\n  }\n\n  if (support.formData) {\n    this.formData = function() {\n      return this.text().then(decode)\n    }\n  }\n\n  this.json = function() {\n    return this.text().then(JSON.parse)\n  }\n\n  return this\n}\n\n// HTTP methods whose capitalization should be normalized\nvar methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT']\n\nfunction normalizeMethod(method) {\n  var upcased = method.toUpperCase()\n  return methods.indexOf(upcased) > -1 ? upcased : method\n}\n\nexport function Request(input, options) {\n  if (!(this instanceof Request)) {\n    throw new TypeError('Please use the \"new\" operator, this DOM object constructor cannot be called as a function.')\n  }\n\n  options = options || {}\n  var body = options.body\n\n  if (input instanceof Request) {\n    if (input.bodyUsed) {\n      throw new TypeError('Already read')\n    }\n    this.url = input.url\n    this.credentials = input.credentials\n    if (!options.headers) {\n      this.headers = new Headers(input.headers)\n    }\n    this.method = input.method\n    this.mode = input.mode\n    this.signal = input.signal\n    if (!body && input._bodyInit != null) {\n      body = input._bodyInit\n      input.bodyUsed = true\n    }\n  } else {\n    this.url = String(input)\n  }\n\n  this.credentials = options.credentials || this.credentials || 'same-origin'\n  if (options.headers || !this.headers) {\n    this.headers = new Headers(options.headers)\n  }\n  this.method = normalizeMethod(options.method || this.method || 'GET')\n  this.mode = options.mode || this.mode || null\n  this.signal = options.signal || this.signal\n  this.referrer = null\n\n  if ((this.method === 'GET' || this.method === 'HEAD') && body) {\n    throw new TypeError('Body not allowed for GET or HEAD requests')\n  }\n  this._initBody(body)\n\n  if (this.method === 'GET' || this.method === 'HEAD') {\n    if (options.cache === 'no-store' || options.cache === 'no-cache') {\n      // Search for a '_' parameter in the query string\n      var reParamSearch = /([?&])_=[^&]*/\n      if (reParamSearch.test(this.url)) {\n        // If it already exists then set the value with the current time\n        this.url = this.url.replace(reParamSearch, '$1_=' + new Date().getTime())\n      } else {\n        // Otherwise add a new '_' parameter to the end with the current time\n        var reQueryString = /\\?/\n        this.url += (reQueryString.test(this.url) ? '&' : '?') + '_=' + new Date().getTime()\n      }\n    }\n  }\n}\n\nRequest.prototype.clone = function() {\n  return new Request(this, {body: this._bodyInit})\n}\n\nfunction decode(body) {\n  var form = new FormData()\n  body\n    .trim()\n    .split('&')\n    .forEach(function(bytes) {\n      if (bytes) {\n        var split = bytes.split('=')\n        var name = split.shift().replace(/\\+/g, ' ')\n        var value = split.join('=').replace(/\\+/g, ' ')\n        form.append(decodeURIComponent(name), decodeURIComponent(value))\n      }\n    })\n  return form\n}\n\nfunction parseHeaders(rawHeaders) {\n  var headers = new Headers()\n  // Replace instances of \\r\\n and \\n followed by at least one space or horizontal tab with a space\n  // https://tools.ietf.org/html/rfc7230#section-3.2\n  var preProcessedHeaders = rawHeaders.replace(/\\r?\\n[\\t ]+/g, ' ')\n  preProcessedHeaders.split(/\\r?\\n/).forEach(function(line) {\n    var parts = line.split(':')\n    var key = parts.shift().trim()\n    if (key) {\n      var value = parts.join(':').trim()\n      headers.append(key, value)\n    }\n  })\n  return headers\n}\n\nBody.call(Request.prototype)\n\nexport function Response(bodyInit, options) {\n  if (!(this instanceof Response)) {\n    throw new TypeError('Please use the \"new\" operator, this DOM object constructor cannot be called as a function.')\n  }\n  if (!options) {\n    options = {}\n  }\n\n  this.type = 'default'\n  this.status = options.status === undefined ? 200 : options.status\n  this.ok = this.status >= 200 && this.status < 300\n  this.statusText = 'statusText' in options ? options.statusText : ''\n  this.headers = new Headers(options.headers)\n  this.url = options.url || ''\n  this._initBody(bodyInit)\n}\n\nBody.call(Response.prototype)\n\nResponse.prototype.clone = function() {\n  return new Response(this._bodyInit, {\n    status: this.status,\n    statusText: this.statusText,\n    headers: new Headers(this.headers),\n    url: this.url\n  })\n}\n\nResponse.error = function() {\n  var response = new Response(null, {status: 0, statusText: ''})\n  response.type = 'error'\n  return response\n}\n\nvar redirectStatuses = [301, 302, 303, 307, 308]\n\nResponse.redirect = function(url, status) {\n  if (redirectStatuses.indexOf(status) === -1) {\n    throw new RangeError('Invalid status code')\n  }\n\n  return new Response(null, {status: status, headers: {location: url}})\n}\n\nexport var DOMException = global.DOMException\ntry {\n  new DOMException()\n} catch (err) {\n  DOMException = function(message, name) {\n    this.message = message\n    this.name = name\n    var error = Error(message)\n    this.stack = error.stack\n  }\n  DOMException.prototype = Object.create(Error.prototype)\n  DOMException.prototype.constructor = DOMException\n}\n\nexport function fetch(input, init) {\n  return new Promise(function(resolve, reject) {\n    var request = new Request(input, init)\n\n    if (request.signal && request.signal.aborted) {\n      return reject(new DOMException('Aborted', 'AbortError'))\n    }\n\n    var xhr = new XMLHttpRequest()\n\n    function abortXhr() {\n      xhr.abort()\n    }\n\n    xhr.onload = function() {\n      var options = {\n        status: xhr.status,\n        statusText: xhr.statusText,\n        headers: parseHeaders(xhr.getAllResponseHeaders() || '')\n      }\n      options.url = 'responseURL' in xhr ? xhr.responseURL : options.headers.get('X-Request-URL')\n      var body = 'response' in xhr ? xhr.response : xhr.responseText\n      setTimeout(function() {\n        resolve(new Response(body, options))\n      }, 0)\n    }\n\n    xhr.onerror = function() {\n      setTimeout(function() {\n        reject(new TypeError('Network request failed'))\n      }, 0)\n    }\n\n    xhr.ontimeout = function() {\n      setTimeout(function() {\n        reject(new TypeError('Network request failed'))\n      }, 0)\n    }\n\n    xhr.onabort = function() {\n      setTimeout(function() {\n        reject(new DOMException('Aborted', 'AbortError'))\n      }, 0)\n    }\n\n    function fixUrl(url) {\n      try {\n        return url === '' && global.location.href ? global.location.href : url\n      } catch (e) {\n        return url\n      }\n    }\n\n    xhr.open(request.method, fixUrl(request.url), true)\n\n    if (request.credentials === 'include') {\n      xhr.withCredentials = true\n    } else if (request.credentials === 'omit') {\n      xhr.withCredentials = false\n    }\n\n    if ('responseType' in xhr) {\n      if (support.blob) {\n        xhr.responseType = 'blob'\n      } else if (\n        support.arrayBuffer &&\n        request.headers.get('Content-Type') &&\n        request.headers.get('Content-Type').indexOf('application/octet-stream') !== -1\n      ) {\n        xhr.responseType = 'arraybuffer'\n      }\n    }\n\n    if (init && typeof init.headers === 'object' && !(init.headers instanceof Headers)) {\n      Object.getOwnPropertyNames(init.headers).forEach(function(name) {\n        xhr.setRequestHeader(name, normalizeValue(init.headers[name]))\n      })\n    } else {\n      request.headers.forEach(function(value, name) {\n        xhr.setRequestHeader(name, value)\n      })\n    }\n\n    if (request.signal) {\n      request.signal.addEventListener('abort', abortXhr)\n\n      xhr.onreadystatechange = function() {\n        // DONE (success or failure)\n        if (xhr.readyState === 4) {\n          request.signal.removeEventListener('abort', abortXhr)\n        }\n      }\n    }\n\n    xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit)\n  })\n}\n\nfetch.polyfill = true\n\nif (!global.fetch) {\n  global.fetch = fetch\n  global.Headers = Headers\n  global.Request = Request\n  global.Response = Response\n}\n","/*!\n * American Well Consumer Web SDK\n *\n * Copyright © 2017 American Well.\n * All rights reserved.\n *\n * It is illegal to use, reproduce or distribute\n * any part of this Intellectual Property without\n * prior written authorization from American Well.\n */\n\n/**\n * The base class for all data objects in AWSDK\n */\nclass AWSDKDataObject {\n  constructor(data = {}) {\n    this.__data = data;\n  }\n\n  toString() {\n    const dataString = JSON.stringify(this.__data);\n    return dataString;\n  }\n}\n\nexport default AWSDKDataObject;\n","/*!\n * American Well Consumer Web SDK\n *\n * Copyright © 2017 American Well.\n * All rights reserved.\n *\n * It is illegal to use, reproduce or distribute\n * any part of this Intellectual Property without\n * prior written authorization from American Well.\n */\n/**\n * Enum for AWSDKErrorCode.\n * @readonly\n * @enum {string}\n */\nconst AWSDKErrorCode = {\n  /**\n   * A client attempted to access a resource that it does not have permission to access. For example, a consumer tried\n   * to get secure messages that belong to another consumer.\n   * @since 1.0.0\n   */\n  authenticationAccessDenied: 'authenticationAccessDenied',\n  /**\n   * The authenticate session has expired.\n   * @since 1.0.0\n   */\n  authenticationSessionExpired: 'authenticationSessionExpired',\n  /**\n   * certificatePinningError while making a request.\n   * @since 1.0.0\n   */\n  certificatePinningError: 'certificatePinningError',\n  /**\n   * Consumer already in a visit.\n   * @since 1.0.0\n   */\n  consumerAlreadyInVisit: 'consumerAlreadyInVisit',\n  /**\n   * Consumer is busy.\n   * @since 1.0.0\n   */\n  consumerBusy: 'consumerBusy',\n  /**\n   * Consumer not authenticated.\n   * @since 1.0.0\n   */\n  consumerNotAuthenticated: 'consumerNotAuthenticated',\n  /**\n   * Consumer not found.\n   * @since 1.0.0\n   */\n  consumerNotFound: 'consumerNotFound',\n  /**\n   * Cost validation has not been finished.\n   * @since 1.0.0\n   */\n  costCalculationNotFinishedError: 'costCalculationNotFinishedError',\n  /**\n   * Credit card used as payment method has been declined.\n   * @since 1.0.0\n   */\n  creditCardDeclinedError: 'creditCardDeclinedError',\n  /**\n   * Invalid CVV code for credit card used as payment method.\n   * @since 1.0.0\n   */\n  creditCardInvalidCVV: 'creditCardInvalidCVV',\n  /**\n   * Invalid zip code for credit card used as payment method.\n   * @since 1.0.0\n   */\n  creditCardInvalidZipCode: 'creditCardInvalidZipCode',\n  /**\n   * Credit card used as payment method validation has failed.\n   * @since 1.0.0\n   */\n  creditCardValidationError: 'creditCardValidationError',\n  /**\n   * Dependent not found.\n   * @since 1.1.0\n   */\n  dependentNotFound: 'dependentNotFound',\n  /**\n   * Dependent overage.\n   * @since 1.1.0\n   */\n  dependentOverage: 'dependentOverage',\n  /**\n   * Dependent's date of birth is in the future.\n   * @since 1.1.0\n   */\n  dependentDobInFuture: 'dependentDobInFuture',\n  /**\n   * Dependent match found\n   * @since 1.3.0\n   */\n  dependentMatchFound: 'dependentMatchFound',\n  /**\n   * Empty response from rest call.\n   * @since 1.0.0\n   */\n  emptyResponseError: 'emptyResponseError',\n  /**\n   * Feedback not sent.\n   * @since 1.0.0\n   */\n  feedbackNotSubmittedError: 'feedbackNotSubmittedError',\n  /**\n   * A required field in an object is not set or has an incorrect value.\n   *\n   * @since 1.0.0\n   */\n  fieldValidationError: 'fieldValidationError',\n  /**\n   * Illegal Argument.\n   * @since 1.0.0\n   */\n  illegalArgument: 'illegalArgument',\n  /**\n   * Internal Error.\n   * @since 1.0.0\n   */\n  internalError: 'internalError',\n  /**\n   * Validation of coupon code failed.\n   * @since 1.0.0\n   */\n  invalidCouponError: 'invalidCouponError',\n  /**\n   * Validation of date failed.\n   * @since 1.1.0\n   */\n  invalidDate: 'invalidDate',\n  /**\n   * Validation of date format failed.\n   * @since 1.1.0\n   */\n  invalidDateFormat: 'invalidDateFormat',\n  /**\n   * Validation of enum failed.\n   * @since 1.1.0\n   */\n  invalidEnum: 'invalidEnum',\n  /**\n   * Validation of enum format failed.\n   * @since 1.1.0\n   */\n  invalidEnumFormat: 'invalidEnumFormat',\n  /**\n   * Invalid password.\n   * @since 1.1.0\n   */\n  invalidPassword: 'invalidPassword',\n  /**\n   * Validation of reminder option failed.\n   * @since 1.1.0\n   */\n  invalidReminderOption: 'invalidReminderOption',\n  /**\n   * Validation of service key failed.\n   * @since 1.0.0\n   */\n  invalidServiceKeyError: 'invalidServiceKeyError',\n  /**\n   * locale is not supported by caretalks.\n   * @since 1.0.0\n   */\n  localeNotSupported: 'localeNotSupported',\n  /**\n   * No payment information was found for consumer.\n   *\n   * @since 1.0.0\n   */\n  noPaymentInformationFound: 'noPaymentInformationFound',\n  /**\n   * The error contains an thrown Error.\n   *\n   * @since AWSDK 1.0\n   */\n  otherError: 'otherError',\n  /**\n   * Error parsing the response.\n   * @since 1.0.0\n   */\n  parsingError: 'parsingError',\n  /**\n   * The authenticated user has not completed the registration process.\n   * @since 1.0.0\n   */\n  partiallyRegisteredUser: 'partiallyRegisteredUser',\n  /**\n   * The server is not configured with a consumer provider policy disclaimer.\n   * @since 1.0.0\n   */\n  privacyPolicyDisclaimerMissing: 'privacyPolicyDisclaimerMissing',\n  /**\n   * The provider is busy and no longer available.\n   * @since 1.0.0\n   */\n  providerBusy: 'providerBusy',\n  /**\n   * Provider's waiting room is closed.\n   * @since 1.0.0\n   */\n  providerNotAvailable: 'providerNotAvailable',\n  /**\n   * The provider could not be found.\n   * @since 1.0.0\n   */\n  providerNotFound: 'providerNotFound',\n  /**\n   * Provider is not licensed for consumer's location.\n   * @since 1.0.0\n   */\n  providerNotLicensedForConsumerLocation: 'providerNotLicensedForConsumerLocation',\n  /**\n   * The provider is not enabled to use video.\n   * @since 1.0.0\n   */\n  providerVideoNotEnabled: 'providerVideoNotEnabled',\n  /**\n   * Rating not sent.\n   * @since 1.0.0\n   */\n  ratingNotSubmittedError: 'ratingNotsubmittedError',\n  /**\n   * Generic Server Error Response.\n   * @since 1.0.0\n   */\n  responseError: 'responseError',\n  /**\n   * Schedule appointment failed.\n   * @since 1.1.0\n   */\n  scheduleAppointmentFailed: 'scheduleAppointmentFailed',\n  /**\n   * Start visit failed.\n   * @since 1.0.0\n   */\n  startVisitFailed: 'startVisitFailed',\n  /**\n   * Appointment not found.\n   * @since 1.1.0\n   */\n  appointmentNotFound: 'appointmentNotFound',\n  /**\n   * The SDK is uninitialized. Initialize it using {@link AWSDK#initialize};\n   * @since 1.0.0\n   */\n  uninitialized: 'uninitialized',\n  /**\n   * Attempt to update the consumerAuthKey on the American Well telehealth platform failed.\n   * @since 1.0.0\n   */\n  updateConsumerAuthKeyFailed: 'updateConsumerAuthKeyFailed',\n  /**\n   * This consumer is already registered and should be directed to login. <b>Deprecated</b> since version 1.4.0 please use {@link AWSDKErrorCode.validationEmailInUse}\n   * @deprecated since version 1.4.0 please use {@link AWSDKErrorCode.validationEmailInUse}\n   * @since 1.0.0\n   */\n  validationConsumerAlreadyRegistered: 'validationConsumerAlreadyRegistered',\n  /**\n   * Cannot register underage consumer.\n   *\n   * @since 1.0.0\n   */\n  validationConsumerUnderage: 'validationConsumerUnderage',\n  /**\n   * This email address is already being used by another user.\n   *\n   * @since 1.0.0\n   */\n  validationEmailInUse: 'validationEmailInUse',\n  /**\n   * This source id is already being used by another consumer.\n   *\n   * @since 1.0.0\n   */\n  validationSourceIdInUse: 'validationSourceIdInUse',\n  /**\n   * Validation of parameter failed.\n   * @since 1.0.0\n   */\n  validationError: 'validationError',\n  /**\n   * The provided address is incomplete or malformed.\n   *\n   * @since 2.0.0\n   */\n  validationIncompleteAddress: 'validationIncompleteAddress',\n  /**\n   * More then one validation error.\n   * @since 1.0.0\n   */\n  validationErrors: 'validationErrors',\n  /**\n   * One or more required parameters were missing or invalid in the request.\n   * @since 1.0.0\n   */\n  validationRequiredParameterMissing: 'validationRequiredParameterMissing',\n  /**\n   * Visit has an invalid consumer callback number.\n   * @since 1.0.0\n   */\n  visitConsumerCallbackInvalid: 'visitConsumerCallbackInvalid',\n  /**\n   * Visit has expired.\n   * @since 1.0.0\n   */\n  visitExpired: 'visitExpired',\n  /**\n   * Visit is invalid.\n   * @since 1.0.0\n   */\n  visitInvalid: 'visitInvalid',\n  /**\n   * Visit Summary not sent.\n   * @since 1.0.0\n   */\n  visitSummaryNotSentError: 'visitSummaryNotSentError',\n  /**\n   * Visit not found.\n   * @since 1.1.0\n   */\n  visitNotFound: 'visitNotFound',\n  /**\n   * Provider does not accept waiting room requests from consumer.\n   * @since 1.0.0\n   */\n  waitingRoomAccessDenied: 'waitingRoomAccessDenied',\n  /**\n   * The length of the medication search text String does not meet requirements.\n   * @since 1.0.0\n   */\n  medicationSearchTextTooShort: 'medicationSearchTextTooShort',\n  /**\n   * Consumer already registered.\n   * @since 1.0.0\n   */\n  consumerAlreadyRegistered: 'consumerAlreadyRegistered',\n  /**\n   * The size of the attachment in kilobytes is larger than that supported by the American Well telehealth platform.\n   * @since 1.0.0\n   */\n  attachmentSizeTooLarge: 'attachmentSizeTooLarge',\n  /**\n   * The mime type of the data is not supported by the American Well telehealth platform\n   * @since 1.0.0\n   */\n  unsupportedMimeType: 'unsupportedMimeType',\n  /**\n   * The attachment failed the virus scan by the American Well telehealth platform.\n   * @since 1.2.0\n   */\n  failedVirusScan: 'failedVirusScan',\n  /**\n   * The attachment already exists on the American Well telehealth platform.\n   * @since 1.2.0\n   */\n  fileExists: 'fileExists',\n  /**\n   * The attachment couldnt be read by the American Well telehealth platform.\n   * @since 1.2.0\n   */\n  fileReadError: 'fileReadError',\n  /**\n   * Consumer's health plan is feed controlled.\n   * @since 1.0.0\n   */\n  healthPlanIsFeedControlled: 'healthPlanIsFeedControlled',\n  /**\n   * Inaccurate subscriber information was rejected by the eligibility check\n   * @since 1.2.0\n   */\n  inaccurateSubscriberInfo: 'inaccurateSubscriberInfo',\n  /**\n   * Invalid values for either the subscriber id or suffix id of the health plan\n   * @since 1.3.0\n   */\n  healthPlanSubscriptionEnrollmentError: 'healthPlanSubscriptionEnrollmentError',\n  /**\n   * The eligibility check returned an error.\n   * @since 1.0.0\n   */\n  eligibilityCheckError: 'eligibilityCheckError',\n  /**\n   * No providers were found during the First Available search\n   * @since 1.1.0\n   */\n  noProvidersAvailable: 'noProvidersAvailable',\n\n  /**\n   * A poll exceeded its alloted time\n   * @since 1.1.0\n   */\n  pollingTimeout: 'pollingTimeout',\n\n  /**\n   * The specified on-demand specialty was not found\n   * @since 1.1.0\n   */\n  onDemandSpecialtyNotFound: 'onDemandSpecialtyNotFound',\n\n  /**\n   * An API of the AWSDK was invoked improperly\n   * @since 1.1.0\n   */\n  illegalUsage: 'illegalUsage',\n  /**\n   * The recipient of a secure message sent from a consumer cannot be a consumer.\n   * @since 1.1.0\n   */\n  consumerRecipientError: 'consumerRecipientError',\n  /**\n   * The recipient of this secure message does not accept secure messages.\n   * @since 1.1.0\n   */\n  doesNotAcceptSecureMessages: 'doesNotAcceptSecureMessages',\n  /**\n   * The email address associated with the request was not found.\n   * @since 1.1.0\n   */\n  emailAddressNotFound: 'emailAddressNotFound',\n  /**\n   * The Telehealth platform is incompatible with this version of the sdk\n   * @since 1.1.0\n   */\n  versionIncompatible: 'versionIncompatible',\n  /**\n   * The modified field is protected.\n   * @since 1.1.0\n   */\n  modifiedProtectedField: 'modifiedProtectedField',\n  /**\n   * No preferred pharmacy was found for the consumer.\n   * @since 1.2.0\n   */\n  noPreferredPharmacyFound: 'noPreferredPharmacyFound',\n  /**\n   * No shipping address was found for the consumer.\n   * @since 1.2.0\n   */\n  noShippingAddressFound: 'noShippingAddressFound',\n  /**\n   * SpeedPass is not enabled on the system.\n   * @since 1.2.0\n   */\n  speedPassDisabled: 'speedPassDisabled',\n  /**\n   * Consumer is not eligible for speedPass.\n   * @since 1.2.0\n   */\n  consumerNotEligibleForSpeedPass: 'consumerNotEligibleForSpeedPass',\n  /**\n   * TimeZone is not a valid canonical timezone.\n   * @since 1.4.0\n   */\n  invalidTimeZone: 'invalidTimeZone',\n  /**\n   * Invalid parameter\n   * @since 1.2.0\n   */\n  invalidParameter: 'invalidParameter',\n  /**\n   * Guest email is already invited.\n   * @since 2.0.0\n   */\n  guestEmailAlreadyInvited: 'guestEmailAlreadyInvited',\n  /**\n   * The requested video platform is unsupported by the SDK\n   * @since 3.0.0\n   */\n  unsupportedVideoPlatform: 'unsupportedVideoPlatform',\n};\n\n/**\n * @private\n */\nAWSDKErrorCode.__codes = Object.values(AWSDKErrorCode);\nObject.freeze(AWSDKErrorCode);\nexport default AWSDKErrorCode;\n","/*!\n * American Well Consumer Web SDK\n *\n * Copyright © 2017 American Well.\n * All rights reserved.\n *\n * It is illegal to use, reproduce or distribute\n * any part of this Intellectual Property without\n * prior written authorization from American Well.\n */\nimport AWSDKErrorCode from './awsdk_error_code';\n\n/**\n * This class represents a wrapper class for any Error encountered by the AWSDK library during interaction with the server or internal to the AWSDK. <br>\n * Its purpose is to provide a more digestible data type for error encapsulation and handling.\n * @property {error.AWSDKErrorCode} errorCode the {@link error.AWSDKErrorCode|AWSDKErrorCode} associated with this error object.\n * @property {String} message String message clarifying the error\n * @property {String} reason String explanation for the cause of the error\n * @property {String} recoverySuggestion String suggesting a possible recovery strategy, if applicable.\n * @property {Number} httpResponseCode Integer representing the http error code associated with the error\n * @property {String} fieldName the name of the field that caused the error being thrown, if any.\n * @property {error.AWSDKError[]} errors an array of errors found during validation.\n * @property {String} stackTrace a String representing the state of the stack at the time the error was thrown.\n */\nclass AWSDKError {\n  constructor(error, message, reason, recoverySuggestion, httpResponseCode) {\n    if (error instanceof Error) {\n      this.__errorCode = AWSDKErrorCode.otherError;\n      this.__error = error;\n    } else if (AWSDKErrorCode.__codes.includes(error)) {\n      this.__errorCode = error;\n      this.__error = new Error(message);\n    } else {\n      this.__errorCode = AWSDKErrorCode.otherError;\n      this.__error = new Error(message);\n    }\n    this.__reason = reason;\n    this.__recoverySuggestion = recoverySuggestion;\n    this.__httpResponseCode = httpResponseCode;\n  }\n  static AWSDKAuthenticationAccessDenied() {\n    return new AWSDKError(AWSDKErrorCode.authenticationAccessDenied,\n      'Access denied to the resource',\n      '',\n      'Retry authentication again with the correct credentials',\n      401);\n  }\n  static AWSDKAuthenticationSessionExpired() {\n    return new AWSDKError(AWSDKErrorCode.authenticationSessionExpired,\n      '',\n      '',\n      'Re-authenticate the user',\n      401);\n  }\n  static AWSDKCertificatePinningError() {\n    return new AWSDKError(AWSDKErrorCode.certificatePinningError,\n      'Certificate on request does not match the required certificate hash');\n  }\n  static AWSDKCreditCardDeclinedError() {\n    return new AWSDKError(AWSDKErrorCode.creditCardDeclinedError,\n      'Credit card used as payment method has been declined',\n      '',\n      '',\n      400);\n  }\n  static AWSDKCreditCardInvalidCVV() {\n    return new AWSDKError(AWSDKErrorCode.creditCardInvalidCVV,\n      'Invalid CVV code for credit card used as payment method',\n      '',\n      '',\n      400);\n  }\n  static AWSDKCreditCardInvalidZipCode() {\n    return new AWSDKError(AWSDKErrorCode.creditCardInvalidZipCode,\n      'Invalid zip code for credit card used as payment method',\n      '',\n      '',\n      400);\n  }\n  static AWSDKCreditCardValidationError() {\n    return new AWSDKError(AWSDKErrorCode.creditCardValidationError,\n      'Credit card used as payment method validation has failed',\n      '',\n      '',\n      400);\n  }\n  static AWSDKConsumerAlreadyInVisit() {\n    return new AWSDKError(AWSDKErrorCode.consumerAlreadyInVisit,\n      'Consumer already in a visit',\n      'The consumer is already in a visit',\n      '',\n      409);\n  }\n  static AWSDKVisitNotFound() {\n    return new AWSDKError(AWSDKErrorCode.visitNotFound,\n      'Visit was not found',\n      '',\n      'Retry with the correct visit',\n      404);\n  }\n  static AWSDKConsumerBusy() {\n    return new AWSDKError(AWSDKErrorCode.consumerBusy,\n      'The consumer is busy',\n      '',\n      '',\n      409);\n  }\n  static AWSDKConsumerNotAuthenticated() {\n    return new AWSDKError(AWSDKErrorCode.consumerNotAuthenticated,\n      'Consumer was not authenticated',\n      '',\n      'consumer must be authenticated');\n  }\n  static AWSDKConsumerNotFound() {\n    return new AWSDKError(AWSDKErrorCode.consumerNotFound,\n      'Consumer was not found',\n      '',\n      'Retry with the correct consumer',\n      404);\n  }\n  static AWSDKCostCalculationNotFinishedError() {\n    return new AWSDKError(AWSDKErrorCode.costCalculationNotFinishedError,\n      'Visit cost calculation has not finished',\n      'Visit cost calculation has not finished',\n      'Try again once cost calculation has completed');\n  }\n  static AWSDKDependentNotFound() {\n    return new AWSDKError(AWSDKErrorCode.dependentNotFound,\n      'Dependent was not found',\n      '',\n      'Retry with the correct dependent',\n      404);\n  }\n  static AWSDKDependentOverage() {\n    return new AWSDKError(AWSDKErrorCode.dependentOverage,\n      'Dependent over the age limit',\n      '',\n      'Retry with a younger dependent',\n      400);\n  }\n  static AWSDKDependentMatchFound() {\n    return new AWSDKError(AWSDKErrorCode.dependentMatchFound,\n      'Dependent already registered with American Well telehealth platform',\n      '',\n      'Retry with a different dependent',\n      400);\n  }\n  static AWSDKDependentDobInFuture() {\n    return new AWSDKError(AWSDKErrorCode.dependentDobInFuture,\n      'Dependent\\'s date of birth is in the future',\n      '',\n      'Retry with a date of birth not in the future',\n      400);\n  }\n  static AWSDKOnDemandSpecialtyNotFound() {\n    return new AWSDKError(AWSDKErrorCode.onDemandSpecialtyNotFound,\n      'On-demand specialty was not found',\n      '',\n      'Retry with the correct on-demand specialty',\n      404);\n  }\n  static AWSDKEmptyResponseError() {\n    return new AWSDKError(AWSDKErrorCode.emptyResponseError,\n      'No Response from server');\n  }\n  static AWSDKFeedbackNotSubmittedError() {\n    return new AWSDKError(AWSDKErrorCode.feedbackNotSubmittedError,\n      'Feedback was not able to be submitted',\n      'Feedback was not able to be submitted',\n      'Try again with a valid feedback or a visit that has been completed');\n  }\n  static AWSDKFieldValidationError(objectType, fieldName, reason, recoverySuggestion) {\n    const error = new AWSDKError(AWSDKErrorCode.fieldValidationError,\n      objectType ? `Field ${fieldName} in ${objectType} failed validation` : `Field ${fieldName} failed validation`,\n      reason,\n      recoverySuggestion);\n    error.fieldName = fieldName;\n    return error;\n  }\n  static AWSDKIllegalArgument(message, fieldName) {\n    const error = new AWSDKError(AWSDKErrorCode.illegalArgument,\n      message,\n      'Coding issue',\n      'Correct the code to pass the correct argument');\n    error.fieldName = fieldName;\n    return error;\n  }\n  static AWSDKInternalError(message) {\n    return new AWSDKError(AWSDKErrorCode.internalError,\n      message,\n      'there is an issue within the sdk code or data',\n      '');\n  }\n  static AWSDKInitializationError() {\n    return new AWSDKError(AWSDKErrorCode.uninitialized,\n      'AWSDK was not properly initialized',\n      'Potential incorrect URL, SDKAuthKey, or network failure when initializing AWSDKService',\n      'Retry AWSDKService initialization and ensure you receive a success');\n  }\n  static AWSDKInvalidCouponError(message) {\n    return new AWSDKError(AWSDKErrorCode.invalidCouponError,\n      'Coupon validation failed',\n      `Coupon validation failed because ${message}`,\n      'Try again with valid coupon code');\n  }\n  static AWSDKInvalidDate() {\n    return new AWSDKError(AWSDKErrorCode.invalidDate,\n      'Date validation failed',\n      '',\n      'Try again with a valid date');\n  }\n  static AWSDKInvalidDateFormat() {\n    return new AWSDKError(AWSDKErrorCode.invalidDateFormat,\n      'Date format validation failed',\n      '',\n      'Contact support');\n  }\n  static AWSDKInvalidEnum() {\n    return new AWSDKError(AWSDKErrorCode.invalidEnum,\n      'Enum validation failed',\n      '',\n      'Try again with valid Enum value');\n  }\n  static AWSDKInvalidEnumFormat() {\n    return new AWSDKError(AWSDKErrorCode.invalidEnumFormat,\n      'Enum format validation failed',\n      '',\n      'Contact support');\n  }\n  static AWSDKInvalidPassword() {\n    return new AWSDKError(AWSDKErrorCode.invalidPassword,\n      'Invalid Password',\n      'Password does not meet telehealth platform complexity requirements',\n      'Please re-enter your password');\n  }\n  static AWSDKInvalidReminderOption() {\n    return new AWSDKError(AWSDKErrorCode.invalidReminderOption,\n      'Reminder option validation failed',\n      '',\n      'Try again with a valid reminder option');\n  }\n  static AWSDKInvalidServiceKeyError() {\n    return new AWSDKError(AWSDKErrorCode.invalidServiceKeyError,\n      'Invalid service key',\n      '',\n      'Try again with valid Service key');\n  }\n  static AWSDKLocaleNotSupported() {\n    return new AWSDKError(AWSDKErrorCode.localeNotSupported,\n      'Locale is not supported by American Well telehealth platform',\n      'Locale is not supported by American Well telehealth platform',\n      'Try again with a supported locale');\n  }\n  static AWSDKNoPaymentInformationFound(errorMessage) {\n    return new AWSDKError(AWSDKErrorCode.noPaymentInformationFound,\n      'Request returned a httpStatus of 404 -- NOT_FOUND',\n      errorMessage,\n      'Update the payment information on file',\n      404);\n  }\n  static AWSDKParsingError(errorMessage) {\n    return new AWSDKError(AWSDKErrorCode.parsingError,\n      'Trouble with parsing the json',\n      `Error ${errorMessage} returned when parsing`);\n  }\n  static AWSDKPrivacyPolicyDisclaimerMissing() {\n    return new AWSDKError(AWSDKErrorCode.privacyPolicyDisclaimerMissing,\n      'Server is missing a consumer privacy policy disclaimer',\n      '',\n      'Update the server configuration to add a consumer privacy policy disclaimer');\n  }\n  static AWSDKProviderBusy() {\n    return new AWSDKError(AWSDKErrorCode.providerBusy,\n      'The provider is busy and no longer available',\n      '',\n      'Retry with the correct provider',\n      409);\n  }\n  static AWSDKProviderNotAvailable(httpResponseCode) {\n    return new AWSDKError(AWSDKErrorCode.providerNotAvailable,\n      'Provider is not available',\n      '',\n      'Retry with the correct provider',\n      httpResponseCode);\n  }\n  static AWSDKProviderNotFound() {\n    return new AWSDKError(AWSDKErrorCode.providerNotFound,\n      'Provider was not found',\n      '',\n      'Retry with the correct provider',\n      404);\n  }\n  static AWSDKProviderNotLicensedForConsumerLocation() {\n    return new AWSDKError(AWSDKErrorCode.providerNotLicensedForConsumerLocation,\n      'Provider is not licensed for consumer location',\n      '',\n      'Retry with a provider that is licensed in the consumer location',\n      409);\n  }\n  static AWSDKProviderVideoNotEnabled() {\n    return new AWSDKError(AWSDKErrorCode.providerVideoNotEnabled,\n      'Provider does not have enhanced video enabled',\n      '',\n      'Retry with a different provider',\n      409);\n  }\n  static AWSDKRatingNotSubmittedError() {\n    return new AWSDKError(AWSDKErrorCode.ratingNotSubmittedError,\n      'Rating was not able to be submitted',\n      'Rating was not able to be submitted',\n      'Try again with a valid ratings or a visit that has been completed');\n  }\n  static AWSDKResponseError(errorMessage, olcError, statusCode) {\n    return new AWSDKError(AWSDKErrorCode.responseError,\n      errorMessage,\n      `olcError ${olcError}`,\n      '',\n      statusCode);\n  }\n  static AWSDKScheduleAppointmentFailed() {\n    return new AWSDKError(AWSDKErrorCode.scheduleAppointmentFailed,\n      'unable to schedule appointment',\n      '',\n      '',\n      409);\n  }\n  static AWSDKStartVisitFailed() {\n    return new AWSDKError(AWSDKErrorCode.startVisitFailed,\n      'unable to start the visit',\n      '',\n      '',\n      409);\n  }\n  static AWSDKUpdateConsumerAuthKeyFailed(httpResponseCode) {\n    return new AWSDKError(AWSDKErrorCode.updateConsumerAuthKeyFailed,\n      'Attempt to update consumerAuthKey failed',\n      '',\n      '',\n      httpResponseCode);\n  }\n  static AWSDKValidationConsumerUnderage() {\n    return new AWSDKError(AWSDKErrorCode.validationConsumerUnderage,\n      'Cannot register underage consumer',\n      '',\n      'Either correct the date of birth or register the consumer as a dependent',\n      400);\n  }\n  static AWSDKValidationEmailInUse() {\n    return new AWSDKError(AWSDKErrorCode.validationEmailInUse,\n      'There\\'s already a user in the American Well telehealth platform with the given email address',\n      '',\n      'Try again with a different email address');\n  }\n  static AWSDKValidationSourceIdInUse() {\n    return new AWSDKError(AWSDKErrorCode.validationSourceIdInUse,\n      'There\\'s already a consumer in the American Well telehealth platform with the given source id',\n      '',\n      'Try again with a different source id');\n  }\n  static AWSDKValidationRequiredParameterMissing(parameterName = '') {\n    const error = new AWSDKError(AWSDKErrorCode.validationRequiredParameterMissing,\n      'Missing required parameter',\n      `Parameter ${parameterName} is required but is empty`,\n      'Try again with required parameter');\n    error.fieldName = parameterName;\n    return error;\n  }\n  static AWSDKValidationIncompleteAddress(objectName = '', objectValue = '') {\n    const error = new AWSDKError(AWSDKErrorCode.validationIncompleteAddress,\n      'The provided address is incomplete or malformed.',\n      '',\n      'Try again with a complete address.');\n    error.fieldName = objectName;\n    error.fieldValue = objectValue;\n    return error;\n  }\n  static AWSDKValidationError(parameterName = '', parameterValue = '') {\n    const error = new AWSDKError(AWSDKErrorCode.validationError,\n      'Validation failed for parameter',\n      `Parameter ${parameterName} failed validation`,\n      'Try again with valid parameter');\n    error.fieldName = parameterName;\n    error.fieldValue = parameterValue;\n    return error;\n  }\n  static AWSDKValidationErrors(validationErrors) {\n    const error = new AWSDKError(AWSDKErrorCode.validationErrors,\n      'Validation failed',\n      'Multiple validation errors',\n      'Try again after correcting all errors');\n    error.errors = validationErrors;\n    return error;\n  }\n  static AWSDKVisitConsumerCallbackInvalid() {\n    return new AWSDKError(AWSDKErrorCode.visitConsumerCallbackInvalid,\n      'Invalid consumer callback number on visit',\n      'The visit does not have a valid consumer callback number',\n      'Update the consumer callback number',\n      409);\n  }\n  static AWSDKVisitExpired() {\n    return new AWSDKError(AWSDKErrorCode.visitExpired,\n      'The visit has expired',\n      'The consumer was late for a scheduled visit',\n      'Reschedule the visit',\n      410);\n  }\n  static AWSDKVisitInvalid() {\n    return new AWSDKError(AWSDKErrorCode.visitInvalid,\n      'The visit is invalid',\n      'The visit disposition is not valid',\n      'Reschedule the visit',\n      410);\n  }\n  static AWSDKVisitSummaryNotSentError() {\n    return new AWSDKError(AWSDKErrorCode.visitSummaryNotSentError,\n      'Visit summary was not able to be sent',\n      'Visit summary was not able to be sent',\n      'Try again with a valid email address or a visit that has been completed');\n  }\n  static AWSDKWaitingRoomAccessDenied() {\n    return new AWSDKError(AWSDKErrorCode.waitingRoomAccessDenied,\n      'Provider does not accept waiting room requests from consumer',\n      '',\n      '',\n      409);\n  }\n  static AWSDKMedicationSearchTextTooShort(fieldName, minLen) {\n    return new AWSDKError(AWSDKErrorCode.medicationSearchTextTooShort,\n      `The field ${fieldName} does not meet length requirements`,\n      `Field needs to be be at least ${minLen} characters long`,\n      `Try again with a string longer than ${minLen} characters`);\n  }\n  static AWSDKConsumerAlreadyRegistered() {\n    return new AWSDKError(AWSDKErrorCode.consumerAlreadyRegistered,\n      'The consumer is already completely registered',\n      '',\n      '');\n  }\n  static AWSDKAttachmentSizeTooLarge(fieldName, maxLen) {\n    return new AWSDKError(AWSDKErrorCode.attachmentSizeTooLarge,\n      `The field ${fieldName} is too large`,\n      `Field needs to be at most ${maxLen}kb in size`,\n      `Try again with data smaller than ${maxLen}kb`);\n  }\n  static AWSDKUnsupportedMimeType(fieldName) {\n    return new AWSDKError(AWSDKErrorCode.unsupportedMimeType,\n      `The field ${fieldName} has a mime-type that is unsupported by the American Well telehealth platform`,\n      'Field needs to have a mime-type that is supported.',\n      'Please check SystemConfiguration for supported types and try again');\n  }\n  static AWSDKFailedVirusScan(fieldName) {\n    return new AWSDKError(AWSDKErrorCode.failedVirusScan,\n      `The field ${fieldName} has a virus detected by the American Well telehealth platform`,\n      'Field needs to virus free in order to be attached.',\n      'Please scan your file locally and try again');\n  }\n  static AWSDKFileExists(fieldName) {\n    return new AWSDKError(AWSDKErrorCode.fileExists,\n      `The field ${fieldName} exists already on the American Well telehealth platform`,\n      'Field needs to different file to be attached.',\n      'Please choose a different file and try again');\n  }\n  static AWSDKFileReadError(fieldName) {\n    return new AWSDKError(AWSDKErrorCode.fileReadError,\n      `The field ${fieldName} can not be read by the American Well telehealth platform`,\n      'Field needs a different file to be attached. This one may be corrupted.',\n      'Please choose a different file and try again');\n  }\n  static AWSDKHealthPlanIsFeedControlled() {\n    return new AWSDKError(AWSDKErrorCode.healthPlanIsFeedControlled,\n      'The consumer\\'s health plan is feed controlled',\n      '',\n      '');\n  }\n  static AWSDKEligibilityCheckError(message) {\n    return new AWSDKError(AWSDKErrorCode.eligibilityCheckError,\n      `The eligibility check returned an error : ${message}`,\n      '',\n      '');\n  }\n  static AWSDKInaccurateSubscriberInfo() {\n    return new AWSDKError(AWSDKErrorCode.inaccurateSubscriberInfo,\n      'Inaccurate subscriber information was provided by the user and rejected by the eligibility check',\n      '',\n      '');\n  }\n  static AWSDKHealthPlanSubscriptionEnrollmentError(message) {\n    return new AWSDKError(AWSDKErrorCode.healthPlanSubscriptionEnrollmentError,\n      message,\n      '',\n      '');\n  }\n  static AWSDKNoProvidersAvailable() {\n    return new AWSDKError(AWSDKErrorCode.noProvidersAvailable,\n      'No providers were found during the First Available search',\n      '',\n      '');\n  }\n  static AWSDKPollingTimeout() {\n    return new AWSDKError(AWSDKErrorCode.pollingTimeout,\n      'Poll exceeded its allotted time',\n      '',\n      '');\n  }\n  static AWSDKIllegalUsage(descriptionOfIllegalUse, descriptionOfCorrectUse) {\n    return new AWSDKError(AWSDKErrorCode.illegalUsage,\n      'An API of the AWSDK was invoked improperly',\n      descriptionOfIllegalUse,\n      descriptionOfCorrectUse);\n  }\n  static AWSDKConsumerRecipientError() {\n    return new AWSDKError(AWSDKErrorCode.consumerRecipientError,\n      'The recipient of a secure message from a consumer cannot be a consumer',\n      '',\n      '');\n  }\n  static AWSDKDoesNotAcceptSecureMessages() {\n    return new AWSDKError(AWSDKErrorCode.doesNotAcceptSecureMessages,\n      'The recipient of this secure message does not accept secure messages',\n      '',\n      '');\n  }\n  static AWSDKEmailAddressNotFound() {\n    return new AWSDKError(AWSDKErrorCode.emailAddressNotFound,\n      'The email address associated with the request was not found',\n      '',\n      'Provide the correct email address',\n      400);\n  }\n  static AWSDKVersionIncompatible() {\n    return new AWSDKError(AWSDKErrorCode.versionIncompatible,\n      'The Telehealth platform is incompatible with this version of the sdk',\n      '',\n      'Either upgrade the Telehealth platform or use different Telehealth Platform that is compatible');\n  }\n  static AWSDKModifiedProtectedField(modifiedFields) {\n    return new AWSDKError(AWSDKErrorCode.modifiedProtectedField,\n      `The protected fields ${modifiedFields} were modified.`,\n      '',\n      'Try again without modifying the protected fields');\n  }\n  static AWSDKNoPreferredPharmacyFound() {\n    return new AWSDKError(AWSDKErrorCode.noPreferredPharmacyFound,\n      'No preferred pharmacy was found for the consumer',\n      '',\n      '');\n  }\n  static AWSDKNoShippingAddressFound() {\n    return new AWSDKError(AWSDKErrorCode.noShippingAddressFound,\n      'No shipping address was found for the consumer',\n      '',\n      '');\n  }\n  static AWSDKSpeedPassDisabled() {\n    return new AWSDKError(AWSDKErrorCode.speedPassDisabled,\n      'SpeedPass is not enabled on the system',\n      '',\n      '');\n  }\n  static AWSDKConsumerNotEligibleForSpeedPass() {\n    return new AWSDKError(AWSDKErrorCode.consumerNotEligibleForSpeedPass,\n      'Consumer is not eligible for speedPass',\n      '',\n      '');\n  }\n  static AWSDKInvalidParameter(message) {\n    return new AWSDKError(AWSDKErrorCode.invalidParameter,\n      message,\n      'Parameter was invalid',\n      'Provide a valid parameter',\n      400);\n  }\n  /**\n   * @since 1.4.0\n   */\n  static AWSDKInvalidTimeZone() {\n    return new AWSDKError(AWSDKErrorCode.invalidTimeZone,\n      'The timezone is invalid',\n      'The timezone is not a valid canonical timezone (Examples: America/New_York, Etc/UTC)',\n      'Provide a valid canonical timezone',\n      400);\n  }\n  /**\n   * @since 2.0.0\n   */\n  static AWSDKGuestEmailAlreadyInvited() {\n    return new AWSDKError(AWSDKErrorCode.guestEmailAlreadyInvited,\n      'The guest email has already been invited',\n      '',\n      'Provide another email address',\n      400);\n  }\n  /**\n   * @since 3.0.0\n   */\n  static AWSDKUnsupportedVideoPlatform() {\n    return new AWSDKError(AWSDKErrorCode.unsupportedVideoPlatform,\n      'The requested video platform is not supported');\n  }\n  get stackTrace() {\n    return this.__error.stackTrace || this.__error.stack;\n  }\n  get errorCode() {\n    return this.__errorCode;\n  }\n  get message() {\n    return this.__error.message;\n  }\n  get reason() {\n    return this.__reason;\n  }\n  get recoverySuggestion() {\n    return this.__recoverySuggestion;\n  }\n  get httpResponseCode() {\n    return this.__httpResponseCode;\n  }\n  set httpResponseCode(httpResponseCode) {\n    this.__httpResponseCode = httpResponseCode;\n  }\n  get errors() {\n    return this.__errors;\n  }\n  set errors(errors) {\n    this.__errors = errors || [];\n  }\n  get fieldName() {\n    return this.__fieldName;\n  }\n  set fieldName(fieldName) {\n    this.__fieldName = fieldName;\n  }\n  get fieldValue() {\n    return this.__fieldValue;\n  }\n  set fieldValue(fieldValue) {\n    this.__fieldValue = fieldValue;\n  }\n}\n\nexport default AWSDKError;\n","/*!\n * American Well Consumer Web SDK\n *\n * Copyright © 2017 American Well.\n * All rights reserved.\n *\n * It is illegal to use, reproduce or distribute\n * any part of this Intellectual Property without\n * prior written authorization from American Well.\n */\n\nimport AWSDKError from '../../error/awsdk_error';\n\nclass GenericParser {\n  /**\n   * Parses response to an object.\n   *\n   * @param {Mixed} val\n   * @returns {Klass} object\n   */\n  static parseJSON(response, Klass) {\n    if (response) {\n      try {\n        return new Klass(JSON.parse(response));\n      } catch (e) {\n        return AWSDKError.AWSDKParsingError(e.message);\n      }\n    } else {\n      return AWSDKError.AWSDKEmptyResponseError();\n    }\n  }\n  /**\n   * Parses value to an enum object.\n   *\n   * @param {String} val\n   * @param {Object} enumType\n   * @returns {string} string\n   */\n  static parseEnum(val, enumType) {\n    if (val === null || val === undefined) {\n      return val;\n    }\n    const adjustedVal = val\n      .replace(/MEMBER/g, 'CONSUMER')\n      .replace(/member/g, 'consumer')\n      .replace(/Member/g, 'Consumer')\n      .replace(/member/gi, 'CONSUMER')\n      .replace(/ENGAGEMENT/g, 'VISIT')\n      .replace(/engagement/g, 'visit')\n      .replace(/Engagement/g, 'Visit')\n      .replace(/engagement/gi, 'VISIT');\n    const mappedEnum = enumType[adjustedVal];\n    if (!mappedEnum) {\n      throw AWSDKError.AWSDKParsingError(`Value (${adjustedVal}) for enum was not parsed correctly or does not exist`);\n    }\n    return mappedEnum;\n  }\n\n  /**\n   * Parses string value from an enum (string or symbol), replaces consumer with member and visit with engagement\n   *\n   * @returns {string} the value that the enum is generated from\n   * @throws {Error} if the provided enumValue is not a Symbol, String, or Stringified Symbol\n   *\n   */\n  static parseAndConvertEnumValue(enumValue) {\n    if (!enumValue) {\n      throw new Error('enumValue is undefined, null, or empty.');\n    }\n\n    let parsedValue;\n    if (typeof enumValue === 'symbol' || enumValue.includes('Symbol(')) {\n      parsedValue = enumValue.toString().match(/Symbol\\(([^)]+)\\)/)[1];\n    } else {\n      parsedValue = enumValue;\n    }\n\n    return parsedValue.replace(/CONSUMER/g, 'MEMBER')\n      .replace(/consumer/g, 'member')\n      .replace(/Consumer/g, 'Member')\n      .replace(/consumer/gi, 'MEMBER')\n      .replace(/VISIT/g, 'ENGAGEMENT')\n      .replace(/visit/g, 'engagement')\n      .replace(/Visit/g, 'Engagement')\n      .replace(/visit/gi, 'ENGAGEMENT');\n  }\n\n  /**\n   * Parses value to an object.\n   *\n   * @param {Mixed} value\n   * @param {Class} Klass to create\n   * @returns {Klass} object\n   */\n  static parseObject(value, Klass) {\n    if (value == null) {\n      return null;\n    }\n    if (value instanceof Klass) {\n      return value;\n    }\n    return new Klass(value);\n  }\n\n  /**\n   * Parses value to a boolean.\n   *\n   * @param {Mixed} val\n   * @returns {Boolean} true/false\n   */\n  static parseBoolean(value) {\n    let val = value;\n    if (val == null) {\n      return false;\n    }\n\n    if (typeof val === 'boolean') {\n      if (val === true) {\n        return true;\n      }\n      return false;\n    }\n\n    if (typeof val === 'string') {\n      if (val === '') {\n        return false;\n      }\n\n      val = val.replace(/^\\s+|\\s+$/g, '');\n      if (val.toLowerCase() === 'true' || val.toLowerCase() === 'yes') {\n        return true;\n      }\n\n      val = val.replace(/,/g, '.');\n      val = val.replace(/^\\s*-\\s*/g, '-');\n    }\n\n    if (!isNaN(val)) {\n      return (parseFloat(val) !== 0);\n    }\n\n    return false;\n  }\n\n  /**\n   * Parses value to a date.\n   *\n   * @param {Mixed} value\n   * @returns {Date} Date from value\n   */\n  static parseDate(value) {\n    if (value == null || value === '' || value === 'null') {\n      return null;\n    }\n    return new Date(value);\n  }\n}\n\nexport default GenericParser;\n","/*!\n * American Well Consumer Web SDK\n *\n * Copyright © 2017 American Well.\n * All rights reserved.\n *\n * It is illegal to use, reproduce or distribute\n * any part of this Intellectual Property without\n * prior written authorization from American Well.\n */\n/**\n * AWSDKEntityId class\n * @property {String} encryptedId the encrypted id\n * @property {String} persistentId the persistent id\n */\nclass AWSDKEntityId {\n  constructor(data) {\n    this.__data = data;\n  }\n\n  get encryptedId() {\n    return this.__data.encryptedId;\n  }\n\n  get persistentId() {\n    return this.__data.persistentId;\n  }\n\n  toString() {\n    const dataString = JSON.stringify(this.__data);\n    return dataString;\n  }\n}\n\nexport default AWSDKEntityId;\n","/*!\n * American Well Consumer Web SDK\n *\n * Copyright © 2017 American Well.\n * All rights reserved.\n *\n * It is illegal to use, reproduce or distribute\n * any part of this Intellectual Property without\n * prior written authorization from American Well.\n */\nimport AWSDKDataObject from './awsdk_dataobject';\nimport AWSDKEntityId from '../internal/model/awsdk_entity_id';\nimport GenericParser from '../internal/parser/generic_parser';\n/**\n * AWSDKEntity class represents the base class for all objects with ids and links\n * @property {AWSDKEntityId} id The id of the object\n * @extends model.AWSDKDataObject\n */\nclass AWSDKEntity extends AWSDKDataObject {\n  get id() {\n    return GenericParser.parseObject(this.__data.id, AWSDKEntityId);\n  }\n\n  get links() {\n    return this.__data.links;\n  }\n}\n\nexport default AWSDKEntity;\n","/*!\n * American Well Consumer Web SDK\n *\n * Copyright © 2017 American Well.\n * All rights reserved.\n *\n * It is illegal to use, reproduce or distribute\n * any part of this Intellectual Property without\n * prior written authorization from American Well.\n */\nimport AWSDKEntity from './awsdk_entity';\nimport GenericParser from '../internal/parser/generic_parser';\n/**\n * AWSDKstate class contains all the necessary information to correctly describe a given state and other state relevant information\n * @property {String} code the state code\n * @property {String} name the state name\n * @property {String} countryCode the country code\n * @property {String} countryName the country name\n * @property {String} rxServiceState the rx service options\n * @property {Boolean} legalResidence if the state can be used to set set legal residence\n * @property {Boolean} legalAddress if the state can be used on an address\n * @extends model.AWSDKEntity\n */\nclass AWSDKState extends AWSDKEntity {\n  get code() {\n    return this.__data.code;\n  }\n\n  get name() {\n    return this.__data.name;\n  }\n\n  get countryCode() {\n    return this.__data.country ? this.__data.country.code : null;\n  }\n\n  get countryName() {\n    return this.__data.country ? this.__data.country.name : null;\n  }\n\n  get rxServiceStatus() {\n    return this.__data.rxServiceStatus;\n  }\n\n  get legalResidence() {\n    return GenericParser.parseBoolean(this.__data.legalResidence);\n  }\n\n  get legalAddress() {\n    return GenericParser.parseBoolean(this.__data.legalAddress);\n  }\n}\n\nexport default AWSDKState;\n","/*!\n * American Well Consumer Web SDK\n *\n * Copyright © 2017 American Well.\n * All rights reserved.\n *\n * It is illegal to use, reproduce or distribute\n * any part of this Intellectual Property without\n * prior written authorization from American Well.\n */\nimport deprecated from 'awcoresdk/lib/util/deprecated';\nimport AWSDKDataObject from './awsdk_dataobject';\nimport GenericParser from '../internal/parser/generic_parser';\nimport AWSDKState from './awsdk_state';\n\n\n/**\n * AWSDKAddress class contains all the information necessary to correctly represent a physical residential address.\n * @property {String} address1 the first line of the address\n * @property {String} address2 the second line of the address\n * @property {String} city  the city name\n * @property {model.AWSDKState} geographicalState the actual underlying {@link model.AWSDKState} of the address\n * @property {String} stateCode  the two letter code for the state. example: MA\n * @property {String} stateName  the name of the state\n * @property {String} countryCode  the standardized country code for a particular country\n * @property {String} countryName  the name of the country\n * @property {String} zipCode  the zip (postal) code for this physical location\n * @property {String} formattedAddress the formatted address for display purposes\n * @extends model.AWSDKDataObject\n */\nclass AWSDKAddress extends AWSDKDataObject {\n  get address1() {\n    return this.__data.address1;\n  }\n\n  get address2() {\n    return this.__data.address2;\n  }\n\n  get city() {\n    return this.__data.city;\n  }\n\n  get stateCode() {\n    return this.__data.state ? this.__data.state.code : null;\n  }\n\n  get stateName() {\n    return this.__data.state ? this.__data.state.name : null;\n  }\n\n  get geographicalState() {\n    return this.__data.state ? GenericParser.parseObject(this.__data.state, AWSDKState) : null;\n  }\n\n  get countryCode() {\n    return this.__data.state && this.__data.state.country ? this.__data.state.country.code : null;\n  }\n\n  get countryName() {\n    return this.__data.state && this.__data.state.country ? this.__data.state.country.name : null;\n  }\n  /**\n   * @deprecated in favor of {@link model.AWSDKAddress.formattedAddress}\n   * @type {String}\n   */\n  get formmatedAddress() {\n    deprecated('AWSDKAddress.formmatedAddress', 'Use AWSDKAddress.formattedAddress instead', '3.X');\n    return this.__data.formattedDisplayValue;\n  }\n  /**\n   * @since 1.4.0\n   */\n  get formattedAddress() {\n    return this.__data.formattedDisplayValue;\n  }\n  get zipCode() {\n    return this.__data.zipCode;\n  }\n}\n\nexport default AWSDKAddress;\n","/*!\n * American Well Consumer Web SDK\n *\n * Copyright © 2017 American Well.\n * All rights reserved.\n *\n * It is illegal to use, reproduce or distribute\n * any part of this Intellectual Property without\n * prior written authorization from American Well.\n */\nimport AWSDKDataObject from './../awsdk_dataobject';\nimport GenericParser from '../../internal/parser/generic_parser';\n\n/**\n * AWSDKPayerInfo class represents a payer information object encapsulating the information about a payer in a health plan.\n * @property {String} subscriberIdPattern the subscriber id pattern for this health plan.\n * @property {String} subscriberIdPatternErrorMessage the error message to show if the subscriber id does not match the pattern.\n * @property {Boolean} isSuppressCharge returns TRUE if the health plan is configured to suppress payment when a timeout occurs during an eligibility check.\n * @property {Boolean} showPrimarySubscriberQuestion returns TRUE if the primary subscriber question should be displayed.\n * @extends model.AWSDKDataObject\n */\nclass AWSDKPayerInfo extends AWSDKDataObject {\n  get subscriberIdPattern() {\n    return this.__data.subscriberIdPattern;\n  }\n\n  get subscriberIdPatternErrorMessage() {\n    return this.__data.subscriberIdPatternErrorMessage;\n  }\n\n  get isSuppressCharge() {\n    return GenericParser.parseBoolean(this.__data.suppressCharge);\n  }\n\n  /**\n   * @since 1.5.0\n   */\n  get showPrimarySubscriberQuestion() {\n    return GenericParser.parseBoolean(this.__data.showPrimarySubscriberQuestion);\n  }\n}\n\nexport default AWSDKPayerInfo;\n","/*!\n * American Well Consumer Web SDK\n *\n * Copyright © 2017 American Well.\n * All rights reserved.\n *\n * It is illegal to use, reproduce or distribute\n * any part of this Intellectual Property without\n * prior written authorization from American Well.\n */\nimport AWSDKEntity from './../awsdk_entity';\nimport AWSDKPayerInfo from './awsdk_payer_info';\nimport GenericParser from '../../internal/parser/generic_parser';\n\n/**\n * AWSDKHealthPlan class represents a health plan object, which encapsulates information about a health plan.\n * @property {String} name the health plan name.\n * @property {String} qualifier the health plan qualifier.\n * @property {Boolean} usesSuffix returns TRUE if the health plan uses suffixes.\n * @property {Boolean} feedControlled returns TRUE if the health plan is feed controlled.\n * @property {model.AWSDKPayerInfo} payerInfo information about the payer.\n * @extends model.AWSDKEntity\n */\nclass AWSDKHealthPlan extends AWSDKEntity {\n  get name() {\n    return this.__data.name;\n  }\n  get qualifier() {\n    return this.__data.qualifier;\n  }\n  get usesSuffix() {\n    return GenericParser.parseBoolean(this.__data.usesSuffix);\n  }\n\n  get feedControlled() {\n    return GenericParser.parseBoolean(this.__data.feedControlled);\n  }\n\n  get payerInfo() {\n    return GenericParser.parseObject(this.__data.payerInfo, AWSDKPayerInfo);\n  }\n}\n\nexport default AWSDKHealthPlan;\n","/*!\n * American Well Consumer Web SDK\n *\n * Copyright © 2017 American Well.\n * All rights reserved.\n *\n * It is illegal to use, reproduce or distribute\n * any part of this Intellectual Property without\n * prior written authorization from American Well.\n */\nimport AWSDKDataObject from './../awsdk_dataobject';\nimport GenericParser from '../../internal/parser/generic_parser';\n\n/**\n * AWSDKRelationshipToSubscriberCode class represents a relationship object between an person covered by a health plan insurance and the policy owner.\n * @property {String} displayName the display name for the relationship code.\n * @property {String} localizedDisplayName the localized display name for the relationship code.\n * @property {Number} warehouseValue the internal numeric value used to represent the relationship code.\n * @property {Boolean} isValidForMinorAccount is the relationship code valid for minor's.\n * @extends model.AWSDKDataObject\n */\nclass AWSDKRelationshipToSubscriberCode extends AWSDKDataObject {\n  get displayName() {\n    return this.__data.displayName;\n  }\n\n  get localizedDisplayName() {\n    return this.__data.translatedDisplayName || this.__data.localizedDisplayName;\n  }\n\n  get warehouseValue() {\n    return this.__data.warehouseValue;\n  }\n  get isValidForMinorAccount() {\n    return GenericParser.parseBoolean(this.__data.isValidForMinorAccount);\n  }\n}\n\nexport default AWSDKRelationshipToSubscriberCode;\n","/*!\n * American Well Consumer Web SDK\n *\n * Copyright © 2017 American Well.\n * All rights reserved.\n *\n * It is illegal to use, reproduce or distribute\n * any part of this Intellectual Property without\n * prior written authorization from American Well.\n */\nimport AWSDKEntity from './../awsdk_entity';\nimport AWSDKPayerInfo from './awsdk_payer_info';\nimport GenericParser from '../../internal/parser/generic_parser';\n\n/**\n * The AWSDKEligibilityCheck represents an eligibility check object\n * @property {String} eligibilityRequestId the id of the request\n * @property {String} eligibilityCheckRequired whether or not the check was required\n * @property {String} eligibilityCheckCompleted whether or not the check was completed\n * @property {String} eligibilityError error associated with the check\n * @extends model.AWSDKEntity\n */\nclass AWSDKEligibilityCheck extends AWSDKEntity {\n  get eligibilityRequestId() {\n    return this.__data.eligibilityRequestId;\n  }\n\n  get eligibilityCheckRequired() {\n    return GenericParser.parseBoolean(this.__data.eligibilityCheckRequired);\n  }\n\n  get eligibilityCheckCompleted() {\n    return GenericParser.parseBoolean(this.__data.eligibilityCheckCompleted);\n  }\n\n  get eligibilityError() {\n    return this.__data.eligibilityError;\n  }\n}\n\nexport default AWSDKEligibilityCheck;\n","/*!\n * American Well Consumer Web SDK\n *\n * Copyright © 2017 American Well.\n * All rights reserved.\n *\n * It is illegal to use, reproduce or distribute\n * any part of this Intellectual Property without\n * prior written authorization from American Well.\n */\nimport AWSDKEntity from './../awsdk_entity';\nimport AWSDKHealthPlan from './awsdk_health_plan';\nimport AWSDKRelationshipToSubscriberCode from './awsdk_relationship_to_subscriber_code';\nimport GenericParser from '../../internal/parser/generic_parser';\nimport AWSDKEligibilityCheck from './awsdk_eligibility_check';\n/**\n * AWSDKSubscription class represents the subscription object pertaining to a given health plan insurance.\n * @property {model.AWSDKHealthPlan} healthPlan the health plan.\n * @property {String} subscriberId the health insurance subscriber id.\n * @property {String} subscriberSuffix the health insurance subscriber suffix.\n * @property {Date} startDate the health insurance start date\n * @property {Date} endDate the health insurance end date\n * @property {model.AWSDKRelationshipToSubscriberCode} relationshipToSubscriberCode what is relationship with the primary subscriber\n * @property {String} primarySubscriberFirstName the primary subscriber's first name.\n * @property {String} primarySubscriberLastName  the primary subscriber's last name.\n * @property {Date} primarySubscriberDateOfBirth the primary subscriber's date of birth.\n * @extends model.AWSDKEntity\n */\nclass AWSDKSubscription extends AWSDKEntity {\n  get healthPlan() {\n    return GenericParser.parseObject(this.__data.healthPlan, AWSDKHealthPlan);\n  }\n\n  get subscriberId() {\n    return this.__data.subscriberId;\n  }\n\n  get subscriberSuffix() {\n    return this.__data.subscriberSuffix;\n  }\n\n  get startDate() {\n    return GenericParser.parseDate(this.__data.startDate);\n  }\n\n  get endDate() {\n    return GenericParser.parseDate(this.__data.endDate);\n  }\n\n  get relationshipToSubscriberCode() {\n    return GenericParser.parseObject(this.__data.relationshipToSubscriberCode, AWSDKRelationshipToSubscriberCode);\n  }\n\n  get primarySubscriberFirstName() {\n    return this.__data.primarySubscriberFirstName;\n  }\n\n  get primarySubscriberLastName() {\n    return this.__data.primarySubscriberLastName;\n  }\n\n  get primarySubscriberDateOfBirth() {\n    return GenericParser.parseDate(this.__data.primarySubscriberDateOfBirth);\n  }\n\n  get eligibilityCheck() {\n    return GenericParser.parseObject(this.__data.eligibilityResponse, AWSDKEligibilityCheck);\n  }\n\n  set healthPlan(healthPlan) {\n    this.__data.healthPlan = healthPlan;\n  }\n\n  set subscriberId(subscriberId) {\n    this.__data.subscriberId = subscriberId;\n  }\n\n  set subscriberSuffix(subscriberSuffix) {\n    this.__data.subscriberSuffix = subscriberSuffix;\n  }\n\n  set startDate(startDate) {\n    this.__data.startDate = startDate;\n  }\n\n  set endDate(endDate) {\n    this.__data.endDate = endDate;\n  }\n\n  set relationshipToSubscriberCode(relationshipToSubscriberCode) {\n    this.__data.relationshipToSubscriberCode = relationshipToSubscriberCode;\n  }\n\n  set primarySubscriberFirstName(primarySubscriberFirstName) {\n    this.__data.primarySubscriberFirstName = primarySubscriberFirstName;\n  }\n\n  set primarySubscriberLastName(primarySubscriberLastName) {\n    this.__data.primarySubscriberLastName = primarySubscriberLastName;\n  }\n\n  set primarySubscriberDateOfBirth(primarySubscriberDateOfBirth) {\n    this.__data.primarySubscriberDateOfBirth = primarySubscriberDateOfBirth;\n  }\n}\n\nexport default AWSDKSubscription;\n","/*!\r\n * American Well Consumer Web SDK\r\n *\r\n * Copyright © 2018 American Well.\r\n * All rights reserved.\r\n *\r\n * It is illegal to use, reproduce or distribute\r\n * any part of this Intellectual Property without\r\n * prior written authorization from American Well.\r\n */\r\n\r\n/**\r\n * Enum for AWSDKGender.\r\n * @readonly\r\n * @enum {string}\r\n * @since 1.2.0\r\n */\r\nconst AWSDKGender = {\r\n  /**\r\n   * The FEMALE gender of a consumer\r\n   */\r\n  FEMALE: 'FEMALE',\r\n  /**\r\n   * The MALE gender of a consumer\r\n   */\r\n  MALE: 'MALE',\r\n  /**\r\n   * The UNKNOWN gender of a consumer\r\n   */\r\n  UNKNOWN: 'UNKNOWN',\r\n};\r\nObject.freeze(AWSDKGender);\r\nexport default AWSDKGender;\r\n","/*!\n * American Well Consumer Web SDK\n *\n * Copyright (c) 2019 American Well.\n * All rights reserved.\n *\n * It is illegal to use, reproduce or distribute\n * any part of this Intellectual Property without\n * prior written authorization from American Well.\n */\n\nimport AWSDKEntity from '../awsdk_entity';\n\n/**\n * This class expands on the concept of gender to make it more inclusive to modern gender identifications\n */\nclass AWSDKGenderIdentity extends AWSDKEntity {\n  /**\n   * The string that uniquely identifies this gender identity\n   * @type {string}\n   * @since 2.5.0\n   */\n  get key() {\n    return this.__data.genderKey;\n  }\n\n  /**\n   * The string representing the localized display name for the gender identity\n   * @type {string}\n   * @since 2.5.0\n   */\n  get genderText() {\n    return this.__data.genderText;\n  }\n\n  /**\n   * The object representing a mapping of additional locales to genderText\n   * @type {Object}\n   * @since 2.5.0\n   */\n  get genderTexts() {\n    return this.__data.genderTexts;\n  }\n}\nexport default AWSDKGenderIdentity;\n","/*!\n * American Well Consumer Web SDK\n *\n * Copyright © 2017 American Well.\n * All rights reserved.\n *\n * It is illegal to use, reproduce or distribute\n * any part of this Intellectual Property without\n * prior written authorization from American Well.\n */\nimport deprecated from 'awcoresdk/lib/util/deprecated';\n\nimport AWSDKAddress from '../awsdk_address';\nimport AWSDKEntity from './../awsdk_entity';\nimport AWSDKState from '../awsdk_state';\nimport AWSDKSubscription from '../insurance/awsdk_subscription';\nimport GenericParser from '../../internal/parser/generic_parser';\nimport AWSDKError from '../../error/awsdk_error';\nimport AWSDKGender from './awsdk_gender';\nimport AWSDKGenderIdentity from './awsdk_gender_identity';\n\n/**\n * The AWSDKConsumer class represents a Consumer object.\n * This class represents both a consumerInfo and a consumerDetails, since the difference between the two is minimal and we, for the most part, only care about consumer details\n * Please note that the consumer object returned with an authentication call lacks certain fields: most notably the dependents field.\n * @property {model.AWSDKAddress} address the consumer's address.\n * @property {model.AWSDKSubscription} subscription the consumer's health plan subscription.\n * @property {model.AWSDKState} legalResidence the consumer's legal residence.\n * @property {String} preferredLocale the consumer's preferred locale.\n * @property {Date} dob the consumer's date of birth\n * @property {String} age the consumer's age\n * @property {String} email the consumer's email address\n * @property {String} firstName the consumer's first name\n * @property {String} lastName the consumer's last name\n * @property {String} middleInitial the consumer's middle initial\n * @property {String} fullName the consumer's full name (first, middle and last)\n * @property {Boolean} registered boolean true if the consumer is registered, false otherwise\n * @property {String} gender the consumer's gender\n * @property {String} localizedGender the consumer's localized gender\n * @property {String} phone the consumer's phone number\n * @property {String} formattedPhone the formatted consumer's phone number\n * @property {String} memberType the type of consumer\n * @property {Boolean} appointmentReminderTextsEnabled boolean true if appointment reminder texts are enabled, false otherwise\n * @property {String} pin the consumer's pin\n * @property {String} feedType the type of feed that added this Consumer to storage\n * @property {model.AWSDKGender} genderEnum the consumer's {@link model.AWSDKGender|AWSDKGender}\n * @property {String} href the link to this Consumer's details\n * @property {String} formularyRestriction any formulary restrictions this provider might have\n * @property {String} patientMrnId the patient's medical record number id\n * @property {model.AWSDKConsumer[]} dependents the dependents associated to this consumer\n * @property {Number} lastLogin the last time this consumer logged in\n * @property {Boolean} eligibleForVisit boolean true if the Consumer is eligible for a visit\n * @property {model.AWSDKConsumer} parent if this is a dependent then this property will reference the parent {@link model.AWSDKConsumer|Consumer} object, null otherwise.\n * @property {String} sourceId an ID for the consumer that can be used to associate this account with an account in an external system\n * @property {model.AWSDKConsumer[]} proxies the legal guardians for this Consumer. If a dependent this will be the parents/legal guardians, otherwise it will be an empty array.\n * @property {Boolean} isDependent returns a boolean that specifies whether or not this consumer is a dependent\n * @property {String} timeZone the canonical time zone for this consumer. Example: America/New_York\n * @property {String} sdkUserId the sdkUserId which associates an external ID with this consumer and the SDK configuration in use\n * @property {String[]} brandings an Array of Strings representing a consumer's branding attributes.\n * @property {model.AWSDKGenderIdentity} genderIdentity an object representing the more inclusive gender types supported by a telehealth platform\n * @extends model.AWSDKEntity\n */\nclass AWSDKConsumer extends AWSDKEntity {\n  get address() {\n    return GenericParser.parseObject(this.__data.address, AWSDKAddress);\n  }\n\n  get subscription() {\n    return GenericParser.parseObject(this.__data.subscription, AWSDKSubscription);\n  }\n\n  get legalResidence() {\n    return GenericParser.parseObject(this.__data.legalResidence, AWSDKState);\n  }\n\n  get preferredLocale() {\n    return this.__data.preferredLocale;\n  }\n\n  get dob() {\n    return GenericParser.parseDate(this.__data.dob);\n  }\n\n  get age() {\n    return this.__data.age;\n  }\n\n  get email() {\n    return this.__data.email;\n  }\n\n  get firstName() {\n    return this.__data.firstName;\n  }\n\n  get lastName() {\n    return this.__data.lastName;\n  }\n\n  get middleInitial() {\n    return this.__data.middleInitial;\n  }\n\n  get middleName() {\n    return this.__data.middleName;\n  }\n\n  get fullName() {\n    return this.__data.fullName;\n  }\n\n  get registered() {\n    return GenericParser.parseBoolean(this.__data.enrolled);\n  }\n\n  get gender() {\n    return this.__data.gender;\n  }\n\n  get localizedGender() {\n    return this.__data.localizedGenderDisplayName;\n  }\n\n  get genderEnum() {\n    return GenericParser.parseEnum(this.__data.genderEnum, AWSDKGender);\n  }\n\n  get phone() {\n    return this.__data.phone;\n  }\n\n  get formattedPhone() {\n    return this.__data.formattedPhone;\n  }\n\n  get memberType() {\n    return this.__data.memberType;\n  }\n\n  get appointmentReminderTextsEnabled() {\n    return GenericParser.parseBoolean(this.__data.appointmentReminderTextsEnabled);\n  }\n\n  get href() {\n    return this.__data.href;\n  }\n\n  get pin() {\n    return this.__data.pin;\n  }\n\n  get feedType() {\n    return this.__data.feedType;\n  }\n\n  get formularyRestriction() {\n    return this.__data.formularyRestriction;\n  }\n\n  get patientMrnId() {\n    return this.__data.patientMrnId;\n  }\n\n  /**\n   * @deprecated @since 1.3.0 use the method consumerService#getDependents(consumer) instead\n   */\n  get dependents() {\n    deprecated('AWSDKConsumer.dependents', 'Use consumerService.getDependents instead', '3.X');\n    if (this.__dependents === undefined) {\n      const dependentsList = this.__data.dependents;\n      if (dependentsList != null && Array.isArray(dependentsList) && dependentsList.length > 0) {\n        this.__dependents = dependentsList.map((item) => {\n          const obj = GenericParser.parseObject(item, AWSDKConsumer);\n          obj.parent = this;\n          return obj;\n        });\n      } else {\n        this.__dependents = null;\n      }\n    }\n    return this.__dependents;\n  }\n\n  get lastLogin() {\n    return this.__data.lastLogin;\n  }\n\n  get eligibleForVisit() {\n    return GenericParser.parseBoolean(this.__data.eligibleForVisit);\n  }\n\n  /**\n   * @deprecated @since 1.3.1 use proxies property instead\n   */\n  get parent() {\n    deprecated('AWSDKConsumer.parent', 'Use AWSDKConsumer.proxies instead', '3.X');\n    return this.__parent ? this.__parent : null;\n  }\n\n\n  /**\n   * private\n   * @deprecated @since 1.3.1 use proxies property instead\n   */\n  set parent(parent) {\n    deprecated('AWSDKConsumer.parent', 'Use AWSDKConsumer.proxies instead', '3.X');\n    if (parent != null) {\n      if (parent instanceof AWSDKConsumer) {\n        this.__parent = parent;\n      } else {\n        throw AWSDKError.AWSDKIllegalArgument('parent is not instance of AWSDKConsumer');\n      }\n    } else {\n      this.__parent = null;\n    }\n  }\n\n  /**\n   * @since 1.2.2\n   */\n  get sourceId() {\n    return this.__data.sourceId;\n  }\n\n  /**\n   * @since 1.3.0\n   */\n  get proxies() {\n    return (Array.isArray(this.__data.proxies) && this.__data.proxies.map(element => GenericParser.parseObject(element, AWSDKConsumer))) || [];\n  }\n\n  set proxies(proxies) {\n    if (Array.isArray(proxies) && proxies.every(item => item instanceof AWSDKConsumer)) {\n      this.__data.proxies = proxies.map(item => item.__data);\n    } else {\n      this.__data.proxies = null;\n    }\n  }\n\n  /**\n   * @since 1.3.1\n   */\n  get isDependent() {\n    return this.proxies.length > 0;\n  }\n\n  /**\n   * @since 1.4.0\n   */\n  get timeZone() {\n    return this.__data.timeZone;\n  }\n\n  /**\n  * @since 1.5.0\n  */\n  get brandings() {\n    return this.__data.brandings;\n  }\n\n  /**\n   * @since 2.0.0\n   */\n  get sdkUserId() {\n    return this.__data.sdkUserId;\n  }\n\n  /**\n   * A {@link model.AWSDKGenderIdentity} if the telehealth platform supports it\n   * @since 2.5.0\n   * @type {model.AWSDKGenderIdentity}\n   */\n  get genderIdentity() {\n    return GenericParser.parseObject(this.__data.genderIdentity, AWSDKGenderIdentity);\n  }\n}\n\nexport default AWSDKConsumer;\n","/*!\n * American Well Consumer Web SDK\n *\n * Copyright © 2017 American Well.\n * All rights reserved.\n *\n * It is illegal to use, reproduce or distribute\n * any part of this Intellectual Property without\n * prior written authorization from American Well.\n */\n\nimport AWSDKDataObject from './awsdk_dataobject';\nimport AWSDKState from './awsdk_state';\nimport GenericParser from '../internal/parser/generic_parser';\n\n/**\n * AWSDKCountry class represents a physical country\n * @property {String} code the country code\n * @property {String} name the country name\n * @property {model.AWSDKState[]} states the array of states in the country\n * @extends model.AWSDKDataObject\n */\nclass AWSDKCountry extends AWSDKDataObject {\n  get code() {\n    return this.__data.code;\n  }\n\n  get name() {\n    return this.__data.name;\n  }\n\n  get states() {\n    return this.__data.states.map(item => GenericParser.parseObject(item, AWSDKState));\n  }\n}\n\nexport default AWSDKCountry;\n","/*!\r\n * American Well Consumer Web SDK\r\n *\r\n * Copyright © 2020 American Well.\r\n * All rights reserved.\r\n *\r\n * It is illegal to use, reproduce or distribute\r\n * any part of this Intellectual Property without\r\n * prior written authorization from American Well.\r\n */\r\n\r\n/**\r\n * Enum for AWSDKDeviceIntegrationMode to distinguish between different device integration modes.\r\n * @readonly\r\n * @enum {string}\r\n * @since 2.9.0\r\n */\r\nconst AWSDKDeviceIntegrationMode = {\r\n  /**\r\n   * Tyto Device Live Stream mode.\r\n   */\r\n  TYTO_LIVESTREAM: 'TYTO_LIVESTREAM',\r\n  /**\r\n   * Tyto Device store and forward mode.\r\n   */\r\n  TYTO_STOREANDFORWARD: 'TYTO_STOREANDFORWARD',\r\n  /**\r\n   * Device is disabled.\r\n   */\r\n  DISABLED: 'DISABLED',\r\n};\r\nObject.freeze(AWSDKDeviceIntegrationMode);\r\nexport default AWSDKDeviceIntegrationMode;\r\n","/*!\r\n * American Well Consumer Web SDK\r\n *\r\n * Copyright (c) 2017 American Well.\r\n * All rights reserved.\r\n *\r\n * It is illegal to use, reproduce or distribute\r\n * any part of this Intellectual Property without\r\n * prior written authorization from American Well.\r\n */\r\nimport AWSDKEntity from '../../model/awsdk_entity';\r\nimport GenericParser from '../../internal/parser/generic_parser';\r\nimport AWSDKDeviceIntegrationMode from '../../model/device_integration/awsdk_device_integration_mode';\r\n\r\n/**\r\n * The AWSDKPracticeBase is the base class for all Practice objects\r\n * @property {String} name the name of the Practice\r\n * @property {String} practiceType the type of practice that this Practice refers to\r\n * @property {Boolean} acceptInsuranceEnabled boolean true if the insurance details should be shown to users of this practice, false otherwise.\r\n * @property {Boolean} screenSharingEnabled boolean TRUE if this practice allows screen sharing, FALSE otherwise.\r\n * @property {model.AWSDKDeviceIntegrationMode} deviceIntegrationMode represents the mode of the device integration to be used for the practice. @since 2.9.0\r\n * @extends model.AWSDKEntity\r\n */\r\nclass AWSDKPracticeBase extends AWSDKEntity {\r\n  get href() {\r\n    return this.__data.href;\r\n  }\r\n\r\n  get name() {\r\n    return this.__data.name;\r\n  }\r\n\r\n  get practiceType() {\r\n    return this.__data.practiceType;\r\n  }\r\n\r\n  get acceptInsuranceEnabled() {\r\n    return GenericParser.parseBoolean(this.__data.acceptInsuranceEnabled);\r\n  }\r\n\r\n  /**\r\n   * @type {Boolean}\r\n   * @since 3.1.0\r\n   */\r\n  get screenSharingEnabled() {\r\n    return GenericParser.parseBoolean(this.__data.screenSharingEnabled);\r\n  }\r\n\r\n  /**\r\n   * @since 2.9.0\r\n   */\r\n  get deviceIntegrationMode() {\r\n    return GenericParser.parseEnum(this.__data.deviceIntegrationMode, AWSDKDeviceIntegrationMode);\r\n  }\r\n}\r\nexport default AWSDKPracticeBase;\r\n","/*!\n * American Well Consumer Web SDK\n *\n * Copyright © 2017 American Well.\n * All rights reserved.\n *\n * It is illegal to use, reproduce or distribute\n * any part of this Intellectual Property without\n * prior written authorization from American Well.\n */\n\nimport GenericParser from '../parser/generic_parser';\n\nconst _anyOneCharNonLineTerminator = /./;\nconst _anySingleChar = /\\S/;\nconst _phoneRegex = /^\\+?[0-9.-]+$/;\nconst _emailRegex = /^[a-zA-Z0-9!#$%&amp;'*+\\\\/=?^_`{|}~-]+(?:\\.[a-zA-Z0-9!#$%&amp;'*+\\\\/=?^_`{|}~-]+)*@(?:[a-zA-Z0-9](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?\\.)+[a-zA-Z]{2,}$/;\nconst _zipRegex = /^[0-9]{5}(-[0-9]{4})?$/;\nconst _threeDigitRegex = /^\\d{3}$/;\nconst _fourDigitRegex = /^\\d{4}$/;\n\nclass Validator {\n  static isInt(x) {\n    const y = parseInt(x, 10);\n    // eslint-disable-next-line eqeqeq\n    return !isNaN(y) && x == y && x.toString() === y.toString();\n  }\n  static isValidString(element, isWhitespaceOnlyValid = true) {\n    return element != null && element !== ''\n      && Validator.isStringType(element)\n      && (isWhitespaceOnlyValid || element.trim() !== '');\n  }\n\n  static isStringType(element) {\n    return typeof element === 'string' || element instanceof String;\n  }\n  static isValidLink(link) {\n    return link != null && Validator.isValidString(link.url);\n  }\n\n  static isMiddleInitialValid(middleInitial, regex = _anySingleChar) {\n    return Validator.hasValidFormat(middleInitial, 1, 0, regex);\n  }\n\n  static isMiddleNameValid(middleName, regex = _anySingleChar) {\n    if (middleName === '') {\n      return true;\n    }\n    return Validator.hasMatch(middleName, regex);\n  }\n\n  static isFirstNameValid(firstName, regex = _anyOneCharNonLineTerminator) {\n    return Validator.hasMatch(firstName, regex);\n  }\n\n  static isLastNameValid(lastName, regex = _anyOneCharNonLineTerminator) {\n    return Validator.hasMatch(lastName, regex);\n  }\n\n  static isPhoneNumberValid(phoneNumber, regex = _phoneRegex) {\n    if (Validator.isValidString(phoneNumber) && phoneNumber.length >= 10) {\n      return Validator.hasMatch(phoneNumber, regex);\n    }\n    return false;\n  }\n\n  static isAddressValid(address, isRequired, regex) {\n    if (!Validator.isValidString(address)) {\n      return !isRequired;\n    }\n    const minLen = isRequired ? 1 : 0;\n    const regexToUse = (isRequired && regex) || (isRequired ? /^.+$/ : /.*/);\n    return Validator.hasValidFormat(address, 255, minLen, regexToUse);\n  }\n\n  static isEmailValid(email, regex = _emailRegex) {\n    return Validator.isValidString(email) && Validator.hasValidFormat(email, 200, 5, regex);\n  }\n\n  static isZipCodeValid(zipCode, regex = _zipRegex) {\n    if (!Validator.isValidString(zipCode)) {\n      return false;\n    }\n    return Validator.hasMatch(zipCode, regex);\n  }\n\n  static hasMatch(stringExpr, regex) {\n    if (Validator.isValidString(stringExpr)) {\n      const res = stringExpr.match(regex);\n      if (res && res.length > 0) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  static hasValidFormat(value, maxLen, minLen, regex) {\n    if (minLen === 0 && value == null) {\n      return false;\n    }\n    if (minLen === 0 && value.length === 0) {\n      return true;\n    }\n    if (minLen > 0 && !Validator.isValidString(value)) {\n      return false;\n    }\n    if (value.length < minLen || value.length > maxLen) {\n      return false;\n    }\n    return Validator.hasMatch(value, regex);\n  }\n\n  static areDatesEqual(date1, date2) {\n    if (!date1 && !date2) return true;\n    return Validator.isValidDate(date1) && Validator.isValidDate(date2) && (date1.getTime() === date2.getTime());\n  }\n\n  static isCVV(cvvNumber, cvvExpectedLength) {\n    if (!Validator.isInt(cvvExpectedLength) || cvvExpectedLength < 1) return false;\n    if (cvvNumber == null) return false;\n    // pre-compiled regex are less expensive so write one for 3 and 4\n    if (cvvExpectedLength === 3) return _threeDigitRegex.exec(cvvNumber) !== null;\n    if (cvvExpectedLength === 4) return _fourDigitRegex.exec(cvvNumber) !== null;\n    // some extraneous cvv length, use a RegExp\n    return new RegExp(`^\\\\d{${cvvExpectedLength}}$`).exec(cvvNumber) !== null;\n  }\n\n  static isValidEnumValue(value, enumType) {\n    if (this.isValidStringEnumValue(value, enumType)) {\n      return true;\n    }\n\n    try {\n      const namedConstant = GenericParser.parseAndConvertEnumValue(value);\n      if (namedConstant && GenericParser.parseEnum(namedConstant, enumType)) {\n        return true;\n      }\n      return false;\n    } catch (error) {\n      return false;\n    }\n  }\n\n  static isValidStringEnumValue(value, enumType) {\n    return Object.keys(enumType).includes(value);\n  }\n\n  static isValidDate(value) {\n    try {\n      if (Object.prototype.toString.call(value) === '[object Date]') {\n        value.toISOString();\n        return true;\n      }\n      return false;\n    } catch (error) {\n      return false;\n    }\n  }\n}\n\nexport default Validator;\n","/*!\r\n * American Well Consumer Web SDK\r\n *\r\n * Copyright (c) 2017 American Well.\r\n * All rights reserved.\r\n *\r\n * It is illegal to use, reproduce or distribute\r\n * any part of this Intellectual Property without\r\n * prior written authorization from American Well.\r\n */\r\n\r\nimport log from 'loglevel';\r\n\r\n/**\r\n * A wrapper class around the loglevel logger. If no configuration for a logger is passed, then this logger will log to\r\n * stdout with level set to info by default.\r\n * For a more in-depth understanding of what a configuration for a logger is @see {@link https://www.npmjs.com/packageloglevel|loglevel}\r\n * @private\r\n *\r\n */\r\nclass Logger {\r\n  constructor() {\r\n    this.__log = log.getLogger('AWSDKLogger');\r\n    this.__log.setDefaultLevel('Error');\r\n  }\r\n\r\n  setDefaultLevel(defaultLevel) {\r\n    this.__log.setDefaultLevel(defaultLevel);\r\n  }\r\n\r\n  setLevel(level) {\r\n    this.__log.setLevel(level);\r\n  }\r\n\r\n  getLevel() {\r\n    return this.__log.getLevel();\r\n  }\r\n\r\n  getLevelString() {\r\n    return Object.keys(this.__log.levels).find(key => this.__log.levels[key] === this.__log.getLevel());\r\n  }\r\n\r\n  disableAll() {\r\n    this.__log.disableAll();\r\n  }\r\n\r\n  enableAll() {\r\n    this.__log.enableAll();\r\n  }\r\n  /**\r\n   * Log the message at a 'fatal' level. This should imply that a non-recoverable exception has occurred and that the application is about to exit\r\n   * @param {String} message the message to be logged\r\n   * @param {Object|Object[]} optionalParams any objects and/or array of objects to be appended to the message that may provide clarification on what happened\r\n   *\r\n   */\r\n  fatal(message, ...optionalParams) {\r\n    const logMessage = `AWSDK ${message}`;\r\n    this.__log.fatal(logMessage, ...optionalParams);\r\n  }\r\n\r\n  /**\r\n   * Log the message at an 'error' level. This logging level means an unexpected exception has been found and should be investigated, however application will continue execution.\r\n   * @param {String} message the message to be logged\r\n   * @param {Object|Object[]} optionalParams any objects and/or array of objects to be appended to the message that may provide clarification on what happened\r\n   *\r\n   */\r\n  error(message, ...optionalParams) {\r\n    const logMessage = `AWSDK ${message}`;\r\n    this.__log.error(logMessage, ...optionalParams);\r\n  }\r\n\r\n  /**\r\n   * Log the message at a 'warn' level. This logging level indicates that an unexpected behavior that should be investigated eventually.\r\n   * @param {String} message the message to be logged\r\n   * @param {Object|Object[]} optionalParams any objects and/or array of objects to be appended to the message that may provide clarification on what happened\r\n   *\r\n   */\r\n  warn(message, ...optionalParams) {\r\n    const logMessage = `AWSDK ${message}`;\r\n    this.__log.warn(logMessage, ...optionalParams);\r\n  }\r\n\r\n  /**\r\n   * Log the message at an 'info' level. This loggin level is normally used for loggin regular application operations.\r\n   * @param {String} message the message to be logged\r\n   * @param {Object|Object[]} optionalParams any objects and/or array of objects to be appended to the message that may provide clarification on what happened\r\n   *\r\n   */\r\n  info(message, ...optionalParams) {\r\n    const logMessage = `AWSDK ${message}`;\r\n    this.__log.info(logMessage, ...optionalParams);\r\n  }\r\n\r\n  /**\r\n   * Log the message at a 'debug' level. This logging level should *NOT* be used in a production environment and should be used to log detailed information that is useful in debugging\r\n   * @param {String} message the message to be logged\r\n   * @param {Object|Object[]} optionalParams any objects and/or array of objects to be appended to the message that may provide clarification on what happened\r\n   *\r\n   */\r\n  debug(message, ...optionalParams) {\r\n    const logMessage = `AWSDK ${message}`;\r\n    this.__log.debug(logMessage, ...optionalParams);\r\n  }\r\n\r\n  /**\r\n   * Log the message at a 'trace' level. This logging level should *NOT* be used in production, since it tends to be quite verbose. These logs tend to be very detailed.\r\n   * @param {String} message the message to be logged\r\n   * @param {Object|Object[]} optionalParams any objects and/or array of objects to be appended to the message that may provide clarification on what happened\r\n   *\r\n   */\r\n  trace(message, ...optionalParams) {\r\n    const logMessage = `AWSDK ${message}`;\r\n    this.__log.trace(logMessage, ...optionalParams);\r\n  }\r\n\r\n  get levels() {\r\n    return this.__log.levels;\r\n  }\r\n}\r\n\r\nexport default Logger;\r\n","/*!\r\n * American Well Consumer Web SDK\r\n *\r\n * Copyright (c) 2017 American Well.\r\n * All rights reserved.\r\n *\r\n * It is illegal to use, reproduce or distribute\r\n * any part of this Intellectual Property without\r\n * prior written authorization from American Well.\r\n */\r\nimport Validator from './../validator/validator';\r\nimport Logger from '../logger/logger';\r\n\r\nconst he = require('he');\r\n\r\nconst log = new Logger();\r\n\r\nclass Util {\r\n  /**\r\n   * Finds the url on a link whose name attribute matches that of one of the link names in the array or returns null if no name matches. <br>\r\n   * @param {Array} links an array of links {name: 'some', url: 'someUrl', method: 'GET'}\r\n   * @param {String} linkName the name attribute we're trying to match\r\n   * @returns {String} the url for the matching link, or null if no link has a name that matches the one specified.\r\n   */\r\n  static findNamedLinkUrl(links, linkName) {\r\n    if (links == null || !Array.isArray(links) || links.length === 0) {\r\n      return null;\r\n    }\r\n    const link = links.find(item => item.name === linkName);\r\n    if (Validator.isValidLink(link)) {\r\n      return link.url;\r\n    }\r\n    return null;\r\n  }\r\n\r\n  /**\r\n   * Format a date in ISO 8601 Calendar date format (YYYY-MM-DD).\r\n   * @param {Date} date The date to be formatted.\r\n   * @returns {String} the date formatted to YYYY-MM-DD.\r\n   */\r\n  static formatISODate(date) {\r\n    if (!(date instanceof Date)) {\r\n      return null;\r\n    }\r\n    return date.toISOString().substr(0, 10);\r\n  }\r\n\r\n  static formatISODateTime(date) {\r\n    if (!(date instanceof Date)) {\r\n      return null;\r\n    }\r\n    const isoDateTimeString = date.toISOString().substr(0, 19);\r\n    return `${isoDateTimeString}Z`;\r\n  }\r\n\r\n  static b64DecodeUnicode(str) {\r\n    try {\r\n      // chat messages are delivered to the client in base64 encoded format.\r\n      // we need to decode them on the browser before showing them to clients.\r\n      // atob alone doesnt work for non ascii characters, so we need this workaround.\r\n      const decodeString = Util.bin2String(Util.decode(Util.urlSafeDecoding(str)));\r\n      return he.decode(Util.base64DecodeUnicodeURI(decodeString));\r\n    } catch (e) {\r\n      // account for the possibility of chat messages being undecodable on the client side.\r\n      log.error('Util.b64DecodeUnicode', 'Error', e);\r\n      return '';\r\n    }\r\n  }\r\n\r\n  static urlSafeDecoding(str) {\r\n    const newStr = (`${str}===`).slice(0, str.length + (str.length % 4));\r\n    return newStr.replace(/-/g, '+').replace(/_/g, '/');\r\n  }\r\n\r\n  static bin2String(array) {\r\n    let result = '';\r\n    for (let i = 0; i < array.length; i += 1) {\r\n      result += String.fromCharCode(parseInt(array[i], 10));\r\n    }\r\n    return result;\r\n  }\r\n\r\n  static base64DecodeUnicodeURI(str) {\r\n    return decodeURIComponent(Array.prototype.map.call(str, c => `%${(`00${c.charCodeAt(0).toString(16)}`).slice(-2)}`).join(''));\r\n  }\r\n\r\n  static decode(str) {\r\n    /* eslint-disable no-plusplus */\r\n    /* eslint-disable no-bitwise */\r\n    const tab = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\r\n    const p = '=';\r\n    const s = str.split('');\r\n    const out = [];\r\n    let l = s.length;\r\n    /* eslint-disable no-empty */\r\n    while (s[--l] === p) { } // strip off trailing padding\r\n    for (let i = 0; i < l;) {\r\n      let t = tab.indexOf(s[i++]) << 18;\r\n      if (i <= l) { t |= tab.indexOf(s[i++]) << 12; }\r\n      if (i <= l) { t |= tab.indexOf(s[i++]) << 6; }\r\n      if (i <= l) { t |= tab.indexOf(s[i++]); }\r\n      out.push((t >>> 16) & 0xff);\r\n      out.push((t >>> 8) & 0xff);\r\n      out.push(t & 0xff);\r\n    }\r\n    // strip off any null bytes\r\n    while (out[out.length - 1] === 0) { out.pop(); }\r\n    return out;\r\n  }\r\n  /**\r\n   * Utility method for understanding the operating system on which the user is interacting with the SDK.\r\n   *\r\n   * @since 1.2.1\r\n   * @returns {boolean} Indicating that the user is using a mac computer.\r\n   */\r\n  static isMac() {\r\n    return navigator.platform.toUpperCase().indexOf('MAC') >= 0;\r\n  }\r\n  /**\r\n   * Utility method for understanding the operating system on which the user is interacting with the SDK.\r\n   *\r\n   * @since 1.2.1\r\n   * @returns {boolean} Indicating that the user is using a Windows computer.\r\n   */\r\n  static isWindows() {\r\n    return navigator.platform.toUpperCase().indexOf('WIN') >= 0;\r\n  }\r\n\r\n  /**\r\n   * Utility method for determining the client's ClientMetrics.NetworkType - one of WAN_UNKNOWN, WAN_EDGE_OR_1X, WAN_3G, WAN_LTE, or WIFI -\r\n   * using the limited and sparsely-supported Network API.\r\n   *\r\n   * Note that even among browsers that do support the API, the support applies only to mobile versions of that browser.\r\n   * Desktop browsers do not expose the 'type' property of the NetworkInformation interface, instead offering only the estimated 'effectiveType'.\r\n   *\r\n   * See http://wicg.github.io/netinfo/#dfn-connection-type for specification as of 9/1/18.\r\n   * @returns {'WIFI'|null} either 'WIFI' or null\r\n   */\r\n  static getNetworkType() {\r\n    const normalize = (type) => {\r\n      const lowered = type && (typeof type.toLowerCase === 'function') ? type.toLowerCase() : '';\r\n      switch (lowered) {\r\n        case 'wifi':\r\n          return 'WIFI';\r\n        case 'wimax':\r\n        case 'other':\r\n        case 'unknown':\r\n        case 'bluetooth':\r\n        case 'cellular':\r\n        case 'ethernet':\r\n        default:\r\n          return null;\r\n      }\r\n    };\r\n    if (window && window.navigator && window.navigator.connection) {\r\n      return normalize(window.navigator.connection.type);\r\n    }\r\n    return null;\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * Adding this method here from sample_app to unit test it.\r\n   */\r\n  static __truncateForDisplay(textToDisplay, maxLen) {\r\n    Number.isInteger = Number.isInteger || (value => typeof value === 'number' && isFinite(value) && Math.floor(value) === value);\r\n    if (typeof textToDisplay !== 'string' || !Number.isInteger(maxLen) || maxLen < 0 || maxLen >= textToDisplay.length) {\r\n      return textToDisplay;\r\n    }\r\n    if (maxLen <= 3) { // don't add ellipsis if 3 or less chars\r\n      return textToDisplay.substring(0, maxLen);\r\n    }\r\n    return textToDisplay.substring(0, maxLen - 3).concat('...');\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  static __concatNames(firstName, lastName, middleName, separator, direction) {\r\n    const sep = separator || ' ';\r\n    const res = [];\r\n    if (middleName) res.push(middleName);\r\n    if (direction !== 'rtl') {\r\n      res.unshift(firstName);\r\n      res.push(lastName);\r\n    } else {\r\n      res.unshift(lastName);\r\n      res.push(firstName);\r\n    }\r\n    return res.join(sep);\r\n  }\r\n}\r\nexport default Util;\r\n","/*!\r\n * American Well Consumer Web SDK\r\n *\r\n * Copyright © 2018 American Well.\r\n * All rights reserved.\r\n *\r\n * It is illegal to use, reproduce or distribute\r\n * any part of this Intellectual Property without\r\n * prior written authorization from American Well.\r\n */\r\n\r\n/**\r\n * Enum for AWSDKVisitModalityType.\r\n * @readonly\r\n * @enum {string}\r\n * @since 1.4.0\r\n */\r\nconst AWSDKVisitModalityType = {\r\n  /**\r\n   * Video modality type.\r\n   */\r\n  VIDEO: 'VIDEO',\r\n  /**\r\n   * Phone modality type.\r\n   */\r\n  PHONE: 'PHONE',\r\n  /**\r\n   * Chat modality type.\r\n   */\r\n  CHAT: 'CHAT',\r\n};\r\nObject.freeze(AWSDKVisitModalityType);\r\nexport default AWSDKVisitModalityType;\r\n","/*!\r\n * American Well Consumer Web SDK\r\n *\r\n * Copyright © 2018 American Well.\r\n * All rights reserved.\r\n *\r\n * It is illegal to use, reproduce or distribute\r\n * any part of this Intellectual Property without\r\n * prior written authorization from American Well.\r\n */\r\n\r\nimport AWSDKDataObject from './awsdk_dataobject';\r\nimport GenericParser from '../internal/parser/generic_parser';\r\nimport AWSDKVisitModalityType from './visit/awsdk_visit_modality_type';\r\n/**\r\n * AWSDKModality class represents a modality object with all necessary information to describe a modality.\r\n * @property {String} name The name of the modality\r\n * @property {String} localizedDisplayName The localized display name of the modality\r\n * @property {model.AWSDKVisitModalityType} modalityType The type of this modality\r\n * @since 1.4.0\r\n * @extends model.AWSDKDataObject\r\n */\r\nclass AWSDKModality extends AWSDKDataObject {\r\n  get name() {\r\n    return this.__data.name;\r\n  }\r\n\r\n  get localizedDisplayName() {\r\n    return this.__data.localizedDisplayName;\r\n  }\r\n\r\n  get modalityType() {\r\n    return GenericParser.parseEnum(this.__data.name, AWSDKVisitModalityType);\r\n  }\r\n}\r\n\r\nexport default AWSDKModality;\r\n\r\n","/*!\r\n * American Well Consumer Web SDK\r\n *\r\n * Copyright (c) 2017 American Well.\r\n * All rights reserved.\r\n *\r\n * It is illegal to use, reproduce or distribute\r\n * any part of this Intellectual Property without\r\n * prior written authorization from American Well.\r\n */\r\nimport deprecated from 'awcoresdk/lib/util/deprecated';\r\n\r\nimport AWSDKPracticeBase from '../../internal/model/awsdk_practice_base';\r\nimport GenericParser from '../../internal/parser/generic_parser';\r\nimport AWSDKAddress from '../awsdk_address';\r\nimport Util from '../../internal/util/util';\r\nimport AWSDKEntityId from '../../internal/model/awsdk_entity_id';\r\nimport AWSDKModality from '../awsdk_modality';\r\n\r\n/**\r\n * The AWSDKPractice class representing a practice object\r\n * @property {Boolean} hasSmallLogo true if the practice has a small logo, false otherwise\r\n * @property {Boolean} hasLogo true if this practice has logo, false otherwise\r\n * @property {String} href the url to a more details for this practice.\r\n * @property {model.AWSDKAddress} address the address of the practice\r\n * @property {String} hours the practice's hours of operation\r\n * @property {String} phone the phone number associated with this practice\r\n * @property {String} formattedPhone the formatted phone number associated with this practice\r\n * @property {String} welcomeMessage the String welcome message for this practice\r\n * @property {String} fax the String representing the fax number for this practice\r\n * @property {Boolean} paymentRequiredForScheduledVisits true if payment is required for scheduled visits, false otherwise\r\n * @property {String} paymentRequiredForScheduledVisitsText the String text associated with paymentRequiredForScheduledVisits\r\n * @property {Boolean} showAvailableNow true if the practice is available now, false otherwise.\r\n * @property {Boolean} showScheduling true if this practice is scheduling, false otherwise\r\n * @property {String} smallLogoUrl the url to the small practice logo\r\n * @property {String} logoUrl the url to the practice logo\r\n * @property {model.AWSDKEntityId} subCategoryId the id of the subcategory for this practice.\r\n * @property {model.AWSDKEntityId[]} subCategoryIds the list of subcategory ids this practice\r\n * @property {model.AWSDKEntityId} practiceId the id for this practice.\r\n * @property {String} specialtyName the specialty of this practice\r\n * @property {String} specialtyColor the specialty color of this practice\r\n * @property {String} subtitle the subtitle of this practice\r\n * @property {String} cardOverlayUrl the url to the practice card overlay image\r\n * @property {String} sourceId the sourceId associated with this practice.\r\n * @property {model.AWSDKModality[]} availableModalities represents the modalities that can be offered for a visit within this practice\r\n * @property {Boolean} hideProviderVisitCostEstimate TRUE if the provider's estimated visit cost should be hidden for this practice\r\n * @property {Boolean} hideCancelAppointmentLink TRUE if the practice is configured to hide the cancel appointment link\r\n * @property {Boolean} hasOnDemandSpecialties TRUE if the practice has OnDemandSpecialties\r\n * @extends model.AWSDKPracticeBase\r\n */\r\nclass AWSDKPractice extends AWSDKPracticeBase {\r\n  get hasSmallLogo() {\r\n    return GenericParser.parseBoolean(this.__data.hasSmallLogo);\r\n  }\r\n\r\n  get hasLogo() {\r\n    return GenericParser.parseBoolean(this.__data.hasLogo);\r\n  }\r\n\r\n  get address() {\r\n    return GenericParser.parseObject(this.__data.address, AWSDKAddress);\r\n  }\r\n\r\n  get hours() {\r\n    return this.__data.hours;\r\n  }\r\n\r\n  get phone() {\r\n    return this.__data.phone;\r\n  }\r\n\r\n  get formattedPhone() {\r\n    return this.__data.formattedPhone;\r\n  }\r\n\r\n  get welcomeMessage() {\r\n    return this.__data.welcomeMessage;\r\n  }\r\n\r\n  get fax() {\r\n    return this.__data.fax;\r\n  }\r\n\r\n  get paymentRequiredForScheduledVisits() {\r\n    return GenericParser.parseBoolean(this.__data.paymentRequiredForScheduledVisits);\r\n  }\r\n\r\n  get paymentRequiredForScheduledVisitsText() {\r\n    return this.__data.paymentRequiredForScheduledVisitsText;\r\n  }\r\n\r\n  get showAvailableNow() {\r\n    return GenericParser.parseBoolean(this.__data.showAvailableNow);\r\n  }\r\n\r\n  get showScheduling() {\r\n    return GenericParser.parseBoolean(this.__data.showScheduling);\r\n  }\r\n\r\n  get smallLogoUrl() {\r\n    if (this.hasSmallLogo) {\r\n      return Util.findNamedLinkUrl(this.links, 'smallLogo');\r\n    }\r\n    return null;\r\n  }\r\n\r\n  get logoUrl() {\r\n    if (this.hasLogo) {\r\n      return Util.findNamedLinkUrl(this.links, 'logo');\r\n    }\r\n    return null;\r\n  }\r\n\r\n  /**\r\n   * @deprecated This will be removed in a future release. Please use {@link service.PracticeService#getPracticesByCategory}.\r\n   * @since 1.2.0\r\n   */\r\n  get subCategoryId() {\r\n    deprecated('AWSDKPractice.subCategoryId', 'Use PracticeService.getPracticesByCategory instead', '3.X');\r\n    return GenericParser.parseObject(this.__data.subCategoryId, AWSDKEntityId);\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  get subCategoryIds() {\r\n    return this.__data.subCategoryIds.map(id => GenericParser.parseObject(id, AWSDKEntityId));\r\n  }\r\n\r\n  get practiceId() {\r\n    return GenericParser.parseObject(this.__data.practice, AWSDKEntityId);\r\n  }\r\n\r\n  get specialtyName() {\r\n    return this.__data.specialty;\r\n  }\r\n\r\n  get specialtyColor() {\r\n    return this.__data.specialtyColor;\r\n  }\r\n\r\n  get subtitle() {\r\n    return this.__data.subtitle;\r\n  }\r\n\r\n  get cardOverlayUrl() {\r\n    return Util.findNamedLinkUrl(this.links, 'cardOverlay');\r\n  }\r\n\r\n  /**\r\n   * @since 1.2.1\r\n   */\r\n  get sourceId() {\r\n    return this.__data.sourceId;\r\n  }\r\n\r\n  /**\r\n   * @since 1.4.0\r\n   */\r\n  get availableModalities() {\r\n    return this.__data.availableModalities ? this.__data.availableModalities.map(item => GenericParser.parseObject(item, AWSDKModality)) : [];\r\n  }\r\n\r\n  /**\r\n   * @since 1.5.0\r\n   */\r\n  get hideProviderVisitCostEstimate() {\r\n    return GenericParser.parseBoolean(this.__data.hideProviderVisitCostEstimate);\r\n  }\r\n\r\n  /**\r\n   * @since 1.5.0\r\n   */\r\n  get hideCancelAppointmentLink() {\r\n    return GenericParser.parseBoolean(this.__data.hideCancelAppointmentLink);\r\n  }\r\n\r\n  /**\r\n   * @since 2.8.0\r\n   */\r\n  get hasOnDemandSpecialties() {\r\n    return GenericParser.parseBoolean(this.__data.hasOnDemandSpecialties);\r\n  }\r\n}\r\n\r\nexport default AWSDKPractice;\r\n","/*!\r\n * American Well Consumer Web SDK\r\n *\r\n * Copyright (c) 2017 American Well.\r\n * All rights reserved.\r\n *\r\n * It is illegal to use, reproduce or distribute\r\n * any part of this Intellectual Property without\r\n * prior written authorization from American Well.\r\n */\r\nimport AWSDKPracticeBase from '../../internal/model/awsdk_practice_base';\r\nimport GenericParser from '../../internal/parser/generic_parser';\r\nimport AWSDKModality from '../awsdk_modality';\r\n\r\n/**\r\n * The AWSDKPracticeInfo class represents a stub of a practice with no links, normally used for quick practice display\r\n * @property {String} paymentRequiredForScheduledVisitsText the text to be displayed when payment is required for a scheduled visit\r\n * @property {Boolean} paymentRequiredForScheduledVisits boolean true if scheduled visits with this provider require payment, false otherwise\r\n * @property {Boolean} showAvailableNow boolean true if the showAvailableNow flag is set, false otherwise\r\n * @property {Boolean} showScheduling boolean true if the provider is accepting scheduled visits\r\n * @property {model.AWSDKModality[]} availableModalities represents the modalities that can be offered for a visit within this practice @since 1.4.0\r\n * @property {Boolean} hideProviderVisitCostEstimate TRUE if the provider's estimated visit cost should be hidden for this practice\r\n * @property {Boolean} hideCancelAppointmentLink TRUE if the practice is configured to hide the cancel appointment link\r\n * @extends model.AWSDKPracticeBase\r\n */\r\nclass AWSDKPracticeInfo extends AWSDKPracticeBase {\r\n  get paymentRequiredForScheduledVisitsText() {\r\n    return this.__data.paymentRequiredForScheduledVisitsText;\r\n  }\r\n\r\n  get paymentRequiredForScheduledVisits() {\r\n    return GenericParser.parseBoolean(this.__data.paymentRequiredForScheduledVisits);\r\n  }\r\n\r\n  get showAvailableNow() {\r\n    return GenericParser.parseBoolean(this.__data.showAvailableNow);\r\n  }\r\n\r\n  get showScheduling() {\r\n    return GenericParser.parseBoolean(this.__data.showScheduling);\r\n  }\r\n\r\n  /**\r\n   * @since 1.4.0\r\n   */\r\n  get availableModalities() {\r\n    return (Array.isArray(this.__data.availableModalities) && this.__data.availableModalities.map(item => GenericParser.parseObject(item, AWSDKModality))) || [];\r\n  }\r\n\r\n  /**\r\n   * @since 1.5.0\r\n   */\r\n  get hideProviderVisitCostEstimate() {\r\n    return GenericParser.parseBoolean(this.__data.hideProviderVisitCostEstimate);\r\n  }\r\n\r\n  /**\r\n   * @since 1.5.0\r\n   */\r\n  get hideCancelAppointmentLink() {\r\n    return GenericParser.parseBoolean(this.__data.hideCancelAppointmentLink);\r\n  }\r\n}\r\nexport default AWSDKPracticeInfo;\r\n","/*!\r\n * American Well Consumer Web SDK\r\n *\r\n * Copyright © 2018 American Well.\r\n * All rights reserved.\r\n *\r\n * It is illegal to use, reproduce or distribute\r\n * any part of this Intellectual Property without\r\n * prior written authorization from American Well.\r\n */\r\n\r\n/**\r\n * Enum for AWSDKProviderVisibility.\r\n * @readonly\r\n * @enum {string}\r\n * @since 1.2.0\r\n */\r\nconst AWSDKProviderVisibility = {\r\n  /**\r\n   * The provider appears offline to consumers, but may not actually be offline. For example the provider can be available by appointment only.\r\n   */\r\n  OFFLINE: 'OFFLINE',\r\n  /**\r\n   * The provider is logged in via phone, but busy.\r\n   */\r\n  PHONE_BUSY: 'PHONE_BUSY',\r\n  /**\r\n   * The provider is available for phone conversations, but not web.\r\n   */\r\n  PHONE_AVAILABLE: 'PHONE_AVAILABLE',\r\n  /**\r\n   * The provider is logged in via web, but busy.\r\n   */\r\n  WEB_BUSY: 'WEB_BUSY',\r\n  /**\r\n   * The provider is available for web conversations.\r\n   */\r\n  WEB_AVAILABLE: 'WEB_AVAILABLE',\r\n};\r\nObject.freeze(AWSDKProviderVisibility);\r\nexport default AWSDKProviderVisibility;\r\n","/*!\r\n * American Well Consumer Web SDK\r\n *\r\n * Copyright (c) 2017 American Well.\r\n * All rights reserved.\r\n *\r\n * It is illegal to use, reproduce or distribute\r\n * any part of this Intellectual Property without\r\n * prior written authorization from American Well.\r\n */\r\nimport AWSDKDataObject from './awsdk_dataobject';\r\n\r\n/**\r\n * The AWSDKResource class is supposed to represent a resource that needs to be displayed in i18n scenarios\r\n * @property {String} resourceKey the key for this resource\r\n * @property {String} value the String value for this resource\r\n * @extends model.AWSDKDataObject\r\n */\r\nclass AWSDKResource extends AWSDKDataObject {\r\n  get resourceKey() {\r\n    return this.__data.resourceKey;\r\n  }\r\n\r\n  get value() {\r\n    return this.__data.value;\r\n  }\r\n}\r\nexport default AWSDKResource;\r\n","/*!\r\n * American Well Consumer Web SDK\r\n *\r\n * Copyright © 2018 American Well.\r\n * All rights reserved.\r\n *\r\n * It is illegal to use, reproduce or distribute\r\n * any part of this Intellectual Property without\r\n * prior written authorization from American Well.\r\n */\r\n\r\nimport AWSDKResource from '../awsdk_resource';\r\n\r\n/**\r\n * AWSDKProviderType class which represents a type of Provider\r\n * See {@link model.AWSDKResource|AWSDKResource} for details.\r\n * @since 1.3.1\r\n * @extends model.AWSDKResource\r\n */\r\n\r\nclass AWSDKProviderType extends AWSDKResource {}\r\n\r\nexport default AWSDKProviderType;\r\n","/*!\r\n * American Well Consumer Web SDK\r\n *\r\n * Copyright © 2017 American Well.\r\n * All rights reserved.\r\n *\r\n * It is illegal to use, reproduce or distribute\r\n * any part of this Intellectual Property without\r\n * prior written authorization from American Well.\r\n */\r\nimport AWSDKEntity from './../awsdk_entity';\r\nimport GenericParser from '../../internal/parser/generic_parser';\r\nimport Util from '../../internal/util/util';\r\nimport AWSDKPracticeInfo from './../practice/awsdk_practice_info';\r\nimport AWSDKGender from '../consumer/awsdk_gender';\r\nimport AWSDKProviderVisibility from './awsdk_provider_visibility';\r\nimport AWSDKProviderType from './awsdk_provider_type';\r\n/**\r\n * AWSDKProvider class which represents a Provider object\r\n * @property {Number} waitingRoomCount the number of patients currently in this provider's waiting room.\r\n * @property {Number} rating the provider's rating.\r\n * @property {model.AWSDKProviderVisibility} visibility the provider's visibility.\r\n * @property {Boolean} hasImage boolean true if the provider has an image logo, false otherwise\r\n * @property {String} firstName the provider's first name\r\n * @property {String} lastName the provider's last name\r\n * @property {String} fullName the provider's full name\r\n * @property {model.AWSDKProviderType} specialty the provider's specialty\r\n * @property {String} sourceId the source id for this provider\r\n * @property {model.AWSDKPracticeInfo} practice the practice associated with this provider\r\n * @property {String} href the url to this provider's details\r\n * @property {String} middleInitial the Provider's middle initial\r\n * @property {Boolean} canPrescribe boolean true if the Provider can write prescriptions, false otherwise\r\n * @property {model.AWSDKGender} genderEnum the provider's {@link model.AWSDKGender|AWSDKGender}\r\n * @property {String} localizedGender the provider's localized gender\r\n * @property {String} logoUrl the url of this provider's logo image\r\n * @property {Boolean} isNTN boolean true if the provider is in the National Telehealth Network (NTN), false otherwise. @since 2.7.0\r\n * @extends model.AWSDKEntity\r\n */\r\n\r\nclass AWSDKProvider extends AWSDKEntity {\r\n  get middleInitial() {\r\n    return this.__data.middleInitial;\r\n  }\r\n\r\n  get canPrescribe() {\r\n    return GenericParser.parseBoolean(this.__data.canPrescribe);\r\n  }\r\n\r\n  get genderEnum() {\r\n    return GenericParser.parseEnum(this.__data.genderEnum, AWSDKGender);\r\n  }\r\n\r\n  get localizedGender() {\r\n    return this.__data.localizedGenderDisplayName;\r\n  }\r\n\r\n  get waitingRoomCount() {\r\n    return this.__data.waitingRoomCount;\r\n  }\r\n\r\n  get rating() {\r\n    return this.__data.rating;\r\n  }\r\n\r\n  get visibility() {\r\n    return GenericParser.parseEnum(this.__data.visibility, AWSDKProviderVisibility);\r\n  }\r\n\r\n  get sourceId() {\r\n    return this.__data.sourceId;\r\n  }\r\n\r\n  get firstName() {\r\n    return this.__data.firstName;\r\n  }\r\n\r\n  get lastName() {\r\n    return this.__data.lastName;\r\n  }\r\n\r\n  get fullName() {\r\n    return this.__data.fullName;\r\n  }\r\n\r\n  get specialty() {\r\n    return GenericParser.parseObject(this.__data.specialty, AWSDKProviderType);\r\n  }\r\n\r\n  get hasImage() {\r\n    return GenericParser.parseBoolean(this.__data.hasImage);\r\n  }\r\n\r\n  get practice() {\r\n    return GenericParser.parseObject(this.__data.practice, AWSDKPracticeInfo);\r\n  }\r\n\r\n  get href() {\r\n    return this.__data.href;\r\n  }\r\n\r\n  get logoUrl() {\r\n    if (this.hasImage) {\r\n      return Util.findNamedLinkUrl(this.links, 'logo');\r\n    }\r\n    return null;\r\n  }\r\n\r\n  get isNTN() {\r\n    return GenericParser.parseBoolean(this.__data.isNTN);\r\n  }\r\n}\r\n\r\nexport default AWSDKProvider;\r\n","/*!\r\n * American Well Consumer Web SDK\r\n *\r\n * Copyright © 2018 American Well.\r\n * All rights reserved.\r\n *\r\n * It is illegal to use, reproduce or distribute\r\n * any part of this Intellectual Property without\r\n * prior written authorization from American Well.\r\n */\r\n\r\n/**\r\n * Enum for AWSDKDisclaimerEntityType.\r\n * @readonly\r\n * @enum {string}\r\n * @since 1.2.0\r\n */\r\nconst AWSDKDisclaimerEntityType = {\r\n  /**\r\n   * The disclaimer type\r\n   */\r\n  Disclaimer: 'Disclaimer',\r\n  /**\r\n   * The legal entity type\r\n   */\r\n  LegalEntity: 'LegalEntity',\r\n  /**\r\n   * The specialty legal entity type\r\n   */\r\n  SpecialtyLegalEntity: 'SpecialtyLegalEntity',\r\n};\r\nObject.freeze(AWSDKDisclaimerEntityType);\r\nexport default AWSDKDisclaimerEntityType;\r\n","/*!\r\n * American Well Consumer Web SDK\r\n *\r\n * Copyright (c) 2017 American Well.\r\n * All rights reserved.\r\n *\r\n * It is illegal to use, reproduce or distribute\r\n * any part of this Intellectual Property without\r\n * prior written authorization from American Well.\r\n */\r\n\r\nimport AWSDKEntity from './awsdk_entity';\r\nimport GenericParser from '../internal/parser/generic_parser';\r\nimport AWSDKDisclaimerEntityType from './awsdk_disclaimer_entity_type';\r\n/**\r\n * The AWSDKDisclaimer class represents a single legal disclaimer for an entity\r\n * @property {model.AWSDKDisclaimerEntityType} entityType the entity type\r\n * @property {String} entityTypeEnum the entity type enum value\r\n * @property {String} title the title of this disclaimer\r\n * @property {String} legalText the text to be displayed in legal jargon\r\n * @property {Boolean} required boolean true if this is a required disclaimer, false otherwise\r\n * @extends model.AWSDKEntity\r\n */\r\nclass AWSDKDisclaimer extends AWSDKEntity {\r\n  get entityType() {\r\n    return GenericParser.parseEnum(this.__data.entityType, AWSDKDisclaimerEntityType);\r\n  }\r\n\r\n  get entityTypeEnum() {\r\n    return this.__data.entityTypeEnum;\r\n  }\r\n\r\n  get title() {\r\n    return this.__data.title;\r\n  }\r\n\r\n  get legalText() {\r\n    return this.__data.legalText;\r\n  }\r\n\r\n  get required() {\r\n    return GenericParser.parseBoolean(this.__data.required);\r\n  }\r\n}\r\nexport default AWSDKDisclaimer;\r\n","/*!\n * American Well Consumer Web SDK\n *\n * Copyright © 2017 American Well.\n * All rights reserved.\n *\n * It is illegal to use, reproduce or distribute\n * any part of this Intellectual Property without\n * prior written authorization from American Well.\n */\nimport AWSDKProvider from './awsdk_provider';\nimport GenericParser from '../../internal/parser/generic_parser';\nimport AWSDKDisclaimer from '../awsdk_disclaimer';\nimport AWSDKResource from '../awsdk_resource';\n/**\n * AWSDKProviderDetails class represents extra information relative to a {@link model.AWSDKProvider|AWSDKProvider}\n * @property {String} gender the provider's gender.\n * @property {String} localizedGender the provider's localized gender\n * @property {Number} appointmentDuration the provider's appointment duration in minutes\n * @property {String} deferredBillingText the text to be displayed if deferred billing is enabled\n * @property {Date} graduatingYear the year of this provider's graduation\n * @property {Boolean} showTriageQuestions boolean true if show triage questions, false otherwise\n * @property {Boolean} missedVisitEmail boolean true if this provider sends a email on missed visits\n * @property {Number} totalRatings the number of ratings\n * @property {String[]} statesLicensedIn the states that this provider is licensed in\n * @property {String} residency the location of this provider's residency\n * @property {String} textGreeting the provider's greeting\n * @property {Number} yearsExperience the years of experience that this provider has\n * @property {Boolean} deferredBillingEnabled boolean true if this provider has deferred billing enabled\n * @property {Boolean} isPCP boolean true if this provider is a Primary Care Physician (PCP)\n * @property {String} schoolName the name of the school this provider attended\n * @property {AWSDKResource[]} spokenLanguages the list of spoken languages\n * @property {String[]} boardCertificates the list of board certifications\n * @property {String} internship the internship this Provider has done\n * @property {model.AWSDKDisclaimer} legalText the legal disclaimers associated with the Provider\n * @property {String[]} fellowships the institutions this Provider is a fellow of\n * @extends AWSDKProvider\n */\n\nclass AWSDKProviderDetails extends AWSDKProvider {\n  get fellowships() {\n    return this.__data.fellowships;\n  }\n\n  get disclaimer() {\n    const legalText = this.__data.legalText;\n    if (legalText) {\n      return GenericParser.parseObject(legalText, AWSDKDisclaimer);\n    }\n    return null;\n  }\n\n  get internship() {\n    return this.__data.internship;\n  }\n\n  get gender() {\n    return this.__data.gender;\n  }\n\n  get localizedGender() {\n    return this.__data.localizedGenderDisplayName;\n  }\n\n  get appointmentDuration() {\n    return this.__data.appointmentDuration;\n  }\n\n  get deferredBillingText() {\n    return this.__data.deferredBillingText;\n  }\n\n  get graduatingYear() {\n    return GenericParser.parseDate(this.__data.graduatingYear).getFullYear();\n  }\n\n  get showTriageQuestions() {\n    return GenericParser.parseBoolean(this.__data.showTriageQuestions);\n  }\n\n  get missedVisitEmail() {\n    return GenericParser.parseBoolean(this.__data.missedVisitEmail);\n  }\n\n  get totalRatings() {\n    return this.__data.totalRatings;\n  }\n\n  get statesLicensedIn() {\n    return this.__data.statesLicensedIn;\n  }\n\n  get residency() {\n    return this.__data.residency;\n  }\n\n  get textGreeting() {\n    return this.__data.textGreeting;\n  }\n\n  get yearsExperience() {\n    return this.__data.yearsExperience;\n  }\n\n  get deferredBillingEnabled() {\n    return GenericParser.parseBoolean(this.__data.deferredBillingEnabled);\n  }\n\n  get isPCP() {\n    return GenericParser.parseBoolean(this.__data.isPCP);\n  }\n\n  get schoolName() {\n    return this.__data.schoolName;\n  }\n\n  get spokenLanguages() {\n    if (!Array.isArray(this.__data.spokenLanguages) || this.__data.spokenLanguages.length === 0) {\n      return [];\n    }\n    return this.__data.spokenLanguages.map(item => GenericParser.parseObject(item, AWSDKResource));\n  }\n\n  get boardCertificates() {\n    return this.__data.boardCertificates;\n  }\n}\n\nexport default AWSDKProviderDetails;\n","/*!\r\n * American Well Consumer Web SDK\r\n *\r\n * Copyright (c) 2018 American Well.\r\n * All rights reserved.\r\n *\r\n * It is illegal to use, reproduce or distribute\r\n * any part of this Intellectual Property without\r\n * prior written authorization from American Well.\r\n */\r\nimport AWSDKDataObject from '../awsdk_dataobject';\r\n\r\n/**\r\n * This class contains information used to set an appointment reminder.\r\n * @property {String} label the label for the Reminder Option\r\n * @property {String} value the value for the Reminder Option.\r\n * @property {Number} minutes the number of minutes before the appointment to sent the reminder.\r\n * @extends model.AWSDKDataObject\r\n */\r\nclass AWSDKReminderOption extends AWSDKDataObject {\r\n  get label() {\r\n    return this.__data.label;\r\n  }\r\n  get value() {\r\n    return this.__data.value;\r\n  }\r\n  get minutes() {\r\n    return this.__data.minutes;\r\n  }\r\n}\r\nexport default AWSDKReminderOption;\r\n","/*!\r\n * American Well Consumer Web SDK\r\n *\r\n * Copyright © 2018 American Well.\r\n * All rights reserved.\r\n *\r\n * It is illegal to use, reproduce or distribute\r\n * any part of this Intellectual Property without\r\n * prior written authorization from American Well.\r\n */\r\n\r\n/**\r\n * Enum for AWSDKConsumerMiddleNameHandling.\r\n * @readonly\r\n * @enum {string}\r\n * @since 1.2.0\r\n */\r\nconst AWSDKConsumerMiddleNameHandling = {\r\n  /**\r\n   * The consumer's full middle name is supported\r\n   */\r\n  FULLNAME: 'FULLNAME',\r\n  /**\r\n   * The consumer's middle initial is supported\r\n   */\r\n  INITIAL: 'INITIAL',\r\n  /**\r\n   * Neither full middle name or middle initial is supported\r\n   */\r\n  NONE: 'NONE',\r\n};\r\nObject.freeze(AWSDKConsumerMiddleNameHandling);\r\nexport default AWSDKConsumerMiddleNameHandling;\r\n","/*!\n * American Well Consumer Web SDK\n *\n * Copyright © 2017 American Well.\n * All rights reserved.\n *\n * It is illegal to use, reproduce or distribute\n * any part of this Intellectual Property without\n * prior written authorization from American Well.\n */\nimport AWSDKDataObject from './awsdk_dataobject';\nimport AWSDKReminderOption from './appointment/awsdk_reminder_option';\nimport GenericParser from '../internal/parser/generic_parser';\nimport AWSDKConsumerMiddleNameHandling from './consumer/awsdk_consumer_middle_name_handling';\nimport AWSDKGenderIdentity from './consumer/awsdk_gender_identity';\n\n/**\n * This class represents a systemConfiguration object with all the flags supported by that configuration\n * @extends model.AWSDKDataObject\n */\nclass AWSDKSystemConfiguration extends AWSDKDataObject {\n  /**\n   * Returns the configured {@link model.AWSDKConsumerMiddleNameHandling|AWSDKConsumerMiddleNameHandling}\n   * @since 1.1.0\n   * @type {model.AWSDKConsumerMiddleNameHandling}\n   */\n  get consumerMiddleNameHandling() {\n    return GenericParser.parseEnum(this.__data.consumerMiddleNameHandling, AWSDKConsumerMiddleNameHandling);\n  }\n\n  /**\n   * TRUE if the server requires the consumer address\n   * @since 1.0.0\n   * @type {Boolean}\n   */\n  get consumerAddressRequired() {\n    return GenericParser.parseBoolean(this.__data.memberAddressRequired);\n  }\n\n  /**\n   * TRUE if the server requires the collection of consumer health insurance info\n   * @since 1.0.0\n   * @type {Boolean}\n   */\n  get consumerHealthInsuranceCollected() {\n    return GenericParser.parseBoolean(this.__data.memberHealthInsuranceCollected);\n  }\n  /**\n   * The login age restriction\n   * @since 1.1.0\n   * @type {Number}\n   */\n  get loginAgeRestriction() {\n    return this.__data.loginAgeRestriction;\n  }\n  /**\n   * TRUE if the server allows collection of service key information\n   * @since 1.0.0\n   * @type {Boolean}\n   */\n  get serviceKeyCollected() {\n    return GenericParser.parseBoolean(this.__data.serviceKeyCollected);\n  }\n\n  /**\n   * The maximum allowed size of an attachment for a secure message in KB\n   * @since 1.0.0\n   * @type {Number}\n   */\n  get secureMessageAttachmentMaxSizeKB() {\n    return this.__data.secureMessageAttachmentMaxSizeKB;\n  }\n\n  /**\n   * A list of file extensions that will be rejected by the server\n   * Note: it's recommended to use {@link #getMimeTypeWhiteList()} to determine which\n   * file types are allowed by the server.<br>\n   *\n   * @since 1.0.0\n   * @type {String}\n   */\n  get attachmentExtensionRejectList() {\n    return this.__data.attachmentExtensionRejectList;\n  }\n\n  /**\n   * Number of MS representing margin around a\n   * {@link VisitSchedule#getScheduledStartTime()}\n   * @since 1.0.0\n   * @type {Number}\n   */\n  get scheduledVisitMarginMs() {\n    return this.__data.scheduledEngagementMarginMs;\n  }\n\n  /**\n   * TRUE if the system is configured to allow multiple guests to join a video visit\n   * @since 1.0.0\n   * @type {Boolean}\n   */\n  get multipleVideoParticipantsEnabled() {\n    return GenericParser.parseBoolean(this.__data.multipleVideoParticipantsEnabled);\n  }\n\n  /**\n   * The number of maximum guests the consumer can invite to a video visit if {@link\n   * #multipleVideoParticipantsEnabled()} = true\n   * @since 1.0.0\n   * @type {Number}\n   */\n  get maxVideoInvites() {\n    return this.__data.maxVideoInvites;\n  }\n\n  /**\n   * TRUE if the app should prompt for provider rating for visit summary\n   * @since 1.0.0\n   * @type {Boolean}\n   */\n  get showProviderRating() {\n    return GenericParser.parseBoolean(this.__data.showProviderRating);\n  }\n\n  /**\n   * TRUE if collection of ratings after a visit is optional\n   * @since 1.0.0\n   * @type {Boolean}\n   */\n  get endVisitRatingsOptional() {\n    return GenericParser.parseBoolean(this.__data.endVisitRatingsOptional);\n  }\n\n  /**\n   * List of locale string identifiers supported by the server\n   * @since 1.0.0\n   * @type {String[]}\n   */\n  get supportedLocales() {\n    return this.__data.supportedLocales;\n  }\n\n  /**\n   * The users currency code provided by the server\n   * @since 1.0.0\n   * @type {String}\n   */\n  get currencyCode() {\n    return this.__data.currencyCode;\n  }\n\n  /**\n   * List of mimeTypes that are supported as attachments\n   * @since 1.0.0\n   * @type {String[]}\n   */\n  get mimeTypeWhitelist() {\n    return this.__data.mimeTypeWhitelist;\n  }\n\n  /**\n   * TRUE if the other visit topic option is available. false otherwise.\n   * @since 1.0.0\n   * @type {Boolean}\n   */\n  get otherTopicEnabled() {\n    return GenericParser.parseBoolean(this.__data.otherTopicEnabled);\n  }\n\n  /**\n   * TRUE if the multi-country is enabled on the server.\n   * @since 1.0.0\n   * @type {Boolean}\n   */\n  get isMultiCountry() {\n    return GenericParser.parseBoolean(this.__data.isMultiCountry);\n  }\n\n  /**\n   * TRUE if users should be able to cancel appointments and false if the user should not.\n   * @since 1.0.0\n   * @type {Boolean}\n   */\n  get cancelAppointmentEnabled() {\n    return GenericParser.parseBoolean(this.__data.cancelAppointmentEnabled);\n  }\n\n  /**\n   * Optional text to be displayed if canceling appointments is disabled as returned by\n   * {@link #isCancelAppointmentEnabled}\n   * @since 1.0.0\n   * @type {String}\n   */\n  get optionalCancelAppointmentText() {\n    return this.__data.optionalCancelAppointmentText;\n  }\n\n  /**\n   * TRUE if Appointment Readiness has been enabled on the server. False otherwise.\n   * @since 1.0.0\n   * @type {Boolean}\n   */\n  get appointmentReadinessEnabled() {\n    return GenericParser.parseBoolean(this.__data.appointmentReadinessEnabled);\n  }\n\n  /**\n   * The list of {@link model.AWSDKReminderOption|AWSDKReminderOption}\n   * @since 1.1.0\n   * @type {model.AWSDKReminderOption[]}\n   */\n  get reminderOptions() {\n    return this.__data.reminderOptions.map(item => GenericParser.parseObject(item, AWSDKReminderOption));\n  }\n\n  /**\n   * The list of protected field names\n   * @since 1.1.0\n   * @type {String[]}\n   */\n  get protectedFieldNames() {\n    return this.__data.protectedFieldNames;\n  }\n\n  /**\n   * The password invalid characters message string\n   * @since 1.2.0\n   * @type {String}\n   */\n  get passwordContainsInvalidCharactersMessage() {\n    return this.__data.passwordContainsInvalidCharactersMessage;\n  }\n\n  /**\n   * A boolean of if the password must contain letters\n   * @since 1.2.0\n   * @type {Boolean}\n   */\n  get passwordMustContainLetters() {\n    return GenericParser.parseBoolean(this.__data.passwordMustContainLetters);\n  }\n\n  /**\n   * The password must contain letters message string\n   * @since 1.2.0\n   * @type {String}\n   */\n  get passwordRequiresLettersMessage() {\n    return this.__data.passwordRequiresLettersMessage;\n  }\n\n  /**\n   * Returns a boolean of if the password must contain numbers\n   * @since 1.2.0\n   * @type {Boolean}\n   */\n  get passwordMustContainNumbers() {\n    return GenericParser.parseBoolean(this.__data.passwordMustContainNumbers);\n  }\n\n  /**\n   * The password must contain numbers message string\n   * @since 1.2.0\n   * @type {String}\n   */\n  get passwordRequiresNumbersMessage() {\n    return this.__data.passwordRequiresNumbersMessage;\n  }\n\n  /**\n   * The number of special characters required\n   * @since 1.2.0\n   * @type {Number}\n   */\n  get minimumNumberOfSpecialCharactersInPassword() {\n    return this.__data.minimumNumberOfSpecialCharactersInPassword;\n  }\n\n  /**\n   * A boolean of if a password must contain special characters\n   * @since 1.2.0\n   * @type {Boolean}\n   */\n  get passwordMustContainSpecialCharacters() {\n    return this.__data.minimumNumberOfSpecialCharactersInPassword > 0;\n  }\n\n  /**\n   * A string of a list of special characters allowed in a password\n   * @since 1.2.0\n   * @type {String}\n   */\n  get specialCharacterSetAllowedInPassword() {\n    return this.__data.specialCharacterSetAllowedInPassword;\n  }\n\n  /**\n   * The password must contain special characters message string\n   * @since 1.2.0\n   * @type {String}\n   */\n  get passwordRequiresSpecialCharactersMessage() {\n    return this.__data.passwordRequiresSpecialCharactersMessage;\n  }\n\n  /**\n   * The password reset expiration time\n   * @since 1.2.0\n   * @type {Number}\n   */\n  get passwordResetExpirationTime() {\n    return this.__data.passwordResetExpirationTime;\n  }\n\n  /**\n   * The minimum length for a password\n   * @since 1.2.0\n   * @type {Number}\n   */\n  get minPasswordLength() {\n    return this.__data.minPasswordLength;\n  }\n\n  /**\n   * The maximum length for a password\n   * @since 1.2.0\n   * @type {Number}\n   */\n  get maxPasswordLength() {\n    return this.__data.maxPasswordLength;\n  }\n\n  /**\n   * The password too long message string\n   * @since 1.2.0\n   * @type {String}\n   */\n  get passwordTooLongMessage() {\n    return this.__data.passwordTooLongMessage;\n  }\n\n  /**\n   * The password too short message string\n   * @since 1.2.0\n   * @type {String}\n   */\n  get passwordTooShortMessage() {\n    return this.__data.passwordTooShortMessage;\n  }\n\n  /**\n   * The password regular expression validation string\n   * @since 1.2.0\n   * @type {String}\n   */\n  get passwordRegularExpression() {\n    return this.__data.passwordRegularExpression;\n  }\n\n  /**\n   * TRUE if speedPass is enabled\n   * @since 1.2.0\n   * @type {Boolean}\n   */\n  get speedPassActive() {\n    return GenericParser.parseBoolean(this.__data.speedPassActive);\n  }\n\n  /**\n   * TRUE if electronicFaxEnabled is enabled\n   * @type {Boolean}\n   * @since 1.4.0\n   */\n  get electronicFaxEnabled() {\n    return GenericParser.parseBoolean(this.__data.electronicFaxEnabled);\n  }\n\n  /**\n   * Used for Test My Computer workflows. Intentionally not exposed to third party developers as this is only used internally.\n   * @private\n   * @type {Object}\n   * @since 2.0.0\n   */\n  get speedTestConfiguration() {\n    return this.__data.speedTestConfiguration;\n  }\n\n  /**\n   * TRUE if option to send visit summary is to be shown, FALSE otherwise\n   * @type {Boolean}\n   * @since 2.0.0\n   */\n  get showOptionToSendVisitSummary() {\n    return GenericParser.parseBoolean(this.__data.showOptionToSendVisitSummary);\n  }\n\n  /**\n   * TRUE if the chat tab should be hidden during the visit\n   * @type {Boolean}\n   * @since 2.0.0\n   */\n  get alwaysHideChatTabEnabled() {\n    return GenericParser.parseBoolean(this.__data.alwaysHideChatTabEnabled);\n  }\n\n  /**\n   * TRUE if the notes tab should be hidden during the visit\n   * @type {Boolean}\n   * @since 2.0.0\n   */\n  get alwaysHideNotesTabEnabled() {\n    return GenericParser.parseBoolean(this.__data.alwaysHideNotesTabEnabled);\n  }\n\n  /**\n   * The audio file URI for the test my computer 'speaker' test\n   * @private\n   */\n  get audioFileUriForTestMyComputerTest() {\n    return this.__data.audioFileUriForTestMyComputerTest;\n  }\n\n  /**\n   * TRUE if screen sharing is enabled on the American Well telehealth platform\n   * @type {Boolean}\n   * @since 2.5.0\n   */\n  get screenSharingEnabled() {\n    return GenericParser.parseBoolean(this.__data.screenSharingEnabled);\n  }\n\n\n  /**\n   * TRUE if browser filtering for screen sharing is disabled.  If a browser is not one of the\n   * approved browsers for this feature, this setting will disable screensharing.\n   * @type {Boolean}\n   * @since 2.5.0\n   */\n  get screenSharingBrowserFilteringDisabled() {\n    return GenericParser.parseBoolean(this.__data.screenSharingBrowserFilteringDisabled);\n  }\n\n  /**\n   * The customer support phone number for the platform.\n   * @type {string}\n   * @since 2.0.0\n   */\n  get formattedCustomerSupportPhone() {\n    return this.__data.formattedCustomerSupportPhone;\n  }\n\n  /**\n   * A setter for the modality vendors configured on the initialization object.\n   * @since 2.2.0\n   * @type {Array}\n   * @private\n   */\n  set modalityVendors(modalityVendors) {\n    this.__modalityVendors = modalityVendors;\n  }\n\n  /**\n   * The modality vendors configured for this system.\n   * @since 2.2.0\n   * @type {Array}\n   * @private\n   */\n  get modalityVendors() {\n    return this.__modalityVendors;\n  }\n\n  /**\n   * TRUE if the server is configured to use WebRTC where possible.\n   * @type {Boolean}\n   * @since 2.1.0\n   */\n  get webRTCEnabled() {\n    return GenericParser.parseBoolean(this.__data.webRTCEnabled);\n  }\n\n  /**\n   * The server specific URL to download the electron telehealth client\n   * @type {string}\n   * @since 2.1.0\n   * @private\n   */\n  get electronDownloadUrl() {\n    return this.__data.electronDownloadUrl;\n  }\n\n  /**\n   * The URI to launch the electron telehealth client in test my computer mode\n   * @type {string}\n   * @since 2.1.0\n   * @private\n   */\n  get electronVideoTestUri() {\n    return this.__data.electronVideoTestUri;\n  }\n\n  /**\n   * The configuration for the TURN servers that the platform supports\n   * @private\n   * @type {Object[]}\n   * @since 2.1.2\n   */\n  get turnServerConfiguration() {\n    return this.__data.turnServerConfiguration;\n  }\n\n  /**\n   * The maximum bandwidth to allow Pexip web clients to use. Measured in Kbps.\n   * @private\n   * @type {Number}\n   * @since 2.6.0\n   */\n  get maxWebVideoBandwidthKbps() {\n    return this.__data.maxWebVideoBandwidthKbps;\n  }\n\n  /**\n   * The maximum bandwidth to allow Pexip mobile clients to use. Measured in Kbps.\n   * @private\n   * @type {Number}\n   * @since 2.6.0\n   */\n  get maxMobileVideoBandwidthKbps() {\n    return this.__data.maxMobileVideoBandwidthKbps;\n  }\n\n  /**\n   * The ICE timeout value passed into WebRTC configuration\n   * @private\n   * @type {Number}\n   * @since 2.6.0\n   */\n  get iceWebTimeoutSeconds() {\n    return this.__data.iceWebTimeoutSeconds;\n  }\n\n  /**\n   * TRUE if the telehealth platform supports gender identity feature\n   * @type {boolean}\n   * @since 2.5.0\n   */\n  get genderSupportEnabled() {\n    return GenericParser.parseBoolean(this.__data.genderSupportEnabled);\n  }\n\n  /**\n   * An Array of {@link model.AWSDKGenderIdentity|AWSDKGenderIdentity} representing the supported genderIdentities on the platform\n   * @type {model.AWSDKGenderIdentity[]}\n   * @since 2.5.0\n   */\n  get genderIdentities() {\n    return (Array.isArray(this.__data.genderIdentities) && this.__data.genderIdentities.map(item => GenericParser.parseObject(item, AWSDKGenderIdentity))) || [];\n  }\n}\nexport default AWSDKSystemConfiguration;\n","/*!\n * American Well Consumer Web SDK\n *\n * Copyright © 2017 American Well.\n * All rights reserved.\n *\n * It is illegal to use, reproduce or distribute\n * any part of this Intellectual Property without\n * prior written authorization from American Well.\n */\n\nimport AWSDKDataObject from '../awsdk_dataobject';\n/**\n * AWSDKCreditCardType class represents a credit card type (Amex, Visa, Mastercard, etc) used for payment. It encapsulates information about a type of credit card <br>\n * that can be used to validate the credit card client side.\n * @property {String} name The name of the credit card type\n * @property {String} type The type of credit card. A case-insensitive form of the name property.\n * @property {String} cvvLength The length of the cvv code\n * @property {String} regex The regex to validate the credit card number for this type.\n * @extends model.AWSDKDataObject\n */\nclass AWSDKCreditCardType extends AWSDKDataObject {\n  get name() {\n    return this.__data.name;\n  }\n  get type() {\n    return this.__data.type;\n  }\n  get cvvLength() {\n    return this.__data.cvvLength;\n  }\n  get regex() {\n    return this.__data.regex;\n  }\n}\n\nexport default AWSDKCreditCardType;\n","/*!\n * American Well Consumer Web SDK\n *\n * Copyright © 2017 American Well.\n * All rights reserved.\n *\n * It is illegal to use, reproduce or distribute\n * any part of this Intellectual Property without\n * prior written authorization from American Well.\n */\nimport AWSDKDataObject from '../../../model/awsdk_dataobject';\n\nclass AWSDKResponse extends AWSDKDataObject {\n  get authToken() {\n    return this.__data.authToken;\n  }\n}\n\nexport default AWSDKResponse;\n","/*!\n * American Well Consumer Web SDK\n *\n * Copyright (c) 2018 American Well.\n * All rights reserved.\n *\n * It is illegal to use, reproduce or distribute\n * any part of this Intellectual Property without\n * prior written authorization from American Well.\n */\n\n/**\n * A class to represent the param object in server logs\n * @property {String} encryptedId the encryptedId of the entity being logged\n * @property {String} type the type of the entity\n * @since 1.3.0\n */\nclass AWSDKServerLogParam {\n  constructor(encryptedId, type) {\n    this.encryptedId = encryptedId;\n    this.type = type;\n  }\n\n  toString() {\n    return JSON.stringify(this);\n  }\n}\nexport default AWSDKServerLogParam;\n","/*!\n * American Well Consumer Web SDK\n *\n * Copyright © 2017 American Well.\n * All rights reserved.\n *\n * It is illegal to use, reproduce or distribute\n * any part of this Intellectual Property without\n * prior written authorization from American Well.\n */\nimport AWSDKConsumer from '../consumer/awsdk_consumer';\nimport AWSDKDisclaimer from '../awsdk_disclaimer';\nimport AWSDKResponse from '../../internal/model/response/awsdk_response';\nimport GenericParser from '../../internal/parser/generic_parser';\nimport AWSDKServerLogParam from '../../internal/model/awsdk_server_log_param';\n\n/**\n * AWSDKAuthentication class represents an authentication object that encapsulates common AWSDK authentication fields, which simplify authentication <br>\n * against an instance of the AWSDK.\n * @property {Boolean} needsToCompleteRegistration  True if the user was authenticated, but needs to complete the registration process\n * @property {Boolean} credentialsSystemGenerated True if the user's credentials where generated by the system\n * @property {model.AWSDKConsumer} consumer the consumer data\n * @extends model.AWSDKResponse\n */\nclass AWSDKAuthentication extends AWSDKResponse {\n  get needsToCompleteRegistration() {\n    return this.__data.authentication ? GenericParser.parseBoolean(this.__data.authentication.partiallySdkEnrolled) : false;\n  }\n\n  get credentialsSystemGenerated() {\n    return this.__data.authentication ? GenericParser.parseBoolean(this.__data.authentication.credentialsSystemGenerated) : false;\n  }\n\n  get consumer() {\n    return this.__data.authentication ? GenericParser.parseObject(this.__data.authentication.member, AWSDKConsumer) : null;\n  }\n\n  get authenticationLinks() {\n    return this.__data.authentication ? this.__data.authentication.links : [];\n  }\n\n  get sdkUserAuthKey() {\n    return this.__data.authentication.sdkUserAuthKey;\n  }\n\n  get outstandingDisclaimer() {\n    return this.__data.authentication && this.__data.authentication.outstandingDisclaimer ? GenericParser.parseObject(this.__data.authentication.outstandingDisclaimer, AWSDKDisclaimer) : null;\n  }\n\n  /**\n   * A convenience method to get a {@link AWSDKServerLogParam} object\n   * @returns {Object} the server log param object\n   * @since 1.3.0\n   */\n  getServerLogParam() {\n    return this.consumer ? new AWSDKServerLogParam(this.consumer.id.encryptedId, 'member') : null;\n  }\n\n  /*\n   * Override toString to avoid storing sdkUserAuthKey (should not be needed on subsequent usage)\n   */\n  toString() {\n    const dataClone = Object.assign({}, this.__data);\n    delete dataClone.authentication.sdkUserAuthKey;\n    return JSON.stringify(dataClone);\n  }\n}\n\nexport default AWSDKAuthentication;\n","/*!\r\n * American Well Consumer Web SDK\r\n *\r\n * Copyright © 2018 American Well.\r\n * All rights reserved.\r\n *\r\n * It is illegal to use, reproduce or distribute\r\n * any part of this Intellectual Property without\r\n * prior written authorization from American Well.\r\n */\r\n\r\n/**\r\n * Enum for AWSDKRecoverEmailStatus.\r\n * @readonly\r\n * @enum {string}\r\n * @since 1.2.0\r\n */\r\nconst AWSDKRecoverEmailStatus = {\r\n  /**\r\n   * Email was successfully recovered.\r\n   */\r\n  EMAIL_RECOVERED: 'EMAIL_RECOVERED',\r\n  /**\r\n   * Username was emailed to the user.\r\n   */\r\n  USERNAME_EMAILED: 'USERNAME_EMAILED',\r\n};\r\nObject.freeze(AWSDKRecoverEmailStatus);\r\nexport default AWSDKRecoverEmailStatus;\r\n","/*!\r\n * American Well Consumer Web SDK\r\n *\r\n * Copyright © 2018 American Well.\r\n * All rights reserved.\r\n *\r\n * It is illegal to use, reproduce or distribute\r\n * any part of this Intellectual Property without\r\n * prior written authorization from American Well.\r\n */\r\n\r\nimport AWSDKDataObject from '../awsdk_dataobject';\r\nimport AWSDKRecoverEmailStatus from './awsdk_recover_email_status';\r\nimport GenericParser from '../../internal/parser/generic_parser';\r\n/**\r\n * AWSDKRecoverEmail class has the status of the recover email request with the redacted email if the status is EMAIL_RECOVERED.\r\n * @property {model.AWSDKRecoverEmailStatus} status The status of the object\r\n * @property {String} email The value of the object\r\n * @extends model.AWSDKDataObject\r\n */\r\nclass AWSDKRecoverEmail extends AWSDKDataObject {\r\n  get status() {\r\n    return GenericParser.parseEnum(this.__data.status, AWSDKRecoverEmailStatus);\r\n  }\r\n\r\n  get email() {\r\n    return this.__data.email;\r\n  }\r\n}\r\n\r\nexport default AWSDKRecoverEmail;\r\n","/*!\r\n * American Well Consumer Web SDK\r\n *\r\n * Copyright © 2018 American Well.\r\n * All rights reserved.\r\n *\r\n * It is illegal to use, reproduce or distribute\r\n * any part of this Intellectual Property without\r\n * prior written authorization from American Well.\r\n */\r\nimport AWSDKRecoverEmail from '../../../model/authentication/awsdk_recover_email';\r\nimport AWSDKResponse from './awsdk_response';\r\nimport GenericParser from '../../parser/generic_parser';\r\n\r\n/**\r\n * Represents a response object wrapper to a single {@link model.AWSDKRecoverEmail} object type\r\n * @property {model.AWSDKRecoverEmail} recoverEmail The {@link model.AWSDKRecoverEmail}.\r\n * @extends model.AWSDKResponse\r\n */\r\nclass AWSDKRecoverEmailResponse extends AWSDKResponse {\r\n  get recoverEmail() {\r\n    return GenericParser.parseObject(this.__data.recoverEmail, AWSDKRecoverEmail);\r\n  }\r\n}\r\n\r\nexport default AWSDKRecoverEmailResponse;\r\n","/*!\n * American Well Consumer Web SDK\n *\n * Copyright © 2018 American Well.\n * All rights reserved.\n *\n * It is illegal to use, reproduce or distribute\n * any part of this Intellectual Property without\n * prior written authorization from American Well.\n */\n\nexport default {\n  sdkVersion: 'W3.1.1',\n  supportedOnlineCareVersion: 'O5.3.0-',\n};\n","/*!\r\n * American Well Consumer Web SDK\r\n *\r\n * Copyright © 2018 American Well.\r\n * All rights reserved.\r\n *\r\n * It is illegal to use, reproduce or distribute\r\n * any part of this Intellectual Property without\r\n * prior written authorization from American Well.\r\n */\r\nimport URLSearchParams from 'url-search-params';\r\n\r\n/**\r\n * This encapsulates URLSearchParams and overrides append and set\r\n * to ignore values that are undefined or null.\r\n * @since 1.0.0\r\n * @hideconstructor\r\n */\r\nclass Form {\r\n  constructor(...args) {\r\n    this.__params = new URLSearchParams(...args);\r\n  }\r\n  /**\r\n   * Override to not call append when value is undefined or null\r\n   */\r\n  append(name, value) {\r\n    if (value != null) {\r\n      this.__params.append(name, value);\r\n    }\r\n  }\r\n  delete(name) { this.__params.delete(name); }\r\n  entries(pointer) { return this.__params.entries(pointer); }\r\n  get(name) { return this.__params.get(name); }\r\n  getAll(name) { return this.__params.getAll(name); }\r\n  has(name) { return this.__params.has(name); }\r\n  keys() { return this.__params.keys(); }\r\n  /**\r\n   * Override to not call set when value is undefined or null\r\n   */\r\n  set(name, value) {\r\n    if (value != null) {\r\n      this.__params.set(name, value);\r\n    }\r\n  }\r\n  values(pointer) { return this.__params.values(pointer); }\r\n  toString() { return this.__params.toString(); }\r\n  /**\r\n   * return the URLSearchParams\r\n   */\r\n  get params() {\r\n    return this.__params;\r\n  }\r\n}\r\n\r\nexport default Form;\r\n","/*!\n * American Well Consumer Web SDK\n *\n * Copyright © 2017 American Well.\n * All rights reserved.\n *\n * It is illegal to use, reproduce or distribute\n * any part of this Intellectual Property without\n * prior written authorization from American Well.\n */\nimport AWSDKError from '../../error/awsdk_error';\n\nimport Logger from '../logger/logger';\n\nclass ResponseParser {\n  /**\n   * Parses response to an object.\n   *\n   * @param {Mixed} response the response to parse\n   * @param {Object} Klass the class to return\n   * @returns {Klass|String} The response parsed into an instance of the Klass or a string\n   */\n  static parse(response, Klass) {\n    const logger = new Logger();\n    logger.debug('responseParser.parse', `Response status ${response.status}`);\n    let parsedResponse = null;\n    switch (response.status) {\n      case 200:\n      case 201:\n      case 202:\n        logger.debug('responseParser.parse', 'Calling parseValidResponseBody');\n        parsedResponse = ResponseParser.parseValidResponseBody(response, Klass);\n        break;\n      case 204: // no content\n        parsedResponse = ResponseParser.parseEmptyResponseBody(response, Klass);\n        break;\n      case 400:\n      case 401:\n      case 403:\n      case 404:\n      case 409:\n      case 500:\n      case 503:\n      default:\n        logger.debug('responseParser.parse', 'Calling parseErrorResponse');\n        parsedResponse = ResponseParser.parseErrorResponse(response).then((error) => { throw error; });\n    }\n    return parsedResponse;\n  }\n\n  static parseValidResponseBody(response, Klass) {\n    const logger = new Logger();\n    const contentType = response.headers.get('Content-type');\n    const authToken = response.headers.get('X-Authentication-Token');\n    logger.debug('responseParser.parseValidResponseBody', `Content type ${contentType}`);\n    if (Klass == null && contentType != null && contentType !== 'application/json' && !(contentType.includes('text/'))) {\n      logger.warn('responseParser.parseValidResponseBody', 'will return blob');\n      return response.blob().then((blob) => {\n        logger.debug('responseParser.parseValidResponseBody', 'Response body as blob');\n        return blob;\n      });\n    }\n    if (Klass != null) {\n      return response.json()\n        .then((json) => {\n          logger.debug('responseParser.parseValidResponseBody', 'Response body as json', json);\n          const values = json;\n          if (authToken != null) {\n            values.authToken = authToken;\n          }\n          const clientVersion = response.headers.get('X-Client-Version');\n          if (clientVersion != null) {\n            values.amWellPlatformVersion = clientVersion;\n          }\n          return new Klass(values);\n        })\n        .catch((err) => {\n          logger.error('responseParser.parseValidResponseBody', 'error parsing json', err);\n          throw AWSDKError.AWSDKParsingError(err);\n        });\n    }\n    return response.text().then((text) => {\n      logger.debug('responseParser.parseValidResponseBody', 'Response body as text', text);\n      return text;\n    });\n  }\n\n  static parseEmptyResponseBody(response, Klass) {\n    const logger = new Logger();\n    logger.debug('responseParser.parseEmptyResponseBody', Klass);\n    const authToken = response.headers.get('X-Authentication-Token');\n    if (Klass != null) {\n      const values = {};\n      if (authToken != null) {\n        values.authToken = authToken;\n      }\n      return Promise.resolve(new Klass(values));\n    }\n    return Promise.resolve(null);\n  }\n\n  static parseErrorResponse(response) {\n    const logger = new Logger();\n    const contentType = response.headers.get('Content-type');\n    logger.debug('responseParser.parseErrorResponse', `Content type ${contentType}`);\n    return response.text()\n      .then((text) => {\n        logger.debug('responseParser.parseErrorResponse', 'Response body as text', text);\n        let parsedError = null;\n        try {\n          const json = JSON.parse(text);\n          const message = json.message ? json.message : 'no message';\n          const olcError = json.olcError ? json.olcError : 'unknown';\n          parsedError = ResponseParser.generateAWSDKErrorResponse(json, response.status, olcError, message);\n        } catch (e) {\n          parsedError = ResponseParser.generateAWSDKErrorResponse(text, response.status, 'unknown', 'could not parse response body as json', e);\n        }\n        logger.debug('responseParser.parseErrorResponse', 'returning parsed error', parsedError);\n        return parsedError;\n      });\n  }\n\n  static generateAWSDKErrorResponse(body, statusCode, olcError, message, error) {\n    let responseError = null;\n    if (statusCode === 400 && olcError === 'CREDIT_CARD_DECLINED_ERROR') {\n      responseError = AWSDKError.AWSDKCreditCardDeclinedError();\n    } else if (statusCode === 400 && olcError === 'CREDIT_CARD_INCORRECT_CVV') {\n      responseError = AWSDKError.AWSDKCreditCardInvalidCVV();\n    } else if (statusCode === 400 && olcError === 'CREDIT_CARD_INVALID_ZIP') {\n      responseError = AWSDKError.AWSDKCreditCardInvalidZipCode();\n    } else if (statusCode === 400 && olcError === 'CREDIT_CARD_VALIDATION_ERROR') {\n      responseError = AWSDKError.AWSDKCreditCardValidationError();\n    } else if (statusCode === 400 && (olcError === 'VALIDATION_BAD_DATE')) {\n      responseError = AWSDKError.AWSDKInvalidDate();\n    } else if (statusCode === 400 && (olcError === 'VALIDATION_BAD_DATE_FORMAT')) {\n      responseError = AWSDKError.AWSDKInvalidDateFormat();\n    } else if (statusCode === 400 && (olcError === 'VALIDATION_BAD_ENUM')) {\n      responseError = AWSDKError.AWSDKInvalidEnum();\n    } else if (statusCode === 400 && (olcError === 'VALIDATION_BAD_ENUM_FORMAT')) {\n      responseError = AWSDKError.AWSDKInvalidEnumFormat();\n    } else if (statusCode === 400 && (olcError === 'VALIDATION_BAD_GROUP_KEY')) {\n      responseError = AWSDKError.AWSDKInvalidServiceKeyError();\n    } else if (statusCode === 400 && (olcError === 'VALIDATION_BAD_PASSWORD')) {\n      responseError = AWSDKError.AWSDKInvalidPassword();\n    } else if (statusCode === 400 && (olcError === 'VALIDATION_REQ_PARAM_MISSING')) {\n      responseError = AWSDKError.AWSDKValidationRequiredParameterMissing();\n    } else if (statusCode === 400 && (olcError === 'PROVIDER_NOT_AVAILABLE' || olcError === 'PROVIDER_OFFLINE')) {\n      responseError = AWSDKError.AWSDKProviderNotAvailable(statusCode);\n    } else if (statusCode === 400 && (olcError === 'SDK_CONFIGURATION_ERROR')) {\n      responseError = AWSDKError.AWSDKUpdateConsumerAuthKeyFailed(statusCode);\n    } else if (statusCode === 400 && (olcError === 'VALIDATION_MEMBER_UNDERAGE')) {\n      responseError = AWSDKError.AWSDKValidationConsumerUnderage();\n    } else if (statusCode === 400 && (olcError === 'EMAIL_ADDRESS_NOT_FOUND')) {\n      responseError = AWSDKError.AWSDKEmailAddressNotFound();\n    } else if (statusCode === 400 && (olcError === 'VALIDATION_DEPENDENT_OVERAGE')) {\n      responseError = AWSDKError.AWSDKDependentOverage();\n    } else if (statusCode === 400 && (olcError === 'VALIDATION_DEPENDENT_DOB_IN_FUTURE')) {\n      responseError = AWSDKError.AWSDKDependentDobInFuture();\n    } else if (statusCode === 400 && (olcError === 'VERSION_INCOMPATIBLE')) {\n      responseError = AWSDKError.AWSDKVersionIncompatible();\n    } else if (statusCode === 400 && (olcError === 'ATTACHMENT_SIZE_TOO_LARGE')) {\n      responseError = AWSDKError.AWSDKAttachmentSizeTooLarge();\n    } else if (statusCode === 400 && (olcError === 'FILE_TYPE_INVALID')) {\n      responseError = AWSDKError.AWSDKUnsupportedMimeType();\n    } else if (statusCode === 400 && (olcError === 'FILE_VIRUS_SCAN_FAILED')) {\n      responseError = AWSDKError.AWSDKFailedVirusScan();\n    } else if (statusCode === 400 && (olcError === 'FILE_READ_ERROR')) {\n      responseError = AWSDKError.AWSDKFileReadError();\n    } else if (statusCode === 400 && (olcError === 'VALIDATION_BAD_ELIG_INFO')) {\n      responseError = AWSDKError.AWSDKInaccurateSubscriberInfo();\n    } else if (statusCode === 400 && (olcError === 'VALIDATION_REQ_PARAM_INVALID')) {\n      responseError = AWSDKError.AWSDKInvalidParameter(message);\n    } else if (statusCode === 400 && (olcError === 'VALIDATION_ENROLLMENT_ERROR')) {\n      responseError = AWSDKError.AWSDKHealthPlanSubscriptionEnrollmentError(message);\n    } else if (statusCode === 400 && (olcError === 'VALIDATION_BAD_TIMEZONE_FORMAT')) {\n      responseError = AWSDKError.AWSDKInvalidTimeZone();\n    } else if (statusCode === 400 && (olcError === 'GUEST_EMAIL_ALREADY_INVITED')) {\n      responseError = AWSDKError.AWSDKGuestEmailAlreadyInvited();\n    } else if (statusCode === 401 && (body && body.indexOf('Token expired') !== -1)) {\n      responseError = AWSDKError.AWSDKAuthenticationSessionExpired();\n    } else if (statusCode === 401) {\n      responseError = AWSDKError.AWSDKAuthenticationAccessDenied();\n    } else if (statusCode === 403 && olcError === 'AUTH_ACCESS_DENIED') {\n      responseError = AWSDKError.AWSDKAuthenticationAccessDenied();\n    } else if (statusCode === 404 && olcError === 'DEPENDENT_NOT_FOUND') {\n      responseError = AWSDKError.AWSDKDependentNotFound();\n    } else if (statusCode === 404 && olcError === 'MEMBER_NOT_FOUND') {\n      responseError = AWSDKError.AWSDKConsumerNotFound();\n    } else if (statusCode === 404 && olcError === 'PROVIDER_NOT_FOUND') {\n      responseError = AWSDKError.AWSDKProviderNotFound();\n    } else if (statusCode === 404 && olcError === 'ENG_NOT_FOUND') {\n      responseError = AWSDKError.AWSDKVisitNotFound();\n    } else if (statusCode === 404 && olcError === 'ONDEMAND_SPECIALTY_NOT_FOUND') {\n      responseError = AWSDKError.AWSDKOnDemandSpecialtyNotFound();\n    } else if (statusCode === 404 && olcError === 'CREDIT_CARD_MISSING') {\n      responseError = AWSDKError.AWSDKNoPaymentInformationFound();\n    } else if (statusCode === 404 && olcError === 'MEMBER_PRIMARY_PHARMACY_NOT_FOUND') {\n      responseError = AWSDKError.AWSDKNoPreferredPharmacyFound();\n    } else if (statusCode === 404 && olcError === 'MEMBER_SHIPPING_ADDRESS_NOT_FOUND') {\n      responseError = AWSDKError.AWSDKNoShippingAddressFound();\n    } else if (statusCode === 404 && olcError === 'MEMBER_NOT_ELIGIBLE_FOR_SPEEDPASS') {\n      responseError = AWSDKError.AWSDKConsumerNotEligibleForSpeedPass();\n    } else if (statusCode === 409 && olcError === 'AUTH_ACCESS_DENIED') {\n      responseError = AWSDKError.AWSDKAuthenticationAccessDenied();\n    } else if (statusCode === 409 && olcError === 'ENG_GENERIC_FAILURE') {\n      responseError = AWSDKError.AWSDKStartVisitFailed();\n    } else if (statusCode === 409 && olcError === 'ENG_INITIATOR_INVALID_PHONE_NUMBER') {\n      responseError = AWSDKError.AWSDKVisitConsumerCallbackInvalid();\n    } else if (statusCode === 409 && olcError === 'ENG_SCHEDULING_FAILURE') {\n      responseError = AWSDKError.AWSDKScheduleAppointmentFailed();\n    } else if (statusCode === 409 && olcError === 'ENG_USER_ALREADY_ACTIVE') {\n      responseError = AWSDKError.AWSDKConsumerAlreadyInVisit();\n    } else if (statusCode === 409 && olcError === 'MEMBER_BUSY') {\n      responseError = AWSDKError.AWSDKConsumerBusy();\n    } else if (statusCode === 409 && (olcError === 'PROVIDER_NOT_AVAILABLE' || olcError === 'PROVIDER_OFFLINE')) {\n      responseError = AWSDKError.AWSDKProviderNotAvailable(statusCode);\n    } else if (statusCode === 409 && olcError === 'PROVIDER_BUSY') {\n      responseError = AWSDKError.AWSDKProviderBusy();\n    } else if (statusCode === 409 && olcError === 'PROVIDER_NOT_LICENSED_FOR_MEMBER_STATE') {\n      responseError = AWSDKError.AWSDKProviderNotLicensedForConsumerLocation();\n    } else if (statusCode === 409 && (olcError === 'SDK_CONFIGURATION_ERROR')) {\n      responseError = AWSDKError.AWSDKUpdateConsumerAuthKeyFailed(statusCode);\n    } else if (statusCode === 409 && olcError === 'VALIDATION_EMAIL_IN_USE') {\n      responseError = AWSDKError.AWSDKValidationEmailInUse();\n    } else if (statusCode === 409 && olcError === 'VALIDATION_SOURCE_ID_IN_USE') {\n      responseError = AWSDKError.AWSDKValidationSourceIdInUse();\n    } else if (statusCode === 409 && olcError === 'WAITING_ROOM_ACCESS_DENIED') {\n      responseError = AWSDKError.AWSDKWaitingRoomAccessDenied();\n    } else if (statusCode === 409 && olcError === 'VALIDATION_FILE_EXISTS') {\n      responseError = AWSDKError.AWSDKFileExists();\n    } else if (statusCode === 409 && (olcError === 'VALIDATION_DEPENDENT_MATCH_FOUND')) {\n      responseError = AWSDKError.AWSDKDependentMatchFound();\n    } else if (statusCode === 410 && olcError === 'ENG_EXPIRED') {\n      responseError = AWSDKError.AWSDKVisitExpired();\n    } else if (statusCode === 410 && olcError === 'ENG_INVALID_DISPOSITION') {\n      responseError = AWSDKError.AWSDKVisitInvalid();\n    } else if (statusCode === 500 && olcError === 'PRIVACY_DISCLAIMER_MISSING') {\n      responseError = AWSDKError.AWSDKPrivacyPolicyDisclaimerMissing();\n    } else {\n      responseError = AWSDKError.AWSDKResponseError(message, olcError, statusCode);\n      if (error != null) {\n        responseError.errors = [error];\n      }\n    }\n    return responseError;\n  }\n}\n\nexport default ResponseParser;\n","/*\n * American Well Consumer Web SDK\n *\n * Copyright © 2017 American Well.\n * All rights reserved.\n *\n * It is illegal to use, reproduce or distribute\n * any part of this Intellectual Property without\n * prior written authorization from American Well.\n */\nimport compareVersions from 'compare-versions';\nimport version from '../version';\nimport AWSDKAuthentication from '../model/authentication/awsdk_authentication';\nimport AWSDKError from '../error/awsdk_error';\nimport AWSDKConsumer from '../model/consumer/awsdk_consumer';\nimport Form from '../internal/form/form';\nimport ResponseParser from '../internal/parser/response_parser';\nimport Validator from '../internal/validator/validator';\nimport GenericParser from '../internal/parser/generic_parser';\nimport Util from '../internal/util/util';\n\n\nclass Service {\n  constructor(props = {}) {\n    this.__config = props.config ? props.config : [];\n    this.__links = props.links ? props.links : [];\n    this.__authKeys = props.authKeys ? props.authKeys : [];\n    this.__logger = props.logger;\n    this.__serverLogger = props.serverLogger;\n  }\n\n  generateOptions(method, url, useForm = true) {\n    const snapshotVersionSuffix = version.sdkVersion.indexOf('-');\n    let clientVersion = version.sdkVersion;\n    if (snapshotVersionSuffix !== -1) {\n      clientVersion = version.sdkVersion.substring(0, snapshotVersionSuffix);\n    }\n    const options = {\n      method,\n      url,\n      headers: {\n        Accept: 'application/json',\n        'Accept-Encoding': 'gzip',\n        'X-Client-Version': clientVersion,\n        'X-Internal-Build': this.__config.internalBuild ? this.__config.internalBuild : false,\n        'X-Supported-OnlineCare-Versions': version.supportedOnlineCareVersion,\n      },\n    };\n\n    if (this.__isCallerIdSupported()) {\n      options.headers['X-Caller-Id'] = this.__config.uuid;\n    }\n    if (this.__config.locale) {\n      options.headers['Accept-Language'] = this.__localeToAcceptLanguage(this.__config.locale);\n    }\n\n    if (useForm) {\n      options.form = new Form();\n      if (method !== 'GET' && method !== 'DELETE') {\n        options.headers['Content-Type'] = 'application/x-www-form-urlencoded; charset=UTF-8';\n      }\n    }\n    return options;\n  }\n\n  /**\n   * Checks to see if the Amwell platform version supports the caller ID header\n   *\n   * @returns {boolean} returns true if the Amwell platform version supports the caller ID header\n   * @private\n   */\n  __isCallerIdSupported() {\n    return this.__isAmWellPlatformVersionNewerThan('4.6.2');\n  }\n\n  /**\n   * Returns true if __config.amWellPlatformVersion is defined, and newer than the provided compareVersion\n   *\n   * @param {string} compareVersion The version number of the Amwell platform to compare against the actual version number.\n   * @returns {boolean} returns true if actual the Amwell platform version number is newer than the passed in version number.\n   * @private\n   */\n  __isAmWellPlatformVersionNewerThan(compareVersion) {\n    if (this.__config.amWellPlatformVersion === undefined) {\n      return false;\n    }\n\n    // the Amwell platform versions are sent with a leading letter \"O\"\n    const trimmedAmWellPlatformVersion = this.__config.amWellPlatformVersion.replace(/^O+/, '');\n    return compareVersions(trimmedAmWellPlatformVersion, compareVersion) > 0;\n  }\n\n  getSdkAuth() {\n    const encodedUserPass = btoa(`${this.__config.sdkApiKey}:`);\n    return `Basic ${encodedUserPass}`;\n  }\n\n  getUserAuth(consumer) {\n    const authEntry = this.getUserAuthEntry(consumer);\n    let auth = null;\n    if (authEntry != null && authEntry.token) {\n      auth = `Bearer ${authEntry.token}`;\n    }\n    return auth;\n  }\n\n  getUserAuthEntry(consumer) {\n    let authEntry = null;\n    if (consumer instanceof AWSDKConsumer) {\n      const consumerId = this.__fetchAuthConsumerPersistentId(consumer);\n      authEntry = this.findNamedLink(this.__authKeys, consumerId);\n    }\n    return authEntry;\n  }\n\n  addUserAuthEntry(authenticate) {\n    if (authenticate instanceof AWSDKAuthentication) {\n      this.updateUserAuthEntry(authenticate.consumer, authenticate.authToken);\n    }\n  }\n\n  updateUserAuthEntry(consumer, token) {\n    if (consumer instanceof AWSDKConsumer) {\n      const consumerId = this.__fetchAuthConsumerPersistentId(consumer);\n      const authEntry = this.findNamedLink(this.__authKeys, consumerId);\n      if (authEntry != null) {\n        authEntry.token = token;\n      } else {\n        this.__authKeys.push({ name: consumerId, token });\n      }\n    }\n  }\n\n  removeUserAuthEntry(consumer) {\n    if (consumer instanceof AWSDKConsumer) {\n      const consumerId = this.__fetchAuthConsumerPersistentId(consumer);\n      const removeIndex = this.findNamedLinkIndex(this.__authKeys, consumerId);\n      if (removeIndex >= 0) {\n        this.__authKeys.splice(removeIndex, 1);\n      }\n    }\n  }\n\n  /**\n   * @private\n   * @returns {string} returns the string representing the persistentId of the consumer of it's legal guardian if a dependent\n   */\n  __fetchAuthConsumerPersistentId(consumer) {\n    if (consumer.proxies && consumer.proxies.length > 0) {\n      const parentId = this.__fetchParentId(consumer);\n      if (parentId) {\n        return parentId.persistentId;\n      }\n      return null;\n    } else if (consumer.parent !== null) {\n      return consumer.parent.id.persistentId;\n    }\n    return consumer.id.persistentId;\n  }\n  /**\n   * @private\n   * @returns {model.AWSDKEntityId} the id of this parent or empty object if none is found\n   */\n  __fetchParentId(consumer) {\n    const mappedEntries = Array.isArray(this.__authKeys) && this.__authKeys.length > 0 ? this.__authKeys.map(item => item.name) : []; // prevent map from being called on each iteration of find\n    return consumer.proxies.map(proxy => proxy.id)\n      .find(item => mappedEntries.indexOf(item.persistentId) >= 0);\n  }\n\n  findNamedLink(links, linkName) {\n    if (links === undefined || !Array.isArray(links) || links.length === 0) {\n      return null;\n    }\n    return links.find(item => item.name === linkName);\n  }\n\n  findNamedLinkIndex(links, linkName) {\n    if (links === undefined || !Array.isArray(links) || links.length === 0) {\n      return -1;\n    }\n    return links.map(item => item.name).indexOf(linkName);\n  }\n\n  executeRequest(options, Klass) {\n    const optHeaders = options.headers;\n    const requestHeaders = new Headers(optHeaders);\n    requestHeaders.set('Authorization', options.auth);\n    const init = {\n      method: options.method,\n      mode: 'cors',\n      headers: requestHeaders,\n      credentials: 'omit',\n    };\n    let url = options.url;\n    if (options.method !== 'GET' && options.method !== 'DELETE') {\n      init.body = options.form ? options.form.toString() : options.body;\n    } else if (options.form) {\n      // for a 'GET' and a 'DELETE' append the form as parameters to the url\n      const queryString = options.form.toString();\n      if (queryString.length > 0) {\n        url += '?';\n        url += options.form.toString();\n      }\n    }\n    return fetch(url, init)\n      .then((response) => {\n        this.__logger.debug('service.executeRequest', 'Parsing response');\n        return ResponseParser.parse(response, Klass);\n      })\n      .catch((err) => {\n        this.__logger.debug('service.executeRequest', 'error', err);\n        if (err instanceof AWSDKError) {\n          throw err;\n        }\n        throw new AWSDKError(err);\n      });\n  }\n\n  __localeToAcceptLanguage(locale) {\n    if (!locale) return null;\n    const arr = locale.split('_');\n    let acceptLanguage = '';\n    if (arr) {\n      acceptLanguage = `${arr[0]}-${arr[1]}`;\n    } else {\n      acceptLanguage = locale;\n    }\n    return acceptLanguage;\n  }\n\n  /**\n   * @private\n   */\n  __buildPaginatedRequest(consumer, options, url) {\n    const currentFunction = 'service.__buildPaginatedRequest';\n    if (options.pageSize && (!Validator.isInt(options.pageSize) || options.pageSize < 1)) {\n      const error = AWSDKError.AWSDKIllegalArgument('options.pageSize must be a positive integer');\n      this.__logger.error(currentFunction, 'Error', error);\n      throw error;\n    }\n    if (options.startDate && !Validator.isValidDate(options.startDate)) {\n      const error = AWSDKError.AWSDKIllegalArgument('options.startDate must be a Date');\n      this.__logger.error(currentFunction, 'Error', error);\n      throw error;\n    }\n    if (options.endDate && !Validator.isValidDate(options.endDate)) {\n      const error = AWSDKError.AWSDKIllegalArgument('options.endDate must be a Date');\n      this.__logger.error(currentFunction, 'Error', error);\n      throw error;\n    }\n    if (options.startDate && options.endDate && options.startDate > options.endDate) {\n      const error = AWSDKError.AWSDKIllegalArgument('options.startDate must be before options.endDate');\n      this.__logger.error(currentFunction, 'Error', error);\n      throw error;\n    }\n\n    const request = this.generateOptions('POST', url, false);\n    request.auth = this.getUserAuth(consumer);\n    if (!request.auth) {\n      const error = AWSDKError.AWSDKConsumerNotAuthenticated();\n      this.__logger.error(currentFunction, error);\n      return Promise.reject(error);\n    }\n\n    if (options.startDate) {\n      options.startDate = Util.formatISODateTime(options.startDate);\n    }\n    if (options.endDate) {\n      options.endDate = Util.formatISODateTime(options.endDate);\n    }\n\n    request.headers['Content-Type'] = 'application/json';\n    request.body = JSON.stringify(options);\n    return Promise.resolve(request);\n  }\n}\n\nexport default Service;\n","/*!\n * American Well Consumer Web SDK\n *\n * Copyright © 2017 American Well.\n * All rights reserved.\n *\n * It is illegal to use, reproduce or distribute\n * any part of this Intellectual Property without\n * prior written authorization from American Well.\n */\nimport AWSDKAuthentication from './../model/authentication/awsdk_authentication';\nimport AWSDKConsumer from '../model/consumer/awsdk_consumer';\nimport AWSDKError from './../error/awsdk_error';\nimport AWSDKRecoverEmailResponse from './../internal/model/response/awsdk_recover_email_response';\nimport AWSDKResponse from './../internal/model/response/awsdk_response';\nimport Service from './service';\nimport Validator from '../internal/validator/validator';\nimport Utils from '../internal/util/util';\n\n/**\n * This service handles everything related to authentication of a {@link model.AWSDKConsumer|AWSDKConsumer}.\n * <br>Should be obtained from {@link awsdk.AWSDK#authenticationService|AWSDK.authenticationService}\n * @since 1.0.0\n * @hideconstructor\n * @extends service.Service\n */\nclass AuthenticationService extends Service {\n  /**\n   * Authenticates a consumer with American Well's Telehealth Platform using their credentials.\n   *\n   * @param {String} username - the username\n   * @param {String} password - the password\n   * @param {String} [consumerAuthKey] - the optional consumerAuthKey\n   * @returns {Promise<model.AWSDKAuthentication|error.AWSDKError>} Returns a promise that will be resolved to an {@link model.AWSDKAuthentication|AWSDKAuthentication} or will\n   * be rejected with an {@link error.AWSDKError|AWSDKError}.\n   * <p><br>Potential Error Codes<br>\n   * <table summary=\"ErrorCodes\" border=\"1\">\n   * <tr><th>Error Code</th><th>reason</th></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.internalError|AWSDKErrorCode.internalError}</td><td>The AWSDK could not complete the request.</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.validationRequiredParameterMissing|AWSDKErrorCode.validationRequiredParameterMissing}</td><td>Missing parameter.</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.authenticationAccessDenied|AWSDKErrorCode.authenticationAccessDenied}</td><td>The credentials didn't match a user on the telehealth platform.</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.updateConsumerAuthKeyFailed|AWSDKErrorCode.updateConsumerAuthKeyFailed}</td><td>Updating the consumer auth key failed.</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.partiallyRegisteredUser|AWSDKErrorCode.partiallyRegisteredUser}</td><td>The user is partially registered and needs to complete registration to proceed. See [AWSDKPartialConsumer completeRegistrationWithLocation:username:password:completion:] for more details.</td></tr>\n   * </table>\n   * @since 1.0.0\n   */\n  authenticateConsumerWithUsername(username, password, consumerAuthKey) {\n    const currentFunction = 'authenticationService.authenticateConsumerWithUsername';\n    this.__logger.debug(currentFunction, 'Started', username, password, consumerAuthKey);\n    const link = this.findNamedLink(this.__links, 'userAuthWithCredentials');\n    if (!Validator.isValidLink(link)) {\n      const error = AWSDKError.AWSDKInternalError('service does not have a valid \"userAuthWithCredentials\" link entry');\n      this.__logger.error(currentFunction, 'error', error);\n      return Promise.reject(error);\n    }\n    if (!Validator.isValidString(username)) {\n      const error = AWSDKError.AWSDKValidationRequiredParameterMissing('username');\n      this.__logger.error(currentFunction, 'error', error);\n      return Promise.reject(error);\n    }\n    if (!Validator.isValidString(password)) {\n      const error = AWSDKError.AWSDKValidationRequiredParameterMissing('password');\n      this.__logger.error(currentFunction, 'error', error);\n      return Promise.reject(error);\n    }\n\n    const options = this.generateOptions('POST', link.url);\n    options.auth = this.getSdkAuth();\n    options.form.set('username', username);\n    options.form.set('password', password);\n    options.form.set('sdkUserAuthKey', consumerAuthKey);\n    options.form.set('sdkApiKey', this.__config.sdkApiKey);\n    return this.executeRequest(options, AWSDKAuthentication)\n      .then((authentication) => {\n        this.__logger.debug(currentFunction, 'Got response', authentication);\n        if (authentication) {\n          this.__serverLogger.logToServer('info',\n            'Consumer {0} has successfully authenticated using Consumer Web SDK',\n            [\n              authentication.getServerLogParam(),\n            ]);\n        }\n        this.addUserAuthEntry(authentication);\n        this.__logger.info(currentFunction, 'Complete');\n        return authentication;\n      })\n      .catch((error) => {\n        this.__logger.error(currentFunction, 'error', error);\n        throw error;\n      });\n  }\n  /**\n   * Authenticates a consumer with American Well's Telehealth Platform using their consumerAuthKey.\n   *\n   * @param {String} token - the security token used for authenticating\n   * @returns {Promise<model.AWSDKAuthentication|error.AWSDKError>} Returns a promise that will be resolved to an {@link model.AWSDKAuthentication|AWSDKAuthentication} or will\n   * be rejected with an {@link error.AWSDKError|AWSDKError}.\n   * <p><br>Potential Error Codes<br>\n   * <table summary=\"ErrorCodes\" border=\"1\">\n   * <tr><th>Error Code</th><th>reason</th></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.internalError|AWSDKErrorCode.internalError}</td><td>The AWSDK could not complete the request.</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.validationRequiredParameterMissing|AWSDKErrorCode.validationRequiredParameterMissing}</td><td>Missing parameter.</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.authenticationAccessDenied|AWSDKErrorCode.authenticationAccessDenied}</td><td>The credentials didn't match a user on the telehealth platform.</td></tr>\n   * </table>\n   * @since 1.0.0\n   */\n  authenticateMutualAuthWithToken(token) {\n    const currentFunction = 'authenticationService.authenticateMutualAuthWithToken';\n    this.__logger.debug(currentFunction, 'Started', token);\n    const link = this.findNamedLink(this.__links, 'mutualUserAuthWithKey');\n    if (!Validator.isValidLink(link)) {\n      const error = AWSDKError.AWSDKInternalError('service does not have a valid \"mutualUserAuthWithKey\" link entry');\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    if (!Validator.isValidString(token)) {\n      const error = AWSDKError.AWSDKValidationRequiredParameterMissing('token');\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    const options = this.generateOptions('POST', link.url);\n    options.auth = this.getSdkAuth();\n    options.form.set('externalAuthToken', token);\n    options.form.set('sdkApiKey', this.__config.sdkApiKey);\n    return this.executeRequest(options, AWSDKAuthentication)\n      .then((authentication) => {\n        this.__logger.debug(currentFunction, 'Got response', authentication);\n        if (authentication) {\n          this.__serverLogger.logToServer('info',\n            'Consumer {0} has successfully authenticated using Consumer Web SDK',\n            [\n              authentication.getServerLogParam(),\n            ]);\n        }\n        this.addUserAuthEntry(authentication);\n        this.__logger.info(currentFunction, 'Complete');\n        return authentication;\n      })\n      .catch((error) => {\n        this.__logger.error(currentFunction, 'Error', error);\n        throw error;\n      });\n  }\n\n  /**\n   * Clear the stored authentication information for last authenticated user. <br>\n   * this essentially \"logs out\" the user<br>\n   * this is a client-side method, there is no server communication.<br>\n   *\n   * @param {model.AWSDKConsumer} consumer the consumer to log out\n   * @throws {error.AWSDKError} if consumer is null or not an instance of {@link model.AWSDKConsumer|AWSDKConsumer} errorCode will be {@link error.AWSDKErrorCode.IllegalArgument|AWSDKErrorCode.IllegalArgument}\n   * @since 1.0.0\n   */\n  clearAuthentication(consumer) {\n    const currentFunction = 'authenticationService.clearAuthentication';\n    this.__logger.debug(currentFunction, 'Started', consumer);\n    if (!(consumer instanceof AWSDKConsumer)) {\n      const error = AWSDKError.AWSDKIllegalArgument('Param \"consumer\" must be of type AWSDKConsumer');\n      this.__logger.error(currentFunction, 'Error', error);\n      throw error;\n    }\n    this.removeUserAuthEntry(consumer);\n    this.__logger.info(currentFunction, 'Complete');\n  }\n  /**\n   * Recover the consumer's user name.<br>\n   * if the username does not match the consumer's email address, an email with the username will be sent and a status of USERNAME_EMAILED will be returned.<br>\n   * if the username matches the consumer's email address, a status of EMAIL_RECOVERED with a redacted email address will be returned. <br>\n   * if the given lastName and dob do NOT correspond to an existing consumer's account, a status of USERNAME_EMAILED will still be returned, even though<br>\n   * no email is actually sent - no indication is given as to whether a given consumer account exists.<br>\n   * @param {String} lastName the consumer's last name\n   * @param {Date} dob the consumer's date of birth\n   * @returns {Promise<model.AWSDKRecoverEmail|error.AWSDKError>} Returns a promise that will be resolved to an {@link model.AWSDKRecoverEmail} or will\n   * be rejected with an {@link error.AWSDKError|AWSDKError}.\n   * <p><br>Potential Error Codes<br>\n   * <table summary=\"ErrorCodes\" border=\"1\">\n   * <tr><th>Error Code</th><th>reason</th></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.illegalArgument|AWSDKErrorCode.illegalArgument}</td><td>If lastName or dob are undefined or dob not an instance of Date</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.internalError|AWSDKErrorCode.internalError}</td><td>The AWSDK could not complete the request.</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.validationErrors|AWSDKErrorCode.validationErrors}</td><td>If lastName or dob are invalid.</td></tr>\n   * </table>\n   * @since 1.1.0\n   */\n  recoverEmail(lastName, dob) {\n    const currentFunction = 'authenticationService.recoverEmail';\n    this.__logger.debug(currentFunction, 'Started', lastName, dob);\n    const errors = [];\n    if (lastName === undefined) {\n      const error = AWSDKError.AWSDKIllegalArgument('lastName is undefined');\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    if (dob === undefined) {\n      const error = AWSDKError.AWSDKIllegalArgument('dob is undefined');\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    if (dob != null && !(dob instanceof Date)) {\n      const error = AWSDKError.AWSDKIllegalArgument('dob is not an instance of Date');\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    if (!Validator.isValidString(lastName)) {\n      errors.push(AWSDKError.AWSDKFieldValidationError(null, 'lastName', 'field required', 'set to non-empty value'));\n    }\n    if (dob == null) {\n      errors.push(AWSDKError.AWSDKFieldValidationError(null, 'dob', 'field required', 'set to non-empty value'));\n    }\n    if (errors.length > 0) {\n      const error = AWSDKError.AWSDKValidationErrors(errors);\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    const link = this.findNamedLink(this.__links, 'recoverEmail');\n    if (!Validator.isValidLink(link)) {\n      const error = AWSDKError.AWSDKInternalError('service does not have a valid \"recoverEmail\" link entry');\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    const options = this.generateOptions('GET', link.url);\n    options.auth = this.getSdkAuth();\n    options.form.set('lastName', lastName);\n    options.form.set('dob', Utils.formatISODate(dob));\n    return this.executeRequest(options, AWSDKRecoverEmailResponse)\n      .then((recoverEmailResponse) => {\n        this.__logger.debug(currentFunction, 'Got response', recoverEmailResponse);\n        this.__logger.info(currentFunction, 'Complete');\n        return recoverEmailResponse.recoverEmail;\n      })\n      .catch((error) => {\n        this.__logger.error(currentFunction, 'Error', error);\n        throw error;\n      });\n  }\n  /**\n   * Send an email with instructions to reset the consumer's password.<br>\n   * Returns true even if these consumer details did not actually match an existing consumer account.<br>\n   * No indication is given as to whether a given consumer account exists.<br>\n   * @param {String} email the consumer's email\n   * @param {String} lastName the consumer's last name\n   * @param {Date} dob the consumer's date of birth\n   * @returns {Promise<boolean|error.AWSDKError>} Returns a promise that will be resolved to a boolean  or will be rejected with an {@link error.AWSDKError|AWSDKError}.\n   * <p><br>Potential Error Codes<br>\n   * <table summary=\"ErrorCodes\" border=\"1\">\n   * <tr><th>Error Code</th><th>reason</th></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.illegalArgument|AWSDKErrorCode.illegalArgument}</td><td>If email, lastName or dob are undefined or dob not an instance of Date</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.internalError|AWSDKErrorCode.internalError}</td><td>The AWSDK could not complete the request.</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.validationErrors|AWSDKErrorCode.validationErrors}</td><td>If email, lastName or dob are invalid.</td></tr>\n   * </table>\n   * @since 1.1.0\n   */\n  requestPasswordReset(email, lastName, dob) {\n    const currentFunction = 'authenticationService.requestPasswordReset';\n    this.__logger.debug(currentFunction, 'Started', email, lastName, dob);\n    const errors = [];\n    if (email === undefined) {\n      const error = AWSDKError.AWSDKIllegalArgument('email is undefined');\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    if (lastName === undefined) {\n      const error = AWSDKError.AWSDKIllegalArgument('lastName is undefined');\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    if (dob === undefined) {\n      const error = AWSDKError.AWSDKIllegalArgument('dob is undefined');\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    if (dob != null && !(dob instanceof Date)) {\n      const error = AWSDKError.AWSDKIllegalArgument('dob is not an instance of Date');\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    if (!Validator.isEmailValid(email)) {\n      errors.push(AWSDKError.AWSDKFieldValidationError(null, 'email', 'invalid format', 'See valid format in docs'));\n    }\n    if (!Validator.isValidString(lastName)) {\n      errors.push(AWSDKError.AWSDKFieldValidationError(null, 'lastName', 'field required', 'set to non-empty value'));\n    }\n    if (dob == null) {\n      errors.push(AWSDKError.AWSDKFieldValidationError(null, 'dob', 'field required', 'set to non-empty value'));\n    }\n    if (errors.length > 0) {\n      const error = AWSDKError.AWSDKValidationErrors(errors);\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    const link = this.findNamedLink(this.__links, 'resetPassword');\n    if (!Validator.isValidLink(link)) {\n      const error = AWSDKError.AWSDKInternalError('service does not have a valid \"resetPassword\" link entry');\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    const options = this.generateOptions('PUT', link.url);\n    options.auth = this.getSdkAuth();\n    options.form.set('email', email);\n    options.form.set('lastName', lastName);\n    options.form.set('dob', Utils.formatISODate(dob));\n    return this.executeRequest(options, AWSDKResponse)\n      .then((response) => {\n        this.__logger.debug(currentFunction, 'Got response', response);\n        this.__logger.info(currentFunction, 'Complete');\n        return true;\n      })\n      .catch((error) => {\n        this.__logger.error(currentFunction, 'Error', error);\n        throw error;\n      });\n  }\n  /**\n   * Update the consumer's password.<br>\n   * @param {String} accountId the consumer's account id\n   * @param {String} token the password reset token\n   * @param {String} password the new password\n   * @returns {Promise<boolean|error.AWSDKError>} Returns a promise that will be resolved to a boolean  or will be rejected with an {@link error.AWSDKError|AWSDKError}.\n   * <p><br>Potential Error Codes<br>\n   * <table summary=\"ErrorCodes\" border=\"1\">\n   * <tr><th>Error Code</th><th>reason</th></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.consumerNotFound|AWSDKErrorCode.consumerNotFound}</td><td>Consumer not found</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.illegalArgument|AWSDKErrorCode.illegalArgument}</td><td>If accountId, token or password are undefined or null</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.internalError|AWSDKErrorCode.internalError}</td><td>The AWSDK could not complete the request.</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.invalidPassword|AWSDKErrorCode.invalidPassword}</td><td>The password is invalid</td</tr>\n   * </table>\n   * @since 1.1.0\n   */\n  updatePassword(accountId, token, password) {\n    const currentFunction = 'authenticationService.updatePassword';\n    this.__logger.debug(currentFunction, 'Started', accountId, token, password);\n    if (accountId == null) {\n      const error = AWSDKError.AWSDKIllegalArgument('accountId is null');\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    if (token == null) {\n      const error = AWSDKError.AWSDKIllegalArgument('token is null');\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    if (password == null) {\n      const error = AWSDKError.AWSDKIllegalArgument('password is null');\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    if (!Validator.isValidString(password)) {\n      const error = AWSDKError.AWSDKInvalidPassword();\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    const link = this.findNamedLink(this.__links, 'updatePassword');\n    if (!Validator.isValidLink(link)) {\n      const error = AWSDKError.AWSDKInternalError('service does not have a valid \"updatePassword\" link entry');\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    const options = this.generateOptions('PUT', link.url);\n    options.auth = this.getSdkAuth();\n    options.form.set('accountId', accountId);\n    options.form.set('token', token);\n    options.form.set('password', password);\n    return this.executeRequest(options, AWSDKResponse)\n      .then((response) => {\n        this.__logger.debug(currentFunction, 'Got response', response);\n        this.__logger.info(currentFunction, 'Complete');\n        return true;\n      })\n      .catch((error) => {\n        this.__logger.error(currentFunction, 'Error', error);\n        throw error;\n      });\n  }\n}\n\nexport default AuthenticationService;\n","/*!\n * American Well Consumer Web SDK\n *\n * Copyright © 2017 American Well.\n * All rights reserved.\n *\n * It is illegal to use, reproduce or distribute\n * any part of this Intellectual Property without\n * prior written authorization from American Well.\n */\nimport AWSDKResponse from './awsdk_response';\nimport AWSDKConsumer from '../../../model/consumer/awsdk_consumer';\nimport GenericParser from '../../parser/generic_parser';\n\n/**\n * AWSDKConsumerResponse class represents the wrapper object that contains the result of a search for a consumer details information <br>\n * and contains a single instance of a {@link AWSDKConsumer} object\n * @property {model.AWSDKConsumer} consumer the {@link AWSDKConsumer} object\n * @extends model.AWSDKResponse\n */\nclass AWSDKConsumerResponse extends AWSDKResponse {\n  get consumer() {\n    return GenericParser.parseObject(this.__data.member, AWSDKConsumer);\n  }\n}\n\nexport default AWSDKConsumerResponse;\n","/*!\n * American Well Consumer Web SDK\n *\n * Copyright © 2018 American Well.\n * All rights reserved.\n *\n * It is illegal to use, reproduce or distribute\n * any part of this Intellectual Property without\n * prior written authorization from American Well.\n */\nimport AWSDKDataObject from './../awsdk_dataobject';\nimport GenericParser from '../../internal/parser/generic_parser';\n\n/**\n * The AWSDKHealthSummaryRecord class represents entries in the health summary\n * @property {String} code The code of the item of record\n * @property {String} description The description of the item of record\n * @property {Date} firstOccurance The first occurrence of the record\n * @property {Date} lastOccurance The last occurrence of the record\n * @property {Boolean} selfReported If the record was reported by the consumer\n * @extends model.AWSDKDataObject\n */\nclass AWSDKHealthSummaryRecord extends AWSDKDataObject {\n  get selfReported() {\n    return GenericParser.parseBoolean(this.__data.selfReported);\n  }\n  get code() {\n    return this.__data.term ? this.__data.term.code : null;\n  }\n  get description() {\n    return this.__data.term ? this.__data.term.description : null;\n  }\n  get firstOccurrence() {\n    return GenericParser.parseDate(this.__data.firstOccurrence);\n  }\n  get lastOccurrence() {\n    return GenericParser.parseDate(this.__data.lastOccurrence);\n  }\n}\n\nexport default AWSDKHealthSummaryRecord;\n","/*!\n * American Well Consumer Web SDK\n *\n * Copyright (c) 2020 American Well.\n * All rights reserved.\n *\n * It is illegal to use, reproduce or distribute\n * any part of this Intellectual Property without\n * prior written authorization from American Well.\n */\n\nimport AWSDKHealthSummaryRecord from './awsdk_health_summary_record';\nimport GenericParser from '../../internal/parser/generic_parser';\n\n/**\n * This class represents a prescription in health summary record.\n * @property {Boolean} isDispenseAsWritten boolean true if prescription is to be dispensed as written\n * @property {Boolean} isAsNeeded boolean true if prescription as needed\n * @property {Boolean} isStopWhenDirected boolean true if the prescription is to be stoped when directed\n * @property {String} dosage the dosage of the prescription\n * @property {String} duration the duration of the prescription\n * @property {String} frequency the frequency of the prescription\n * @property {String} instructions the instructions for the prescription\n * @property {String} quantity the quantity of the prescription\n * @property {Number} refillTotal the number of refills for the prescription\n * @property {String} measurementUnitQualifier the measurement unit qualifier\n * @extends model.AWSDKHealthSummaryRecord\n * @since 3.0.0\n */\nclass AWSDKHealthSummaryPrescriptionRecord extends AWSDKHealthSummaryRecord {\n  get isDispenseAsWritten() {\n    return GenericParser.parseBoolean(this.__data.dispenseAsWritten);\n  }\n\n  get isAsNeeded() {\n    return GenericParser.parseBoolean(this.__data.asNeeded);\n  }\n\n  get isStopWhenDirected() {\n    return GenericParser.parseBoolean(this.__data.stopWhenDirected);\n  }\n\n  get dosage() {\n    return this.__data.dosage;\n  }\n\n  get duration() {\n    return this.__data.duration;\n  }\n\n  get frequency() {\n    return this.__data.frequency;\n  }\n\n  get instructions() {\n    return this.__data.instructions;\n  }\n\n  get quantity() {\n    return this.__data.quantityToDispense;\n  }\n\n  get refillTotal() {\n    return this.__data.refillTotal;\n  }\n\n  get measurementUnitQualifier() {\n    return this.__data.measurementUnitQualifier;\n  }\n}\nexport default AWSDKHealthSummaryPrescriptionRecord;\n","/*!\n * American Well Consumer Web SDK\n *\n * Copyright © 2018 American Well.\n * All rights reserved.\n *\n * It is illegal to use, reproduce or distribute\n * any part of this Intellectual Property without\n * prior written authorization from American Well.\n */\nimport AWSDKDataObject from './../awsdk_dataobject';\nimport AWSDKHealthSummaryRecord from '../health/awsdk_health_summary_record';\nimport GenericParser from '../../internal/parser/generic_parser';\nimport AWSDKHealthSummaryPrescriptionRecord from '../health/awsdk_health_summary_prescription_record';\n\n/**\n * The AWSDKHealthSummary class represents a summary of previously gathered health information records for a {@link model.AWSDKConsumer|AWSDKConsumer}\n * @property {model.AWSDKHealthSummaryRecord[]} allergies an array of {@link model.AWSDKHealthSummaryRecord|AWSDKHealthSummaryRecord} objects for allergies\n * @property {model.AWSDKHealthSummaryRecord[]} diagnoses an array of {@link model.AWSDKHealthSummaryRecord|AWSDKHealthSummaryRecord} objects for diagnoses\n * @property {model.AWSDKHealthSummaryRecord[]} procedures an array of {@link model.AWSDKHealthSummaryRecord|AWSDKHealthSummaryRecord} objects for procedures\n * @property {model.AWSDKHealthSummaryPrescriptionRecord[]} prescriptions an array of {@link model.AWSDKHealthSummaryPrescriptionRecord|AWSDKHealthSummaryPrescriptionRecord} objects for prescriptions\n * @extends model.AWSDKDataObject\n */\nclass AWSDKHealthSummary extends AWSDKDataObject {\n  get allergies() {\n    return this.__data.allergies.map(item => GenericParser.parseObject(item, AWSDKHealthSummaryRecord));\n  }\n\n  get diagnoses() {\n    return this.__data.diagnoses.map(item => GenericParser.parseObject(item, AWSDKHealthSummaryRecord));\n  }\n\n  get prescriptions() {\n    return this.__data.prescriptions.map(item => GenericParser.parseObject(item, AWSDKHealthSummaryPrescriptionRecord));\n  }\n\n  get procedures() {\n    return this.__data.procedures.map(item => GenericParser.parseObject(item, AWSDKHealthSummaryRecord));\n  }\n}\n\nexport default AWSDKHealthSummary;\n","/*!\n * American Well Consumer Web SDK\n *\n * Copyright (c) 2018 American Well.\n * All rights reserved.\n *\n * It is illegal to use, reproduce or distribute\n * any part of this Intellectual Property without\n * prior written authorization from American Well.\n */\n\nimport AWSDKResponse from './awsdk_response';\nimport AWSDKHealthSummary from '../../../model/consumer/awsdk_health_summary';\nimport GenericParser from '../../parser/generic_parser';\n\nclass AWSDKHealthSummaryResponse extends AWSDKResponse {\n  get healthSummary() {\n    return GenericParser.parseObject(this.__data.healthSummary, AWSDKHealthSummary);\n  }\n}\n\nexport default AWSDKHealthSummaryResponse;\n","/*!\n * American Well Consumer Web SDK\n *\n * Copyright © 2017 American Well.\n * All rights reserved.\n *\n * It is illegal to use, reproduce or distribute\n * any part of this Intellectual Property without\n * prior written authorization from American Well.\n */\nimport AWSDKResponse from './awsdk_response';\nimport AWSDKConsumer from '../../../model/consumer/awsdk_consumer';\nimport GenericParser from '../../parser/generic_parser';\n\n/**\n * AWSDKDependentResponse class represents the wrapper object that contains the result of a search for a dependent details information <br>\n * and contains a single instance of a {@link AWSDKConsumer} object\n * @property {model.AWSDKConsumer} consumer the {@link AWSDKConsumer} object\n * @extends model.AWSDKResponse\n */\nclass AWSDKDependentResponse extends AWSDKResponse {\n  get dependent() {\n    return GenericParser.parseObject(this.__data.dependent, AWSDKConsumer);\n  }\n}\n\nexport default AWSDKDependentResponse;\n","/*!\r\n * American Well Consumer Web SDK\r\n *\r\n * Copyright (c) 2017 American Well.\r\n * All rights reserved.\r\n *\r\n * It is illegal to use, reproduce or distribute\r\n * any part of this Intellectual Property without\r\n * prior written authorization from American Well.\r\n */\r\nimport AWSDKEntity from '../awsdk_entity';\r\nimport AWSDKError from '../../error/awsdk_error';\r\nimport AWSDKConsumerMiddleNameHandling from './awsdk_consumer_middle_name_handling';\r\nimport Utils from '../../internal/util/util';\r\n\r\n/**\r\n * AWSDKBaseConsumerUpdate represents a base interface for {@link model.AWSDKConsumer|AWSDKConsumer} and Dependent update and registration data. <br>\r\n * See {@link model.AWSDKConsumerRegistration|AWSDKConsumerRegistration} for usage.\r\n * @property {String} firstName the consumer's first name.\r\n * @property {String} middleInitial the consumer's middle initial\r\n * @property {String} middleName the consumer's middle name\r\n * @property {String} lastName the consumer's last name\r\n * @property {Date} dob the consumer's date of birth\r\n * @property {String} gender the consumer's gender\r\n * @property {String} sdkUserId the sdkUserId which associates an external ID with this consumer and the SDK configuration in use\r\n * @property {String} sourceId the consumer's source ID\r\n * @property {String[]} brandings an Array of Strings representing a consumer's branding attributes.\r\n * @extends model.AWSDKEntity\r\n */\r\nclass AWSDKBaseConsumerUpdate extends AWSDKEntity {\r\n  get firstName() {\r\n    return this.__data.firstName;\r\n  }\r\n\r\n  get middleInitial() {\r\n    return this.__data.middleInitial;\r\n  }\r\n\r\n  get middleName() {\r\n    return this.__data.middleName;\r\n  }\r\n\r\n  get lastName() {\r\n    return this.__data.lastName;\r\n  }\r\n\r\n  get dob() {\r\n    return this.__data.dob;\r\n  }\r\n\r\n  get gender() {\r\n    return this.__data.gender;\r\n  }\r\n\r\n  /**\r\n   * @since 2.0.0\r\n   */\r\n  get sdkUserId() {\r\n    return this.__data.sdkUserId;\r\n  }\r\n\r\n  /**\r\n   * @since 1.2.2\r\n   */\r\n  get sourceId() {\r\n    return this.__data.sourceId;\r\n  }\r\n\r\n  set firstName(firstName) {\r\n    this.__data.firstName = firstName;\r\n  }\r\n\r\n  set middleInitial(middleInitial) {\r\n    this.__data.middleInitial = middleInitial;\r\n  }\r\n\r\n  set middleName(middleName) {\r\n    this.__data.middleName = middleName;\r\n  }\r\n\r\n  set lastName(lastName) {\r\n    this.__data.lastName = lastName;\r\n  }\r\n\r\n  set dob(dob) {\r\n    if (!(dob instanceof Date)) {\r\n      throw AWSDKError.AWSDKIllegalArgument('dob');\r\n    }\r\n    this.__data.dob = dob;\r\n  }\r\n\r\n  set gender(gender) {\r\n    this.__data.gender = gender;\r\n  }\r\n\r\n  /**\r\n   * @since 1.2.2\r\n   */\r\n  set sourceId(sourceId) {\r\n    this.__data.sourceId = sourceId;\r\n  }\r\n\r\n  /**\r\n   * @since 2.0.0\r\n   */\r\n  set sdkUserId(sdkUserId) {\r\n    this.__data.sdkUserId = sdkUserId;\r\n  }\r\n\r\n  /**\r\n   * @since 1.5.0\r\n   */\r\n  get brandings() {\r\n    return this.__data.brandings;\r\n  }\r\n\r\n  /**\r\n   * @since 1.5.0\r\n   */\r\n  set brandings(brandingArr) {\r\n    this.__data.brandings = brandingArr;\r\n  }\r\n\r\n  /**\r\n   * A string representing the genderIdentityKey\r\n   * @type {string}\r\n   * @since 2.5.0\r\n   */\r\n  get genderIdentityKey() {\r\n    return this.__data.genderIdentityKey;\r\n  }\r\n\r\n  /**\r\n   * The setter for the genderIdentityKey\r\n   * @since 2.5.0\r\n   */\r\n  set genderIdentityKey(key) {\r\n    this.__data.genderIdentityKey = key;\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  __toRequestObject(systemConfiguration) {\r\n    const request = {\r\n      firstName: this.firstName,\r\n      lastName: this.lastName,\r\n      dob: this.dob ? Utils.formatISODate(this.dob) : undefined,\r\n      sdkUserId: this.sdkUserId,\r\n      sourceId: this.sourceId,\r\n    };\r\n\r\n    if (this.gender) {\r\n      switch (this.gender) {\r\n        case 'M':\r\n          request.gender = 'MALE';\r\n          break;\r\n        case 'F':\r\n          request.gender = 'FEMALE';\r\n          break;\r\n        case 'U':\r\n          request.gender = 'UNKNOWN';\r\n          break;\r\n        default: break;\r\n      }\r\n    }\r\n    if (systemConfiguration.genderSupportEnabled && this.genderIdentityKey) {\r\n      request.genderIdentityKey = this.genderIdentityKey;\r\n    }\r\n    if (systemConfiguration.consumerMiddleNameHandling === AWSDKConsumerMiddleNameHandling.INITIAL) {\r\n      request.middleName = this.middleInitial;\r\n    } else if (systemConfiguration.consumerMiddleNameHandling === AWSDKConsumerMiddleNameHandling.FULLNAME) {\r\n      request.middleName = this.middleName;\r\n    }\r\n\r\n    return request;\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  __toRequestBody(systemConfiguration) {\r\n    return JSON.stringify(this.__toRequestObject(systemConfiguration));\r\n  }\r\n}\r\nexport default AWSDKBaseConsumerUpdate;\r\n","/*!\r\n * American Well Consumer Web SDK\r\n *\r\n * Copyright (c) 2017 American Well.\r\n * All rights reserved.\r\n *\r\n * It is illegal to use, reproduce or distribute\r\n * any part of this Intellectual Property without\r\n * prior written authorization from American Well.\r\n */\r\nimport AWSDKBaseConsumerUpdate from './awsdk_base_consumer_update';\r\nimport GenericParser from '../../internal/parser/generic_parser';\r\n\r\n/**\r\n * AWSDKConsumerUpdate represents a data container for collecting data to update a {@link model.AWSDKConsumer|AWSDKConsumer} <br>\r\n * @property {String} email the Consumer's email address\r\n * @property {String} password the consumer's password\r\n * @property {String} legalResidence the consumer's current legal residence state code\r\n * @property {String} legalResidenceCountryCode the consumer's current legal residence country code\r\n * @property {String} preferredLocale the consumer's preferred locale.\r\n * @property {String} phone the consumer's phone number\r\n * @property {String} patientMrnId the consumer's medical record number id\r\n * @property {String} consumerAuthKey the auth key pertaining to this consumer\r\n * @property {String} address1 the consumer's street name or P.O box\r\n * @property {String} address2 the consumer's apartment, suite, or any other extra identifying field for address\r\n * @property {String} city the city where the consumer's address is located\r\n * @property {String} zipCode the consumer's zip/postal code\r\n * @property {String} stateCode the consumer's state code. example: MA\r\n * @property {String} countryCode the consumer's country code\r\n * @property {Boolean} isAppointmentReminderTextsEnabled boolean true if the consumer has appointment reminder texts enabled, false otherwise.\r\n * @property {String} timeZone the consumer's canonical time zone. Example: America/New_York\r\n * @extends model.AWSDKBaseConsumerUpdate\r\n */\r\nclass AWSDKConsumerUpdate extends AWSDKBaseConsumerUpdate {\r\n  get email() {\r\n    return this.__data.email;\r\n  }\r\n\r\n  get password() {\r\n    return this.__data.password;\r\n  }\r\n\r\n  get legalResidence() {\r\n    return this.__data.legalResidence;\r\n  }\r\n\r\n  get zipCode() {\r\n    return this.__data.zipCode;\r\n  }\r\n\r\n  get address1() {\r\n    return this.__data.address1;\r\n  }\r\n\r\n  get address2() {\r\n    return this.__data.address2;\r\n  }\r\n\r\n  get stateCode() {\r\n    return this.__data.stateCode;\r\n  }\r\n\r\n  get city() {\r\n    return this.__data.city;\r\n  }\r\n\r\n  get countryCode() {\r\n    return this.__data.countryCode;\r\n  }\r\n\r\n  get legalResidenceCountryCode() {\r\n    return this.__data.legalResidenceCountryCode;\r\n  }\r\n\r\n  get preferredLocale() {\r\n    return this.__data.preferredLocale;\r\n  }\r\n\r\n  get phone() {\r\n    return this.__data.phone;\r\n  }\r\n\r\n  get patientMrnId() {\r\n    return this.__data.patientMrnId;\r\n  }\r\n\r\n  get consumerAuthKey() {\r\n    return this.__data.consumerAuthKey;\r\n  }\r\n\r\n  get isAppointmentReminderTextsEnabled() {\r\n    return GenericParser.parseBoolean(this.__data.isAppointmentReminderTextsEnabled);\r\n  }\r\n\r\n  /**\r\n   * @since 1.4.0\r\n   */\r\n  get timeZone() {\r\n    return this.__data.timeZone;\r\n  }\r\n\r\n  set address1(address1) {\r\n    this.__data.address1 = address1;\r\n  }\r\n\r\n  set address2(address2) {\r\n    this.__data.address2 = address2;\r\n  }\r\n\r\n  set zipCode(zipCode) {\r\n    this.__data.zipCode = zipCode;\r\n  }\r\n\r\n  set stateCode(stateCode) {\r\n    this.__data.stateCode = stateCode;\r\n  }\r\n\r\n  set city(city) {\r\n    this.__data.city = city;\r\n  }\r\n\r\n  set countryCode(countryCode) {\r\n    this.__data.countryCode = countryCode;\r\n  }\r\n\r\n  set email(email) {\r\n    this.__data.email = email;\r\n  }\r\n\r\n  set password(password) {\r\n    this.__data.password = password;\r\n  }\r\n\r\n  set legalResidence(legalResidence) {\r\n    this.__data.legalResidence = legalResidence;\r\n  }\r\n\r\n  set legalResidenceCountryCode(legalResidenceCountryCode) {\r\n    this.__data.legalResidenceCountryCode = legalResidenceCountryCode;\r\n  }\r\n\r\n  set preferredLocale(preferredLocale) {\r\n    this.__data.preferredLocale = preferredLocale;\r\n  }\r\n\r\n  set phone(phone) {\r\n    this.__data.phone = phone;\r\n  }\r\n\r\n  set patientMrnId(patientMrnId) {\r\n    this.__data.patientMrnId = patientMrnId;\r\n  }\r\n\r\n  set consumerAuthKey(consumerAuthKey) {\r\n    this.__data.consumerAuthKey = consumerAuthKey;\r\n  }\r\n\r\n  set isAppointmentReminderTextsEnabled(isAppointmentReminderTextsEnabled) {\r\n    this.__data.isAppointmentReminderTextsEnabled = isAppointmentReminderTextsEnabled;\r\n  }\r\n\r\n  /**\r\n   * @since 1.4.0\r\n   */\r\n  set timeZone(timeZone) {\r\n    this.__data.timeZone = timeZone;\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  __toRequestBody(systemConfiguration, ignorePropagation) {\r\n    const request = super.__toRequestObject(systemConfiguration);\r\n\r\n    // Server uses 'middleName' for dependents and 'middleInitial' for consumers\r\n    request.middleInitial = request.middleName;\r\n    request.middleName = undefined;\r\n\r\n    request.email = this.email;\r\n    request.currentPassword = this.password;\r\n    request.password = this.password;\r\n    request.currentLocationState = this.legalResidence;\r\n    request.currentLocationCountry = this.legalResidenceCountryCode;\r\n    request.phoneNumber = this.phone;\r\n    request.patientMrn = this.patientMrnId;\r\n    request.address1 = this.address1;\r\n    request.address2 = this.address2;\r\n    request.city = this.city;\r\n    request.zipCode = this.zipCode;\r\n    request.addressState = this.stateCode;\r\n    request.addressCountry = this.countryCode;\r\n    request.sdkApiKey = this.sdkApiKey;\r\n    request.sdkUserAuthKey = this.consumerAuthKey;\r\n    request.appointmentReminderTextsEnabled = this.isAppointmentReminderTextsEnabled;\r\n    request.preferredLocale = this.preferredLocale;\r\n    request.timeZone = this.timeZone;\r\n    request.ignorePropagation = !!ignorePropagation;\r\n    request.brandings = this.brandings;\r\n\r\n    return JSON.stringify(request);\r\n  }\r\n}\r\nexport default AWSDKConsumerUpdate;\r\n","/*!\r\n * American Well Consumer Web SDK\r\n *\r\n * Copyright (c) 2017 American Well.\r\n * All rights reserved.\r\n *\r\n * It is illegal to use, reproduce or distribute\r\n * any part of this Intellectual Property without\r\n * prior written authorization from American Well.\r\n */\r\nimport AWSDKConsumerUpdate from '../consumer/awsdk_consumer_update';\r\nimport GenericParser from '../../internal/parser/generic_parser';\r\nimport AWSDKConsumerMiddleNameHandling from '../consumer/awsdk_consumer_middle_name_handling';\r\nimport Utils from '../../internal/util/util';\r\n\r\n/**\r\n * Contains data needed to register a new {@link model.AWSDKConsumer|AWSDKConsumer} <br>\r\n * Get an instance of this via {@link service.ConsumerService#newConsumerRegistration|ConsumerService.newConsumerRegistration}\r\n * @property {Boolean} hasAcceptedDisclaimer boolean true if the Consumer has accepted legal disclaimer, false otherwise.\r\n * @property {Boolean} sendWelcomeEmail boolean true to send the welcome email, false otherwise.\r\n * @extends model.AWSDKConsumerUpdate\r\n */\r\nclass AWSDKConsumerRegistration extends AWSDKConsumerUpdate {\r\n  get hasAcceptedDisclaimer() {\r\n    return GenericParser.parseBoolean(this.__data.hasAcceptedDisclaimer);\r\n  }\r\n\r\n  set hasAcceptedDisclaimer(hasAcceptedDisclaimer) {\r\n    this.__data.hasAcceptedDisclaimer = hasAcceptedDisclaimer;\r\n  }\r\n\r\n  get sendWelcomeEmail() {\r\n    return GenericParser.parseBoolean(this.__data.sendWelcomeEmail);\r\n  }\r\n\r\n  set sendWelcomeEmail(sendWelcomeEmail) {\r\n    this.__data.sendWelcomeEmail = sendWelcomeEmail;\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  __toRequestBody(systemConfiguration) {\r\n    const request = {\r\n      email: this.email,\r\n      password: this.password,\r\n      firstName: this.firstName,\r\n      lastName: this.lastName,\r\n      dob: this.dob ? Utils.formatISODate(this.dob) : undefined,\r\n      currentLocationState: this.legalResidence,\r\n      currentLocationCountry: this.legalResidenceCountryCode,\r\n      phoneNumber: this.phone,\r\n      timeZone: this.timeZone,\r\n      sendWelcomeEmail: this.sendWelcomeEmail,\r\n      acceptedMemberDisclaimer: this.hasAcceptedDisclaimer,\r\n      sdkUserId: this.sdkUserId,\r\n      brandings: this.brandings,\r\n    };\r\n\r\n    if (systemConfiguration.consumerAddressRequired) {\r\n      request.address1 = this.address1;\r\n      request.address2 = this.address2;\r\n      request.city = this.city;\r\n      request.zipCode = this.zipCode;\r\n      request.addressState = this.stateCode;\r\n      request.addressCountry = this.countryCode;\r\n    }\r\n\r\n    if (this.gender) {\r\n      switch (this.gender) {\r\n        case 'M':\r\n          request.gender = 'MALE';\r\n          break;\r\n        case 'F':\r\n          request.gender = 'FEMALE';\r\n          break;\r\n        case 'U':\r\n          request.gender = 'UNKNOWN';\r\n          break;\r\n        default: break;\r\n      }\r\n    }\r\n    if (systemConfiguration.genderSupportEnabled) {\r\n      request.genderIdentityKey = this.genderIdentityKey;\r\n    }\r\n    if (systemConfiguration.consumerMiddleNameHandling === AWSDKConsumerMiddleNameHandling.INITIAL) {\r\n      request.middleInitial = this.middleInitial;\r\n    } else if (systemConfiguration.consumerMiddleNameHandling === AWSDKConsumerMiddleNameHandling.FULLNAME) {\r\n      request.middleInitial = this.middleName;\r\n    }\r\n\r\n    return JSON.stringify(request);\r\n  }\r\n}\r\nexport default AWSDKConsumerRegistration;\r\n","/*!\r\n * American Well Consumer Web SDK\r\n *\r\n * Copyright (c) 2018 American Well.\r\n * All rights reserved.\r\n *\r\n * It is illegal to use, reproduce or distribute\r\n * any part of this Intellectual Property without\r\n * prior written authorization from American Well.\r\n */\r\nimport AWSDKBaseConsumerUpdate from '../consumer/awsdk_base_consumer_update';\r\n\r\n/**\r\n * Contains data needed to register a new {@link model.AWSDKConsumer|AWSDKConsumer} dependent <br>\r\n * Get an instance of this via {@link service.ConsumerService#getNewDependentRegistration()|ConsumerService.getNewDependentRegistration}\r\n * @extends model.AWSDKBaseConsumerUpdate\r\n */\r\nclass AWSDKDependentRegistration extends AWSDKBaseConsumerUpdate {\r\n  set performDependentCheck(performDependentCheck) {\r\n    this.__data.performDependentCheck = performDependentCheck;\r\n  }\r\n\r\n  /**\r\n   * TRUE indicating that there should be a check for existence of the {@link model.AWSDKDependent|AWSDKDependent} we're trying to register. FALSE otherwise.\r\n   * @type {Boolean}\r\n   * @since 2.0.0\r\n   */\r\n  get performDependentCheck() {\r\n    return this.__data.performDependentCheck;\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  set encryptedMemberId(encryptedMemberId) {\r\n    this.__data.encryptedMemberId = encryptedMemberId;\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  get encryptedMemberId() {\r\n    return this.__data.encryptedMemberId;\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  __toRequestObject(systemConfiguration) {\r\n    const request = super.__toRequestObject(systemConfiguration);\r\n    request.performDependentCheck = !!this.__data.performDependentCheck;\r\n    request.memberId = this.__data.encryptedMemberId;\r\n    return request;\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  __toRequestBody(systemConfiguration) {\r\n    return JSON.stringify(this.__toRequestObject(systemConfiguration));\r\n  }\r\n}\r\nexport default AWSDKDependentRegistration;\r\n","/*!\r\n * American Well Consumer Web SDK\r\n *\r\n * Copyright (c) 2017 American Well.\r\n * All rights reserved.\r\n *\r\n * It is illegal to use, reproduce or distribute\r\n * any part of this Intellectual Property without\r\n * prior written authorization from American Well.\r\n */\r\nimport AWSDKResponse from './awsdk_response';\r\nimport AWSDKDisclaimer from '../../../model/awsdk_disclaimer';\r\nimport GenericParser from '../../parser/generic_parser';\r\n\r\n/**\r\n * The AWSDKRegistrationDisclaimerResponse represents a wrapper response object around a single instance of {@link AWSDKDisclaimer} <br>\r\n * as a result of a request for a registration disclaimer.\r\n * @property {model.AWSDKDisclaimer} registrationDisclaimer the {@link AWSDKDisclaimer} object\r\n * @extends model.AWSDKResponse\r\n */\r\nclass AWSDKRegistrationDisclaimerResponse extends AWSDKResponse {\r\n  get registrationDisclaimer() {\r\n    return GenericParser.parseObject(this.__data.LegalTextEntity, AWSDKDisclaimer);\r\n  }\r\n}\r\nexport default AWSDKRegistrationDisclaimerResponse;\r\n","/*!\r\n * American Well Consumer Web SDK\r\n *\r\n * Copyright (c) 2017 American Well.\r\n * All rights reserved.\r\n *\r\n * It is illegal to use, reproduce or distribute\r\n * any part of this Intellectual Property without\r\n * prior written authorization from American Well.\r\n */\r\nimport AWSDKEntity from '../awsdk_entity';\r\nimport GenericParser from '../../internal/parser/generic_parser';\r\nimport AWSDKAddress from '../awsdk_address';\r\n\r\n/**\r\n * This class represents the current stored payment information (credit card) for a given {@link model.AWSDKConsumer|AWSDKConsumer}\r\n * @extends model.AWSDKEntity\r\n * @property {String} billingName The billing name associated with this payment method\r\n * @property {model.AWSDKAddress} billingAddress The billing address associated with this payment method\r\n * @property {String} type The type of credit card (Visa, Mastercard, Amex)\r\n * @property {String} lastDigits the last 4 digits of the currently stored credit card\r\n * @property {Boolean} isExpired boolean true if this payment method is expired, false otherwise\r\n */\r\nclass AWSDKPaymentMethod extends AWSDKEntity {\r\n  get billingName() {\r\n    return this.__data.billingName;\r\n  }\r\n\r\n  get billingAddress() {\r\n    return GenericParser.parseObject(this.__data.billingAddress, AWSDKAddress);\r\n  }\r\n\r\n  get type() {\r\n    return this.__data.type;\r\n  }\r\n\r\n  get lastDigits() {\r\n    return this.__data.lastDigits;\r\n  }\r\n\r\n  get isExpired() {\r\n    return GenericParser.parseBoolean(this.__data.expired);\r\n  }\r\n}\r\nexport default AWSDKPaymentMethod;\r\n\r\n","/*!\r\n * American Well Consumer Web SDK\r\n *\r\n * Copyright (c) 2017 American Well.\r\n * All rights reserved.\r\n *\r\n * It is illegal to use, reproduce or distribute\r\n * any part of this Intellectual Property without\r\n * prior written authorization from American Well.\r\n */\r\nimport AWSDKPaymentMethod from '../../../model/billing/awsdk_payment_method';\r\nimport GenericParser from '../../parser/generic_parser';\r\nimport AWSDKResponse from '../response/awsdk_response';\r\n\r\nclass AWSDKPaymentMethodResponse extends AWSDKResponse {\r\n  get paymentMethod() {\r\n    return GenericParser.parseObject(this.__data.payment, AWSDKPaymentMethod);\r\n  }\r\n}\r\nexport default AWSDKPaymentMethodResponse;\r\n","/*!\r\n * American Well Consumer Web SDK\r\n *\r\n * Copyright (c) 2017 American Well.\r\n * All rights reserved.\r\n *\r\n * It is illegal to use, reproduce or distribute\r\n * any part of this Intellectual Property without\r\n * prior written authorization from American Well.\r\n */\r\nimport AWSDKEntity from '../awsdk_entity';\r\nimport GenericParser from '../../internal/parser/generic_parser';\r\n\r\n/**\r\n * AWSDKTopic class represents any item of interest to be discussed between provider and consumer.\r\n * @property {String} title the title of this topic\r\n * @property {String} description the description of this topic\r\n * @property {Boolean} selected boolean true if this topic has been selected\r\n * @extends model.AWSDKEntity\r\n */\r\nclass AWSDKTopic extends AWSDKEntity {\r\n  get title() {\r\n    return this.__data.title;\r\n  }\r\n\r\n  get description() {\r\n    return this.__data.description;\r\n  }\r\n\r\n  set selected(selected) {\r\n    this.__data.selected = selected;\r\n  }\r\n\r\n  get selected() {\r\n    return GenericParser.parseBoolean(this.__data.selected);\r\n  }\r\n}\r\nexport default AWSDKTopic;\r\n","/*!\r\n * American Well Consumer Web SDK\r\n *\r\n * Copyright © 2018 American Well.\r\n * All rights reserved.\r\n *\r\n * It is illegal to use, reproduce or distribute\r\n * any part of this Intellectual Property without\r\n * prior written authorization from American Well.\r\n */\r\n\r\n/**\r\n * Enum for AWSDKUserType.\r\n * @readonly\r\n * @enum {string}\r\n * @since 1.2.0\r\n */\r\nconst AWSDKUserType = {\r\n  /**\r\n   * Consumer type.\r\n   */\r\n  CONSUMER: 'CONSUMER',\r\n  /**\r\n   * Provider type.\r\n   */\r\n  PROVIDER: 'PROVIDER',\r\n  /**\r\n   * Admin type.\r\n   */\r\n  ADMIN: 'ADMIN',\r\n  /**\r\n   * Provider assistant type.\r\n   */\r\n  ASSISTANT: 'ASSISTANT',\r\n  /**\r\n   * Anonymous SDK user type\r\n   */\r\n  SDK: 'SDK',\r\n};\r\nObject.freeze(AWSDKUserType);\r\nexport default AWSDKUserType;\r\n","/*!\r\n * American Well Consumer Web SDK\r\n *\r\n * Copyright (c) 2018 American Well.\r\n * All rights reserved.\r\n *\r\n * It is illegal to use, reproduce or distribute\r\n * any part of this Intellectual Property without\r\n * prior written authorization from American Well.\r\n */\r\nimport GenericParser from '../../internal/parser/generic_parser';\r\nimport AWSDKDataObject from '../awsdk_dataobject';\r\nimport Util from '../../internal/util/util';\r\nimport AWSDKGender from '../consumer/awsdk_gender';\r\nimport AWSDKUserType from '../../awsdk_user_type';\r\n\r\n/**\r\n * @extends model.AWSDKDataObject\r\n * @property {String} message the chat message text\r\n * @property {Date} date the date and time the message was originally sent\r\n * @property {Boolean} isSelf boolean true if the current consumer sent the message, false otherwise\r\n * @property {String} firstName the first name of the person who sent the message\r\n * @property {String} lastName the last name of the person who sent the message\r\n * @property {String} fullName the full name of the person who sent the message\r\n * @property {Number} ordinal a number representing the position of this message in relation to other messages\r\n * @property {String} messageType the message type\r\n * @property {model.AWSDKGender} gender the gender of the person who sent the message\r\n * @property {String} localizedGender the localized gender of the person who sent the message\r\n * @property {model.AWSDKUserType} userType the type of the user who created the chat item\r\n * @since 1.1.0\r\n */\r\nclass AWSDKChatItem extends AWSDKDataObject {\r\n  get message() {\r\n    return Util.b64DecodeUnicode(this.__data.message);\r\n  }\r\n\r\n  get isSelf() {\r\n    return GenericParser.parseBoolean(this.__data.isSelf);\r\n  }\r\n\r\n  get date() {\r\n    return GenericParser.parseDate(this.__data.timeStamp);\r\n  }\r\n\r\n  get fullName() {\r\n    return this.__data.fullName;\r\n  }\r\n\r\n  get firstName() {\r\n    return this.__data.firstName;\r\n  }\r\n\r\n  get lastName() {\r\n    return this.__data.lastName;\r\n  }\r\n\r\n  get ordinal() {\r\n    return this.__data.ordinal;\r\n  }\r\n\r\n  get messageType() {\r\n    return this.__data.messageType;\r\n  }\r\n\r\n  get gender() {\r\n    return GenericParser.parseEnum(this.__data.genderEnum, AWSDKGender);\r\n  }\r\n\r\n  get localizedGender() {\r\n    return this.__data.localizedGenderDisplayName;\r\n  }\r\n\r\n  get userType() {\r\n    return GenericParser.parseEnum(this.__data.userType, AWSDKUserType);\r\n  }\r\n}\r\nexport default AWSDKChatItem;\r\n","/*!\r\n * American Well Consumer Web SDK\r\n *\r\n * Copyright (c) 2018 American Well.\r\n * All rights reserved.\r\n *\r\n * It is illegal to use, reproduce or distribute\r\n * any part of this Intellectual Property without\r\n * prior written authorization from American Well.\r\n */\r\nimport AWSDKDataObject from '../awsdk_dataobject';\r\nimport GenericParser from '../../internal/parser/generic_parser';\r\nimport AWSDKChatItem from './awsdk_chat_item';\r\n\r\n/**\r\n * This class encapsulates information about a chat session between a consumer and a provider.\r\n * @property {model.AWSDKChatItem[]} chatItems an array of {@link model.AWSDKChatItem|AWSDKChatItem} associated with the visit\r\n * @property {Number} lastOrdinal represents the last ordinal found in this report\r\n * @since 1.1.0\r\n * @extends model.AWSDKDataObject\r\n */\r\nclass AWSDKChatReport extends AWSDKDataObject {\r\n  get lastOrdinal() {\r\n    return this.__data.lastOrdinal;\r\n  }\r\n\r\n  get chatItems() {\r\n    return this.__data.chatItems.map(item => GenericParser.parseObject(item, AWSDKChatItem));\r\n  }\r\n}\r\nexport default AWSDKChatReport;\r\n","/*!\r\n * American Well Consumer Web SDK\r\n *\r\n * Copyright (c) 2017 American Well.\r\n * All rights reserved.\r\n *\r\n * It is illegal to use, reproduce or distribute\r\n * any part of this Intellectual Property without\r\n * prior written authorization from American Well.\r\n */\r\n\r\nimport AWSDKTermEntity from '../../internal/model/awsdk_term_entity';\r\nimport GenericParser from '../../internal/parser/generic_parser';\r\n\r\n/**\r\n * This class represents the base class for selectable health items\r\n * @param {Boolean} isCurrent boolean true if the item is current, false otherwise.\r\n * @extends model.AWSDKTermEntity\r\n */\r\nclass AWSDKConsumerHealthItem extends AWSDKTermEntity {\r\n  get isCurrent() {\r\n    return GenericParser.parseBoolean(this.__data.current);\r\n  }\r\n\r\n  set isCurrent(isCurrent) {\r\n    this.__data.current = isCurrent;\r\n  }\r\n}\r\nexport default AWSDKConsumerHealthItem;\r\n","/*!\r\n * American Well Consumer Web SDK\r\n *\r\n * Copyright (c) 2017 American Well.\r\n * All rights reserved.\r\n *\r\n * It is illegal to use, reproduce or distribute\r\n * any part of this Intellectual Property without\r\n * prior written authorization from American Well.\r\n */\r\nimport AWSDKDataObject from '../../model/awsdk_dataobject';\r\n/**\r\n * Intenal use only!\r\n * This class represents a base class for health items with termIds\r\n * @private\r\n * @extends model.AWSDKDataObject\r\n */\r\nclass AWSDKTermEntity extends AWSDKDataObject {\r\n  get termId() {\r\n    return this.__data.termId;\r\n  }\r\n}\r\nexport default AWSDKTermEntity;\r\n","/*!\r\n * American Well Consumer Web SDK\r\n *\r\n * Copyright (c) 2017 American Well.\r\n * All rights reserved.\r\n *\r\n * It is illegal to use, reproduce or distribute\r\n * any part of this Intellectual Property without\r\n * prior written authorization from American Well.\r\n */\r\n\r\nimport AWSDKConsumerHealthItem from './awsdk_consumer_health_item';\r\n\r\n/**\r\n * This class represents allergy information for intake and Consumer update\r\n * @extends {model.AWSDKConsumerHealthItem}\r\n * @property {String} name the name of the allergy\r\n * @extends model.AWSDKConsumerHealthItem\r\n */\r\nclass AWSDKAllergy extends AWSDKConsumerHealthItem {\r\n  get name() {\r\n    return this.__data.displayName;\r\n  }\r\n}\r\nexport default AWSDKAllergy;\r\n","/*!\r\n * American Well Consumer Web SDK\r\n *\r\n * Copyright (c) 2018 American Well.\r\n * All rights reserved.\r\n *\r\n * It is illegal to use, reproduce or distribute\r\n * any part of this Intellectual Property without\r\n * prior written authorization from American Well.\r\n */\r\n\r\nimport AWSDKConsumerHealthItem from './awsdk_consumer_health_item';\r\n\r\n/**\r\n * Represents a medical condition that can be added or removed from a consumer's health record.\r\n * @property {Integer} termId the term ID of the condition\r\n * @property {String} displayName the name of the condition\r\n * @property {Boolean} current whether or not the condition is currently exhibited\r\n * @extends model.AWSDKConsumerHealthItem\r\n */\r\nclass AWSDKCondition extends AWSDKConsumerHealthItem {\r\n  get displayName() {\r\n    return this.__data.displayName;\r\n  }\r\n}\r\nexport default AWSDKCondition;\r\n","/*!\r\n * American Well Consumer Web SDK\r\n *\r\n * Copyright (c) 2018 American Well.\r\n * All rights reserved.\r\n *\r\n * It is illegal to use, reproduce or distribute\r\n * any part of this Intellectual Property without\r\n * prior written authorization from American Well.\r\n */\r\nimport AWSDKEntity from '../awsdk_entity';\r\n/**\r\n * This class represents a single medication for a {@link model.AWSDKConsumer|AWSDKConsumer}.\r\n * @property {String} code the code that identifies this medication\r\n * @property {String} description information pertaining to this medication\r\n * @property {String} displayName the name to be displayed for this medication\r\n * @extends model.AWSDKEntity\r\n */\r\nclass AWSDKMedication extends AWSDKEntity {\r\n  get code() {\r\n    return this.__data.code;\r\n  }\r\n\r\n  get description() {\r\n    return this.__data.description;\r\n  }\r\n\r\n  get displayName() {\r\n    return this.__data.displayName;\r\n  }\r\n}\r\nexport default AWSDKMedication;\r\n","/*!\r\n * American Well Consumer Web SDK\r\n *\r\n * Copyright (c) 2018 American Well.\r\n * All rights reserved.\r\n *\r\n * It is illegal to use, reproduce or distribute\r\n * any part of this Intellectual Property without\r\n * prior written authorization from American Well.\r\n */\r\n\r\nimport GenericParser from '../../internal/parser/generic_parser';\r\nimport AWSDKTopic from './awsdk_topic';\r\nimport AWSDKAllergy from '../health/awsdk_allergy';\r\nimport AWSDKCondition from '../health/awsdk_condition';\r\nimport AWSDKMedication from '../medication/awsdk_medication';\r\nimport AWSDKDataObject from '../awsdk_dataobject';\r\n\r\n/**\r\n * A representation of the intake information gathered prior to a visit starting\r\n * @property {model.AWSDKCondition[]} conditions the provided conditions\r\n * @property {model.AWSDKAllergy[]} allergies the provided allergies\r\n * @property {model.AWSDKMedication[]} medications the provided medications\r\n * @property {model.AWSDKTopic[]} topics the provided topics\r\n * @since 1.2.0\r\n * @extends model.AWSDKDataObject\r\n */\r\nclass AWSDKIntake extends AWSDKDataObject {\r\n  get conditions() {\r\n    return this.__data.conditions.map(item => GenericParser.parseObject(item, AWSDKCondition));\r\n  }\r\n\r\n  get allergies() {\r\n    return this.__data.allergies.map(item => GenericParser.parseObject(item, AWSDKAllergy));\r\n  }\r\n\r\n  get medications() {\r\n    return this.__data.allergies.map(item => GenericParser.parseObject(item, AWSDKMedication));\r\n  }\r\n\r\n  get topics() {\r\n    return this.__data.topics.map(item => GenericParser.parseObject(item, AWSDKTopic));\r\n  }\r\n}\r\nexport default AWSDKIntake;","/*!\r\n * American Well Consumer Web SDK\r\n *\r\n * Copyright (c) 2017 American Well.\r\n * All rights reserved.\r\n *\r\n * It is illegal to use, reproduce or distribute\r\n * any part of this Intellectual Property without\r\n * prior written authorization from American Well.\r\n */\r\n\r\nimport AWSDKEntity from '../awsdk_entity';\r\nimport GenericParser from '../../internal/parser/generic_parser';\r\n\r\n/**\r\n * This class represents a scheduled visit\r\n * @property {Number} scheduledStartTime the scheduled start time\r\n * @property {Number} actualStartTime the appointment's actual start time\r\n * @property {Number} allotedDurationMs the alloted duration for the visit in millisenconds\r\n * @property {Number} allotedExtensionDurationMins the alloted extension duration for the visit\r\n * @property {Boolean} isScheduled boolean true if this was a scheduled visit, false otherwise\r\n * @property {Number} initialPreVisitStartTime the pre-visit start time as a long timestamp\r\n * @property {Number} postVisitStartTime the post-visit start time as a long timestamp\r\n * @property {Number} postVisitEndTime the post-visit end time as a long timestamp\r\n * @property {Number} waitingRoomEntryTime the appointment's waiting room entry time as a long timestamp\r\n * @property {Number} allotedBufferMs the amount of free time the provider has after a visit and before a next visit or a visit can be scheduled in milliseconds\r\n * @property {Number} waitDurationSecs the wait duration in seconds\r\n * @property {Number} actualDurationMs the length of the actual visit in milliseconds\r\n * @property {Number} cancelledEventTime the time the event was cancelled as a long timestamp\r\n * @extends model.AWSDKEntity\r\n */\r\nclass AWSDKVisitScheduled extends AWSDKEntity {\r\n  get scheduledStartTime() {\r\n    return this.__data.scheduledStartTime;\r\n  }\r\n\r\n  get actualStartTime() {\r\n    return this.__data.actualStartTime;\r\n  }\r\n\r\n  get allotedDurationMs() {\r\n    return this.__data.allotedDurationMs;\r\n  }\r\n\r\n  get allotedExtensionDurationMins() {\r\n    return this.__data.allotedExtensionDurationMins;\r\n  }\r\n\r\n  get isScheduled() {\r\n    return GenericParser.parseBoolean(this.__data.isScheduled);\r\n  }\r\n\r\n  get initialPreVisitStartTime() {\r\n    return this.__data.initialPreVisitStartTime;\r\n  }\r\n\r\n  get postVisitStartTime() {\r\n    return this.__data.postVisitStartTime;\r\n  }\r\n\r\n  get postVisitEndTime() {\r\n    return this.__data.postVisitEndTime;\r\n  }\r\n\r\n  get waitingRoomEntryTime() {\r\n    return this.__data.waitingRoomEntryTime;\r\n  }\r\n\r\n  get allotedBufferMs() {\r\n    return this.__data.allotedBufferMs;\r\n  }\r\n\r\n  get waitDurationSec() {\r\n    return this.__data.waitDurationSec;\r\n  }\r\n\r\n  get actualDurationMs() {\r\n    return this.__data.actualDurationMs;\r\n  }\r\n\r\n  get cancelledEventTime() {\r\n    return this.__data.cancelledEventTime;\r\n  }\r\n}\r\nexport default AWSDKVisitScheduled;\r\n","/*!\r\n * American Well Consumer Web SDK\r\n *\r\n * Copyright (c) 2017 American Well.\r\n * All rights reserved.\r\n *\r\n * It is illegal to use, reproduce or distribute\r\n * any part of this Intellectual Property without\r\n * prior written authorization from American Well.\r\n */\r\n\r\nimport GenericParser from '../../internal/parser/generic_parser';\r\nimport AWSDKEntity from '../awsdk_entity';\r\n\r\n/**\r\n * This class represents a prescription that was prescribed during a visit.\r\n * @property {String} description the description of the prescription\r\n * @property {Date} createDate the date by which to create the prescription\r\n * @property {Boolean} isDispenseAsWritten boolean true if prescription is to be dispensed as written\r\n * @property {Boolean} isAsNeeded boolean true if prescription as needed\r\n * @property {Boolean} isStopWhenDirected boolean true if the prescription is to be stoped when directed\r\n * @property {String} dosage the dosage of the prescription\r\n * @property {String} duration the duration of the prescription\r\n * @property {String} frequency the frequency of the prescription\r\n * @property {String} instructions the instructions for the prescription\r\n * @property {String} additionalInstructions any additional instructions for the prescription\r\n * @property {String} pharmacyNote a pharmacy note\r\n * @property {String} quantity the quantity of the prescription\r\n * @property {Number} refills the number of refills for the prescription\r\n * @property {String} measurementUnitQualifier the measurement unit qualifier\r\n * @property {Boolean} isHasBeenReported boolean true if has been reported\r\n * @property {String} rxInstructions instructions for the prescription\r\n * @extends model.AWSDKEntity\r\n */\r\nclass AWSDKVisitRx extends AWSDKEntity {\r\n  get description() {\r\n    return this.__data.term.description;\r\n  }\r\n\r\n  get createDate() {\r\n    return this.__data.createDate ? GenericParser.parseDate(this.__data.createDate) : null;\r\n  }\r\n\r\n  get isDispenseAsWritten() {\r\n    return GenericParser.parseBoolean(this.__data.dispenseAsWritten);\r\n  }\r\n\r\n  get isAsNeeded() {\r\n    return GenericParser.parseBoolean(this.__data.asNeeded);\r\n  }\r\n\r\n  get isStopWhenDirected() {\r\n    return GenericParser.parseBoolean(this.__data.stopWhenDirected);\r\n  }\r\n\r\n  get dosage() {\r\n    return this.__data.dosage;\r\n  }\r\n\r\n  get duration() {\r\n    return this.__data.duration;\r\n  }\r\n\r\n  get frequency() {\r\n    return this.__data.frequency;\r\n  }\r\n\r\n  get instructions() {\r\n    return this.__data.instructions;\r\n  }\r\n\r\n  get additionalInstructions() {\r\n    return this.__data.addlInstr;\r\n  }\r\n\r\n  get pharmacyNote() {\r\n    return this.__data.pharmacyNote;\r\n  }\r\n\r\n  get quantity() {\r\n    return this.__data.quantity;\r\n  }\r\n\r\n  get refills() {\r\n    return this.__data.refills;\r\n  }\r\n\r\n  get measurementUnitQualifier() {\r\n    return this.__data.measurementUnitQualifier;\r\n  }\r\n\r\n  get isHasBeenReported() {\r\n    return GenericParser.parseBoolean(this.__data.hasBeenReported);\r\n  }\r\n\r\n  get rxInstructions() {\r\n    return this.__data.rxInstructions;\r\n  }\r\n}\r\nexport default AWSDKVisitRx;\r\n","/*!\r\n * American Well Consumer Web SDK\r\n *\r\n * Copyright (c) 2017 American Well.\r\n * All rights reserved.\r\n *\r\n * It is illegal to use, reproduce or distribute\r\n * any part of this Intellectual Property without\r\n * prior written authorization from American Well.\r\n */\r\n\r\nimport GenericParser from '../../internal/parser/generic_parser';\r\nimport AWSDKDataObject from '../awsdk_dataobject';\r\n\r\n/**\r\n * This class describes a procedure done, or to be done, to the {@link model.AWSDKConsumer|AWSDKConsumer}\r\n * @property {String} description the description of the procedure\r\n * @property {Number} priority the priority of the procedure. 0 is the highest priority\r\n * @property {Boolean} isBillable boolean true if the procedure is billable\r\n * @property {String} modifiers any additional data for the procedure\r\n * @property {String} code the medical code for this procedure\r\n * @property {String} displayName the displayName for this procedure\r\n * @extends model.AWSDKDataObject\r\n */\r\nclass AWSDKVisitProcedure extends AWSDKDataObject {\r\n  get description() {\r\n    return this.__data.procedure.description;\r\n  }\r\n\r\n  get priority() {\r\n    return this.__data.priority;\r\n  }\r\n\r\n  get isBillable() {\r\n    return GenericParser.parseBoolean(this.__data.billable);\r\n  }\r\n\r\n  get modifiers() {\r\n    return this.__data.modifiers;\r\n  }\r\n\r\n  get code() {\r\n    return this.__data.procedure.code;\r\n  }\r\n\r\n  get displayName() {\r\n    return this.__data.procedure.displayName;\r\n  }\r\n}\r\nexport default AWSDKVisitProcedure;\r\n","/*!\r\n * American Well Consumer Web SDK\r\n *\r\n * Copyright (c) 2017 American Well.\r\n * All rights reserved.\r\n *\r\n * It is illegal to use, reproduce or distribute\r\n * any part of this Intellectual Property without\r\n * prior written authorization from American Well.\r\n */\r\n\r\nimport AWSDKDataObject from '../awsdk_dataobject';\r\n\r\n/**\r\n * This class represents a medical diagnosis made by the {@link model.AWSDKProvider|AWSDKProvider} about a condition that he/she believes is afflicting the {@link model.AWSDKConsumer|AWSDKConsumer}\r\n * @property {String} description the description of the diagnosis\r\n * @property {Number} priority the priority of the diagnosis. 0 is the highest priority\r\n * @property {String} code the medical code for this diagnosis.\r\n * @property {String} displayName the displayName for this diagnosis.\r\n * @extends model.AWSDKDataObject\r\n */\r\nclass AWSDKVisitDiagnosis extends AWSDKDataObject {\r\n  get description() {\r\n    return this.__data.diagnosis.description;\r\n  }\r\n\r\n  get priority() {\r\n    return this.__data.priority;\r\n  }\r\n\r\n  get code() {\r\n    return this.__data.diagnosis.code;\r\n  }\r\n\r\n  get displayName() {\r\n    return this.__data.diagnosis.displayName;\r\n  }\r\n}\r\nexport default AWSDKVisitDiagnosis;\r\n","/*!\r\n * American Well Consumer Web SDK\r\n *\r\n * Copyright © 2018 American Well.\r\n * All rights reserved.\r\n *\r\n * It is illegal to use, reproduce or distribute\r\n * any part of this Intellectual Property without\r\n * prior written authorization from American Well.\r\n */\r\n\r\n/**\r\n * Enum for AWSDKAgendaItemFollowUpType.\r\n * @readonly\r\n * @enum {string}\r\n * @since 1.2.1\r\n */\r\nconst AWSDKAgendaItemFollowUpType = {\r\n  /**\r\n   * Visit.\r\n   */\r\n  Visit: 'Visit',\r\n  /**\r\n   * Administered Intake.\r\n   */\r\n  AdministeredIntake: 'AdministeredIntake',\r\n  /**\r\n   * Tracker Reminder.\r\n   */\r\n  TrackerReminder: 'TrackerReminder',\r\n  /**\r\n   * Media.\r\n   */\r\n  Media: 'Media',\r\n};\r\nObject.freeze(AWSDKAgendaItemFollowUpType);\r\nexport default AWSDKAgendaItemFollowUpType;\r\n","/*!\r\n * American Well Consumer Web SDK\r\n *\r\n * Copyright (c) 2017 American Well.\r\n * All rights reserved.\r\n *\r\n * It is illegal to use, reproduce or distribute\r\n * any part of this Intellectual Property without\r\n * prior written authorization from American Well.\r\n */\r\n\r\nimport AWSDKEntity from '../awsdk_entity';\r\nimport GenericParser from '../../internal/parser/generic_parser';\r\nimport AWSDKAgendaItemFollowUpType from './awsdk_agenda_item_follow_up_type';\r\n\r\n/**\r\n * This class represents an agenda follow-up item pertaining to the {@link model.AWSDKConsumer|AWSDKConsumer} that should be followed up with a {@link model.AWSDKProvider|AWSDKProvider}.\r\n * @property {String} description the description of the agenda item\r\n * @property {Boolean} isRecurring boolean true if this is a recurring agenda item\r\n * @property {String} duration the duration for which to continue this agenda item. Will return value if is a recurring agenda item\r\n * @property {String} frequency the frequency of the recurrence of this item. Will return value if is a recurring agenda item\r\n * @property {model.AWSDKAgendaItemFollowUpType} type the agenda item type\r\n * @extends model.AWSDKEntity\r\n */\r\nclass AWSDKAgendaItemFollowUp extends AWSDKEntity {\r\n  get description() {\r\n    return this.__data.description;\r\n  }\r\n\r\n  get isRecurring() {\r\n    return GenericParser.parseBoolean(this.__data.recurring);\r\n  }\r\n\r\n  get duration() {\r\n    return this.__data.duration;\r\n  }\r\n\r\n  get frequency() {\r\n    return this.__data.frequency;\r\n  }\r\n\r\n  get type() {\r\n    return GenericParser.parseEnum(this.__data.type, AWSDKAgendaItemFollowUpType);\r\n  }\r\n}\r\nexport default AWSDKAgendaItemFollowUp;\r\n","/*!\r\n * American Well Consumer Web SDK\r\n *\r\n * Copyright © 2020 American Well.\r\n * All rights reserved.\r\n *\r\n * It is illegal to use, reproduce or distribute\r\n * any part of this Intellectual Property without\r\n * prior written authorization from American Well.\r\n */\r\n\r\n/**\r\n * Enum for AWSDKPostVisitFollowUpItemType.\r\n * @readonly\r\n * @enum {string}\r\n * @since 1.2.1\r\n */\r\nconst AWSDKPostVisitFollowUpItemType = {\r\n  /**\r\n   * Appointment.\r\n   */\r\n  APPOINTMENT: 'APPOINTMENT',\r\n  /**\r\n   * Referral.\r\n   */\r\n  REFERRAL: 'REFERRAL',\r\n  /**\r\n   * Sick slip.\r\n   */\r\n  SICKSLIP: 'SICKSLIP',\r\n};\r\nObject.freeze(AWSDKPostVisitFollowUpItemType);\r\nexport default AWSDKPostVisitFollowUpItemType;\r\n","/*!\n * American Well Consumer Web SDK\n *\n * Copyright (c) 2020 American Well.\n * All rights reserved.\n *\n * It is illegal to use, reproduce or distribute\n * any part of this Intellectual Property without\n * prior written authorization from American Well.\n */\n\n/**\n * Enum for AWSDKPostVisitFollowupItemCategory.\n * @readonly\n * @enum {string}\n * @since 3.0.0\n */\nconst AWSDKPostVisitFollowUpItemCategory = {\n  /**\n   * In Person Referrals\n   */\n  VISIT_REFERRAL: 'VISIT_REFERRAL',\n  /**\n   * Imaging\n   */\n  IMAGING_REFERRAL: 'IMAGING_REFERRAL',\n  /**\n   * Labs\n   */\n  LAB_REFERRAL: 'LAB_REFERRAL',\n};\nObject.freeze(AWSDKPostVisitFollowUpItemCategory);\nexport default AWSDKPostVisitFollowUpItemCategory;\n","/*!\r\n * American Well Consumer Web SDK\r\n *\r\n * Copyright (c) 2020 American Well.\r\n * All rights reserved.\r\n *\r\n * It is illegal to use, reproduce or distribute\r\n * any part of this Intellectual Property without\r\n * prior written authorization from American Well.\r\n */\r\n\r\nimport AWSDKAddress from '../awsdk_address';\r\nimport AWSDKDataObject from '../awsdk_dataobject';\r\nimport GenericParser from '../../internal/parser/generic_parser';\r\n\r\n/**\r\n *\r\n * This class represents details of a {@link model.AWSDKPostVisitFollowUpItem|AWSDKPostVisitFollowUpItem}\r\n * @property {String} facilityName the name of a medical facility that a consumer is referred to\r\n * @property {String} providerName the name of a provider that a consumer is referred to\r\n * @property {String} phone the phone number to contact the facility that a consumer is referred to\r\n * @property {model.AWSDKAddress} address the address of the facility that a consumer was referred to\r\n * @extends model.AWSDKDataObject\r\n * @since 3.0.0\r\n */\r\nclass AWSDKPostVisitFollowUpDetail extends AWSDKDataObject {\r\n\r\n  /**\r\n   * Name of the facility that the consumer is being referred to.\r\n   */\r\n  get facilityName() {\r\n    return this.__data.facilityName;\r\n  }\r\n\r\n  /**\r\n   * Name of the provider that the consumer is being referred to.\r\n   */\r\n  get providerName() {\r\n    return this.__data.providerName;\r\n  }\r\n\r\n  /**\r\n   * Phone number for the facility tha the consumer is being referred to.\r\n   */\r\n  get phone() {\r\n    return this.__data.phone;\r\n  }\r\n\r\n  /**\r\n   * Address of the facility that the consumer is being referred to.\r\n   */\r\n  get address() {\r\n    return GenericParser.parseObject(this.__data.address, AWSDKAddress);\r\n  }\r\n}\r\nexport default AWSDKPostVisitFollowUpDetail;\r\n","/*!\r\n * American Well Consumer Web SDK\r\n *\r\n * Copyright (c) 2020 American Well.\r\n * All rights reserved.\r\n *\r\n * It is illegal to use, reproduce or distribute\r\n * any part of this Intellectual Property without\r\n * prior written authorization from American Well.\r\n */\r\n\r\nimport AWSDKEntity from '../awsdk_entity';\r\nimport GenericParser from '../../internal/parser/generic_parser';\r\nimport AWSDKPostVisitFollowUpItemType from './awsdk_post_visit_follow_up_item_type';\r\nimport AWSDKPostVisitFollowUpItemCategory from './awsdk_post_visit_follow_up_item_category';\r\nimport AWSDKPostVisitFollowUpDetail from './awsdk_post_visit_follow_up_detail';\r\n\r\n/**\r\n * This class represents an action that the {@link model.AWSDKConsumer|AWSDKConsumer} must take following the visit with a {@link model.AWSDKProvider|AWSDKProvider}\r\n * @property {model.AWSDKPostVisitFollowUpItemCategory} category the category of the follow up item @since 3.0.0\r\n * @property {String} description the description of the post visit follow up item\r\n * @property {Number} time the timestamp of the item (GMT), which will only be available when the item type is APPOINTMENT\r\n * @property {model.AWSDKPostVisitFollowUpItemType} type the type of the follow up item.\r\n * @property {boolean} resolved TRUE if this item has been resolved and doesn't require any action\r\n * @property {Date} createdDate the date this item was created\r\n * @extends model.AWSDKEntity\r\n */\r\nclass AWSDKPostVisitFollowUpItem extends AWSDKEntity {\r\n  get category() {\r\n    return GenericParser.parseEnum(this.__data.category, AWSDKPostVisitFollowUpItemCategory);\r\n  }\r\n\r\n  /**\r\n   * The description of the post visit follow up item.\r\n   * Internally defined common language description of this object, not entered by the provider.\r\n   * Example \"Referral to Cardiology\"\r\n   */\r\n  get description() {\r\n    return this.__data.description;\r\n  }\r\n\r\n  /**\r\n   * This is the reason entered by the provider that they wish for the consumer to see another provider.\r\n   * @since 3.0.0\r\n   */\r\n  get reason() {\r\n    return this.__data.reason;\r\n  }\r\n\r\n  /**\r\n   * Optional notes that may be entered by the referring provider for the benefit of the referred provider\r\n   * @since 3.0.0\r\n   */\r\n  get notes() {\r\n    return this.__data.notes;\r\n  }\r\n\r\n  /**\r\n   * The name of the specialty for which the consumer is being referred, this is derived from the\r\n   * taxonomy code - which is an administrative 'code' used to identify a provider type and area of speciality\r\n   * @since 3.0.0\r\n   */\r\n  get specialtyName() {\r\n    return this.__data.specialtyName;\r\n  }\r\n\r\n  /**\r\n   * A detail object for External referrals, external referrals may contain a facility name, provider name,\r\n   * address and phone number\r\n   * @since 3.0.0\r\n   */\r\n  get detail() {\r\n    return GenericParser.parseObject(this.__data.detail, AWSDKPostVisitFollowUpDetail);\r\n  }\r\n\r\n  get time() {\r\n    return this.type === AWSDKPostVisitFollowUpItemType.APPOINTMENT ? this.__data.time : null;\r\n  }\r\n\r\n  get type() {\r\n    return GenericParser.parseEnum(this.__data.type, AWSDKPostVisitFollowUpItemType);\r\n  }\r\n\r\n  /**\r\n   * @since 2.8.0\r\n   */\r\n  get resolved() {\r\n    return GenericParser.parseBoolean(this.__data.resolved);\r\n  }\r\n\r\n  /**\r\n   * @since 2.8.0\r\n   */\r\n  get createdDate() {\r\n    return GenericParser.parseDate(this.__data.createdDate);\r\n  }\r\n}\r\nexport default AWSDKPostVisitFollowUpItem;\r\n","/*!\r\n * American Well Consumer Web SDK\r\n *\r\n * Copyright (c) 2017 American Well.\r\n * All rights reserved.\r\n *\r\n * It is illegal to use, reproduce or distribute\r\n * any part of this Intellectual Property without\r\n * prior written authorization from American Well.\r\n */\r\n\r\nimport GenericParser from '../../internal/parser/generic_parser';\r\nimport AWSDKEntity from '../awsdk_entity';\r\nimport AWSDKVisitRx from './awsdk_visit_rx';\r\nimport AWSDKVisitProcedure from './awsdk_visit_procedure';\r\nimport AWSDKVisitDiagnosis from './awsdk_visit_diagnosis';\r\nimport AWSDKAgendaItemFollowUp from './awsdk_agenda_item_follow_up';\r\nimport AWSDKPostVisitFollowUpItem from '../post_visit_follow_up_items/awsdk_post_visit_follow_up_item';\r\n\r\n/**\r\n * This class represents all entries that a {@link model.AWSDKProvider|AWSDKProvider} makes during and after a visit with a {@link model.AWSDKConsumer|AWSDKConsumer}\r\n * @property {model.AWSDKVisitRx[]} prescriptions an array of {@link model.AWSDKVisitRx} prescriptions for this visit (if any)\r\n * @property {model.AWSDKVisitProcedure[]} procedures an array of {@link model.AWSDKVisitProcedure} for this visit (if any)\r\n * @property {model.AWSDKVisitDiagnosis[]} diagnoses an array of {@link model.AWSDKVisitDiagnosis} for this visit (if any)\r\n * @property {String} notes provider notes for this visit\r\n * @property {model.AWSDKAgendaItemFollowUp[]} agendaItemFollowUps an array of {@link model.AWSDKAgendaItemFollowUp}, which represents follow up agenda items (if any)\r\n * @property {model.AWSDKPostVisitFollowUpItem[]} postVisitFollowUpitems an array of {@link model.AWSDKPostVisitFollowUpItem}, which represents post visit follow up items for this visit (if any)\r\n * @extends model.AWSDKEntity\r\n */\r\nclass AWSDKProviderEntries extends AWSDKEntity {\r\n  get prescriptions() {\r\n    return this.__data.prescriptions.map(item => GenericParser.parseObject(item, AWSDKVisitRx));\r\n  }\r\n\r\n  get procedures() {\r\n    return this.__data.procedures.map(item => GenericParser.parseObject(item, AWSDKVisitProcedure));\r\n  }\r\n\r\n  get diagnoses() {\r\n    return this.__data.diagnoses.map(item => GenericParser.parseObject(item, AWSDKVisitDiagnosis));\r\n  }\r\n\r\n  get notes() {\r\n    return this.__data.notes;\r\n  }\r\n\r\n  get agendaItemFollowUps() {\r\n    return this.__data.followUpAgendaItems ? this.__data.followUpAgendaItems.map(item => GenericParser.parseObject(item, AWSDKAgendaItemFollowUp)) : null;\r\n  }\r\n\r\n  get postVisitFollowUpItems() {\r\n    return this.__data.postVisitFollowUpItems ? this.__data.postVisitFollowUpItems.map(item => GenericParser.parseObject(item, AWSDKPostVisitFollowUpItem)) : null;\r\n  }\r\n}\r\nexport default AWSDKProviderEntries;\r\n","/*!\r\n * American Well Consumer Web SDK\r\n *\r\n * Copyright (c) 2017 American Well.\r\n * All rights reserved.\r\n *\r\n * It is illegal to use, reproduce or distribute\r\n * any part of this Intellectual Property without\r\n * prior written authorization from American Well.\r\n */\r\n\r\nimport AWSDKEntity from '../awsdk_entity';\r\nimport AWSDKAddress from '../awsdk_address';\r\nimport GenericParser from '../../internal/parser/generic_parser';\r\n\r\n/**\r\n * This class contains all necessary information for representing a pharmacy.\r\n * @property {String} type the pharmacy type\r\n * @property {String} phone the pharmacy's phone number\r\n * @property {String} formattedPhone the pharmacy's formatted phone number\r\n * @property {String} fax the pharmacy's fax number\r\n * @property {String} formattedFax the pharmacy's formatted fax number\r\n * @property {String} email the pharmacy's email address\r\n * @property {model.AWSDKAddress} address the pharmacy's street address\r\n * @property {Boolean} isActive boolean true if the pharmacy is available for selection\r\n * @property {Number} longitude the longitude of the pharmacy's location\r\n * @property {Number} latitude the latitude of the pharmacy's location\r\n * @property {String} name the name of the pharmacy\r\n * @property {number} distance the distance in miles from the user's \"Search-Near\" location to this pharmacy. This property is only returned when\r\n * this object was returned through the {@link service.PharmacyService.getPharmaciesByLongitudeAndLatitude()|PharmacyService.getPharmaciesByLongitudeAndLatitude}\r\n * function, and will be null otherwise.\r\n * @extends model.AWSDKEntity\r\n */\r\nclass AWSDKPharmacy extends AWSDKEntity {\r\n  get type() {\r\n    return this.__data.type;\r\n  }\r\n\r\n  get phone() {\r\n    return this.__data.phone;\r\n  }\r\n\r\n  get formattedPhone() {\r\n    return this.__data.formattedPhone;\r\n  }\r\n\r\n  get fax() {\r\n    return this.__data.fax;\r\n  }\r\n\r\n  /**\r\n   * @since 3.0.0\r\n   * @type {string}\r\n   */\r\n  get formattedFax() {\r\n    return this.__data.formattedFax;\r\n  }\r\n\r\n  get email() {\r\n    return this.__data.email;\r\n  }\r\n\r\n  get address() {\r\n    return this.__data.address ? GenericParser.parseObject(this.__data.address, AWSDKAddress) : null;\r\n  }\r\n\r\n  get isActive() {\r\n    return GenericParser.parseBoolean(this.__data.isActive);\r\n  }\r\n\r\n  get longitude() {\r\n    return this.__data.longitude;\r\n  }\r\n\r\n  get latitude() {\r\n    return this.__data.latitude;\r\n  }\r\n\r\n  get name() {\r\n    return this.__data.name;\r\n  }\r\n\r\n  /**\r\n   * @since 2.8.0\r\n   */\r\n  get distance() {\r\n    return this.__data.distance || null;\r\n  }\r\n}\r\nexport default AWSDKPharmacy;\r\n","/*!\r\n * American Well Consumer Web SDK\r\n *\r\n * Copyright (c) 2017 American Well.\r\n * All rights reserved.\r\n *\r\n * It is illegal to use, reproduce or distribute\r\n * any part of this Intellectual Property without\r\n * prior written authorization from American Well.\r\n */\r\n\r\nimport AWSDKDataObject from '../awsdk_dataobject';\r\n\r\n/**\r\n * The AWSDKTriageQuestion class represents a wrapper for a single Q&A during triage\r\n * @property {String} question the triage question to display\r\n * @property {String} answer the answer to the question\r\n * @extends model.AWSDKDataObject\r\n */\r\nclass AWSDKTriageQuestion extends AWSDKDataObject {\r\n  get question() {\r\n    return this.__data.question;\r\n  }\r\n\r\n  get answer() {\r\n    return this.__data.answer;\r\n  }\r\n\r\n  set question(question) {\r\n    this.__data.question = question;\r\n  }\r\n\r\n  set answer(answer) {\r\n    this.__data.answer = answer;\r\n  }\r\n}\r\nexport default AWSDKTriageQuestion;\r\n","/*!\r\n * American Well Consumer Web SDK\r\n *\r\n * Copyright © 2018 American Well.\r\n * All rights reserved.\r\n *\r\n * It is illegal to use, reproduce or distribute\r\n * any part of this Intellectual Property without\r\n * prior written authorization from American Well.\r\n */\r\n\r\n/**\r\n * Enum for AWSDKDisposition.\r\n * @readonly\r\n * @enum {string}\r\n * @since 1.2.0\r\n */\r\nconst AWSDKDisposition = {\r\n  /**\r\n   * This state is meant to be temporary. Allows agenda items created by the provider in the console, to be\r\n   * deleted in provider wrap-up. Also used when assessments are creating items and then later rolls them up\r\n   * together (in the case of visits).\r\n   */\r\n  Unpublished: 'Unpublished',\r\n  /**\r\n   * Will cause an item to show up on a consumer's To-Do list.\r\n   */\r\n  Unscheduled: 'Unscheduled',\r\n  /**\r\n   * A visit which is on the provider's calendar.\r\n   */\r\n  Scheduled: 'Scheduled',\r\n  /**\r\n   * Consumer is waiting for a provider to become available.\r\n   */\r\n  Parked: 'Parked',\r\n  /**\r\n   * Consumer canceled the visit. Can happen by leaving the visit console prior\r\n   * to the provider entering or canceling the appointment from the email.\r\n   */\r\n  ConsumerCanceled: 'ConsumerCanceled',\r\n  /**\r\n   * Provider declines the visit either on the drape or on the review connection details page.\r\n   */\r\n  Declined: 'Declined',\r\n  /**\r\n   * Provider fails respond in time to either the drape or review connection details.\r\n   */\r\n  ProviderResponseTimeout: 'ProviderResponseTimeout',\r\n  /**\r\n   * Initiator is waiting for the provider and may be chatting with an assistant.\r\n   */\r\n  PreVisitScreening: 'PreVisitScreening',\r\n  /**\r\n   * Visit is currently happening between provider and consumer.\r\n   */\r\n  InProgress: 'InProgress',\r\n  /**\r\n   * Provider has finished conversation and consumer is in post-visit with an assistant.\r\n   */\r\n  PostVisitConversation: 'PostVisitConversation',\r\n  /**\r\n   * Provider clicks the cancel button DURING an visit.\r\n   */\r\n  Bailed: 'Bailed',\r\n  /**\r\n   * Provider Disconnected.\r\n   */\r\n  ProviderDisconnected: 'ProviderDisconnected',\r\n  /**\r\n   * Visit has finished, but provider is completing the details.\r\n   */\r\n  ProviderWrapup: 'ProviderWrapup',\r\n  /**\r\n   * Consulting provider wrapped up but primary provider hasn't. Limbo state lasts 24 hours max, P2P only\r\n   */\r\n  ConsultingProviderWrappedUp: 'ConsultingProviderWrappedUp',\r\n  /**\r\n   * Completed.\r\n   */\r\n  Completed: 'Completed',\r\n  /**\r\n   * A failure occurred during background processing and the object should be considered invalid.\r\n   */\r\n  Error: 'Error',\r\n  /**\r\n   * Collapsed and \"Deleted\". This item has been collapsed into another agenda item, and access to it has been\r\n   * removed. This disposition serves to \"soft\" delete an item and remaining references to it in the database\r\n   * without removing the actual row.\r\n   */\r\n  CollapseDeleted: 'CollapseDeleted',\r\n  /**\r\n   * Visit is deleted by consumer.\r\n   */\r\n  Deleted: 'Deleted',\r\n  /**\r\n   * Provider Canceled a scheduled visit.\r\n   */\r\n  ProviderCanceled: 'ProviderCanceled',\r\n  /**\r\n   * Consumer Disconnected (pre-threshold). The threshold is the billing threshold. So if a consumer gets disconnected\r\n   * before 5 mins, they don't have to pay - after they do.\r\n   */\r\n  ConsumerDisconnected: 'ConsumerDisconnected',\r\n  /**\r\n   * The Consumer missed a visit scheduled by a provider or assistant.\r\n   */\r\n  Expired: 'Expired',\r\n};\r\n\r\n/**\r\n * @private\r\n */\r\nAWSDKDisposition.__dispositions = Object.values(AWSDKDisposition);\r\nObject.freeze(AWSDKDisposition);\r\nexport default AWSDKDisposition;\r\n","/*!\r\n * American Well Consumer Web SDK\r\n *\r\n * Copyright © 2018 American Well.\r\n * All rights reserved.\r\n *\r\n * It is illegal to use, reproduce or distribute\r\n * any part of this Intellectual Property without\r\n * prior written authorization from American Well.\r\n */\r\n\r\n/**\r\n * Enum for AWSDKEndReason.\r\n * @readonly\r\n * @enum {string}\r\n * @since 1.2.0\r\n */\r\nconst AWSDKEndReason = {\r\n  /**\r\n   * The visit expired.\r\n   */\r\n  VISIT_EXPIRED: 'VISIT_EXPIRED',\r\n  /**\r\n   * The consumer was disconnected after the payment threshold.\r\n   */\r\n  CONSUMER_DISCONNECT_POST_THRESHOLD: 'CONSUMER_DISCONNECT_POST_THRESHOLD',\r\n  /**\r\n   * The consumer was disconnected before the payment threshold.\r\n   */\r\n  CONSUMER_DISCONNECT_PRE_THRESHOLD: 'CONSUMER_DISCONNECT_PRE_THRESHOLD',\r\n  /**\r\n   * The consumer was forcefully disconnected by an admin.\r\n   */\r\n  CONSUMER_FORCED_DISCONNECT: 'CONSUMER_FORCED_DISCONNECT',\r\n  /**\r\n   * The consumer canceled the visit.  This can happen by entering the visit\r\n   * console (for a scheduled or unscheduled visit) and canceling before\r\n   * the provider enters.\r\n   */\r\n  CONSUMER_CANCEL: 'CONSUMER_CANCEL',\r\n  /**\r\n   * The consumer failed to authenticate via IVR (didn't pick up the phone, or wrong PIN).\r\n   */\r\n  CONSUMER_IVR_AUTH_FAILED: 'CONSUMER_IVR_AUTH_FAILED',\r\n  /**\r\n   * The consumer ended the visit.\r\n   */\r\n  CONSUMER_END: 'CONSUMER_END',\r\n  /**\r\n   * The initiator logged out during pre-visit screening.\r\n   */\r\n  INITIATOR_LOGOUT_PRE_VISIT: 'INITIATOR_LOGOUT_PRE_VISIT',\r\n  /**\r\n   * The initiator logged out after starting the visit with the provider.\r\n   */\r\n  INITIATOR_LOGOUT_AFTER_START: 'INITIATOR_LOGOUT_AFTER_START',\r\n  /**\r\n   * Consulting provider gracefully ended an visit. This is possible only if the visit is zero-cost to\r\n   * the consumer. Otherwise, the end reason would be PROVIDER_BAIL.\r\n   */\r\n  PROVIDER_END: 'PROVIDER_END',\r\n  /**\r\n   * The provider declined the visit.\r\n   */\r\n  PROVIDER_DECLINE: 'PROVIDER_DECLINE',\r\n  /**\r\n   * The provider declined and transferred the visit.\r\n   */\r\n  PROVIDER_DECLINE_AND_TRANSFER: 'PROVIDER_DECLINE_AND_TRANSFER',\r\n  /**\r\n   * The provider bailed out of the visit.\r\n   */\r\n  PROVIDER_BAIL: 'PROVIDER_BAIL',\r\n  /**\r\n   * The provider was disconnected.\r\n   */\r\n  PROVIDER_DISCONNECT: 'PROVIDER_DISCONNECT',\r\n  /**\r\n   * The provider did not respond in time.\r\n   */\r\n  PROVIDER_RESPONSE_TIMEOUT: 'PROVIDER_RESPONSE_TIMEOUT',\r\n  /**\r\n   * The provider logged out.\r\n   */\r\n  PROVIDER_LOGOUT: 'PROVIDER_LOGOUT',\r\n  /**\r\n   * The provider failed to authenticate via IVR.\r\n   */\r\n  PROVIDER_IVR_AUTH_FAILED: 'PROVIDER_IVR_AUTH_FAILED',\r\n  /**\r\n   * The assistant declined on behalf of the provider.\r\n   */\r\n  ASSISTANT_DECLINE: 'ASSISTANT_DECLINE',\r\n  /**\r\n   * The assistant declined and transferred on behalf of the provider.\r\n   */\r\n  ASSISTANT_DECLINE_AND_TRANSFER: 'ASSISTANT_DECLINE_AND_TRANSFER',\r\n  /**\r\n   * Ejected from waiting room due to provider disconnection.\r\n   */\r\n  WAITING_ROOM_EXPIRED: 'WAITING_ROOM_EXPIRED',\r\n  /**\r\n   * An unexpected exception occurred while calculating the visit cost asynchronously.\r\n   */\r\n  ASYNC_COST_CALC_EXCEPTION: 'ASYNC_COST_CALC_EXCEPTION',\r\n  /**\r\n   * Consumer has chosen to transfer to a different provider.\r\n   */\r\n  CONSUMER_TRANSFER: 'CONSUMER_TRANSFER',\r\n};\r\nObject.freeze(AWSDKEndReason);\r\nexport default AWSDKEndReason;\r\n","/*!\r\n * American Well Consumer Web SDK\r\n *\r\n * Copyright (c) 2017 American Well.\r\n * All rights reserved.\r\n *\r\n * It is illegal to use, reproduce or distribute\r\n * any part of this Intellectual Property without\r\n * prior written authorization from American Well.\r\n */\r\nimport AWSDKDataObject from '../../../model/awsdk_dataobject';\r\n\r\n/**\r\n * The AWSDKEligibilitySuggestionResponse represents an eligibility suggestion response object\r\n * @property {String} value the name of the suggestion response text\r\n * @property {String} title the localized reason title text\r\n * @property {String} description the localized reason description text\r\n * @property {String} suggestion the localized recovery suggestion text\r\n * @extends model.AWSDKDataObject\r\n */\r\nclass AWSDKEligibilitySuggestedResponse extends AWSDKDataObject {\r\n  get value() {\r\n    return this.__data.value;\r\n  }\r\n\r\n  get title() {\r\n    return this.__data.title;\r\n  }\r\n\r\n  get suggestion() {\r\n    return this.__data.suggestion;\r\n  }\r\n\r\n  get description() {\r\n    return this.__data.description;\r\n  }\r\n}\r\nexport default AWSDKEligibilitySuggestedResponse;\r\n","/*!\r\n * American Well Consumer Web SDK\r\n *\r\n * Copyright © 2018 American Well.\r\n * All rights reserved.\r\n *\r\n * It is illegal to use, reproduce or distribute\r\n * any part of this Intellectual Property without\r\n * prior written authorization from American Well.\r\n */\r\n\r\n/**\r\n * Enum for AWSDKEligibilityRequestStatus.\r\n * @readonly\r\n * @enum {string}\r\n * @since 1.2.0\r\n */\r\nconst AWSDKEligibilityRequestStatus = {\r\n  /**\r\n   * Successful invocation of remote service with a response that contains coverage and benefits data.\r\n   * The consumer has active coverage at the time of inquiry.\r\n   */\r\n  COVERED: 'COVERED',\r\n  /**\r\n   * Successful invocation of remote service with a response that contains coverage and benefits data.\r\n   * The consumer does not have active coverage.\r\n   * Consumer is not covered or not on file at the time of inquiry.\r\n   */\r\n  NOT_COVERED: 'NOT_COVERED',\r\n  /**\r\n   * Successful invocation of remote service with a response that request validation information.\r\n   * Specifically, the 271 response contains AAA segment that contain\r\n   * request validation error instead of eligibility and benefits info.\r\n   */\r\n  REQUEST_VALIDATION_RESPONSE: 'REQUEST_VALIDATION_RESPONSE',\r\n  /**\r\n   * Invocation of remote service failed..\r\n   */\r\n  FAILED: 'FAILED',\r\n  /**\r\n   * Invocation of remote service was cancelled in-flight.\r\n   */\r\n  CANCELLED: 'CANCELLED',\r\n};\r\nObject.freeze(AWSDKEligibilityRequestStatus);\r\nexport default AWSDKEligibilityRequestStatus;\r\n","/*!\r\n * American Well Consumer Web SDK\r\n *\r\n * Copyright (c) 2017 American Well.\r\n * All rights reserved.\r\n *\r\n * It is illegal to use, reproduce or distribute\r\n * any part of this Intellectual Property without\r\n * prior written authorization from American Well.\r\n */\r\nimport AWSDKDataObject from '../awsdk_dataobject';\r\nimport GenericParser from '../../internal/parser/generic_parser';\r\nimport AWSDKEligibilitySuggestedResponse from '../../internal/model/response/awsdk_eligibility_suggested_response';\r\nimport AWSDKEligibilityRequestStatus from './awsdk_eligibility_request_status';\r\n\r\n/**\r\n * The AWSDKVisitCost class represents an object with all the necessary information for the estimated cost of a visit <br>\r\n * @property {String} costCalculationStatus the property representing the status of a cost calculation.\r\n * If the status is 'FINISHED' then the cost calculation is completed. If it's 'FAILED' then the cost calculation failed.\r\n * @property {String} couponCode the coupon code that has been applied to this visit.\r\n * @property {String} href the link to this cost of engagement object\r\n * @property {String} proposedCouponCode a coupon code that can be applied to the visit for discounts\r\n * @property {String} deferredBillingText text to be displayed if deferred billing is enabled\r\n * @property {String} deferredBillingWrapUpText text to be displayed while doing wrap up if deferred billing is enabled\r\n * @property {Number} extensionCost the cost value of an extension with the provider\r\n * @property {Number} baseCost the base cost of the visit for this provider without fees or copay.\r\n * @property {Boolean} zeroCostVisit boolean true if this is a visit with a cost of zero, false otherwise\r\n * @property {Boolean} totalCostWaived boolean true if the total cost of this visit is waived, false otherwise\r\n * @property {String} paymentMessage text to be displayed when asking for payment info\r\n * @property {Number} expectedConsumerCopayCost the amount that the consumer is expected to pay as copay for a visit\r\n * @property {Boolean} canApplyCouponCode boolean true if this visit allows coupoun codes to be applied to it\r\n * @property {Boolean} deferredBillingInEffect boolean true if deferred billing is in effect\r\n * @property {Boolean} hasCostChangedWithVisitTransfer boolean true if the cost of the visit has changed due to a transfer, false otherwise\r\n * @property {model.AWSDKEligibilityRequestStatus} eligibilityRequestStatus text represents the status of the eligibility request.\r\n * @property {model.AWSDKEligibilitySuggestedResponse} eligibilityRequestErrorSuggestion text representing a suggestion in case of eligibility request error\r\n * @property {String} eligibilityRequestError text representing the error message to an eligibility request\r\n * @property {String} eligibilityExceptionReason text representing an explanation for the reason why an eligibility request threw an error\r\n * @extends model.AWSDKDataObject\r\n */\r\nclass AWSDKVisitCost extends AWSDKDataObject {\r\n  get costCalculationStatus() {\r\n    return this.__data.costCalculationStatus;\r\n  }\r\n\r\n  get couponCode() {\r\n    return this.__data.couponCode;\r\n  }\r\n\r\n  get href() {\r\n    return this.__data.href;\r\n  }\r\n\r\n  get proposedCouponCode() {\r\n    return this.__data.proposedCouponCode;\r\n  }\r\n\r\n  get eligibilityRequestErrorSuggestion() {\r\n    return GenericParser.parseObject(this.__data.eligibilityRequestErrorSuggestion, AWSDKEligibilitySuggestedResponse);\r\n  }\r\n\r\n  get deferredBillingText() {\r\n    return this.__data.deferredBillingText;\r\n  }\r\n\r\n  get deferredBillingWrapUpText() {\r\n    return this.__data.deferredBillingWrapUpText;\r\n  }\r\n\r\n  get extensionCost() {\r\n    return this.__data.extensionCost;\r\n  }\r\n\r\n  get baseCost() {\r\n    return this.__data.baseCost;\r\n  }\r\n\r\n  get zeroCostVisit() {\r\n    return GenericParser.parseBoolean(this.__data.zeroCostVisit);\r\n  }\r\n\r\n  get totalCostWaived() {\r\n    return GenericParser.parseBoolean(this.__data.totalCostWaived);\r\n  }\r\n\r\n  get paymentMessage() {\r\n    return this.__data.paymentMessage;\r\n  }\r\n\r\n  get eligibilityRequestStatus() {\r\n    return GenericParser.parseEnum(this.__data.eligibilityRequestStatus, AWSDKEligibilityRequestStatus);\r\n  }\r\n\r\n  get expectedConsumerCopayCost() {\r\n    return this.__data.expectedMemberCopayCost;\r\n  }\r\n\r\n  get canApplyCouponCode() {\r\n    return GenericParser.parseBoolean(this.__data.canApplyCouponCode);\r\n  }\r\n\r\n  get deferredBillingInEffect() {\r\n    return GenericParser.parseBoolean(this.__data.deferredBillingInEffect);\r\n  }\r\n\r\n  get hasCostChangedWithVisitTransfer() {\r\n    return GenericParser.parseBoolean(this.__data.hasCostChangedWithVisitTransfer);\r\n  }\r\n\r\n  get eligibilityRequestError() {\r\n    return this.__data.eligibilityRequestError;\r\n  }\r\n\r\n  get eligibilityExceptionReason() {\r\n    return this.__data.eligibilityExceptionReason;\r\n  }\r\n}\r\nexport default AWSDKVisitCost;\r\n","/*!\r\n * American Well Consumer Web SDK\r\n *\r\n * Copyright (c) 2018 American Well.\r\n * All rights reserved.\r\n *\r\n * It is illegal to use, reproduce or distribute\r\n * any part of this Intellectual Property without\r\n * prior written authorization from American Well.\r\n */\r\n\r\nimport GenericParser from '../../internal/parser/generic_parser';\r\nimport AWSDKAddress from '../awsdk_address';\r\nimport AWSDKTopic from './awsdk_topic';\r\nimport AWSDKChatReport from '../chat/awsdk_chat_report';\r\nimport AWSDKIntake from './awsdk_intake';\r\nimport AWSDKDataObject from '../awsdk_dataobject';\r\nimport AWSDKVisitScheduled from './awsdk_visit_schedule';\r\nimport AWSDKProvider from '../provider/awsdk_provider';\r\nimport AWSDKProviderEntries from './awsdk_provider_entries';\r\nimport AWSDKPharmacy from '../pharmacy/awsdk_pharmacy';\r\nimport AWSDKConsumer from '../consumer/awsdk_consumer';\r\nimport AWSDKTriageQuestion from './awsdk_triage_question';\r\nimport AWSDKDisposition from './awsdk_disposition';\r\nimport AWSDKEndReason from './awsdk_end_reason';\r\nimport AWSDKVisitCost from '../visit/awsdk_visit_cost';\r\nimport AWSDKModality from '../awsdk_modality';\r\nimport AWSDKEntityId from '../../internal/model/awsdk_entity_id';\r\nimport AWSDKPractice from '../practice/awsdk_practice';\r\n\r\n/**\r\n * A detailed representation of an {@link AWSDKVisit} that has already occurred.\r\n * @property {String} title the title of the visitReport\r\n * @property {String[]} acceptedDisclaimers an array of string names of the disclaimers the consumer has accepted\r\n * @property {String} transferredFromProviderName the name of the provider this consumer was transferred from\r\n * @property {String} transferredFromSpecialty the specialty of the provider this consumer was transferred from\r\n * @property {String} transferNote the transfer note\r\n * @property {model.AWSDKAddress} consumerBillingAddress the consumer's billing address\r\n * @property {String} paymentType the payment type\r\n * @property {Number} paymentAmount the payment amount\r\n * @property {String} couponCode the coupon code applied to the visit\r\n * @property {model.AWSDKTopic[]} consumerSummaryTopics the consumer summary topics picked for the visit\r\n * @property {Number} visitRating the visit rating\r\n * @property {Number} providerRating the provider rating\r\n * @property {model.AWSDKChatReport} chatReport the chat report for the visit\r\n * @property {model.AWSDKIntake} intake the intake for the visit\r\n * @property {model.AWSDKVisitScheduled} schedule the schedule of the visit\r\n * @property {model.AWSDKProvider} assignedProvider the assigned provider of the visit\r\n * @property {model.AWSDKTriageQuestion[]} triageQuestions the triage questions associated with the visit\r\n * @property {model.AWSDKProviderEntries} providerEntries the provider entries associated with the visit\r\n * @property {model.AWSDKPharmacy} pharmacy the pharmacy associated with the visit\r\n * @property {model.AWSDKConsumer} consumer the consumer associated with the visit\r\n * @since 1.4.0\r\n * @property {model.AWSDKVisitCost} visitCost contains details about the visit's cost\r\n * @since 1.4.0\r\n * @property {Boolean} isSuppressChargeTimeout indicates if the associated visit has a Suppress Payment cost\r\n * @since 1.3.0\r\n * @property {model.AWSDKDisposition} disposition  the disposition of the visit\r\n * @since 1.3.0\r\n * @property {model.AWSDKEndReason} endReason the reason for ending the visit\r\n * @since 1.4.0\r\n * @property {model.AWSDKModality} modality represents the modality associated with the visit @since 1.2.0\r\n * @extends model.AWSDKDataObject\r\n */\r\nclass AWSDKVisitReportDetail extends AWSDKDataObject {\r\n  get title() {\r\n    return this.__data.title;\r\n  }\r\n\r\n  get acceptedDisclaimers() {\r\n    return this.__data.acceptedDisclaimers;\r\n  }\r\n\r\n  get transferredFromProviderName() {\r\n    return this.__data.transferredFromProviderName;\r\n  }\r\n\r\n  get transferredFromSpecialty() {\r\n    return this.__data.transferredFromSpecialty;\r\n  }\r\n\r\n  get transferNote() {\r\n    return this.__data.transferNote;\r\n  }\r\n\r\n  get consumerBillingAddress() {\r\n    return GenericParser.parseObject(this.__data.memberBillingAddress, AWSDKAddress);\r\n  }\r\n\r\n  get paymentType() {\r\n    return this.__data.paymentType;\r\n  }\r\n\r\n  get paymentAmount() {\r\n    return this.__data.paymentAmount;\r\n  }\r\n\r\n  get couponCode() {\r\n    return this.__data.couponCode;\r\n  }\r\n\r\n  get consumerSummaryTopics() {\r\n    this.__data.memberSummaryTopics.map(item => GenericParser.parseObject(item, AWSDKTopic));\r\n  }\r\n\r\n  get visitRating() {\r\n    return this.__data.visitRating;\r\n  }\r\n\r\n  get providerRating() {\r\n    return this.__data.providerRating;\r\n  }\r\n\r\n  get chatReport() {\r\n    return GenericParser.parseObject(this.__data.chatReport, AWSDKChatReport);\r\n  }\r\n\r\n  get intake() {\r\n    return GenericParser.parseObject(this.__data.intake, AWSDKIntake);\r\n  }\r\n\r\n  get schedule() {\r\n    return GenericParser.parseObject(this.__data.schedule, AWSDKVisitScheduled);\r\n  }\r\n\r\n  get assignedProvider() {\r\n    return GenericParser.parseObject(this.__data.assignedProvider, AWSDKProvider);\r\n  }\r\n\r\n  get triageQuestions() {\r\n    if (this.__data.triageQuestions && Array.isArray(this.__data.triageQuestions)) {\r\n      return this.__data.triageQuestions.map((question, index) => {\r\n        const triageQuestion = new AWSDKTriageQuestion();\r\n        triageQuestion.question = question;\r\n        triageQuestion.answer = this.__data.triageAnswers && this.__data.triageAnswers[index];\r\n        return triageQuestion;\r\n      });\r\n    }\r\n    return [];\r\n  }\r\n\r\n  get providerEntries() {\r\n    return GenericParser.parseObject(this.__data.providerEntries, AWSDKProviderEntries);\r\n  }\r\n\r\n  get pharmacy() {\r\n    return GenericParser.parseObject(this.__data.pharmacy, AWSDKPharmacy);\r\n  }\r\n\r\n  get consumer() {\r\n    return GenericParser.parseObject(this.__data.member, AWSDKConsumer);\r\n  }\r\n\r\n  get disposition() {\r\n    return GenericParser.parseEnum(this.__data.disposition, AWSDKDisposition);\r\n  }\r\n\r\n  get endReason() {\r\n    return GenericParser.parseEnum(this.__data.endReason, AWSDKEndReason);\r\n  }\r\n\r\n  /**\r\n   * @since 1.4.0\r\n   */\r\n  get visitCost() {\r\n    return GenericParser.parseObject(this.__data.cost, AWSDKVisitCost);\r\n  }\r\n\r\n  /**\r\n   * @since 1.4.0\r\n   */\r\n  get isSuppressChargeTimeout() {\r\n    return GenericParser.parseBoolean(this.__data.member && this.__data.member.subscription && this.__data.member.subscription.healthPlan.payerInfo.suppressCharge &&\r\n      this.__data.cost && !this.__data.cost.zeroCostVisit &&\r\n      this.__data.cost.eligibilityRequestError === 'CONNECTION_TIMEOUT' && this.__data.cost.costCalculationStatus === 'FINISHED');\r\n  }\r\n\r\n  /**\r\n   * @since 1.4.0\r\n   */\r\n  get modality() {\r\n    return GenericParser.parseObject(this.__data.modality, AWSDKModality);\r\n  }\r\n\r\n  /**\r\n   * The practice associated with this visit report details\r\n   * @type {model.AWSDKPractice}\r\n   * @since 2.3.0\r\n   */\r\n  get practice() {\r\n    return GenericParser.parseObject(this.__data.practice, AWSDKPractice);\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  __getEngagementId() {\r\n    return GenericParser.parseObject(this.__data.engagementId, AWSDKEntityId);\r\n  }\r\n}\r\nexport default AWSDKVisitReportDetail;\r\n","/*!\n * American Well Consumer Web SDK\n *\n * Copyright (c) 2018 American Well.\n * All rights reserved.\n *\n * It is illegal to use, reproduce or distribute\n * any part of this Intellectual Property without\n * prior written authorization from American Well.\n */\nimport GenericParser from '../../parser/generic_parser';\nimport AWSDKResponse from './awsdk_response';\nimport AWSDKVisitReportDetail from '../../../model/visit/awsdk_visit_report_detail';\n\n/**\n * The AWSDKVisitReportDetailResponse class represents the response object to a call for a visit report's details\n * @property {model.AWSDKVisitReportDetail} visitReportDetail the details for a given visit report\n * @extends model.AWSDKResponse\n */\nclass AWSDKVisitReportDetailResponse extends AWSDKResponse {\n  get visitReportDetail() {\n    return GenericParser.parseObject(this.__data.visitReportData, AWSDKVisitReportDetail);\n  }\n}\n\nexport default AWSDKVisitReportDetailResponse;\n","/*!\r\n * American Well Consumer Web SDK\r\n *\r\n * Copyright (c) 2017 American Well.\r\n * All rights reserved.\r\n *\r\n * It is illegal to use, reproduce or distribute\r\n * any part of this Intellectual Property without\r\n * prior written authorization from American Well.\r\n */\r\n\r\nimport AWSDKDataObject from '../awsdk_dataobject';\r\n/**\r\n * This class represents a placeholder for payment (credit card) information for updating a consumer's payment method on file\r\n * @extends model.AWSDKDataObject\r\n * @property {String} nameOnCard the name of the credit card holder. This is the {@link model.AWSDKConsumer|AWSDKConsumer} whose payment information we are updating\r\n * @property {String} creditCardNumber the (new) credit card number\r\n * @property {String} creditCardZip the zip (postal) code associated with the credit card\r\n * @property {String} creditCardSecCode the security code of the credit card\r\n * @property {String} address1 the street address associated with this {@link model.AWSDKConsumer|AWSDKConsumer}'s credit card account\r\n * @property {String} address2 additional address information associated with the {@link model.AWSDKConsumer|AWSDKConsumer} credit card account\r\n * @property {String} city the city name associated with the {@link model.AWSDKConsumer|AWSDKConsumer}'s credit card account\r\n * @property {String} state the state name associated with the {@link model.AWSDKConsumer|AWSDKConsumer}'s credit card account\r\n * @property {String} country the country name associated with the {@link model.AWSDKConsumer|AWSDKConsumer}'s credit card account\r\n * @property {Number} creditCardMonth the expiration month for this credit card\r\n * @property {Number} creditCardYear the expiration year for this credit card\r\n */\r\nclass AWSDKPaymentRequest extends AWSDKDataObject {\r\n  get nameOnCard() {\r\n    return this.__data.nameOnCard;\r\n  }\r\n\r\n  set nameOnCard(nameOnCard) {\r\n    this.__data.nameOnCard = nameOnCard;\r\n  }\r\n\r\n  get creditCardNumber() {\r\n    return this.__data.creditCardNumber;\r\n  }\r\n\r\n  set creditCardNumber(creditCardNumber) {\r\n    this.__data.creditCardNumber = creditCardNumber;\r\n  }\r\n\r\n  get creditCardZip() {\r\n    return this.__data.creditCardZip;\r\n  }\r\n\r\n  set creditCardZip(creditCardZip) {\r\n    this.__data.creditCardZip = creditCardZip;\r\n  }\r\n\r\n  get creditCardSecCode() {\r\n    return this.__data.creditCardSecCode;\r\n  }\r\n\r\n  set creditCardSecCode(creditCardSecCode) {\r\n    this.__data.creditCardSecCode = creditCardSecCode;\r\n  }\r\n\r\n  get address1() {\r\n    return this.__data.address1;\r\n  }\r\n\r\n  set address1(address1) {\r\n    this.__data.address1 = address1;\r\n  }\r\n\r\n  get address2() {\r\n    return this.__data.address2;\r\n  }\r\n\r\n  set address2(address2) {\r\n    this.__data.address2 = address2;\r\n  }\r\n\r\n  get city() {\r\n    return this.__data.city;\r\n  }\r\n\r\n  set city(city) {\r\n    this.__data.city = city;\r\n  }\r\n\r\n  get country() {\r\n    return this.__data.country;\r\n  }\r\n\r\n  set country(country) {\r\n    this.__data.country = country;\r\n  }\r\n\r\n  get state() {\r\n    return this.__data.state;\r\n  }\r\n\r\n  set state(state) {\r\n    this.__data.state = state;\r\n  }\r\n\r\n  get creditCardMonth() {\r\n    return parseInt(this.__data.creditCardMonth, 10);\r\n  }\r\n\r\n  set creditCardMonth(creditCardMonth) {\r\n    this.__data.creditCardMonth = creditCardMonth;\r\n  }\r\n\r\n  get creditCardYear() {\r\n    return parseInt(this.__data.creditCardYear, 10);\r\n  }\r\n\r\n  set creditCardYear(creditCardYear) {\r\n    this.__data.creditCardYear = creditCardYear;\r\n  }\r\n}\r\nexport default AWSDKPaymentRequest;\r\n\r\n","/*!\r\n * American Well Consumer Web SDK\r\n *\r\n * Copyright (c) 2017 American Well.\r\n * All rights reserved.\r\n *\r\n * It is illegal to use, reproduce or distribute\r\n * any part of this Intellectual Property without\r\n * prior written authorization from American Well.\r\n */\r\n\r\nimport GenericParser from '../../internal/parser/generic_parser';\r\nimport AWSDKVisitSchedule from './awsdk_visit_schedule';\r\nimport AWSDKEntity from '../awsdk_entity';\r\nimport AWSDKDisposition from './awsdk_disposition';\r\nimport AWSDKEndReason from './awsdk_end_reason';\r\nimport AWSDKProviderType from '../provider/awsdk_provider_type';\r\nimport AWSDKModality from '../awsdk_modality';\r\n\r\n/**\r\n * A simplified representation of an {@link AWSDKVisit} that has already occurred.\r\n * @property {model.AWSDKDisposition} disposition the disposition of the visit\r\n * @property {model.AWSDKVisitSchedule} schedule the schedule of the visit\r\n * @property {String} memberName the name of the member in the visit\r\n * @property {String} providerName the name of the provider in the visit\r\n * @property {model.AWSDKProviderType} providerSpecialty the speciality of the provider in the visit\r\n * @property {Boolean} completed whether or not the visit has been completed\r\n * @property {String} memberProxyName the name of the visit's member proxy, if any\r\n * @property {String} date a timestamp representing the actual start time of the visit\r\n * @property {String} initiatorEngagementOverridePhone the consumer's preferred phone number for this visit\r\n * @property {string} formattedInitiatorEngagementOverridePhone the consumer's preferred formatted phone number for this visit\r\n * @since 1.3.0\r\n * @property {model.AWSDKEndReason} endReason the reason for ending the visit\r\n * @since 1.4.0\r\n * @property {model.AWSDKModality} modality represents the modality associated with the visit\r\n * @extends model.AWSDKEntity\r\n */\r\nclass AWSDKVisitReport extends AWSDKEntity {\r\n  get disposition() {\r\n    return GenericParser.parseEnum(this.__data.disposition, AWSDKDisposition);\r\n  }\r\n  get schedule() {\r\n    return GenericParser.parseObject(this.__data.schedule, AWSDKVisitSchedule);\r\n  }\r\n  get memberName() {\r\n    return this.__data.memberName;\r\n  }\r\n  get providerName() {\r\n    return this.__data.providerName;\r\n  }\r\n  get providerSpecialty() {\r\n    return GenericParser.parseObject(this.__data.specialty, AWSDKProviderType);\r\n  }\r\n  get completed() {\r\n    return GenericParser.parseBoolean(this.__data.completed);\r\n  }\r\n  get memberProxyName() {\r\n    return this.__data.memberProxyName;\r\n  }\r\n  get date() {\r\n    return this.__data.date;\r\n  }\r\n\r\n  get initiatorEngagementOverridePhone() {\r\n    return this.__data.initiatorEngagementOverridePhone;\r\n  }\r\n\r\n  get formattedInitiatorEngagementOverridePhone() {\r\n    return this.__data.formattedInitiatorEngagementOverridePhone;\r\n  }\r\n\r\n  get endReason() {\r\n    return GenericParser.parseEnum(this.__data.endReason, AWSDKEndReason);\r\n  }\r\n\r\n  /**\r\n   * @since 1.4.0\r\n   */\r\n  get modality() {\r\n    return GenericParser.parseObject(this.__data.modality, AWSDKModality);\r\n  }\r\n}\r\nexport default AWSDKVisitReport;\r\n","/*!\r\n * American Well Consumer Web SDK\r\n *\r\n * Copyright (c) 2017 American Well.\r\n * All rights reserved.\r\n *\r\n * It is illegal to use, reproduce or distribute\r\n * any part of this Intellectual Property without\r\n * prior written authorization from American Well.\r\n */\r\nimport GenericParser from '../../internal/parser/generic_parser';\r\nimport AWSDKVisitReport from './awsdk_visit_report';\r\nimport AWSDKResponse from '../../internal/model/response/awsdk_response';\r\n\r\n/**\r\n * A wrapper around a collection of {@link AWSDKVisitReport}s\r\n * @property {Array} visitReports a collection of {@link AWSDKVisitReport}s\r\n * @extends model.AWSDKResponse\r\n * @deprecated see {@link model.AWSDKPaginatedVisitReports}\r\n */\r\nclass AWSDKVisitReportList extends AWSDKResponse {\r\n  get visitReports() {\r\n    return this.__data.visitReports.map(item => GenericParser.parseObject(item, AWSDKVisitReport));\r\n  }\r\n}\r\n\r\nexport default AWSDKVisitReportList;\r\n","/*!\r\n * American Well Consumer Web SDK\r\n *\r\n * Copyright (c) 2018 American Well.\r\n * All rights reserved.\r\n *\r\n * It is illegal to use, reproduce or distribute\r\n * any part of this Intellectual Property without\r\n * prior written authorization from American Well.\r\n */\r\nimport AWSDKCondition from '../../../model/health/awsdk_condition';\r\nimport GenericParser from '../../parser/generic_parser';\r\nimport AWSDKResponse from './awsdk_response';\r\n\r\n/**\r\n * Simple wrapper around a collection of {@link model.AWSDKCondition}s\r\n * @property {model.AWSDKCondition[]} conditions the {@link model.AWSDKCondition}s\r\n * @extends model.AWSDKResponse\r\n */\r\nclass AWSDKConditionsResponse extends AWSDKResponse {\r\n  get conditions() {\r\n    return this.__data.conditions.map(item => GenericParser.parseObject(item, AWSDKCondition));\r\n  }\r\n}\r\n\r\nexport default AWSDKConditionsResponse;\r\n","/*!\r\n * American Well Consumer Web SDK\r\n *\r\n * Copyright © 2018 American Well.\r\n * All rights reserved.\r\n *\r\n * It is illegal to use, reproduce or distribute\r\n * any part of this Intellectual Property without\r\n * prior written authorization from American Well.\r\n */\r\nimport AWSDKDataObject from '../awsdk_dataobject';\r\n\r\n/**\r\n * Represents the particular vitals measurements of a {@link model.AWSDKConsumer}\r\n * @property {Number} systolic the patient's reported systolic value\r\n * @property {Number} diastolic the patient's systolic value\r\n * @property {Number} temperature the patient's temperature\r\n * @property {Number} weight the patient's weight\r\n * @extends model.AWSDKDataObject\r\n */\r\nclass AWSDKVitals extends AWSDKDataObject {\r\n  get systolic() {\r\n    return this.__data.systolic;\r\n  }\r\n\r\n  get diastolic() {\r\n    return this.__data.diastolic;\r\n  }\r\n\r\n  get temperature() {\r\n    return this.__data.temperature;\r\n  }\r\n\r\n  get weight() {\r\n    return this.__data.weight;\r\n  }\r\n\r\n  set systolic(systolic) {\r\n    this.__data.systolic = systolic;\r\n  }\r\n\r\n  set diastolic(diastolic) {\r\n    this.__data.diastolic = diastolic;\r\n  }\r\n\r\n  set temperature(temperature) {\r\n    this.__data.temperature = temperature;\r\n  }\r\n\r\n  set weight(weight) {\r\n    this.__data.weight = weight;\r\n  }\r\n}\r\n\r\nexport default AWSDKVitals;\r\n","/*!\r\n * American Well Consumer Web SDK\r\n *\r\n * Copyright (c) 2018 American Well.\r\n * All rights reserved.\r\n *\r\n * It is illegal to use, reproduce or distribute\r\n * any part of this Intellectual Property without\r\n * prior written authorization from American Well.\r\n */\r\n\r\nimport AWSDKResponse from './awsdk_response';\r\nimport AWSDKVitals from '../../../model/health/awsdk_vitals';\r\nimport GenericParser from '../../parser/generic_parser';\r\n\r\n/**\r\n * Simple wrapper around a {@link model.AWSDKVitals}\r\n * @property {model.AWSDKVitals} vitals the patient's vitals\r\n * @extends model.AWSDKResponse\r\n */\r\nclass AWSDKVitalsResponse extends AWSDKResponse {\r\n  get vitals() {\r\n    return GenericParser.parseObject(this.__data.vitals, AWSDKVitals);\r\n  }\r\n}\r\n\r\nexport default AWSDKVitalsResponse;\r\n","/*!\r\n * American Well Consumer Web SDK\r\n *\r\n * Copyright (c) 2018 American Well.\r\n * All rights reserved.\r\n *\r\n * It is illegal to use, reproduce or distribute\r\n * any part of this Intellectual Property without\r\n * prior written authorization from American Well.\r\n */\r\nimport GenericParser from '../../internal/parser/generic_parser';\r\nimport AWSDKMedication from './awsdk_medication';\r\nimport AWSDKResponse from '../../internal/model/response/awsdk_response';\r\n\r\n/**\r\n * This a wrapper class around a collection of {@link model.AWSDKMedication|AWSDKMedication}\r\n * @property {model.AWSDKMedication[]} medications a collection (Array) of {@link model.AWSDKMedication|AWSDKMedication} for the consumer\r\n * @extends model.AWSDKResponse\r\n */\r\nclass AWSDKMedicationList extends AWSDKResponse {\r\n  get medications() {\r\n    return this.__data.medications.map(item => GenericParser.parseObject(item, AWSDKMedication));\r\n  }\r\n}\r\nexport default AWSDKMedicationList;\r\n\r\n","/*!\r\n * American Well Consumer Web SDK\r\n *\r\n * Copyright (c) 2017 American Well.\r\n * All rights reserved.\r\n *\r\n * It is illegal to use, reproduce or distribute\r\n * any part of this Intellectual Property without\r\n * prior written authorization from American Well.\r\n */\r\n\r\nimport GenericParser from '../../parser/generic_parser';\r\nimport AWSDKAllergy from '../../../model/health/awsdk_allergy';\r\nimport AWSDKResponse from './awsdk_response';\r\n\r\n/**\r\n * This class represents the response obtained from a call to {@link service.ConsumerService#getAllergies(model.AWSDKConsumer)|getAllergies(consumer)}\r\n * which results in an array of {@link model.AWSDKAllergy} objects.\r\n * @property {model.AWSDKAllergy[]} allergies the collection of allergies for a given consumer\r\n * @extends model.AWSDKResponse\r\n */\r\nclass AWSDKAllergiesResponse extends AWSDKResponse {\r\n  get allergies() {\r\n    return (this.__data.allergies && Array.isArray(this.__data.allergies)) ?\r\n      this.__data.allergies.map(item => GenericParser.parseObject(item, AWSDKAllergy)) : [];\r\n  }\r\n}\r\nexport default AWSDKAllergiesResponse;\r\n","/*!\n * American Well Consumer Web SDK\n *\n * Copyright © 2018 American Well.\n * All rights reserved.\n *\n * It is illegal to use, reproduce or distribute\n * any part of this Intellectual Property without\n * prior written authorization from American Well.\n */\nimport AWSDKDataObject from '../awsdk_dataobject';\nimport GenericParser from '../../internal/parser/generic_parser';\nimport AWSDKError from '../../error/awsdk_error';\n\n/**\n * AWSDKSubscriptionUpdate class represents the subscription update object pertaining to a given health plan insurance.\n * @property {model.AWSDKHealthPlan} healthPlan the health plan.\n * @property {String} subscriberId the health insurance subscriber id.\n * @property {String} subscriberSuffix the health insurance subscriber suffix.\n * @property {model.AWSDKRelationshipToSubscriberCode} relationshipToSubscriberCode what is relationship with the primary subscriber\n * @property {String} primarySubscriberFirstName the primary subscriber's first name.\n * @property {String} primarySubscriberLastName  the primary subscriber's last name.\n * @property {Date} primarySubscriberDateOfBirth the primary subscriber's date of birth.\n * @property {String} eligibilityRequestId the requestId of the eligibility check.\n * @property {boolean} ignoreEligibilityChecks set this to FALSE unless you have EDI enabled and want to ignore it to force saving of data.\n * @extends model.AWSDKDataObject\n */\nclass AWSDKSubscriptionUpdate extends AWSDKDataObject {\n  constructor(ignoreEligibilityChecks) {\n    super();\n    this.__data.ignoreEligibilityChecks = ignoreEligibilityChecks;\n  }\n\n  get healthPlan() {\n    return this.__data.healthPlan;\n  }\n\n  get subscriberId() {\n    return this.__data.subscriberId;\n  }\n\n  get subscriberSuffix() {\n    return this.__data.subscriberSuffix;\n  }\n\n  get relationshipToSubscriberCode() {\n    return this.__data.relationshipToSubscriberCode;\n  }\n\n  get primarySubscriberFirstName() {\n    return this.__data.primarySubscriberFirstName;\n  }\n\n  get primarySubscriberLastName() {\n    return this.__data.primarySubscriberLastName;\n  }\n\n  get primarySubscriberDateOfBirth() {\n    return this.__data.primarySubscriberDateOfBirth;\n  }\n\n  get eligibilityRequestId() {\n    return this.__data.eligibilityRequestId;\n  }\n\n  get ignoreEligibilityChecks() {\n    return GenericParser.parseBoolean(this.__data.ignoreEligibilityChecks);\n  }\n\n  set healthPlan(heathPlan) {\n    this.__data.healthPlan = heathPlan;\n  }\n\n  set subscriberId(subscriberId) {\n    this.__data.subscriberId = subscriberId;\n  }\n\n  set subscriberSuffix(subscriberSuffix) {\n    this.__data.subscriberSuffix = subscriberSuffix;\n  }\n\n  set relationshipToSubscriberCode(relationshipToSubscriberCode) {\n    this.__data.relationshipToSubscriberCode = relationshipToSubscriberCode;\n  }\n\n  set primarySubscriberFirstName(primarySubscriberFirstName) {\n    this.__data.primarySubscriberFirstName = primarySubscriberFirstName;\n  }\n\n  set primarySubscriberLastName(primarySubscriberLastName) {\n    this.__data.primarySubscriberLastName = primarySubscriberLastName;\n  }\n\n  set primarySubscriberDateOfBirth(primarySubscriberDateOfBirth) {\n    this.__data.primarySubscriberDateOfBirth = primarySubscriberDateOfBirth;\n  }\n\n  set eligibilityRequestId(eligibilityRequestId) {\n    this.__data.eligibilityRequestId = eligibilityRequestId;\n  }\n\n  set ignoreEligibilityChecks(ignoreEligibilityChecks) {\n    this.__data.ignoreEligibilityChecks = ignoreEligibilityChecks;\n  }\n}\n\nexport default AWSDKSubscriptionUpdate;\n","/*!\n * American Well Consumer Web SDK\n *\n * Copyright (c) 2018 American Well.\n * All rights reserved.\n *\n * It is illegal to use, reproduce or distribute\n * any part of this Intellectual Property without\n * prior written authorization from American Well.\n */\nimport GenericParser from '../../parser/generic_parser';\nimport AWSDKResponse from './awsdk_response';\nimport AWSDKSubscription from '../../../model/insurance/awsdk_subscription';\n\n/**\n * The AWSDKSubscriptionResponse class represents the response object to a call for a insurance details\n * @property {model.AWSDKPractice} insuranceDetails the insurance details for a given practice\n * @extends model.AWSDKResponse\n */\nclass AWSDKSubscriptionResponse extends AWSDKResponse {\n  get insuranceDetails() {\n    return GenericParser.parseObject(this.__data.subscription, AWSDKSubscription);\n  }\n}\n\nexport default AWSDKSubscriptionResponse;\n","/*!\r\n * American Well Consumer Web SDK\r\n *\r\n * Copyright © 2018 American Well.\r\n * All rights reserved.\r\n *\r\n * It is illegal to use, reproduce or distribute\r\n * any part of this Intellectual Property without\r\n * prior written authorization from American Well.\r\n */\r\nimport AWSDKDataObject from './awsdk_dataobject';\r\nimport AWSDKState from './awsdk_state';\r\nimport AWSDKError from '../error/awsdk_error';\r\nimport GenericParser from '../internal/parser/generic_parser';\r\n\r\n\r\n/**\r\n * Contains requisite information for updating an {@link model.AWSDKAddress}\r\n * @property {String} address1 the first line of the address\r\n * @property {String} address2 the second line of the address\r\n * @property {String} city  the city name\r\n * @property {model.AWSDKState} geographicalState the actual underlying {@link model.AWSDKState} of the address\r\n * @property {String} zipCode  the zip (postal) code for this physical location\r\n * @extends model.AWSDKDataObject\r\n */\r\nclass AWSDKAddressUpdate extends AWSDKDataObject {\r\n  constructor(address1, address2, city, geographicalState, zipCode) {\r\n    super();\r\n    this.__data.address1 = address1;\r\n    this.__data.address2 = address2;\r\n    this.__data.city = city;\r\n    if (geographicalState && !(geographicalState instanceof AWSDKState)) {\r\n      throw AWSDKError.AWSDKIllegalArgument('geographicalState is not instance of AWSDKState');\r\n    }\r\n    this.__data.state = geographicalState;\r\n    this.__data.zipCode = zipCode;\r\n  }\r\n\r\n  get stateCode() {\r\n    return this.__data.state ? this.__data.state.code : null;\r\n  }\r\n\r\n  get geographicalState() {\r\n    return this.__data.state ? GenericParser.parseObject(this.__data.state, AWSDKState) : null;\r\n  }\r\n\r\n  get countryCode() {\r\n    return this.__data.state ? this.__data.state.countryCode : null;\r\n  }\r\n\r\n  get zipCode() {\r\n    return this.__data.zipCode;\r\n  }\r\n\r\n  get address1() {\r\n    return this.__data.address1;\r\n  }\r\n\r\n  get address2() {\r\n    return this.__data.address2;\r\n  }\r\n\r\n  get city() {\r\n    return this.__data.city;\r\n  }\r\n\r\n  set geographicalState(geographicalState) {\r\n    if (!(geographicalState instanceof AWSDKState)) {\r\n      throw AWSDKError.AWSDKIllegalArgument('geographicalState is not instance of AWSDKState');\r\n    }\r\n    this.__data.state = geographicalState;\r\n  }\r\n\r\n  set address1(address1) {\r\n    this.__data.address1 = address1;\r\n  }\r\n\r\n  set address2(address2) {\r\n    this.__data.address2 = address2;\r\n  }\r\n\r\n  set city(city) {\r\n    this.__data.city = city;\r\n  }\r\n\r\n  set zipCode(zipCode) {\r\n    this.__data.zipCode = zipCode;\r\n  }\r\n}\r\n\r\nexport default AWSDKAddressUpdate;\r\n","/*!\r\n * American Well Consumer Web SDK\r\n *\r\n * Copyright (c) 2018 American Well.\r\n * All rights reserved.\r\n *\r\n * It is illegal to use, reproduce or distribute\r\n * any part of this Intellectual Property without\r\n * prior written authorization from American Well.\r\n */\r\n\r\nimport AWSDKResponse from './awsdk_response';\r\nimport AWSDKAddress from '../../../model/awsdk_address';\r\nimport GenericParser from '../../parser/generic_parser';\r\n\r\n/**\r\n * Simple wrapper around an {@link model.AWSDKAddress}\r\n * @property {model.AWSDKAddress} address the {@link model.AWSDKAddress}\r\n * @extends model.AWSDKResponse\r\n */\r\nclass AWSDKAddressResponse extends AWSDKResponse {\r\n  get address() {\r\n    return this.__data.address ? GenericParser.parseObject(this.__data.address, AWSDKAddress) : null;\r\n  }\r\n}\r\n\r\nexport default AWSDKAddressResponse;\r\n","/*!\r\n * American Well Consumer Web SDK\r\n *\r\n * Copyright (c) 2017 American Well.\r\n * All rights reserved.\r\n *\r\n * It is illegal to use, reproduce or distribute\r\n * any part of this Intellectual Property without\r\n * prior written authorization from American Well.\r\n */\r\nimport AWSDKBaseConsumerUpdate from './awsdk_base_consumer_update';\r\n\r\n/**\r\n * AWSDKDependentUpdate represents a data container for collecting data to update a dependent {@link model.AWSDKConsumer|AWSDKConsumer} <br>\r\n * See {@link model.AWSDKBaseConsumerUpdate|AWSDKBaseConsumerUpdate} for details.\r\n * @extends model.AWSDKBaseConsumerUpdate\r\n */\r\nclass AWSDKDependentUpdate extends AWSDKBaseConsumerUpdate {}\r\nexport default AWSDKDependentUpdate;\r\n","/*!\r\n * American Well Consumer Web SDK\r\n *\r\n * Copyright (c) 2018 American Well.\r\n * All rights reserved.\r\n *\r\n * It is illegal to use, reproduce or distribute\r\n * any part of this Intellectual Property without\r\n * prior written authorization from American Well.\r\n */\r\n/**\r\n * Enum for defining sort order.\r\n * @readonly\r\n * @enum {string}\r\n * @deprecated\r\n */\r\nconst AWSDKSortOrder = {\r\n\r\n  /**\r\n   * Defines an ascending sort order\r\n   * @since 1.0.0\r\n   */\r\n  ASC: 'asc',\r\n\r\n  /**\r\n   * Defines a descending sort order\r\n   * @since 1.0.0\r\n   */\r\n  DESC: 'desc',\r\n};\r\nObject.freeze(AWSDKSortOrder);\r\nexport default AWSDKSortOrder;\r\n","/*!\r\n * American Well Consumer Web SDK\r\n *\r\n * Copyright (c) 2018 American Well.\r\n * All rights reserved.\r\n *\r\n * It is illegal to use, reproduce or distribute\r\n * any part of this Intellectual Property without\r\n * prior written authorization from American Well.\r\n */\r\n\r\nimport AWSDKEntity from '../awsdk_entity';\r\n\r\n/**\r\n * This class contains all the meta-data needed to download the health document which it represents, including mime-type, size, link and name.\r\n * @property {String} name the name of this attachment\r\n * @property {Number} size the size of the document in kilobytes\r\n * @property {String} type the Mime-Type associated with this document\r\n * @extends model.AWSDKEntity\r\n */\r\nclass AWSDKHealthDocumentAttachment extends AWSDKEntity {\r\n  get name() {\r\n    return this.__data.name;\r\n  }\r\n\r\n  get size() {\r\n    return this.__data.size;\r\n  }\r\n\r\n  get type() {\r\n    return this.__data.type;\r\n  }\r\n}\r\nexport default AWSDKHealthDocumentAttachment;\r\n","/*!\r\n * American Well Consumer Web SDK\r\n *\r\n * Copyright (c) 2018 American Well.\r\n * All rights reserved.\r\n *\r\n * It is illegal to use, reproduce or distribute\r\n * any part of this Intellectual Property without\r\n * prior written authorization from American Well.\r\n */\r\nimport AWSDKEntity from '../awsdk_entity';\r\nimport GenericParser from '../../internal/parser/generic_parser';\r\nimport AWSDKHealthDocumentAttachment from './awsdk_health_document_attachment';\r\n\r\n/**\r\n * This class represents a single instance of a {@link model.AWSDKConsumer|AWSDKConsumer}'s health record document. It is not <br>\r\n * the actual file, but instead an object with meta-data about the actual file.\r\n * @property {String} name the name of this record\r\n * @property {String} description textual description of this health record\r\n * @property {String} href string url that points to this health record\r\n * @property {model.AWSDKHealthDocumentAttachment} attachment contains information about the file and provides link for downloading.\r\n * @property {String} sourceId the sourceId associated with this health document.\r\n * @property {Date} uploadDate the date that this health document was uploaded.\r\n * @extends model.AWSDKEntity\r\n */\r\nclass AWSDKHealthDocumentRecord extends AWSDKEntity {\r\n  get name() {\r\n    return this.__data.name;\r\n  }\r\n\r\n  get description() {\r\n    return this.__data.description;\r\n  }\r\n\r\n  get href() {\r\n    return this.__data.href;\r\n  }\r\n\r\n  get attachment() {\r\n    return GenericParser.parseObject(this.__data.attachment, AWSDKHealthDocumentAttachment);\r\n  }\r\n\r\n  /**\r\n   * @since 1.2.1\r\n   */\r\n  get sourceId() {\r\n    return this.__data.sourceId;\r\n  }\r\n\r\n  /**\r\n   * @since 1.2.1\r\n   */\r\n  get uploadDate() {\r\n    return this.__data.uploadDate && GenericParser.parseDate(this.__data.uploadDate);\r\n  }\r\n}\r\nexport default AWSDKHealthDocumentRecord;\r\n","/*!\r\n * American Well Consumer Web SDK\r\n *\r\n * Copyright (c) 2018 American Well.\r\n * All rights reserved.\r\n *\r\n * It is illegal to use, reproduce or distribute\r\n * any part of this Intellectual Property without\r\n * prior written authorization from American Well.\r\n */\r\nimport AWSDKResponse from '../../internal/model/response/awsdk_response';\r\nimport GenericParser from '../../internal/parser/generic_parser';\r\nimport AWSDKHealthDocumentRecord from './awsdk_health_document_record';\r\n\r\n/**\r\n * This class is a wrapper around a collection (Array) of objects of type {@link model.AWSDKHealthDocumentRecord|AWSDKHealthDocumentRecord}\r\n * @property {model.AWSDKHealthDocumentRecord[]} documentRecords an Array of {@link model.AWSDKHealthDocumentRecord|AWSDKHealthDocumentRecord} objects.\r\n * @extends model.AWSDKResponse\r\n * @deprecated see {@link model.AWSDKPaginatedHealthDocumentRecords}\r\n */\r\nclass AWSDKHealthDocumentRecordList extends AWSDKResponse {\r\n  get documentRecords() {\r\n    return this.__data.documentRecords.map(item => GenericParser.parseObject(item, AWSDKHealthDocumentRecord));\r\n  }\r\n}\r\nexport default AWSDKHealthDocumentRecordList;\r\n","/*!\r\n * American Well Consumer Web SDK\r\n *\r\n * Copyright (c) 2018 American Well.\r\n * All rights reserved.\r\n *\r\n * It is illegal to use, reproduce or distribute\r\n * any part of this Intellectual Property without\r\n * prior written authorization from American Well.\r\n */\r\nimport AWSDKResponse from './awsdk_response';\r\nimport GenericParser from '../../parser/generic_parser';\r\nimport AWSDKHealthDocumentRecord from '../../../model/health/awsdk_health_document_record';\r\n\r\nclass AWSDKHealthDocumentRecordResponse extends AWSDKResponse {\r\n  get documentRecord() {\r\n    return GenericParser.parseObject(this.__data.documentRecord, AWSDKHealthDocumentRecord);\r\n  }\r\n}\r\nexport default AWSDKHealthDocumentRecordResponse;\r\n","/*!\r\n * American Well Consumer Web SDK\r\n *\r\n * Copyright (c) 2017 American Well.\r\n * All rights reserved.\r\n *\r\n * It is illegal to use, reproduce or distribute\r\n * any part of this Intellectual Property without\r\n * prior written authorization from American Well.\r\n */\r\nimport GenericParser from '../../parser/generic_parser';\r\nimport AWSDKEligibilityCheck from '../../../model/insurance/awsdk_eligibility_check';\r\nimport AWSDKResponse from './awsdk_response';\r\n\r\n/**\r\n * The AWSDKEligibilityResponse represents a wrapper around the AWSDKEligibilityCheck object\r\n * @extends model.AWSDKResponse\r\n */\r\nclass AWSDKEligibilityResponse extends AWSDKResponse {\r\n  get eligibilityCheck() {\r\n    return GenericParser.parseObject(this.__data.eligibilityCheck, AWSDKEligibilityCheck);\r\n  }\r\n}\r\nexport default AWSDKEligibilityResponse;\r\n","/*!\n * American Well Consumer Web SDK\n *\n * Copyright (c) 2018 American Well.\n * All rights reserved.\n *\n * It is illegal to use, reproduce or distribute\n * any part of this Intellectual Property without\n * prior written authorization from American Well.\n */\nimport AWSDKResponse from './awsdk_response';\nimport AWSDKConsumer from '../../../model/consumer/awsdk_consumer';\nimport GenericParser from '../../parser/generic_parser';\n\nclass AWSDKDependentsListResponse extends AWSDKResponse {\n  get dependents() {\n    return (Array.isArray(this.__data.dependents) && this.__data.dependents.map(item => GenericParser.parseObject(item, AWSDKConsumer))) || [];\n  }\n}\nexport default AWSDKDependentsListResponse;\n","/*!\n * American Well Consumer Web SDK\n *\n * Copyright (c) 2018 American Well.\n * All rights reserved.\n *\n * It is illegal to use, reproduce or distribute\n * any part of this Intellectual Property without\n * prior written authorization from American Well.\n */\nimport GenericParser from '../../internal/parser/generic_parser';\nimport AWSDKConsumer from './awsdk_consumer';\nimport AWSDKEntity from '../awsdk_entity';\n\n/**\n * This class represents the dependent access request object\n * @property {model.AWSDKConsumer[]} dependents the list of dependents associated with the guardian to whom this request was made\n * @property {model.AWSDKConsumer} guardian the legal guardian of the dependent for whom this request was made\n * @property {model.AWSDKConsumer} requestor the consumer who is asking access to a dependent\n * @since 1.3.0\n * @extends model.AWSDKEntity\n */\nclass AWSDKDependentAccessRequest extends AWSDKEntity {\n  get dependents() {\n    return (Array.isArray(this.__data.dependents) && this.__data.dependents.map(element => GenericParser.parseObject(element, AWSDKConsumer))) || [];\n  }\n  get guardian() {\n    return GenericParser.parseObject(this.__data.guardian, AWSDKConsumer);\n  }\n  get requestor() {\n    return GenericParser.parseObject(this.__data.requestor, AWSDKConsumer);\n  }\n}\nexport default AWSDKDependentAccessRequest;\n","/*!\n * American Well Consumer Web SDK\n *\n * Copyright (c) 2018 American Well.\n * All rights reserved.\n *\n * It is illegal to use, reproduce or distribute\n * any part of this Intellectual Property without\n * prior written authorization from American Well.\n */\nimport GenericParser from '../../parser/generic_parser';\nimport AWSDKDependentAccessRequest from '../../../model/consumer/awsdk_dependent_access_request';\nimport AWSDKResponse from './awsdk_response';\n\nclass AWSDKDependentAccessRequestResponse extends AWSDKResponse {\n  get dependentAccessRequest() {\n    return GenericParser.parseObject(this.__data.dependentAccessRequest, AWSDKDependentAccessRequest);\n  }\n}\nexport default AWSDKDependentAccessRequestResponse;\n","/*!\n * American Well Consumer Web SDK\n *\n * Copyright (c) 2018 American Well.\n * All rights reserved.\n *\n * It is illegal to use, reproduce or distribute\n * any part of this Intellectual Property without\n * prior written authorization from American Well.\n */\nimport GenericParser from '../../internal/parser/generic_parser';\nimport AWSDKDataObject from '../../model/awsdk_dataobject';\n\n/**\n * This class represents a notifications object for a {@link model.AWSDKConsumer|AWSDKConsumer} obtained from an {@link model.AWSDKNotificationsResponse|AWSDKNotificationsResponse}.\n * @property {Number} totalInboxCount the total number of secure messages in the inbox\n * @property {Number} unreadInboxCount the total number of unread secure messages in the consumer's inbox\n * @property {Number} dependentAccessRequestCount the total number of dependent access requests made to this consumer from another spouse\n * @property {Number} appointmentCount the total number of appointments for this consumer\n * @property {Boolean} isTimeForNextAppointment a boolean representing whether or not it is time for this consumer to start a visit\n * @since 1.3.0\n * @extends model.AWSDKDataObject\n */\nclass AWSDKNotifications extends AWSDKDataObject {\n  get totalInboxCount() {\n    return this.__data.totalInboxCount;\n  }\n\n  get unreadInboxCount() {\n    return this.__data.unreadInboxCount;\n  }\n\n  get dependentAccessRequestCount() {\n    return this.__data.dependentAccessRequestCount;\n  }\n\n  get appointmentCount() {\n    return this.__data.appointmentCount;\n  }\n\n  get isTimeForNextAppointment() {\n    return GenericParser.parseBoolean(this.__data.isTimeForNextAppointment);\n  }\n}\nexport default AWSDKNotifications;\n\n","/*!\n * American Well Consumer Web SDK\n *\n * Copyright (c) 2018 American Well.\n * All rights reserved.\n *\n * It is illegal to use, reproduce or distribute\n * any part of this Intellectual Property without\n * prior written authorization from American Well.\n */\nimport AWSDKNotifications from '../../../model/notifications/awsdk_notifications';\nimport GenericParser from '../../parser/generic_parser';\nimport AWSDKResponse from '../response/awsdk_response';\n\n/**\n * This class represents the response obtained from a call to the telehealth platform for notifications pertaining to a {@link model.AWSDKConsumer|AWSDKConsumer}.\n * @property {model.AWSDKNotifications} notifications the notifications object\n * @since 1.3.0\n * @extends model.AWSDKResponse\n */\nclass AWSDKNotificationsResponse extends AWSDKResponse {\n  get notifications() {\n    return GenericParser.parseObject(this.__data.notifications, AWSDKNotifications);\n  }\n}\nexport default AWSDKNotificationsResponse;\n\n","/*!\n * American Well Consumer Web SDK\n *\n * Copyright © 2018 American Well.\n * All rights reserved.\n *\n * It is illegal to use, reproduce or distribute\n * any part of this Intellectual Property without\n * prior written authorization from American Well.\n */\n\nimport GenericParser from '../../internal/parser/generic_parser';\n\n/**\n * The AWSDKConsumerOverrideDetails class encapsulates any consumer specific details to be used with cart-based visits.\n * @property {String} mrnId the consumer's medical record number id.\n * @property {String} firstName the consumer's first name\n * @property {String} lastName the consumer's last name\n * @property {String} middleNameOrInitial the consumer's middle name or initial\n * @property {model.AWSDKGender} gender the consumer's gender\n * @property {String} email the consumer's email\n * @property {Date} dob the consumer's date of birth\n * @property {String} address1 the consumer's first address line\n * @property {String} address2 the consumer's second address line\n * @property {String} city the consumer's city\n * @property {model.AWSDKState} state the consumer's state\n * @property {String} zipCode the consumer's zip code\n * @property {String} phone the consumer's phone number\n * @property {String[]} brandings an Array of Strings representing a consumer's branding attributes.\n * @since 1.3.1\n */\nclass AWSDKConsumerOverrideDetails {\n  set mrnId(mrnId) {\n    this.__mrnId = mrnId;\n  }\n\n  get mrnId() {\n    return this.__mrnId;\n  }\n\n  set firstName(firstName) {\n    this.__firstName = firstName;\n  }\n\n  get firstName() {\n    return this.__firstName;\n  }\n\n  set lastName(lastName) {\n    this.__lastName = lastName;\n  }\n\n  get lastName() {\n    return this.__lastName;\n  }\n\n  set middleNameOrInitial(middleNameOrInitial) {\n    this.__middleNameOrInitial = middleNameOrInitial;\n  }\n\n  get middleNameOrInitial() {\n    return this.__middleNameOrInitial;\n  }\n\n  set gender(gender) {\n    this.__gender = gender;\n  }\n\n  get gender() {\n    return this.__gender;\n  }\n\n  set email(email) {\n    this.__email = email;\n  }\n\n  get email() {\n    return this.__email;\n  }\n\n  set dob(dob) {\n    this.__dob = dob;\n  }\n\n  get dob() {\n    return this.__dob;\n  }\n\n  set address1(address1) {\n    this.__address1 = address1;\n  }\n\n  get address1() {\n    return this.__address1;\n  }\n\n  set address2(address2) {\n    this.__address2 = address2;\n  }\n\n  get address2() {\n    return this.__address2;\n  }\n\n  set city(city) {\n    this.__city = city;\n  }\n\n  get city() {\n    return this.__city;\n  }\n\n  set state(state) {\n    this.__state = state;\n  }\n\n  get state() {\n    return this.__state;\n  }\n\n  set zipCode(zipCode) {\n    this.__zipCode = zipCode;\n  }\n\n  get zipCode() {\n    return this.__zipCode;\n  }\n\n  set phone(phone) {\n    this.__phone = phone;\n  }\n\n  get phone() {\n    return this.__phone;\n  }\n\n  /**\n   * @since 1.5.0\n   */\n  get brandings() {\n    return this.__brandings;\n  }\n\n  /**\n   * @since 1.5.0\n   */\n  set brandings(brandingArr) {\n    this.__brandings = brandingArr;\n  }\n\n  /**\n   * A string representing the gender identity key\n   * @type {string}\n   */\n  get genderIdentityKey() {\n    return this.__genderIdentityKey;\n  }\n\n  /**\n   * @since 2.5.0\n   */\n  set genderIdentityKey(key) {\n    this.__genderIdentityKey = key;\n  }\n\n  /**\n   * @private\n   */\n  __getAsRequestBody(systemConfiguration) {\n    let dob = null;\n    let genderIdentityKey = null;\n    if (this.__dob instanceof Date) {\n      dob = this.__dob.toISOString().split('T')[0];\n    }\n    if (systemConfiguration && systemConfiguration.genderSupportEnabled) {\n      genderIdentityKey = this.__genderIdentityKey;\n    }\n\n    return {\n      mrnId: this.__mrnId,\n      firstName: this.__firstName,\n      lastName: this.__lastName,\n      middleName: this.__middleNameOrInitial,\n      gender: this.__gender && GenericParser.parseAndConvertEnumValue(this.__gender),\n      email: this.__email,\n      dob,\n      genderIdentityKey,\n      address1: this.__address1,\n      address2: this.__address2,\n      city: this.__city,\n      state: this.__state && this.__state.code,\n      zipCode: this.__zipCode,\n      phone: this.__phone,\n      brandings: this.__brandings,\n    };\n  }\n}\n\n\nexport default AWSDKConsumerOverrideDetails;\n","/*!\r\n * American Well Consumer Web SDK\r\n *\r\n * Copyright © 2018 American Well.\r\n * All rights reserved.\r\n *\r\n * It is illegal to use, reproduce or distribute\r\n * any part of this Intellectual Property without\r\n * prior written authorization from American Well.\r\n */\r\n\r\n/**\r\n * Enum for AWSDKFirstAvailableStatus.\r\n * @readonly\r\n * @enum {string}\r\n * @since 1.2.0\r\n */\r\nconst AWSDKFirstAvailableStatus = {\r\n  /**\r\n   * The task has started, but no providers have been contacted yet.\r\n   */\r\n  CREATED: 'CREATED',\r\n\r\n  /**\r\n   * Awaiting permission from the consumer to contact a provider.\r\n   */\r\n  AWAITING_CONTACT_PERMISSION: 'AWAITING_CONTACT_PERMISSION',\r\n\r\n  /**\r\n   * We're contacting a provider and awaiting a response.\r\n   */\r\n  CONTACTING_PROVIDER: 'CONTACTING_PROVIDER',\r\n\r\n  /**\r\n   * The provider has accepted the consumer for a conversation. The consumer has a finite time to respond.\r\n   */\r\n  PROVIDER_ACCEPTED: 'PROVIDER_ACCEPTED',\r\n\r\n  /**\r\n   * The consumer has acquired a waiting room entry ticket for a provider who accepted them for a conversation.\r\n   */\r\n  TICKET_ACQUIRED: 'TICKET_ACQUIRED',\r\n\r\n  /**\r\n   * All eligible providers have been contacted, at least one has not responded, and we are allowing extra time\r\n   * for a response.\r\n   */\r\n  COOL_DOWN: 'COOL_DOWN',\r\n\r\n  /**\r\n   * There are no candidate providers left to be contacted.\r\n   */\r\n  PROVIDER_LIST_EXHAUSTED: 'PROVIDER_LIST_EXHAUSTED',\r\n};\r\nObject.freeze(AWSDKFirstAvailableStatus);\r\nexport default AWSDKFirstAvailableStatus;\r\n","/*!\r\n * American Well Consumer Web SDK\r\n *\r\n * Copyright (c) 2018 American Well.\r\n * All rights reserved.\r\n *\r\n * It is illegal to use, reproduce or distribute\r\n * any part of this Intellectual Property without\r\n * prior written authorization from American Well.\r\n */\r\n\r\nimport AWSDKProvider from '../provider/awsdk_provider';\r\nimport GenericParser from '../../internal/parser/generic_parser';\r\nimport AWSDKDataObject from '../awsdk_dataobject';\r\nimport Util from '../../internal/util/util';\r\nimport AWSDKFirstAvailableStatus from './awsdk_first_available_status';\r\n\r\n/**\r\n * Encompasses data associated with a {@link model.AWSDKConsumer}'s request for a first-available visit\r\n * @property {model.AWSDKFirstAvailableStatus} status the status of the first available search\r\n * @property {model.AWSDKProvider} provider the {@link model.AWSDKProvider} that has accepted the consumer's request, if any\r\n * @property {Number} firstAvailableProviderAskCount the number of providers involved in the first available search\r\n * @property {Boolean} isMatchmaking whether the first-available request is the result of matchmaking\r\n * @property {Date} firstAvailableSearchStartTime when the first available search was started\r\n * @property {Date} firstAvailableSearchEndTime when the first available search completed\r\n\r\n * @since 1.1.0\r\n * @extends model.AWSDKDataObject\r\n */\r\nclass AWSDKFirstAvailableData extends AWSDKDataObject {\r\n  get status() {\r\n    return GenericParser.parseEnum(this.__data.status, AWSDKFirstAvailableStatus);\r\n  }\r\n\r\n  get provider() {\r\n    return GenericParser.parseObject(this.__data.provider, AWSDKProvider);\r\n  }\r\n\r\n  get firstAvailableProviderAskCount() {\r\n    return this.__data ? this.__data.firstAvailableProviderAskCount : null;\r\n  }\r\n\r\n  get isMatchmaking() {\r\n    return GenericParser.parseBoolean(this.__data.matchmaking);\r\n  }\r\n\r\n  get firstAvailableSearchStartTime() {\r\n    return this.__data.firstAvailableSearchStartTime;\r\n  }\r\n\r\n  getFormattedStartTime() {\r\n    return this.__data.firstAvailableSearchStartTime ? Util.formatISODateTime(this.__data.firstAvailableSearchStartTime) : '';\r\n  }\r\n\r\n  set firstAvailableSearchStartTime(firstAvailableSearchStartTime) {\r\n    this.__data.firstAvailableSearchStartTime = firstAvailableSearchStartTime;\r\n  }\r\n\r\n  get firstAvailableSearchEndTime() {\r\n    return this.__data.firstAvailableSearchEndTime;\r\n  }\r\n\r\n  getFormattedEndTime() {\r\n    return this.__data.firstAvailableSearchEndTime ? Util.formatISODateTime(this.__data.firstAvailableSearchEndTime) : '';\r\n  }\r\n\r\n  set firstAvailableSearchEndTime(firstAvailableSearchEndTime) {\r\n    this.__data.firstAvailableSearchEndTime = firstAvailableSearchEndTime;\r\n  }\r\n}\r\n\r\nexport default AWSDKFirstAvailableData;\r\n","/*!\r\n * American Well Consumer Web SDK\r\n *\r\n * Copyright © 2018 American Well.\r\n * All rights reserved.\r\n *\r\n * It is illegal to use, reproduce or distribute\r\n * any part of this Intellectual Property without\r\n * prior written authorization from American Well.\r\n */\r\n\r\n/**\r\n * Enum for AWSDKConsumerInitiatedIVRStatus.\r\n * @readonly\r\n * @enum {string}\r\n * @since 1.2.0\r\n */\r\nconst AWSDKConsumerInitiatedIVRStatus = {\r\n  /**\r\n   * Consumer chose to initiate IVR callback\r\n   */\r\n  IVR_REQUESTED: 'IVR_REQUESTED',\r\n  /**\r\n   * The IVR request has timed out\r\n   */\r\n  IVR_TIMEOUT: 'IVR_TIMEOUT',\r\n  /**\r\n   * Set when outdial request is sent to IVR\r\n   */\r\n  IVR_DIALING_CONSUMER: 'IVR_DIALING_CONSUMER',\r\n  /**\r\n   * Consumer didn't answer or answered and didn't enter DTMF (Dual-tone multi-frequency) (I.E.\r\n   * pressed a key on the telephone keypad).\r\n   */\r\n  IVR_CONSUMER_UNREACHABLE: 'IVR_CONSUMER_UNREACHABLE',\r\n  /**\r\n   * Consumer has opted-out of joining the IVR call after an attempt to establish this call has\r\n   * already failed.\r\n   */\r\n  IVR_CONSUMER_FAILED: 'IVR_CONSUMER_FAILED',\r\n  /**\r\n   * Consumer has successfully connected to IVR and is now attempting to reach out to the provider.\r\n   */\r\n  IVR_DIALING_PROVIDER: 'IVR_DIALING_PROVIDER',\r\n  /**\r\n   * Provider didn't answer or answered and didn't enter DTMF (Dual-tone multi-frequency) (I.E.\r\n   * pressed a key on the telephone keypad).\r\n   */\r\n  IVR_PROVIDER_UNREACHABLE: 'IVR_PROVIDER_UNREACHABLE',\r\n  /**\r\n   * Provider has opted-out of joining the IVR call\r\n   */\r\n  IVR_PROVIDER_FAILED: 'IVR_PROVIDER_FAILED',\r\n  /**\r\n   * Both Users Have Successfully Connected\r\n   */\r\n  IVR_CONNECTED: 'IVR_CONNECTED',\r\n};\r\nObject.freeze(AWSDKConsumerInitiatedIVRStatus);\r\nexport default AWSDKConsumerInitiatedIVRStatus;\r\n","/*!\r\n * American Well Consumer Web SDK\r\n *\r\n * Copyright (c) 2017 American Well.\r\n * All rights reserved.\r\n *\r\n * It is illegal to use, reproduce or distribute\r\n * any part of this Intellectual Property without\r\n * prior written authorization from American Well.\r\n */\r\n\r\nimport AWSDKDataObject from '../awsdk_dataobject';\r\nimport GenericParser from '../../internal/parser/generic_parser';\r\n\r\n/**\r\n * The AWSDKConsumerFeedbackQuestion class represents a single Q&A that the {@link model.AWSDKProvider|AWSDKProvider} displays to the {@link model.AWSDKConsumer|AWSDKConsumer} <br>\r\n * during the Consumer's visit summary review.\r\n * @property {Boolean} show boolean true if should show the feedback question, false otherwise\r\n * @property {String} questionText the question to pose to the consumer\r\n * @property {String[]} responseOptions an array of {@link String} representing response options to the question above\r\n * @extends model.AWSDKDataObject\r\n */\r\nclass AWSDKConsumerFeedbackQuestion extends AWSDKDataObject {\r\n  get show() {\r\n    return GenericParser.parseBoolean(this.__data.show);\r\n  }\r\n\r\n  get questionText() {\r\n    return this.__data.questionText;\r\n  }\r\n\r\n  get responseOptions() {\r\n    const respOptions = this.__data.responseOptions;\r\n    if (respOptions == null || !(respOptions instanceof Array)) {\r\n      return null;\r\n    }\r\n    return respOptions;\r\n  }\r\n}\r\nexport default AWSDKConsumerFeedbackQuestion;\r\n","/*!\r\n * American Well Consumer Web SDK\r\n *\r\n * Copyright (c) 2017 American Well.\r\n * All rights reserved.\r\n *\r\n * It is illegal to use, reproduce or distribute\r\n * any part of this Intellectual Property without\r\n * prior written authorization from American Well.\r\n */\r\nimport AWSDKDataObject from '../awsdk_dataobject';\r\n\r\n/**\r\n * The AWSDKVisitExtension class represents a visit extension object\r\n * @property {Number} extensionCost the cost amount of this extension\r\n * @property {Number} extensionTime the amount of time to the visit this extension represents\r\n * @property {String} href the link url to this extension object\r\n * @property {String} engagementExtendedType string representation of an enum with values: NONE, WITH_NO_COPAY, WITH_COPAY.\r\n * @extends model.AWSDKDataObject\r\n */\r\nclass AWSDKVisitExtension extends AWSDKDataObject {\r\n  get extensionCost() {\r\n    return this.__data.extensionCost;\r\n  }\r\n\r\n  get extensionTime() {\r\n    return this.__data.extensionTime;\r\n  }\r\n\r\n  get href() {\r\n    return this.__data.href;\r\n  }\r\n\r\n  get engagementExtendedType() {\r\n    return this.__data.engagementExtendedType;\r\n  }\r\n}\r\nexport default AWSDKVisitExtension;\r\n","/*!\n * American Well Consumer Web SDK\n *\n * Copyright (c) 2019 American Well.\n * All rights reserved.\n *\n * It is illegal to use, reproduce or distribute\n * any part of this Intellectual Property without\n * prior written authorization from American Well.\n */\n\nimport GenericParser from '../../parser/generic_parser';\nimport AWSDKDataObject from '../../../model/awsdk_dataobject';\n\n/**\n * Basic conference state metrics.\n * @property {boolean} hasAProviderAndConsumerConnected TRUE if at least one provider and one consumer are connected.\n * @property {number} consumersConnected the number of consumers connected to the visit.\n * @property {number} facilitatorsConnected the number of facilitators connected to the visit.\n * @property {number} providersConnected the number of providers connected to the visit.\n * @property {number} translatorsConnected the number of translators connected to the visit.\n * @property {number} disconnected the number of participants disconnected.\n * @property {number} failed the number of participants who failed to connect.\n * @property {number} inflightCount the number of participants that are trying to connect to the conference.\n * @property {boolean} allConnected TRUE if all participants are connected.\n * @private\n * @since 2.0.0\n */\nclass AWSDKConferenceMetrics extends AWSDKDataObject {\n  get hasAProviderAndConsumerConnected() {\n    return GenericParser.parseBoolean(this.__data.hasAProviderAndMemberConnected);\n  }\n\n  get consumersConnected() {\n    return this.__data.membersConnected;\n  }\n\n  get facilitatorsConnected() {\n    return this.__data.facilitatorsConnected;\n  }\n\n  get providersConnected() {\n    return this.__data.providersConnected;\n  }\n\n  get translatorsConnected() {\n    return this.__data.translatorsConnected;\n  }\n\n  get disconnected() {\n    return this.__data.disconnected;\n  }\n\n  get failed() {\n    return this.__data.failed;\n  }\n\n  get inflightCount() {\n    return this.__data.inflightCount;\n  }\n\n  get allConnected() {\n    return GenericParser.parseBoolean(this.__data.allConnected);\n  }\n}\nexport default AWSDKConferenceMetrics;\n","/*!\n * American Well Consumer Web SDK\n *\n * Copyright (c) 2019 American Well.\n * All rights reserved.\n *\n * It is illegal to use, reproduce or distribute\n * any part of this Intellectual Property without\n * prior written authorization from American Well.\n */\n\n/**\n * Enum for AWSDKConferenceModalityType.\n * @since 2.0.0\n * @enum {string}\n * @readonly\n * @private\n */\nconst AWSDKConferenceModalityType = {\n  /**\n   * The support phone modality type\n   */\n  SUPPORT_PHONE: 'SUPPORT_PHONE',\n  /**\n   * The outbound phone modality type\n   */\n  OUTBOUND_PHONE: 'OUTBOUND_PHONE',\n  /**\n   * The inbound phone modality type\n   */\n  INBOUND_PHONE: 'INBOUND_PHONE',\n  /**\n   * The test outbound phone modality type\n   */\n  TEST_OUTBOUND_PHONE: 'TEST_OUTBOUND_PHONE',\n  /**\n   * The test inbound phone modality type\n   */\n  TEST_INBOUND_PHONE: 'TEST_INBOUND_PHONE',\n  /**\n   * The pexip webrtc modality type\n   */\n  PEXIP_RTC_VIDEO: 'PEXIP_RTC_VIDEO',\n  /**\n   * The test video modality type\n   */\n  TEST_VIDEO: 'TEST_VIDEO',\n  /**\n   * The chat modality type\n   */\n  CHAT: 'CHAT',\n};\nObject.freeze(AWSDKConferenceModalityType);\nexport default AWSDKConferenceModalityType;\n","/*!\n * American Well Consumer Web SDK\n *\n * Copyright (c) 2019 American Well.\n * All rights reserved.\n *\n * It is illegal to use, reproduce or distribute\n * any part of this Intellectual Property without\n * prior written authorization from American Well.\n */\n\n/**\n * Enum for AWSDKConferenceRole.\n * @since 2.0.0\n * @enum {string}\n * @readonly\n * @private\n */\nconst AWSDKConferenceRole = {\n  /**\n   * The test conference role\n   */\n  TESTER: 'TESTER',\n  /**\n   * The consumer conference role\n   */\n  CONSUMER: 'CONSUMER',\n  /**\n   * The provider conference role\n   */\n  PROVIDER: 'PROVIDER',\n  /**\n   * The translator conference role\n   */\n  TRANSLATOR: 'TRANSLATOR',\n  /**\n   * The facilitator conference role\n   */\n  FACILITATOR: 'FACILITATOR',\n  /**\n   * The consumer guest conference role\n   */\n  CONSUMER_GUEST: 'CONSUMER_GUEST',\n  /**\n   * The provider guest conference role\n   */\n  PROVIDER_GUEST: 'PROVIDER_GUEST',\n};\nObject.freeze(AWSDKConferenceRole);\nexport default AWSDKConferenceRole;\n","/*!\n * American Well Consumer Web SDK\n *\n * Copyright (c) 2019 American Well.\n * All rights reserved.\n *\n * It is illegal to use, reproduce or distribute\n * any part of this Intellectual Property without\n * prior written authorization from American Well.\n */\n\nimport GenericParser from '../../parser/generic_parser';\nimport AWSDKDataObject from '../../../model/awsdk_dataobject';\nimport AWSDKConferenceRole from './awsdk_conference_role';\nimport AWSDKConferenceModalityType from './awsdk_conference_modality_type';\n\n/**\n * A participant in the {@link model.AWSDKConferenceDetails|AWSDKConferenceDetails}. This could be a consumer, provider, facilitator etc.\n *\n * @property {model.AWSDKConferenceRole} role The role the participant is taking in this conference.\n * @property {Date} addDate When the participant joined the conference.\n * @property {boolean} joined Indicating whether the participant is currently in the conference.\n * @property {string} vendorId The unique vendor id (id provided by the vendor) for this user in the conference.\n * @property {model.ConferenceModalityType} modalityType What type of visit this conference represents.\n * @property {string=} userAgent The browser/device details for this participant.\n * @since 2.0.0\n * @private\n */\nclass AWSDKConferenceParticipant extends AWSDKDataObject {\n  get role() {\n    return GenericParser.parseEnum(this.__data.role, AWSDKConferenceRole);\n  }\n\n  get addDate() {\n    return GenericParser.parseDate(this.__data.addDate);\n  }\n\n  get joined() {\n    return GenericParser.parseBoolean(this.__data.joined);\n  }\n\n  get vendorId() {\n    return this.__data.vendorId;\n  }\n\n  get modalityType() {\n    return GenericParser.parseEnum(this.__data.modalityType, AWSDKConferenceModalityType);\n  }\n\n  get userAgent() {\n    return this.__data.userAgent;\n  }\n\n  get status() {\n    return this.__data.status;\n  }\n\n  get ivr() {\n    return GenericParser.parseBoolean(this.__data.ivr);\n  }\n}\nexport default AWSDKConferenceParticipant;\n","/*!\n * American Well Consumer Web SDK\n *\n * Copyright (c) 2019 American Well.\n * All rights reserved.\n *\n * It is illegal to use, reproduce or distribute\n * any part of this Intellectual Property without\n * prior written authorization from American Well.\n */\n\nimport AWSDKEntity from '../../../model/awsdk_entity';\n\nimport GenericParser from '../../parser/generic_parser';\nimport AWSDKConferenceMetrics from './awsdk_conference_metrics';\nimport AWSDKConferenceModalityType from './awsdk_conference_modality_type';\nimport AWSDKConferenceParticipant from './awsdk_conference_participant';\n\n/**\n * Contains details video details for a telehealth visit.\n * @property {Date} addDate The date the the telehealth visit was started.\n * @property {number} accessCode The accessCode required for the telehealth visit.\n * @property {string} uuid Unique identifier for this telehealth visit.\n * @property {string} roomId The id for the telehealth visit room.\n * @property {string} serviceURL Url for the telehealth visit video service used.\n * @property {boolean} isActive Indicates if the telehealth visit is currently active.\n * @property {model.AWSDKConferenceMetrics} metrics the {@link model.AWSDKConferenceMetrics|AWSDKConferenceMetrics} associated with the conference.\n * @property {model.AWSDKConferenceModalityType} selectedModalityType the {@link model.AWSDKConferenceModalityType|AWSDKConferenceModalityType} of the conference.\n * @property {model.AWSDKConferenceParticipant[]} participants the list of {@link model.AWSDKConferenceParticipant|AWSDKConferenceParticipant} in the conference.\n * @private\n * @extends model.AWSDKEntity\n */\nclass AWSDKConferenceDetails extends AWSDKEntity {\n  get addDate() {\n    return GenericParser.parseDate(this.__data.addDate);\n  }\n\n  get accessCode() {\n    return this.__data.accessCode;\n  }\n\n  get uuid() {\n    return this.__data.uuid;\n  }\n\n  get roomId() {\n    return this.__data.roomId;\n  }\n\n  get serviceURL() {\n    return this.__data.serviceURL;\n  }\n\n  get isActive() {\n    return GenericParser.parseBoolean(this.__data.isActive);\n  }\n\n  get metrics() {\n    return GenericParser.parseObject(this.__data.metrics, AWSDKConferenceMetrics);\n  }\n\n  get selectedModalityType() {\n    return GenericParser.parseEnum(this.__data.selectedModalityType, AWSDKConferenceModalityType);\n  }\n\n  get participants() {\n    return (Array.isArray(this.__data.participants) && this.__data.participants.map(item => GenericParser.parseObject(item, AWSDKConferenceParticipant))) || [];\n  }\n}\nexport default AWSDKConferenceDetails;\n","/*!\r\n * American Well Consumer Web SDK\r\n *\r\n * Copyright © 2019 American Well.\r\n * All rights reserved.\r\n *\r\n * It is illegal to use, reproduce or distribute\r\n * any part of this Intellectual Property without\r\n * prior written authorization from American Well.\r\n */\r\n\r\n/**\r\n * Enum for AWSDKConnectionType.\r\n * @readonly\r\n * @enum {string}\r\n * @since 2.0.0\r\n */\r\nconst AWSDKConnectionType = {\r\n  /**\r\n   * None (Default).\r\n   */\r\n  NONE: 'NONE',\r\n\r\n  /**\r\n   * Mobile device connection.\r\n   */\r\n  MOBILE: 'MOBILE',\r\n\r\n  /**\r\n   * Multiple sessions were detected.\r\n   */\r\n  MULTIPLE: 'MULTIPLE',\r\n\r\n  /**\r\n   * Only Phone.\r\n   */\r\n  PHONE: 'PHONE',\r\n\r\n  /**\r\n   * Only Web. A visit may be set to WEB_AND_PHONE once a consumer and provider enter a visit\r\n   * and add phone to the conversation\r\n   */\r\n  WEB: 'WEB',\r\n\r\n  /**\r\n   * Web video primary with Phone secondary. (Web-Add-Phone)\r\n   */\r\n  WEB_AND_PHONE: 'WEB_AND_PHONE',\r\n\r\n  /**\r\n   * web SDK connection.\r\n   */\r\n  WEB_SDK: 'WEB_SDK',\r\n\r\n  /**\r\n   * web SDK primary connection with Phone secondary. (Web-Add-Phone)\r\n   */\r\n  WEB_SDK_AND_PHONE: 'WEB_SDK_AND_PHONE',\r\n\r\n  /**\r\n   * Only Kiosk.\r\n   */\r\n  KIOSK: 'KIOSK',\r\n\r\n  /**\r\n   * Only Telemed Tablet.\r\n   * */\r\n  TELEMED: 'TELEMED',\r\n};\r\nObject.freeze(AWSDKConnectionType);\r\nexport default AWSDKConnectionType;\r\n\r\n","/*!\n * Amwell Consumer Web SDK\n *\n * Copyright © 2020 Amwell.\n * All rights reserved.\n *\n * It is illegal to use, reproduce or distribute\n * any part of this Intellectual Property without\n * prior written authorization from Amwell.\n */\n\n/**\n * Enum for AWSDKIntegrationContext.\n * @readonly\n * @enum {string}\n * @since 2.8.0\n */\nconst AWSDKIntegrationContext = {\n  /**\n   * The Orbita integration context\n   */\n  ORBITA: 'ORBITA',\n};\n\nObject.freeze(AWSDKIntegrationContext);\nexport default AWSDKIntegrationContext;\n","/*!\n * Amwell Consumer Web SDK\n *\n * Copyright © 2020 Amwell.\n * All rights reserved.\n *\n * It is illegal to use, reproduce or distribute\n * any part of this Intellectual Property without\n * prior written authorization from Amwell.\n */\n\n/**\n * Enum for AWSDKIntegrationStatus.\n * @readonly\n * @enum {string}\n * @since 2.8.0\n */\nconst AWSDKIntegrationStatus = {\n  /**\n   * The integration is added but no action has been taken\n   */\n  QUEUED: 'QUEUED',\n  /**\n   * The integration is ready to be started\n   */\n  READY: 'READY',\n  /**\n   * Interaction with this integration is still in progress\n   */\n  INPROGRESS: 'INPROGRESS',\n  /**\n   * The interaction with this integration is completed\n   */\n  COMPLETED: 'COMPLETED',\n  /**\n   * The integration was bailed on by the consumer\n   */\n  BAILED: 'BAILED',\n  /**\n   * The integration was interrupted\n   */\n  INTERRUPTED: 'INTERRUPTED',\n  /**\n   * There was an error when communicating with the integration\n   */\n  ERROR: 'ERROR',\n  /**\n   * The integration is reset and re-queued\n   */\n  RE_QUEUED: 'RE_QUEUED',\n};\n\nObject.freeze(AWSDKIntegrationStatus);\nexport default AWSDKIntegrationStatus;\n","/*!\n * Amwell Consumer Web SDK\n *\n * Copyright © 2020 Amwell.\n * All rights reserved.\n *\n * It is illegal to use, reproduce or distribute\n * any part of this Intellectual Property without\n * prior written authorization from Amwell.\n */\nimport AWSDKEntity from '../awsdk_entity';\nimport GenericParser from '../../internal/parser/generic_parser';\nimport AWSDKIntegrationContext from './awsdk_integration_context';\nimport AWSDKIntegrationStatus from './awsdk_integration_status';\n\n\n/**\n *\n * An integration between the Amwell telehealth platform and a third party context/platform\n *\n * @property {model.AWSDKIntegrationContext} context the context this integration is for\n * @property {String} contextIdentifier the identifier for the context\n * @property {model.AWSDKIntegrationStatus} status the status of the integration\n * @property {Object} config a key value map of configuration for this integration\n *\n * @since 2.8.0\n * @extends model.AWSDKEntity\n */\nclass AWSDKIntegration extends AWSDKEntity {\n  get context() {\n    return GenericParser.parseEnum(this.__data.context, AWSDKIntegrationContext);\n  }\n  get contextIdentifier() {\n    return this.__data.contextIdentifier;\n  }\n  get status() {\n    return GenericParser.parseEnum(this.__data.status, AWSDKIntegrationStatus);\n  }\n  get config() {\n    return this.__data.config;\n  }\n}\n\nexport default AWSDKIntegration;\n","/*!\r\n * American Well Consumer Web SDK\r\n *\r\n * Copyright (c) 2017 American Well.\r\n * All rights reserved.\r\n *\r\n * It is illegal to use, reproduce or distribute\r\n * any part of this Intellectual Property without\r\n * prior written authorization from American Well.\r\n */\r\n\r\nimport AWCoreSDKVideoParticipantType from 'awcoresdk/lib/awcoresdk_video_participant_type';\r\nimport deprecated from 'awcoresdk/lib/util/deprecated';\r\n\r\nimport AWSDKEntity from '../awsdk_entity';\r\nimport AWSDKConsumer from '../consumer/awsdk_consumer';\r\nimport AWSDKProvider from '../provider/awsdk_provider';\r\nimport AWSDKVisitCost from './awsdk_visit_cost';\r\nimport GenericParser from '../../internal/parser/generic_parser';\r\nimport AWSDKChatReport from '../../model/chat/awsdk_chat_report';\r\nimport AWSDKFirstAvailableData from './awsdk_first_available_data';\r\nimport AWSDKConsumerInitiatedIVRStatus from './awsdk_consumer_initiated_ivr_status';\r\nimport AWSDKDisposition from './awsdk_disposition';\r\nimport AWSDKEndReason from './awsdk_end_reason';\r\nimport AWSDKServerLogParam from '../../internal/model/awsdk_server_log_param';\r\nimport AWSDKError from '../../error/awsdk_error';\r\nimport AWSDKConsumerFeedbackQuestion from './awsdk_consumer_feedback_question';\r\nimport AWSDKVisitExtension from './awsdk_visit_extension';\r\nimport AWSDKModality from '../awsdk_modality';\r\nimport AWSDKConferenceDetails from '../../internal/model/conference/awsdk_conference_details';\r\nimport AWSDKProviderEntries from './awsdk_provider_entries';\r\nimport AWSDKConferenceRole from '../../internal/model/conference/awsdk_conference_role';\r\nimport AWSDKConnectionType from './awsdk_connection_type';\r\nimport AWSDKIntegration from '../integration/awsdk_integration';\r\nimport AWSDKIntegrationContext from '../integration/awsdk_integration_context';\r\n\r\n/**\r\n * The AWSDKVisit class represents the visit object itself.\r\n * @property {Number} timeRemaining the amount of time remaining (in minutes) in the visit or null\r\n * @property {Number} timeRemainingMilliseconds the amount of time remaining (in milliseconds) in the visit or null\r\n * @property {Boolean} hidePatientTimer boolean true if the patient's timer is to be hidden during visit\r\n * @property {Boolean} multiwayVideoEnabled boolean true if multiway video is enabled, false if not or null if no information exist\r\n * @property {model.AWSDKConsumerInitiatedIVRStatus} consumerInitiatedIVRStatus the state of a consumer initiated IVR\r\n * @property {Number} videoInvitesSent the number of video invites that were sent for this visit\r\n * @property {Number} patientsAheadOfYou the number of patients ahead of a consumer for a visit\r\n * @property {Boolean} isProviderForTransferEligibleForQuickTransfer boolean true if the provider for transfer is eligible for a quick transfer, false otherwise\r\n * @property {Boolean} isSuggestedProviderEligibleForQuickTransfer boolean true if the provider suggested for a transfer is eligible for quick transfer, false otherwise\r\n * @property {model.AWSDKChatReport} chatReport a report of the content of the chat between provider and consumer\r\n * @property {model.AWSDKProvider} providerForTransfer the Provider to be used for a transfer\r\n * @property {Number} ivrretryCount the number of times an interactive voice response (ivr) has been retried\r\n * @property {Boolean} paidExtensionOffered boolean true if a paid extension has been offered, false otherwise\r\n * @property {String} initiatorEngagementOverridePhone the consumer's preferred phone number for this visit\r\n * @property {string} formattedInitiatorEngagementOverridePhone the consumer's preferred formatted phone number for this visit\r\n * @property {model.AWSDKConnectionType} initiatorConnectionType the software the member is using to access the visit - When using the American Well Consumer Web SDK, this will always be either WEB_SDK or WEB_SDK_AND_PHONE @since 2.0.0\r\n * @property {model.AWSDKConnectionType} providerConnectionType the software the provider is using to access the visit @since 2.0.0\r\n * @property {model.AWSDKConsumer} consumer the consumer in this visit\r\n * @property {model.AWSDKConsumer} consumerProxy a dependent to this consumer\r\n * @property {model.AWSDKDisposition} disposition  the disposition of this visit object\r\n * @property {model.AWSDKEndReason} endReason the reason for ending the visit\r\n * @property {model.AWSDKProvider} providerProxy a proxy to the provider in this visit, such as an assistant\r\n * @property {String} sourceId the source id of the visit used to synchronize this visit record with an external system\r\n * @property {Boolean} providerSuggestedEnd boolean true if the provider suggested that the visit ended, false otherwise\r\n * @property {model.AWSDKProvider} assignedProvider the provider object for this visit\r\n * @property {Boolean} finished boolean true if the visit has finished, false otherwise\r\n * @property {Boolean} providerConnected boolean true if the provider has connected to the visit, false otherwise\r\n * @property {model.AWSDKProvider} suggestedProviderForTransfer the provider object representing the suggested provider to be transferred to\r\n * @property {Boolean} optionForFindFirstAvailableTransferAvailable TRUE if the option of transferring to a Find First Available provider has been suggested\r\n * @property {Boolean} possibleFirstAvailableTransferAcceptedByConsumer TRUE if the option of transferring to a Find First Available provider has been accepted\r\n * @property {String} href the link url to this visit object\r\n * @property {model.AWSDKVisitExtension} shortExtensionEntity an object representing a shortExtension for a visit\r\n * @property {model.AWSDKVisitExtension} longExtensionEntity an object representing a longExtension for a visit\r\n * @property {model.AWSDKVisitExtension} noExtensionEntity an object representing a non-extension for a visit\r\n * @property {model.AWSDKVisitCost} cost the cost of the visit\r\n * @property {Boolean} telehealthVideoStarted boolean true if telehealthVideo has started\r\n * @property {String} onDemandSpecialtyId id of the specialty in which this visit takes place, if any\r\n * @property {model.AWSDKFirstAvailableData} firstAvailableData the first-available data associated with this visit\r\n * @property {String[]} guestInvitationEmails a collection of emails of guests to invite to this visit\r\n * @property {model.AWSDKConsumerFeedbackQuestion} consumerFeedbackQuestion the question to be presented to consumer for feedback @since 1.4.0\r\n * @property {model.AWSDKModality} modality represents the modality associated with this visit @since 1.4.0\r\n * @property {String[]} invitedGuestEmails a collection of emails of invited guests for this visit @since 2.0.0\r\n * @property {model.AWSDKProviderEntries} providerEntries represents information entered by provider during visit: notes, diagnoses, prescriptions, etc. @since 2.0.0\r\n * @property {boolean} isUsingWebRTC TRUE if this visit is configured for webRTC @since 2.0.0\r\n * @property {Object} integrations a map of {@link model.AWSDKIntegrationContext} to {@link model.AWSDKIntegration} integrations for this visit @since 2.8.0\r\n * @property {boolean} tytoLiveStreamingEnabled  TRUE if this visit allows Tyto Live stream @since 2.6.0\r\n * @property {boolean} hideSwitchToPhone TRUE if the `Switch To Phone` button in the visit console should be hidden for the visit. @since 2.6.0\r\n * @extends model.AWSDKEntity\r\n */\r\nclass AWSDKVisit extends AWSDKEntity {\r\n  /**\r\n   * @deprecated please use AWSDKVisit.timeRemainingMilliseconds\r\n   */\r\n  get timeRemaining() {\r\n    deprecated('AWSDKVisit.timeRemaining', 'Use AWSDKVisit.timeRemainingMilliseconds instead', '3.X');\r\n    return GenericParser.parseObject(this.__data.timeRemaining, Number);\r\n  }\r\n\r\n  get timeRemainingMilliseconds() {\r\n    return GenericParser.parseObject(this.__data.timeRemainingMilliseconds, Number);\r\n  }\r\n\r\n  get consumerInitiatedIVRStatus() {\r\n    return GenericParser.parseEnum(this.__data.memberInitiatedIVRStatus, AWSDKConsumerInitiatedIVRStatus);\r\n  }\r\n\r\n  get hidePatientTimer() {\r\n    return GenericParser.parseBoolean(this.__data.hidePatientTimer);\r\n  }\r\n\r\n  get multiwayVideoEnabled() {\r\n    return GenericParser.parseBoolean(this.__data.multiwayVideoEnabled);\r\n  }\r\n\r\n  get videoInvitesSent() {\r\n    return this.__data.videoInvitesSent;\r\n  }\r\n\r\n  get patientsAheadOfYou() {\r\n    return this.__data.patientsAheadOfYou;\r\n  }\r\n\r\n  get isProviderForTransferEligibleForQuickTransfer() {\r\n    return GenericParser.parseBoolean(this.__data.isProviderForManualTransferEligibleForQuickTransfer);\r\n  }\r\n\r\n  get isSuggestedProviderEligibleForQuickTransfer() {\r\n    return GenericParser.parseBoolean(this.__data.isSuggestedProviderEligibleForQuickTransfer);\r\n  }\r\n\r\n  get chatReport() {\r\n    return GenericParser.parseObject(this.__data.chatReport, AWSDKChatReport);\r\n  }\r\n\r\n  get ivrretryCount() {\r\n    return this.__data.ivrretryCount;\r\n  }\r\n\r\n  get paidExtensionOffered() {\r\n    return GenericParser.parseBoolean(this.__data.paidExtensionOffered);\r\n  }\r\n\r\n  get consumer() {\r\n    const consumer = GenericParser.parseObject(this.__data.member, AWSDKConsumer);\r\n    if ((consumer != null) && this.__data.memberProxy) {\r\n      consumer.parent = GenericParser.parseObject(this.__data.memberProxy, AWSDKConsumer);\r\n    }\r\n    return consumer;\r\n  }\r\n\r\n  get disposition() {\r\n    return GenericParser.parseEnum(this.__data.disposition, AWSDKDisposition);\r\n  }\r\n\r\n  get endReason() {\r\n    return GenericParser.parseEnum(this.__data.endReason, AWSDKEndReason);\r\n  }\r\n\r\n  get providerSuggestedEnd() {\r\n    return GenericParser.parseBoolean(this.__data.providerSuggestedEnd);\r\n  }\r\n\r\n  get assignedProvider() {\r\n    return GenericParser.parseObject(this.__data.assignedProvider, AWSDKProvider);\r\n  }\r\n\r\n  set assignedProvider(provider) {\r\n    this.__data.assignedProvider = provider.__data;\r\n  }\r\n\r\n  get finished() {\r\n    return GenericParser.parseBoolean(this.__data.finished);\r\n  }\r\n\r\n  get providerConnected() {\r\n    return GenericParser.parseBoolean(this.__data.providerConnected);\r\n  }\r\n\r\n  get href() {\r\n    return this.__data.href;\r\n  }\r\n\r\n  get suggestedProviderForTransfer() {\r\n    return GenericParser.parseObject(this.__data.suggestedProviderForTransfer, AWSDKProvider);\r\n  }\r\n\r\n  get optionForFindFirstAvailableTransferAvailable() {\r\n    return GenericParser.parseBoolean(this.__data.suggestedProviderForAskMeTransfer);\r\n  }\r\n\r\n  get possibleFirstAvailableTransferAcceptedByConsumer() {\r\n    return GenericParser.parseBoolean(this.__data.possibleFirstAvailableTransferAcceptedByMember);\r\n  }\r\n\r\n  get providerForTransfer() {\r\n    return GenericParser.parseObject(this.__data.providerForManualTransfer, AWSDKProvider);\r\n  }\r\n\r\n  get initiatorEngagementOverridePhone() {\r\n    return this.__data.initiatorEngagementOverridePhone;\r\n  }\r\n\r\n  get formattedInitiatorEngagementOverridePhone() {\r\n    return this.__data.formattedInitiatorEngagementOverridePhone;\r\n  }\r\n\r\n  get initiatorConnectionType() {\r\n    return GenericParser.parseEnum(this.__data.initiatorConnectionType, AWSDKConnectionType);\r\n  }\r\n\r\n  get providerConnectionType() {\r\n    return GenericParser.parseEnum(this.__data.providerConnectionType, AWSDKConnectionType);\r\n  }\r\n\r\n  get consumerProxy() {\r\n    return GenericParser.parseObject(this.__data.memberProxy, AWSDKConsumer);\r\n  }\r\n\r\n  get providerProxy() {\r\n    return GenericParser.parseObject(this.__data.providerProxy, AWSDKProvider);\r\n  }\r\n\r\n  get sourceId() {\r\n    return this.__data.sourceId;\r\n  }\r\n\r\n  get noExtensionEntity() {\r\n    return GenericParser.parseObject(this.__data.noExtensionEntity, AWSDKVisitExtension);\r\n  }\r\n\r\n  get shortExtensionEntity() {\r\n    return GenericParser.parseObject(this.__data.shortExtensionEntity, AWSDKVisitExtension);\r\n  }\r\n\r\n  get longExtensionEntity() {\r\n    return GenericParser.parseObject(this.__data.longExtensionEntity, AWSDKVisitExtension);\r\n  }\r\n\r\n  get cost() {\r\n    return GenericParser.parseObject(this.__data.cost, AWSDKVisitCost);\r\n  }\r\n\r\n  set cost(cost) {\r\n    this.__data.cost = cost && cost.__data;\r\n  }\r\n\r\n  get telehealthVideoStarted() {\r\n    return GenericParser.parseBoolean(this.__data.consumerElectronStarted);\r\n  }\r\n\r\n  get canTransfer() {\r\n    const declineAndTransfer = this.disposition === AWSDKDisposition.Declined && (this.endReason === AWSDKEndReason.PROVIDER_DECLINE_AND_TRANSFER || this.endReason === AWSDKEndReason.ASSISTANT_DECLINE_AND_TRANSFER);\r\n    const suggestedTransfer = this.disposition === AWSDKDisposition.ConsumerCanceled && this.endReason === AWSDKEndReason.CONSUMER_TRANSFER;\r\n    const postVisitTransfer = (this.disposition === AWSDKDisposition.Completed || this.disposition === AWSDKDisposition.ProviderWrapup);\r\n    return this.providerForTransfer != null && (declineAndTransfer || suggestedTransfer || postVisitTransfer);\r\n  }\r\n\r\n  get onDemandSpecialtyId() {\r\n    return this.__data.onDemandSpecialtyId;\r\n  }\r\n\r\n  set onDemandSpecialtyId(onDemandSpecialtyId) {\r\n    this.__data.onDemandSpecialtyId = onDemandSpecialtyId;\r\n  }\r\n  // @internal\r\n  get isMatchmaking() {\r\n    if (this.firstAvailableData != null) {\r\n      return this.firstAvailableData.isMatchmaking;\r\n    }\r\n    return this.__data.isMatchmaking;\r\n  }\r\n  // @internal\r\n  set isMatchmaking(isMatchmaking) {\r\n    this.__data.isMatchmaking = isMatchmaking;\r\n  }\r\n\r\n  get firstAvailableData() {\r\n    return this.__data.firstAvailableData ? GenericParser.parseObject(this.__data.firstAvailableData, AWSDKFirstAvailableData) : null;\r\n  }\r\n\r\n  /**\r\n   * Used for WebRTC visits to find the visit's representation of a participant based on the UUID provided by the client-side WebRTC library.\r\n   *\r\n   * @param {string} uuid The unique identifier for this participant in the conference.\r\n   * @private\r\n   * @internal\r\n   * @since 2.0.0\r\n   * @returns {Object} The user associated with the uuid (Provider or Consumer). undefined if the participant cannot be found.\r\n   */\r\n  participantById(uuid) {\r\n    if (this.conferenceDetails) {\r\n      const foundParticipant = this.conferenceDetails.participants.find(participant => participant.vendorId === uuid);\r\n      if (foundParticipant) {\r\n        if (foundParticipant.role === AWSDKConferenceRole.PROVIDER) {\r\n          return { type: AWCoreSDKVideoParticipantType.PROVIDER, user: this.assignedProvider };\r\n        }\r\n        return { type: AWCoreSDKVideoParticipantType.CONSUMER, user: this.consumer };\r\n      }\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n  /**\r\n   * A convenience method to get a {@link AWSDKServerLogParam} object\r\n   * @returns {Object} the server log param object\r\n   * @since 1.3.0\r\n   */\r\n  getServerLogParam() {\r\n    return this.consumer ? new AWSDKServerLogParam(this.consumer.id.encryptedId, 'member') : null;\r\n  }\r\n\r\n  set firstAvailableData(firstAvailableData) {\r\n    this.__data.firstAvailableData = firstAvailableData;\r\n  }\r\n\r\n  /**\r\n   * @since 1.3.0\r\n   */\r\n  get guestInvitationEmails() {\r\n    return this.__data.guestInvitationEmails;\r\n  }\r\n  /**\r\n   * @since 1.3.0\r\n   */\r\n  set guestInvitationEmails(guestInvitationEmails) {\r\n    if (!Array.isArray(guestInvitationEmails) || guestInvitationEmails.length === 0) {\r\n      throw AWSDKError.AWSDKIllegalArgument('guestInvitationEmails argument is not a non-empty array');\r\n    }\r\n    this.__data.guestInvitationEmails = guestInvitationEmails;\r\n  }\r\n\r\n  /**\r\n   * @since 1.4.0\r\n   */\r\n  get consumerFeedbackQuestion() {\r\n    return GenericParser.parseObject(this.__data.consumerFeedbackQuestion, AWSDKConsumerFeedbackQuestion);\r\n  }\r\n\r\n  /**\r\n   * @since 1.4.0\r\n   * @type {model.AWSDKModality}\r\n   */\r\n  get modality() {\r\n    return GenericParser.parseObject(this.__data.modality, AWSDKModality);\r\n  }\r\n\r\n  /**\r\n   * A collection of emails for guest(s) already invited to this visit\r\n   * @since 2.0.0\r\n   */\r\n  get invitedGuestEmails() {\r\n    return this.__data.invitedGuestEmails || [];\r\n  }\r\n\r\n  /**\r\n   * TRUE if this visit is configured for WebRTC\r\n   * @since 2.0.0\r\n   * @type {boolean}\r\n   */\r\n  get isUsingWebRTC() {\r\n    return this.__data.conference && this.__data.conference.selectedModalityType.includes('RTC');\r\n  }\r\n\r\n  /**\r\n   * Conference details for WebRTC.\r\n   * @private\r\n   * @since 2.0.0\r\n   */\r\n  get conferenceDetails() {\r\n    return this.__data.conference ? GenericParser.parseObject(this.__data.conference, AWSDKConferenceDetails) : undefined;\r\n  }\r\n\r\n  /**\r\n   * Represents information entered by provider during visit: notes, diagnoses, prescriptions, etc.\r\n   * @type {AWSDKProviderEntries}\r\n   * @since 2.0.0\r\n   */\r\n  get providerEntries() {\r\n    return this.__data.providerEntries ? GenericParser.parseObject(this.__data.providerEntries, AWSDKProviderEntries) : null;\r\n  }\r\n\r\n  /**\r\n   * TRUE if this visit allows adding phone\r\n   * @since 2.0.0\r\n   * @type {boolean}\r\n   */\r\n  get allowsVisitAddPhone() {\r\n    return GenericParser.parseBoolean(this.__data.allowsVisitAddPhone);\r\n  }\r\n\r\n  /**\r\n   * TRUE if this visit allows chatting via text with the provider\r\n   *\r\n   * @since 2.2.0\r\n   * @type {boolean}\r\n   */\r\n  get allowsChatWithProvider() {\r\n    return this.providerConnectionType !== AWSDKConnectionType.MOBILE\r\n          && this.providerConnectionType !== AWSDKConnectionType.PHONE;\r\n  }\r\n\r\n  /**\r\n   * A map of {@link model.AWSDKIntegrationContext} to {@link model.AWSDKIntegration}\r\n   *\r\n   * @since 2.8.0\r\n   * @type {object}\r\n   */\r\n  get integrations() {\r\n    const integration = {};\r\n    if (this.__data.integrations) {\r\n      Object.entries(this.__data.integrations).forEach(([key, value]) => {\r\n        integration[GenericParser.parseEnum(key, AWSDKIntegrationContext)] = GenericParser.parseObject(value, AWSDKIntegration);\r\n      });\r\n    }\r\n    return integration;\r\n  }\r\n\r\n  /**\r\n    * TRUE if this visit allows Tyto Live stream\r\n    * Used to determine when to use the Tyto Live stream functionality during the visit\r\n    *\r\n    * @since 2.6.0\r\n    * @type {boolean}\r\n    */\r\n  get tytoLiveStreamingEnabled() {\r\n    return GenericParser.parseBoolean(this.__data.tytoLiveStreamingEnabled);\r\n  }\r\n\r\n  /**\r\n   * TRUE if the `Switch To Phone` button in the visit console should be hidden for the visit\r\n   *\r\n   * @since 2.6.0\r\n   * @type {boolean}\r\n   */\r\n  get hideSwitchToPhone() {\r\n    return GenericParser.parseBoolean(this.__data.hideVisitAddPhoneOptionForEngagement);\r\n  }\r\n}\r\n\r\nexport default AWSDKVisit;\r\n","/*!\n * American Well Consumer Web SDK\n *\n * Copyright (c) 2018 American Well.\n * All rights reserved.\n *\n * It is illegal to use, reproduce or distribute\n * any part of this Intellectual Property without\n * prior written authorization from American Well.\n */\n\nimport AWSDKDataObject from '../awsdk_dataobject';\n\n/**\n * A class that encapsulates the common properties to all trackers and their sub-components\n * @property {String} uuid the universal unique identifier for this component. This will uniquely identify the component against all other existing components\n * @property {String} title the string title name of this component\n * @since 1.4.0\n * @extends model.AWSDKDataObject\n */\nclass AWSDKTrackerBaseObject extends AWSDKDataObject {\n  get uuid() {\n    return this.__data.uuid;\n  }\n\n  get title() {\n    return this.__data.title;\n  }\n}\nexport default AWSDKTrackerBaseObject;\n","/*!\n * American Well Consumer Web SDK\n *\n * Copyright (c) 2018 American Well.\n * All rights reserved.\n *\n * It is illegal to use, reproduce or distribute\n * any part of this Intellectual Property without\n * prior written authorization from American Well.\n */\nimport AWSDKTrackerBaseObject from './awsdk_tracker_base_object';\n\n/**\n * This class represents a wrapper for the unit of measure's short and full descriptions\n * @property {String} unitOfMeasureShortDescription the description of the units of measure for this component in symbolic notation. Ex: mg/dL\n * @property {String} unitOfMeasureFullDescription the description of the units of measure for this component in words rather than symbols. Ex: milligrams per deciliter\n * @since 1.4.0\n * @extends model.AWSDKTrackerBaseObject\n */\nclass AWSDKTrackerUnitOfMeasure extends AWSDKTrackerBaseObject {\n  get unitOfMeasureShortDescription() {\n    return this.__data.unitOfMeasureShortDescription;\n  }\n\n  get unitOfMeasureFullDescription() {\n    return this.__data.unitOfMeasureFullDescription;\n  }\n}\nexport default AWSDKTrackerUnitOfMeasure;\n","/*!\n * American Well Consumer Web SDK\n *\n * Copyright (c) 2018 American Well.\n * All rights reserved.\n *\n * It is illegal to use, reproduce or distribute\n * any part of this Intellectual Property without\n * prior written authorization from American Well.\n */\nimport AWSDKTrackerUnitOfMeasure from './awsdk_tracker_unit_of_measure';\nimport GenericParser from '../../internal/parser/generic_parser';\n\n/**\n * This class represents a single data point in terms of a tracker measurement.\n * @property {Date} measurementDate the date that this measurement was taken\n * @property {Number} value the value that was registered by this measurement\n * @since 1.4.0\n * @extends model.AWSDKUnitOfMeasure\n */\nclass AWSDKTrackerDataPoint extends AWSDKTrackerUnitOfMeasure {\n  get measurementDate() {\n    return GenericParser.parseDate(this.__data.measurementDate);\n  }\n  get value() {\n    return this.__data.value;\n  }\n}\nexport default AWSDKTrackerDataPoint;\n","/*!\n * American Well Consumer Web SDK\n *\n * Copyright (c) 2018 American Well.\n * All rights reserved.\n *\n * It is illegal to use, reproduce or distribute\n * any part of this Intellectual Property without\n * prior written authorization from American Well.\n */\nimport AWSDKTrackerDataPoint from './awsdk_tracker_data_point';\nimport GenericParser from '../../internal/parser/generic_parser';\nimport AWSDKDataObject from '../awsdk_dataobject';\n\n/**\n * This class represents a single tracker entry\n * @property {String} source the string representing the information's origin\n * @property {Date} date the date for this entry\n * @property {AWSDKTrackerDataPoint[]} data an array of {@link model.AWSDKTrackerDataPoint|AWSDKTrackerDataPoint} for this tracker entry\n * @since 1.4.0\n * @extends model.AWSDKDataObject\n */\nclass AWSDKTrackerEntry extends AWSDKDataObject {\n  get source() {\n    return this.__data.source;\n  }\n  get date() {\n    return GenericParser.parseDate(this.__data.date);\n  }\n  get data() {\n    return (Array.isArray(this.__data.data) && this.__data.data.map(entry => GenericParser.parseObject(entry, AWSDKTrackerDataPoint))) || [];\n  }\n}\nexport default AWSDKTrackerEntry;\n","/*!\n * American Well Consumer Web SDK\n *\n * Copyright (c) 2018 American Well.\n * All rights reserved.\n *\n * It is illegal to use, reproduce or distribute\n * any part of this Intellectual Property without\n * prior written authorization from American Well.\n */\nimport AWSDKResponse from './awsdk_response';\nimport GenericParser from '../../parser/generic_parser';\nimport AWSDKTrackerEntry from '../../../model/tracker/awsdk_tracker_entry';\n\n/**\n * This class represents a response whose payload is a list of {@link model.AWSDKTrackerEntry|AWSDKTrackerEntry}\n * @property {model.AWSDKTrackerEntry[]} trackers an array of {@link model.AWSDKTrackerEntry|AWSDKTrackerEntry}\n * @extends model.AWSDKResponse\n * @since 1.4.0\n */\nclass AWSDKTrackerEntriesList extends AWSDKResponse {\n  get trackers() {\n    return (Array.isArray(this.__data.trackers) && this.__data.trackers.map(entry => GenericParser.parseObject(entry, AWSDKTrackerEntry))) || [];\n  }\n}\nexport default AWSDKTrackerEntriesList;\n","/*!\n * American Well Consumer Web SDK\n *\n * Copyright (c) 2018 American Well.\n * All rights reserved.\n *\n * It is illegal to use, reproduce or distribute\n * any part of this Intellectual Property without\n * prior written authorization from American Well.\n */\nimport AWSDKTrackerUnitOfMeasure from './awsdk_tracker_unit_of_measure';\n\n/**\n * This class represents a single measurable component of a medical test indicator. For example the blood pressure indicator has systolic and diastolic component\n * @property {Number} maximum the maximum allowed value for this component\n * @property {Number} minimum the minimum allowed value for this component\n * @since 1.4.0\n * @extends model.AWSDKTrackerUnitOfMeasure\n */\nclass AWSDKTrackerComponent extends AWSDKTrackerUnitOfMeasure {\n  get maximum() {\n    return this.__data.maximum;\n  }\n\n  get minimum() {\n    return this.__data.minimum;\n  }\n}\nexport default AWSDKTrackerComponent;\n\n","/*!\n * American Well Consumer Web SDK\n *\n * Copyright (c) 2018 American Well.\n * All rights reserved.\n *\n * It is illegal to use, reproduce or distribute\n * any part of this Intellectual Property without\n * prior written authorization from American Well.\n */\nimport AWSDKTrackerComponent from './awsdk_tracker_component';\nimport AWSDKError from '../../error/awsdk_error';\n\n/**\n * This class represents a single tracker data point request for a tracker component\n * @property {model.AWSDKTrackerComponent} trackerComponent the tracker component whose data point we want to add\n * @property {Number} value the float number representing the value of the measured data point\n * @since 1.4.0\n */\nclass AWSDKTrackerDataPointRequest {\n  get trackerComponent() {\n    return this.__trackerComponent;\n  }\n  get value() {\n    return this.__value;\n  }\n  set trackerComponent(trackerComponent) {\n    if (!(trackerComponent instanceof AWSDKTrackerComponent)) {\n      throw AWSDKError.AWSDKIllegalArgument('trackerComponent must be an instance of AWSDKTrackerComponent');\n    }\n    this.__trackerComponent = trackerComponent;\n  }\n  set value(value) {\n    if (typeof value !== 'number') {\n      throw AWSDKError.AWSDKIllegalArgument('value must be a number');\n    }\n    this.__value = value;\n  }\n  /**\n   * @private\n   */\n  __getAsRequestBody() {\n    const res = {};\n    if (this.__trackerComponent) {\n      res.uuid = this.__trackerComponent.uuid;\n    }\n    res.value = this.__value;\n    return JSON.stringify(res);\n  }\n\n  /**\n   * This method is a convenience method for presenting this object as an array element within a JSON string\n   * @private\n   * @returns {Object} an array element representation of this object suitable to be used as an element on a request that adds a health tracker\n   */\n  __toRequestElement() {\n    return {\n      uuid: this.__trackerComponent ? this.__trackerComponent.uuid : undefined,\n      value: this.__value,\n    };\n  }\n}\nexport default AWSDKTrackerDataPointRequest;\n","/*!\n * American Well Consumer Web SDK\n *\n * Copyright (c) 2018 American Well.\n * All rights reserved.\n *\n * It is illegal to use, reproduce or distribute\n * any part of this Intellectual Property without\n * prior written authorization from American Well.\n */\nimport AWSDKTrackerComponent from './awsdk_tracker_component';\nimport AWSDKTrackerBaseObject from './awsdk_tracker_base_object';\nimport GenericParser from '../../internal/parser/generic_parser';\n\n/**\n * This class represents a template for all existing trackers\n * @property {model.AWSDKTrackerComponent[]} components an array of components that combined make up the full measurement of this tracker template.\n * @since 1.4.0\n * @extends model.AWSDKTrackerBaseObject\n */\nclass AWSDKTrackerTemplate extends AWSDKTrackerBaseObject {\n  get components() {\n    return (Array.isArray(this.__data.components) && this.__data.components.map(item => GenericParser.parseObject(item, AWSDKTrackerComponent))) || [];\n  }\n}\nexport default AWSDKTrackerTemplate;\n\n","/*!\n * American Well Consumer Web SDK\n *\n * Copyright (c) 2018 American Well.\n * All rights reserved.\n *\n * It is illegal to use, reproduce or distribute\n * any part of this Intellectual Property without\n * prior written authorization from American Well.\n */\nimport AWSDKTrackerDataPointRequest from './awsdk_tracker_data_point_request';\nimport AWSDKError from '../../error/awsdk_error';\nimport AWSDKTrackerTemplate from './awsdk_tracker_template';\n\n/**\n * This class represents a entry request on the tracker request object\n * @property {model.AWSDKTrackerTemplate} trackerTemplate the tracker template whose uuid we need\n * @property {model.AWSDKTrackerDataPointRequest[]} data the array of data point requests pertaining to this tracker\n * @since 1.4.0\n */\nclass AWSDKTrackerEntryRequest {\n  get trackerTemplate() {\n    return this.__trackerTemplate;\n  }\n  get data() {\n    return this.__data;\n  }\n  set trackerTemplate(trackerTemplate) {\n    if (!(trackerTemplate instanceof AWSDKTrackerTemplate)) {\n      throw AWSDKError.AWSDKIllegalArgument('trackerTemplate must be an instance of AWSDKTrackerTemplate');\n    }\n    this.__trackerTemplate = trackerTemplate;\n  }\n  set data(data) {\n    if (!Array.isArray(data)) {\n      throw AWSDKError.AWSDKIllegalArgument('data must be an array');\n    }\n    if (data.length > 0 && data.some(item => !(item instanceof AWSDKTrackerDataPointRequest))) {\n      throw AWSDKError.AWSDKIllegalArgument('All elements in \"data\" must be instance of AWSDKTrackerDataPointRequest');\n    }\n    this.__data = data;\n  }\n  /**\n   * @private\n   */\n  __getAsRequestBody() {\n    const res = {};\n    if (this.__trackerTemplate) {\n      res.uuid = this.__trackerTemplate.uuid;\n    }\n    res.data = (this.__data && this.__data.map(entry => entry.__getAsRequestBody())) || [];\n    return JSON.stringify(res);\n  }\n\n  /**\n   * This method is a convenience method for presenting this object as an array element within a JSON string\n   * @private\n   * @returns {Object} an element representation of this object suitable to be used as an element on a request that adds a health tracker\n   */\n  __toRequestElement() {\n    return {\n      uuid: this.__trackerTemplate ? this.__trackerTemplate.uuid : undefined,\n      data: (this.__data && this.__data.map(entry => entry.__toRequestElement())) || [],\n    };\n  }\n}\nexport default AWSDKTrackerEntryRequest;\n","/*!\n * American Well Consumer Web SDK\n *\n * Copyright (c) 2018 American Well.\n * All rights reserved.\n *\n * It is illegal to use, reproduce or distribute\n * any part of this Intellectual Property without\n * prior written authorization from American Well.\n */\nimport AWSDKTrackerEntryRequest from './awsdk_tracker_entry_request';\nimport AWSDKError from '../../error/awsdk_error';\nimport Validator from '../../internal/validator/validator';\nimport Util from '../../internal/util/util';\n\n/**\n * A class that contains all the pertinent properties for successfully adding a tracker.\n * @property {Date} measurementDateTime the dateTime when this measurement was taken\n * @property {String} canonicalTimeZone the timeZone that the consumer is using, so that correct dates are used\n * @property {model.AWSDKTrackerEntryRequest[]} entries the array of tracker entries associated with this request\n * @since 1.4.0\n */\nclass AWSDKTrackerRequest {\n  get measurementDateTime() {\n    return this.__measurementDateTime;\n  }\n  get canonicalTimeZone() {\n    return this.__canonicalTimeZone;\n  }\n  get entries() {\n    return this.__entries;\n  }\n  set measurementDateTime(measurementDateTime) {\n    if (!(measurementDateTime instanceof Date)) {\n      throw AWSDKError.AWSDKIllegalArgument('measurementDateTime must be instance of Date', 'measurementDateTime');\n    }\n    if (measurementDateTime - new Date(Date.now()) > 0) {\n      throw AWSDKError.AWSDKIllegalArgument('measurementDateTime is a date in the future', 'measurementDateTime');\n    }\n    this.__measurementDateTime = measurementDateTime;\n  }\n  set canonicalTimeZone(canonicalTimeZone) {\n    if (typeof canonicalTimeZone !== 'string' || !Validator.isValidString(canonicalTimeZone)) {\n      throw AWSDKError.AWSDKIllegalArgument('canonicalTimeZone must be a valid string');\n    }\n    this.__canonicalTimeZone = canonicalTimeZone;\n  }\n  set entries(entries) {\n    if (!Array.isArray(entries)) {\n      throw AWSDKError.AWSDKIllegalArgument('entries must be an array');\n    }\n    if (entries.length > 0 && entries.some(item => !(item instanceof AWSDKTrackerEntryRequest))) {\n      throw AWSDKError.AWSDKIllegalArgument('All elements in \"entries\" must be instance of AWSDKTrackerEntryRequest');\n    }\n    this.__entries = entries;\n  }\n\n  /**\n   * @private\n   */\n  __getAsRequestBody() {\n    const res = {};\n    if (this.__measurementDateTime) {\n      res.measurementDateTime = Util.formatISODateTime(this.__measurementDateTime);\n    }\n    res.canonicalTimeZone = this.__canonicalTimeZone;\n    res.entries = (this.__entries && this.__entries.map(item => item.__toRequestElement())) || [];\n    return JSON.stringify(res);\n  }\n}\nexport default AWSDKTrackerRequest;\n","/*!\n * American Well Consumer Web SDK\n *\n * Copyright (c) 2018 American Well.\n * All rights reserved.\n *\n * It is illegal to use, reproduce or distribute\n * any part of this Intellectual Property without\n * prior written authorization from American Well.\n */\nimport AWSDKError from '../../error/awsdk_error';\nimport AWSDKTrackerTemplate from './awsdk_tracker_template';\nimport Validator from '../../internal/validator/validator';\n\n\n/**\n * This class represents the search criteria for finding trackers.\n * Get an instance of this via {@link service.ConsumerService#getNewTrackersSearchCriteria()|PracticeService.getNewTrackersSearchCriteria}\n * @property {model.AWSDKTrackerTemplate} criteria.trackerTemplate the tracker template associated with this search criteria\n * @property {String} criteria.timeZone the consumer's canonical time zone to ensure correct dates are used. This needs to be a canonical id as define in {@link http://joda-time.sourceforge.net/timezones.html}. For example: 'America/New_York'\n * @property {Date} [criteria.startDate] the datetime to start the search from\n * @property {Date} [criteria.endDate] the datetime to terminate the search at\n * @since 1.4.0\n */\nclass AWSDKTrackersSearchCriteria {\n  constructor(criteria = {}) {\n    this.trackerTemplate = criteria.trackerTemplate;\n    this.timeZone = criteria.timeZone;\n    this.startDate = criteria.startDate;\n    this.endDate = criteria.endDate;\n  }\n  get trackerTemplate() {\n    return this.__trackerTemplate;\n  }\n  get timeZone() {\n    return this.__timeZone;\n  }\n  get startDate() {\n    return this.__startDate;\n  }\n  get endDate() {\n    return this.__endDate;\n  }\n  set trackerTemplate(trackerTemplate) {\n    if (trackerTemplate && !(trackerTemplate instanceof AWSDKTrackerTemplate)) {\n      throw AWSDKError.AWSDKIllegalArgument('trackerTemplate must be of type AWSDKTrackerTemplate');\n    }\n    this.__trackerTemplate = trackerTemplate;\n  }\n  set timeZone(timeZone) {\n    if (timeZone && (typeof timeZone !== 'string' || !Validator.isValidString(timeZone))) {\n      throw AWSDKError.AWSDKIllegalArgument('timeZone must be of type string');\n    }\n    this.__timeZone = timeZone;\n  }\n  set startDate(startDate) {\n    if (startDate && !(startDate instanceof Date)) {\n      throw AWSDKError.AWSDKIllegalArgument('startDate must be an instance of Date');\n    }\n    this.__startDate = startDate;\n  }\n  set endDate(endDate) {\n    if (endDate && !(endDate instanceof Date)) {\n      throw AWSDKError.AWSDKIllegalArgument('endDate must be an instance of Date');\n    }\n    this.__endDate = endDate;\n  }\n  /**\n   * @private\n   */\n  __uuid() {\n    return (this.__trackerTemplate && this.__trackerTemplate.uuid) || null;\n  }\n}\nexport default AWSDKTrackersSearchCriteria;\n","/*!\r\n * American Well Consumer Web SDK\r\n *\r\n * Copyright (c) 2018 American Well.\r\n * All rights reserved.\r\n *\r\n * It is illegal to use, reproduce or distribute\r\n * any part of this Intellectual Property without\r\n * prior written authorization from American Well.\r\n */\r\n\r\nimport GenericParser from '../../internal/parser/generic_parser';\r\nimport Util from '../../internal/util/util';\r\n\r\n/**\r\n * This class contains all necessary information for representing an exam's data request.\r\n * @property {String} id the exam data Id\r\n * @property {String} type the exam data type\r\n * @property {Date} dateTime the exam date and time\r\n * @since 1.4.0\r\n */\r\nclass AWSDKExamDataRequest {\r\n  get id() {\r\n    return this.__id;\r\n  }\r\n\r\n  set id(id) {\r\n    this.__id = id;\r\n  }\r\n\r\n  get type() {\r\n    return this.__type;\r\n  }\r\n\r\n  set type(type) {\r\n    this.__type = type;\r\n  }\r\n\r\n  get dateTime() {\r\n    return GenericParser.parseDate(this.__dateTime);\r\n  }\r\n\r\n  set dateTime(dateTime) {\r\n    this.__dateTime = dateTime;\r\n  }\r\n  /**\r\n   * This method is a convenience method for presenting this object as an array element within a JSON string\r\n   * @returns {Object} an array element representation of this object suitable to be used as an element on a request that adds a device integration exam data\r\n   */\r\n  __toRequestElement() {\r\n    return {\r\n      id: this.id,\r\n      type: this.type,\r\n      dateTime: Util.formatISODateTime(this.dateTime),\r\n    };\r\n  }\r\n}\r\nexport default AWSDKExamDataRequest;\r\n","/*!\n * American Well Consumer Web SDK\n *\n * Copyright (c) 2018 American Well.\n * All rights reserved.\n *\n * It is illegal to use, reproduce or distribute\n * any part of this Intellectual Property without\n * prior written authorization from American Well.\n */\nimport AWSDKError from '../../error/awsdk_error';\nimport AWSDKVisit from '../visit/awsdk_visit';\nimport AWSDKExamDataRequest from '../device_integration/awsdk_exam_data_request';\nimport GenericParser from '../../internal/parser/generic_parser';\n\n/**\n * This class represents the device integration request object.\n * Get an instance of this class by calling {@see service.ConsumerService#getNewDeviceIntegrationRequest|ConsumerService.getNewDeviceIntegrationRequest}\n * @property {model.AWSDKExamDataRequest[]} examDataEntries the list of exam data entries associated with the device integration request\n * @property {model.AWSDKVisit} [visit] the optional visit associated with this device integration request\n * @since 1.4.0\n */\nclass AWSDKDeviceIntegrationRequest {\n  constructor(examDataEntries, visit = null) {\n    this.__validate(examDataEntries, visit);\n    this.__examDataEntries = examDataEntries;\n    this.__visit = visit;\n  }\n\n  get examDataEntries() {\n    return (Array.isArray(this.__examDataEntries) && this.__examDataEntries.map(item => GenericParser.parseObject(item, AWSDKExamDataRequest))) || [];\n  }\n\n  /**\n   * This is a convenience method for validating the constructor's parameters\n   * @private\n   */\n  __validate(examDataEntries, visit) {\n    if (!Array.isArray(examDataEntries)) {\n      throw AWSDKError.AWSDKIllegalArgument('examDataEntries must be of type Array');\n    }\n    const validationErrors = [];\n    examDataEntries.forEach((examDataEntry) => {\n      if (!(examDataEntry instanceof AWSDKExamDataRequest)) {\n        validationErrors.push(AWSDKError.AWSDKValidationError('examDataEntries', examDataEntry));\n      }\n    });\n    if (validationErrors.length > 0) {\n      throw AWSDKError.AWSDKValidationErrors(validationErrors);\n    }\n    if (visit && !(visit instanceof AWSDKVisit)) {\n      throw AWSDKError.AWSDKIllegalArgument('visit must be of type AWSDKVisit');\n    }\n  }\n  /**\n   * This method is a convenience method for presenting this object as a JSON string\n   * @private\n   * @returns {String} a JSON string representation of this object suitable to be used as payload for a request that adds device integration exam data\n   */\n  __toRequestBody() {\n    const request = {\n      visitId: this.__visit ? this.__visit.id.encryptedId : undefined,\n      examDataEntries: this.examDataEntries ? this.examDataEntries.map(item => item.__toRequestElement()) : undefined,\n    };\n    return JSON.stringify(request);\n  }\n}\nexport default AWSDKDeviceIntegrationRequest;\n","/*!\n * American Well Consumer Web SDK\n *\n * Copyright (c) 2020 American Well.\n * All rights reserved.\n *\n * It is illegal to use, reproduce or distribute\n * any part of this Intellectual Property without\n * prior written authorization from American Well.\n */\n\n/**\n * This enum represents a type filter that can be used when searching for PostVisitFollowUpItem\n * entities with {@link service.ConsumerService#searchPostVisitFollowUpItems()|ConsumerService.searchPostVisitFollowUpItems}\n * @since 2.8.0\n */\nconst AWSDKPostVisitFollowUpItemsTypeFilter = {\n  /**\n   * Filter to get all results\n   */\n  all: 'all',\n  /**\n   * Filter to get only imaging referral types\n   */\n  imagingReferral: 'imagingReferral',\n  /**\n   * Filter to get only lab referral types\n   */\n  labReferral: 'labReferral',\n  /**\n   * Filter to get only visit referral types\n   */\n  visitReferral: 'visitReferral',\n  /**\n   * Filter to get only referral types\n   */\n  referral: 'referral',\n  /**\n   * Filter to get only sick slip types\n   */\n  sickSlip: 'sickSlip',\n  /**\n   * Filter to get only appointment types\n   */\n  appointment: 'appointment',\n};\nObject.freeze(AWSDKPostVisitFollowUpItemsTypeFilter);\nexport default AWSDKPostVisitFollowUpItemsTypeFilter;\n","/*!\n * American Well Consumer Web SDK\n *\n * Copyright © 2020 American Well.\n * All rights reserved.\n *\n * It is illegal to use, reproduce or distribute\n * any part of this Intellectual Property without\n * prior written authorization from American Well.\n */\n\nimport AWSDKDataObject from './awsdk_dataobject';\n\n/**\n * The base class for a Page of results.\n * @property {integer} startIndex the starting index of this page\n * @property {integer} pageSize the size of this page of results\n * @property {Object} nextPageOptions the options object to use to fetch the next page of results\n * @property {Object} previousPageOptions the options object to use to fetch the previous page of results\n * @since 2.8.0\n */\nclass AWSDKPaginated extends AWSDKDataObject {\n  get startIndex() {\n    return this.__data.startIndex;\n  }\n  get pageSize() {\n    return this.__data.limit;\n  }\n\n  get nextPageOptions() {\n    return this.__data.nextPageRequest;\n  }\n\n  get previousPageOptions() {\n    return this.__data.previousPageRequest;\n  }\n}\n\nexport default AWSDKPaginated;\n","/*!\n * American Well Consumer Web SDK\n *\n * Copyright (c) 2020 American Well.\n * All rights reserved.\n *\n * It is illegal to use, reproduce or distribute\n * any part of this Intellectual Property without\n * prior written authorization from American Well.\n */\n\nimport GenericParser from '../../internal/parser/generic_parser';\nimport AWSDKPostVisitFollowUpItem from './awsdk_post_visit_follow_up_item';\nimport AWSDKPaginated from '../awsdk_paginated';\n\n/**\n * This class represents the search result for finding a consumer's {@link model.AWSDKPostVisitFollowUpItem}s.\n * @property {model.AWSDKPostVisitFollowUpItem[]} postVisitFollowUpItems the result list of {@link model.AWSDKPostVisitFollowUpItem}s that satisfied the search query\n * @extends model.AWSDKPaginated\n * @since 2.8.0\n */\nclass AWSDKPaginatedPostVisitFollowUpItems extends AWSDKPaginated {\n  get postVisitFollowUpItems() {\n    return (Array.isArray(this.__data.list) && this.__data.list.map(item => GenericParser.parseObject(item, AWSDKPostVisitFollowUpItem))) || [];\n  }\n}\nexport default AWSDKPaginatedPostVisitFollowUpItems;\n","/*!\r\n * American Well Consumer Web SDK\r\n *\r\n * Copyright (c) 2020 American Well.\r\n * All rights reserved.\r\n *\r\n * It is illegal to use, reproduce or distribute\r\n * any part of this Intellectual Property without\r\n * prior written authorization from American Well.\r\n */\r\n\r\nimport AWSDKResponse from './awsdk_response';\r\nimport GenericParser from '../../parser/generic_parser';\r\nimport AWSDKPaginatedPostVisitFollowUpItems from '../../../model/post_visit_follow_up_items/awsdk_paginated_post_visit_follow_up_items';\r\n\r\n/**\r\n * Simple wrapper around an {@link model.AWSDKPaginatedPostVisitFollowUpItems}\r\n * @property {model.AWSDKPaginatedPostVisitFollowUpItems} paginatedPostVisitFollowUpItems the {@link model.AWSDKPaginatedPostVisitFollowUpItems}\r\n * @extends model.AWSDKResponse\r\n * @private\r\n * @since 2.8.0\r\n */\r\nclass AWSDKPaginatedPostVisitFollowUpItemsResponse extends AWSDKResponse {\r\n  get paginatedPostVisitFollowUpItems() {\r\n    return GenericParser.parseObject(this.__data, AWSDKPaginatedPostVisitFollowUpItems);\r\n  }\r\n}\r\n\r\nexport default AWSDKPaginatedPostVisitFollowUpItemsResponse;\r\n","/*!\r\n * American Well Consumer Web SDK\r\n *\r\n * Copyright (c) 2020 American Well.\r\n * All rights reserved.\r\n *\r\n * It is illegal to use, reproduce or distribute\r\n * any part of this Intellectual Property without\r\n * prior written authorization from American Well.\r\n */\r\nimport GenericParser from '../../internal/parser/generic_parser';\r\nimport AWSDKVisitReport from './awsdk_visit_report';\r\nimport AWSDKPaginated from '../awsdk_paginated';\r\n\r\n/**\r\n * A paginated wrapper around a collection of {@link AWSDKVisitReport}s\r\n * @property {Array} visitReports a collection of {@link AWSDKVisitReport}s\r\n * @extends model.AWSDKPaginated\r\n * @since 2.8.0\r\n */\r\nclass AWSDKPaginatedVisitReports extends AWSDKPaginated {\r\n  get visitReports() {\r\n    return (Array.isArray(this.__data.list) && this.__data.list.map(item => GenericParser.parseObject(item, AWSDKVisitReport))) || [];\r\n  }\r\n}\r\n\r\nexport default AWSDKPaginatedVisitReports;\r\n","/*!\r\n * American Well Consumer Web SDK\r\n *\r\n * Copyright (c) 2020 American Well.\r\n * All rights reserved.\r\n *\r\n * It is illegal to use, reproduce or distribute\r\n * any part of this Intellectual Property without\r\n * prior written authorization from American Well.\r\n */\r\n\r\nimport AWSDKResponse from './awsdk_response';\r\nimport GenericParser from '../../parser/generic_parser';\r\nimport AWSDKPaginatedVisitReports from '../../../model/visit/awsdk_paginated_visit_reports';\r\n\r\n/**\r\n * Simple wrapper around an {@link model.AWSDKPaginatedVisitReports}\r\n * @property {model.AWSDKPaginatedVisitReports} paginatedVisitReports the {@link model.AWSDKPaginatedVisitReports}\r\n * @extends model.AWSDKResponse\r\n * @since 2.8.0\r\n */\r\nclass AWSDKPaginatedVisitReportsResponse extends AWSDKResponse {\r\n  get paginatedVisitReports() {\r\n    return GenericParser.parseObject(this.__data, AWSDKPaginatedVisitReports);\r\n  }\r\n}\r\n\r\nexport default AWSDKPaginatedVisitReportsResponse;\r\n","/*!\n * American Well Consumer Web SDK\n *\n * Copyright © 2020 American Well.\n * All rights reserved.\n *\n * It is illegal to use, reproduce or distribute\n * any part of this Intellectual Property without\n * prior written authorization from American Well.\n */\nimport GenericParser from '../../internal/parser/generic_parser';\nimport AWSDKPaginated from '../awsdk_paginated';\nimport AWSDKHealthDocumentRecord from './awsdk_health_document_record';\n\n/**\n * A paginated wrapper around a collection of {@link model.AWSDKPaginatedHealthDocumentRecords}s\n * @property {model.AWSDKHealthDocumentRecord[]} healthDocumentRecords the list of health document records in this page\n * @extends model.AWSDKPaginated\n * @since 2.8.0\n */\nclass AWSDKPaginatedHealthDocumentRecords extends AWSDKPaginated {\n  get healthDocumentRecords() {\n    return (Array.isArray(this.__data.list) && this.__data.list.map(item => GenericParser.parseObject(item, AWSDKHealthDocumentRecord))) || [];\n  }\n}\n\nexport default AWSDKPaginatedHealthDocumentRecords;\n","/*!\r\n * American Well Consumer Web SDK\r\n *\r\n * Copyright (c) 2020 American Well.\r\n * All rights reserved.\r\n *\r\n * It is illegal to use, reproduce or distribute\r\n * any part of this Intellectual Property without\r\n * prior written authorization from American Well.\r\n */\r\n\r\nimport AWSDKResponse from './awsdk_response';\r\nimport GenericParser from '../../parser/generic_parser';\r\nimport AWSDKPaginatedHealthDocumentRecords from '../../../model/health/awsdk_paginated_health_document_records';\r\n\r\n/**\r\n * Simple wrapper around an {@link model.AWSDKPaginatedHealthDocumentRecords}\r\n * @property {model.AWSDKPaginatedHealthDocumentRecords} paginatedVisitReports the {@link model.AWSDKPaginatedHealthDocumentRecords}\r\n * @extends model.AWSDKResponse\r\n * @private\r\n * @since 2.8.0\r\n */\r\nclass AWSDKPaginatedHealthDocumentRecordsResponse extends AWSDKResponse {\r\n  get paginatedHealthDocumentRecords() {\r\n    return GenericParser.parseObject(this.__data, AWSDKPaginatedHealthDocumentRecords);\r\n  }\r\n}\r\n\r\nexport default AWSDKPaginatedHealthDocumentRecordsResponse;\r\n","/*!\n * American Well Consumer Web SDK\n *\n * Copyright (c) 2020 American Well.\n * All rights reserved.\n *\n * It is illegal to use, reproduce or distribute\n * any part of this Intellectual Property without\n * prior written authorization from American Well.\n */\n\nimport AWSDKAgendaItemFollowUp from './awsdk_agenda_item_follow_up';\nimport GenericParser from '../../internal/parser/generic_parser';\nimport AWSDKProvider from '../provider/awsdk_provider';\nimport AWSDKProviderType from '../provider/awsdk_provider_type';\n\n/**\n * This Entity represents the details of an online follow up in detail\n * and is more specific than the {@link AWSDKAgendaItemFollowUp}\n * @property {model.AWSDKProviderType} assignedProviderType The type or specialty of the provider being recommended for a follow up, exclusive of the assigned provider being set\n * @property {model.AWSDKProvider} assignedProvider Provider that the consumer was referred to have a visit with\n * @property {model.AWSDKProvider} referringProvider Provider that had the original visit with the consumer that did the referring\n * @property {string} notes These are the topic notes provided by the referringProvider\n * @property {Boolean} resolved Boolean true if the online visit follow-up has been resolved, false otherwise\n * @extends model.AWSDKAgendaItemFollowUp\n * @since 3.0.0\n */\nclass AWSDKOnlineVisitFollowUpItem extends AWSDKAgendaItemFollowUp {\n  get assignedProviderType() {\n    return GenericParser.parseObject(this.__data.assignedProviderType, AWSDKProviderType);\n  }\n\n  get assignedProvider() {\n    return GenericParser.parseObject(this.__data.assignedProvider, AWSDKProvider);\n  }\n\n  get referringProvider() {\n    return GenericParser.parseObject(this.__data.referringProvider, AWSDKProvider);\n  }\n\n  get notes() {\n    return this.__data.notes;\n  }\n\n  get resolved() {\n    return GenericParser.parseBoolean(this.__data.resolved);\n  }\n}\nexport default AWSDKOnlineVisitFollowUpItem;\n","/*!\n * American Well Consumer Web SDK\n *\n * Copyright (c) 2020 American Well.\n * All rights reserved.\n *\n * It is illegal to use, reproduce or distribute\n * any part of this Intellectual Property without\n * prior written authorization from American Well.\n */\n\nimport GenericParser from '../../internal/parser/generic_parser';\nimport AWSDKPaginated from '../awsdk_paginated';\nimport AWSDKOnlineVisitFollowUpItem from './awsdk_online_visit_follow_up_item';\n\n/**\n * This class represents the unscheduled follow ups for a consumer {@link model.AWSDKOnlineVisitFollowUpItem}s.\n * @property {model.AWSDKOnlineVisitFollowUpItem[]} onlineFollowUpItems The result list of {@link model.AWSDKOnlineVisitFollowUpItem}s for the authenticated consumer.\n * @extends model.AWSDKPaginated\n * @since 3.0.0\n */\nclass AWSDKPaginatedOnlineVisitFollowUpItems extends AWSDKPaginated {\n  get onlineFollowUpItems() {\n    return (Array.isArray(this.__data.list) && this.__data.list.map(item => GenericParser.parseObject(item, AWSDKOnlineVisitFollowUpItem))) || [];\n  }\n}\nexport default AWSDKPaginatedOnlineVisitFollowUpItems;\n","/*!\n * American Well Consumer Web SDK\n *\n * Copyright (c) 2020 American Well.\n * All rights reserved.\n *\n * It is illegal to use, reproduce or distribute\n * any part of this Intellectual Property without\n * prior written authorization from American Well.\n */\n\nimport AWSDKResponse from './awsdk_response';\nimport GenericParser from '../../parser/generic_parser';\nimport AWSDKPaginatedOnlineVisitFollowUpItems from '../../../model/visit/awsdk_paginated_online_visit_follow_up_items';\n\n/**\n * Simple wrapper around an {@link model.AWSDKPaginatedOnlineVisitFollowUpItems}\n * @property {model.AWSDKPaginatedOnlineVisitFollowUpItems} paginatedOnlineVisitFollowUpItems the {@link model.AWSDKPaginatedOnlineVisitFollowUpItems}\n * @extends model.AWSDKResponse\n * @private\n * @since 3.0.0\n */\nclass AWSDKPaginatedOnlineVisitFollowUpItemsResponse extends AWSDKResponse {\n  get paginatedOnlineVisitFollowUpItems() {\n    return GenericParser.parseObject(this.__data, AWSDKPaginatedOnlineVisitFollowUpItems);\n  }\n}\n\nexport default AWSDKPaginatedOnlineVisitFollowUpItemsResponse;\n","/*!\n * American Well Consumer Web SDK\n *\n * Copyright © 2017 American Well.\n * All rights reserved.\n *\n * It is illegal to use, reproduce or distribute\n * any part of this Intellectual Property without\n * prior written authorization from American Well.\n */\nimport deprecated from 'awcoresdk/lib/util/deprecated';\nimport AWSDKError from './../error/awsdk_error';\nimport AWSDKConsumerResponse from '../internal/model/response/awsdk_consumer_response';\nimport AWSDKHealthSummaryResponse from '../internal/model/response/awsdk_health_summary_response';\nimport AWSDKDependentResponse from '../internal/model/response/awsdk_dependent_response';\nimport Service from './service';\nimport Validator from '../internal/validator/validator';\nimport AWSDKConsumerRegistration from '../model/registration/awsdk_consumer_registration';\nimport AWSDKDependentRegistration from '../model/registration/awsdk_dependent_registration';\nimport AWSDKRegistrationDisclaimerResponse from '../internal/model/response/awsdk_registration_disclaimer_response';\nimport AWSDKResponse from '../internal/model/response/awsdk_response';\nimport AWSDKConsumer from '../model/consumer/awsdk_consumer';\nimport AWSDKPaymentMethodResponse from '../internal/model/response/awsdk_payment_method_response';\nimport AWSDKVisitReportDetailResponse from '../internal/model/response/awsdk_visit_report_detail_response';\nimport AWSDKPaymentRequest from '../model/billing/awsdk_payment_request';\nimport AWSDKVisitReportList from '../model/visit/awsdk_visit_report_list';\nimport AWSDKCondition from '../model/health/awsdk_condition';\nimport AWSDKConditionsResponse from '../internal/model/response/awsdk_conditions_response';\nimport AWSDKVitalsResponse from '../internal/model/response/awsdk_vitals_response';\nimport AWSDKMedicationList from '../model/medication/awsdk_medication_list';\nimport AWSDKMedication from '../model/medication/awsdk_medication';\nimport AWSDKVitals from '../model/health/awsdk_vitals';\nimport AWSDKAllergiesResponse from '../internal/model/response/awsdk_allergies_response';\nimport AWSDKAllergy from '../model/health/awsdk_allergy';\nimport AWSDKSubscriptionUpdate from '../model/insurance/awsdk_subscription_update';\nimport AWSDKSubscriptionResponse from '../internal/model/response/awsdk_subscription_response';\nimport AWSDKHealthPlan from '../model/insurance/awsdk_health_plan';\nimport AWSDKConsumerUpdate from '../model/consumer/awsdk_consumer_update';\nimport AWSDKVisitReport from '../model/visit/awsdk_visit_report';\nimport AWSDKAddressUpdate from '../model/awsdk_address_update';\nimport AWSDKAddressResponse from '../internal/model/response/awsdk_address_response';\nimport AWSDKDependentUpdate from '../model/consumer/awsdk_dependent_update';\nimport AWSDKAuthentication from '../model/authentication/awsdk_authentication';\nimport AWSDKSortOrder from '../model/awsdk_sort_order';\nimport AWSDKHealthDocumentRecordList from '../model/health/awsdk_health_document_record_list';\nimport AWSDKHealthDocumentRecord from '../model/health/awsdk_health_document_record';\nimport AWSDKHealthDocumentAttachment from '../model/health/awsdk_health_document_attachment';\nimport AWSDKHealthDocumentRecordResponse from '../internal/model/response/awsdk_health_document_record_response';\nimport AWSDKRelationshipToSubscriberCode from '../model/insurance/awsdk_relationship_to_subscriber_code';\nimport AWSDKEligibilityResponse from '../internal/model/response/awsdk_eligibility_response';\nimport AWSDKConsumerMiddleNameHandling from '../model/consumer/awsdk_consumer_middle_name_handling';\nimport AWSDKGender from '../model/consumer/awsdk_gender';\nimport Util from '../internal/util/util';\nimport AWSDKDependentsListResponse from '../internal/model/response/awsdk_dependents_list_response';\nimport AWSDKDependentAccessRequestResponse from '../internal/model/response/awsdk_dependent_access_request_response';\nimport AWSDKDependentAccessRequest from '../model/consumer/awsdk_dependent_access_request';\nimport AWSDKNotificationsResponse from '../internal/model/response/awsdk_notifications_response';\nimport AWSDKConsumerOverrideDetails from '../model/consumer/awsdk_consumer_override_details';\nimport AWSDKVisit from '../model/visit/awsdk_visit';\nimport AWSDKBaseConsumerUpdate from '../model/consumer/awsdk_base_consumer_update';\nimport AWSDKTrackerEntriesList from '../internal/model/response/awsdk_tracker_entries_list';\nimport AWSDKTrackerRequest from '../model/tracker/awsdk_tracker_request';\nimport AWSDKTrackerEntryRequest from '../model/tracker/awsdk_tracker_entry_request';\nimport AWSDKTrackerDataPointRequest from '../model/tracker/awsdk_tracker_data_point_request';\nimport AWSDKTrackersSearchCriteria from '../model/tracker/awsdk_trackers_search_criteria';\nimport AWSDKDeviceIntegrationRequest from '../model/device_integration/awsdk_device_integration_request';\nimport AWSDKExamDataRequest from '../model/device_integration/awsdk_exam_data_request';\nimport AWSDKPostVisitFollowUpItemsTypeFilter from '../model/post_visit_follow_up_items/awsdk_post_visit_follow_up_items_type_filter';\nimport GenericParser from '../internal/parser/generic_parser';\nimport AWSDKPaginatedPostVisitFollowUpItemsResponse from '../internal/model/response/awsdk_paginated_post_visit_follow_up_items_response';\nimport AWSDKPostVisitFollowUpItem from '../model/post_visit_follow_up_items/awsdk_post_visit_follow_up_item';\nimport AWSDKPaginatedVisitReportsResponse from '../internal/model/response/awsdk_paginated_visit_reports_response';\nimport AWSDKDisposition from '../model/visit/awsdk_disposition';\nimport AWSDKPaginatedHealthDocumentRecordsResponse\n  from '../internal/model/response/awsdk_paginated_health_document_records_response';\nimport AWSDKPostVisitFollowUpItemType from '../model/post_visit_follow_up_items/awsdk_post_visit_follow_up_item_type';\nimport AWSDKPaginatedOnlineVisitFollowUpItemsResponse from '../internal/model/response/awsdk_paginated_online_visit_follow_up_items_response';\nimport AWSDKOnlineVisitFollowUpItem from '../model/visit/awsdk_online_visit_follow_up_item';\n\n/**\n * This service handles everything related to a {@link model.AWSDKConsumer|AWSDKConsumer} and supporting infrastructure\n *\n * @since 1.0.0\n * @hideconstructor\n * @extends service.Service\n */\nclass ConsumerService extends Service {\n  constructor(props) {\n    super(props);\n    const currentFunction = 'ConsumerService.constructor';\n    this.__logger.debug(currentFunction, 'Started', props);\n    this.__systemConfiguration = props.systemConfiguration;\n    this.__countries = props.countries;\n    this.__creditCardTypes = props.creditCardTypes;\n    if (this.__config.eligibilityPollingInterval == null) {\n      this.__config.eligibilityPollingInterval = 3000;\n    }\n    if (this.__config.eligibilityPollingTimeout == null) {\n      this.__config.eligibilityPollingTimeout = 20000;\n    }\n    // Vitals limits\n    this.__minValueVitals = 0.0;\n    this.__maxTemperatureValue = 120.0;\n    this.__maxWeightValue = 1500.0;\n    this.__maxSystolicValue = 250.0;\n    this.__maxDiastolicValue = 250.0;\n  }\n\n  /**\n   * Retrieve the {@link model.AWSDKConsumer|AWSDKConsumer} details for the given consumer, via {@link model.AWSDKAuthentication|AWSDKAuthentication}\n   * retrieved via {@link service.AuthenticationService#authenticateConsumerWithUsername|AuthenticationService.authenticateConsumerWithUsername} or {@link service.AuthenticationService#authenticateMutualAuthWithToken|AuthenticationService.authenticateMutualAuthWithToken} <br>\n   * You must make sure {@link model.AWSDKAuthentication#needsToCompleteRegistration} is false for this to\n   * succeed.  If it's true you must call {@link service.ConsumerService#completeRegistration} <br>\n   *\n   * @param {model.AWSDKAuthentication} authentication REQUIRED\n   * @returns {Promise<model.AWSDKConsumer|error.AWSDKError>} Returns a promise that will be resolved to an {@link model.AWSDKConsumer|AWSDKConsumer} or will\n   * be rejected with an {@link error.AWSDKError|AWSDKError}.\n   * <p><br>Potential Error Codes<br>\n   * <table summary=\"ErrorCodes\" border=\"1\">\n   * <thead>\n   * <tr><th>Error Code</th><th>reason</th></tr>\n   * </thead>\n   * <tbody>\n   * <tr><td>{@link error.AWSDKErrorCode.illegalArgument|AWSDKErrorCode.illegalArgument}</td><td>If authentication is null or not an valid instance of AWSDKAuthentication</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.internalError|AWSDKErrorCode.internalError}</td><td>The AWSDK could not complete the request.</td></tr>\n   * </tbody>\n   * </table>\n   * @since 1.0.0\n   */\n  getConsumer(authentication) {\n    const currentFunction = 'ConsumerService.getConsumer';\n    this.__logger.debug(currentFunction, 'Started', authentication);\n    if (!(authentication instanceof AWSDKAuthentication)) {\n      const error = AWSDKError.AWSDKIllegalArgument('authentication is null or not an instance of AWSDKAuthentication');\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    const link = this.findNamedLink(authentication.authenticationLinks, 'memberDetails');\n    if (!Validator.isValidLink(link)) {\n      const error = AWSDKError.AWSDKInternalError('authentication does not have a valid \"memberDetails\" link entry');\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    const options = this.generateOptions('GET', link.url);\n    options.auth = this.getUserAuth(authentication.consumer);\n    return this.executeRequest(options, AWSDKConsumerResponse)\n      .then((consumerResponse) => {\n        this.__logger.debug(currentFunction, 'Got response', consumerResponse);\n        this.updateUserAuthEntry(consumerResponse.consumer, consumerResponse.authToken);\n        return consumerResponse.consumer;\n      })\n      .catch((error) => {\n        this.__logger.error(currentFunction, 'Error', error);\n        throw error;\n      });\n  }\n\n  /**\n   * Retrieve the updated {@link model.AWSDKConsumer|AWSDKConsumer} details for the given consumer<br>\n   *\n   * @param {model.AWSDKConsumer} consumer the consumer whose updated information we are retrieving\n   * @returns {Promise<model.AWSDKConsumer|error.AWSDKError>} Returns a promise that will be resolved to an {@link model.AWSDKConsumer|AWSDKConsumer} or will\n   * be rejected with an {@link error.AWSDKError|AWSDKError}.\n   * <p><br>Potential Error Codes<br>\n   * <table summary=\"ErrorCodes\" border=\"1\">\n   * <thead>\n   * <tr><th>Error Code</th><th>reason</th></tr>\n   * </thead>\n   * <tbody>\n   * <tr><td>{@link error.AWSDKErrorCode.consumerNotAuthenticated|AWSDKErrorCode.consumerNotAuthenticated}</td><td>The consumer is not authenticated.</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.illegalArgument|AWSDKErrorCode.illegalArgument}</td><td>If consumer is null or not an valid instance of AWSDKConsumer</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.internalError|AWSDKErrorCode.internalError}</td><td>The AWSDK could not complete the request.</td></tr>\n   * </tbody>\n   * </table>\n   * @since 1.1.0\n   */\n  getUpdatedConsumer(consumer) {\n    const currentFunction = 'ConsumerService.getUpdatedConsumer';\n    this.__logger.debug(currentFunction, 'Started', consumer);\n    if (!(consumer instanceof AWSDKConsumer)) {\n      const error = AWSDKError.AWSDKIllegalArgument('consumer is null or not an instance of AWSDKConsumer');\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    if (!Validator.isValidString(consumer.href)) {\n      const error = AWSDKError.AWSDKInternalError('The consumer argument does not contain a valid href property');\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    const options = this.generateOptions('GET', consumer.href);\n    options.auth = this.getUserAuth(consumer);\n    if (options.auth == null) {\n      const error = AWSDKError.AWSDKConsumerNotAuthenticated();\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    if (consumer.parent || consumer.isDependent) {\n      return this.executeRequest(options, AWSDKDependentResponse)\n        .then((dependentResponse) => {\n          this.__logger.debug(currentFunction, 'Got response', dependentResponse);\n          this.updateUserAuthEntry(dependentResponse.dependent, dependentResponse.authToken);\n          return dependentResponse.dependent;\n        })\n        .catch((error) => {\n          this.__logger.error(currentFunction, 'Error', error);\n          throw error;\n        });\n    }\n\n    return this.executeRequest(options, AWSDKConsumerResponse)\n      .then((consumerResponse) => {\n        this.__logger.debug(currentFunction, 'Got response', consumerResponse);\n        this.updateUserAuthEntry(consumerResponse.consumer, consumerResponse.authToken);\n        return consumerResponse.consumer;\n      })\n      .catch((error) => {\n        this.__logger.error(currentFunction, 'Error', error);\n        throw error;\n      });\n  }\n\n  /**\n   * Get an instance of {@link model.AWSDKConsumerRegistration|AWSDKConsumerRegistration} to use for registering a new consumer. <br>\n   * The {@link model.AWSDKConsumerRegistration|AWSDKConsumerRegistration} object obtained here can be validated by an (optional) call to the {@link service.ConsumerService#validateRegistration|validateRegistration} directly or <br>\n   * indirectly via a call to {@link service.ConsumerService#registerConsumer|registerConsumer} which will always validate it<br>\n   * @returns {model.AWSDKConsumerRegistration} returns an instance of a {@link model.AWSDKConsumerRegistration|AWSDKConsumerRegistration} object\n   */\n  newConsumerRegistration() {\n    return new AWSDKConsumerRegistration();\n  }\n\n  /**\n   * Get an instance of {@link model.AWSDKConsumerUpdate|AWSDKConsumerUpdate} to use for updating an existing consumer <br>\n   * The {@link model.AWSDKConsumerUpdate|AWSDKConsumerUpdate} object obtained here can be validated by an (optional) call to the {@link service.ConsumerService#validateConsumerUpdate|validateConsumerUpdate} directly or <br>\n   * indirectly via a call to {@link service.ConsumerService#updateConsumer|updateConsumer} which will always validate it<br>\n   * @returns {model.AWSDKConsumerUpdate} returns an instance of a {@link model.AWSDKConsumerUpdate|AWSDKConsumerUpdate} object\n   */\n  newConsumerUpdate() {\n    return new AWSDKConsumerUpdate();\n  }\n\n  /**\n   * Get an instance of {@link model.AWSDKConsumerOverrideDetails|AWSDKConsumerOverrideDetails} to use when providing consumer data during cart-based visits. <br>\n   * The {@link model.AWSDKConsumerOverrideDetails|AWSDKConsumerOverrideDetails} object obtained here can be validated by an (optional) call to the {@link service.ConsumerService#validateConsumerOverrideDetails(model.AWSDKConsumerOverrideDetails)|validateConsumerOverrideDetails(AWSDKConsumerOverrideDetails)} <br>\n   * @returns {model.AWSDKConsumerOverrideDetails} returns an instance of a {@link model.AWSDKConsumerOverrideDetails|AWSDKConsumerOverrideDetails} object\n   * @since 1.3.1\n   * @deprecated please use {@link service.VisitService#newConsumerOverrideDetails()|newConsumerOverrideDetails()}\n   */\n  newConsumerOverrideDetails() {\n    deprecated('ConsumerService.newConsumerOverrideDetails', 'Invoke the VisitService.newConsumerOverrideDetails function instead', '3.X');\n    return new AWSDKConsumerOverrideDetails();\n  }\n\n  /**\n   * Get an instance of {@link model.AWSDKDependentRegistration|AWSDKDependentRegistration} to use for registering a new dependent. <br>\n   * The {@link model.AWSDKDependentRegistration|AWSDKDependentRegistration} object obtained here can be validated by an (optional) call to the {@link service.ConsumerService#validateDependentRegistration(model.AWSDKDependentRegistration)|validateDependentRegistration(dependentRegistration)} directly or <br>\n   * indirectly via a call to {@link service.ConsumerService#registerDependent(model.AWSDKDependentRegistration)|registerConsumer(consumerRegistration)} which will always validate it<br>\n   * @returns {model.AWSDKDependentRegistration} returns an instance of a {@link model.AWSDKDependentRegistration|AWSDKDependentRegistration} object\n   */\n  newDependentRegistration() {\n    return new AWSDKDependentRegistration();\n  }\n\n  /**\n   * Get an instance of {@link model.AWSDKDependentUpdate|AWSDKDependentUpdate} to use for updating a dependent. <br>\n   * The {@link model.AWSDKDependentUpdate|AWSDKDependentUpdate} object obtained here can be validated by an (optional) call to the {@link service.ConsumerService#validateDependentUpdate(model.AWSDKDependentUpdate)|validateDependentUpdate(dependentUpdate)} directly or <br>\n   * indirectly via a call to {@link service.ConsumerService#updateDependent(model.AWSDKDependentUpdate)|updateDependent(dependentUpdate)} which will always validate it<br>\n   * @returns {model.AWSDKDependentUpdate} returns an instance of a {@link model.AWSDKDependentUpdate|AWSDKDependentUpdate} object\n   */\n  newDependentUpdate() {\n    return new AWSDKDependentUpdate();\n  }\n\n  /**\n   * Get an instance of {@link model.AWSDKSubscriptionUpdate|AWSDKSubscriptionUpdate} to use for updating the subscription for a member. <br>\n   * The {@link model.AWSDKSubscriptionUpdate|AWSDKSubscriptionUpdate} object obtained here can be validated by an (optional) call to the {@link service.ConsumerService#validateSubscriptionUpdate(model.AWSDKSubscriptionUpdate, model.AWSDKConsumer)|validateSubscriptionUpdate(subscriptionUpdate, consumer)} directly or <br>\n   * indirectly via a call to {@link service.ConsumerService#updateInsuranceSubscription( model.AWSDKConsumer, model.AWSDKSubscriptionUpdate)|updateInsuranceSubscription(consumer, subscriptionUpdate)} which will always validate it<br>\n   * @returns {model.AWSDKSubscriptionUpdate} returns an instance of a {@link model.AWSDKSubscriptionUpdate|AWSDKSubscriptionUpdate} object\n   */\n  newSubscriptionUpdate() {\n    return new AWSDKSubscriptionUpdate(false);\n  }\n\n  /**\n   * Get an instance of {@link model.AWSDKSubscriptionUpdate|AWSDKSubscriptionUpdate} to use for updating the subscription for a member. This method is intended for use during the Visit intake flow.<br>\n   * Note: when in the context of a Visit, the \"ignoreEligibilityChecks\" flag on {@link model.AWSDKSubscriptionUpdate|AWSDKSubscriptionUpdate} is set to TRUE as the EDI checks happen during cost calculations.<br>\n   * The {@link model.AWSDKSubscriptionUpdate|AWSDKSubscriptionUpdate} object obtained here can be validated by an (optional) call to the {@link service.ConsumerService#validateSubscriptionUpdate(model.AWSDKSubscriptionUpdate, model.AWSDKConsumer)|validateSubscriptionUpdate(subscriptionUpdate, consumer)} directly or <br>\n   * indirectly via a call to {@link service.ConsumerService#updateInsuranceSubscription( model.AWSDKConsumer, model.AWSDKSubscriptionUpdate)|updateInsuranceSubscription(consumer, subscriptionUpdate)} which will always validate it<br>\n   * @returns {model.AWSDKSubscriptionUpdate} returns an instance of a {@link model.AWSDKSubscriptionUpdate|AWSDKSubscriptionUpdate} object\n   */\n  newVisitSubscriptionUpdate() {\n    return new AWSDKSubscriptionUpdate(true);\n  }\n\n  /**\n   * Retrieve the registration disclaimer {@link model.AWSDKDisclaimer|AWSDKDisclaimer}<br>\n   * Show this to the consumer before registration and record whether or not they accepted it. <br>\n   * @returns {Promise<model.AWSDKDisclaimer|error.AWSDKError>} Returns a Promise that resolves to a {@link model.AWSDKDisclaimer|AWSDKDisclaimer} <br>\n   * or gets rejected with an {@link error.AWSDKError|AWSDKError}\n   * <p><br>Potential Error Codes<br>\n   * <table summary=\"ErrorCodes\" border=\"1\">\n   * <thead>\n   * <tr><th>Error Code</th><th>reason</th></tr>\n   * </thead>\n   * <tbody>\n   * <tr><td>{@link error.AWSDKErrorCode.internalError|AWSDKErrorCode.internalError}</td><td>The AWSDK could not complete the request.</td></tr>\n   * </tbody>\n   * </table>\n   */\n  getRegistrationDisclaimer() {\n    const currentFunction = 'ConsumerService.getRegistrationDisclaimer';\n    this.__logger.debug(currentFunction, 'Started');\n    const link = this.findNamedLink(this.__links, 'enrollmentDisclaimer');\n    if (!Validator.isValidLink(link)) {\n      const error = AWSDKError.AWSDKInternalError('service does not have a valid \"enrollmentDisclaimer\" link entry');\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    const options = this.generateOptions('GET', link.url);\n    options.auth = this.getSdkAuth();\n    return this.executeRequest(options, AWSDKRegistrationDisclaimerResponse)\n      .then((registrationDisclaimerResponse) => {\n        this.__logger.debug(currentFunction, 'Got response', registrationDisclaimerResponse);\n        return registrationDisclaimerResponse.registrationDisclaimer;\n      })\n      .catch((error) => {\n        this.__logger.error(currentFunction, 'Error', error);\n        throw error;\n      });\n  }\n\n  /**\n   * Validate the {@link model.AWSDKConsumerRegistration|AWSDKConsumerRegistration} object<br>\n   * <br>Potential validation errors:<br>\n   * <table summary=\"validation\" border=\"1\">\n   * <tr>\n   * <th>Field</th>\n   * <th>Validation Reason</th>\n   * <th>Notes</th>\n   * </tr>\n   * <tr>\n   * <td>legalResidence</td>\n   * <td>field required</td>\n   * <td>Set to non-empty value</td>\n   * </tr>\n   * <tr>\n   * <td>legalResidence</td>\n   * <td>invalid field value</td>\n   * <td>Value must be in the list of supported state codes for a legal residence</td>\n   * </tr>\n   * <tr>\n   * <td>email</td>\n   * <td>field required</td>\n   * <td>Set to non-empty value</td>\n   * </tr>\n   * <tr>\n   * <td>email</td>\n   * <td>invalid field format</td>\n   * <td>At least 5 chars long, and valid email pattern</td>\n   * </tr>\n   * <tr>\n   * <td>phone</td>\n   * <td>invalid field format</td>\n   * <td>Must have format '[\\\\+]?[0-9.-]+' </td>\n   * </tr>\n   * <tr>\n   * <td>address</td>\n   * <td>field required</td>\n   * <td>Only required if {@link model.AWSDKSystemConfiguration#consumerAddressRequired|AWSDKSystemConfiguration.consumerAddressRequired} is true</td>\n   * </tr>\n   * <tr>\n   * <td>address1</td>\n   * <td>field required</td>\n   * <td>Only required if {@link model.AWSDKSystemConfiguration.consumerAddressRequired|AWSDKSystemConfiguration.consumerAddressRequired} is true</td>\n   * </tr>\n   * <tr>\n   * <td>address1</td>\n   * <td>invalid field format</td>\n   * <td>If required, then must be at least 1 char long</td>\n   * </tr>\n   * <tr>\n   * <td>address2</td>\n   * <td>invalid field format</td>\n   * <td>Only required if {@link model.AWSDKSystemConfiguration#consumerAddressRequired|AWSDKSystemConfiguration.consumerAddressRequired} is true. Can be null, but if not, must be at least 1 char long</td>\n   * </tr>\n   * <tr>\n   * <td>city</td>\n   * <td>field required</td>\n   * <td>Only required if {@link model.AWSDKSystemConfiguration#consumerAddressRequired|AWSDKSystemConfiguration.consumerAddressRequired} is true</td>\n   * </tr>\n   * <tr>\n   * <td>city</td>\n   * <td>invalid field format</td>\n   * <td>Only required if {@link model.AWSDKSystemConfiguration#consumerAddressRequired|AWSDKSystemConfiguration.consumerAddressRequired} is true. At least 2 char long</td>\n   * </tr>\n   * <tr>\n   * <td>stateCode</td>\n   * <td>field required</td>\n   * <td>Only required if {@link model.AWSDKSystemConfiguration#consumerAddressRequired|AWSDKSystemConfiguration.consumerAddressRequired} is true</td>\n   * </tr>\n   * <tr>\n   * <td>stateCode</td>\n   * <td>invalid field value</td>\n   * <td>Only required if {@link model.AWSDKSystemConfiguration#consumerAddressRequired|AWSDKSystemConfiguration.consumerAddressRequired} is true. If so, Value must be in the list of supported state codes for address.</td>\n   * </tr>\n   * <tr>\n   * <td>countryCode</td>\n   * <td>field required</td>\n   * <td>Only required if {@link model.AWSDKSystemConfiguration#consumerAddressRequired|AWSDKSystemConfiguration.consumerAddressRequired} and {@link model.AWSDKSystemConfiguration#isMultiCountry|AWSDKSystemConfiguration.isMultiCountry} is true</td>\n   * </tr>\n   * <tr>\n   * <td>countryCode</td>\n   * <td>invalid field value</td>\n   * <td>Only required if {@link model.AWSDKSystemConfiguration#consumerAddressRequired|AWSDKSystemConfiguration.consumerAddressRequired} and {@link model.AWSDKSystemConfiguration#isMultiCountry|AWSDKSystemConfiguration.isMultiCountry} is true. If so, Value must be in the list of supported country codes for address.</td>\n   * </tr>\n   * <tr>\n   * <td>zipCode</td>\n   * <td>field required</td>\n   * <td>Only required if {@link model.AWSDKSystemConfiguration#consumerAddressRequired|AWSDKSystemConfiguration.consumerAddressRequired} is true</td>\n   * </tr>\n   * <tr>\n   * <td>zipCode</td>\n   * <td>invalid field format</td>\n   * <td>Only required if {@link model.AWSDKSystemConfiguration#consumerAddressRequired|AWSDKSystemConfiguration.consumerAddressRequired} is true. If so, format must be: nnnnn or nnnnn-nnnn</td>\n   * </tr>\n   * <tr>\n   * <td>hasAcceptedDisclaimer</td>\n   * <td>wrong field value</td>\n   * <td>must be TRUE to register</td>\n   * </tr>\n   * <tr>\n   * <td>firstName</td>\n   * <td>field required</td>\n   * <td>Set to non-empty value</td>\n   * </tr>\n   * <tr>\n   * <td>firstName</td>\n   * <td>invalid field format</td>\n   * <td>At least 1 char long</td>\n   * </tr>\n   * <tr>\n   * <td>middleInitial</td>\n   * <td>invalid field format</td>\n   * <td>Only allowed if {@link model.AWSDKSystemConfiguration#consumerMiddleNameHandling|AWSDKSystemConfiguration.consumerMiddleNameHandling} is set to 'INITIAL'. Can be blank or at most 1 character long. </td>\n   * </tr>\n   * <tr>\n   * <td>middleName</td>\n   * <td>invalid field format</td>\n   * <td>Only allowed if {@link model.AWSDKSystemConfiguration#consumerMiddleNameHandling|AWSDKSystemConfiguration.consumerMiddleNameHandling} is set to 'FULLNAME'. Can be blank or at most 100 characters long. </td>\n   * </tr>\n   * <tr>\n   * <td>lastName</td>\n   * <td>field required</td>\n   * <td>Set to non-empty value</td>\n   * </tr>\n   * <tr>\n   * <td>lastName</td>\n   * <td>invalid field format</td>\n   * <td>At least 2 chars long</td>\n   * </tr>\n   * <tr>\n   * <td>gender</td>\n   * <td>field required</td>\n   * <td>Set to non-empty value</td>\n   * </tr>\n   * <tr>\n   * <td>dob</td>\n   * <td>field required</td>\n   * <td>Set to non-empty value</td>\n   * </tr>\n   * <tr>\n   * <td>dob</td>\n   * <td>invalid field format</td>\n   * <td>Must be valid date</td>\n   * </tr>\n   * <tr>\n   * <td>sdkUserId</td>\n   * <td>invalid field format</td>\n   * <td>Must be a non-empty String</td>\n   * </tr>\n   * <tr>\n   * <td>brandings</td>\n   * <td>invalid field format</td>\n   * <td>Must be an Array of String objects</td>\n   * </tr>\n   * </table>\n   *\n   * @param {model.AWSDKConsumerRegistration} consumerRegistration object to validate\n   * @throws {error.AWSDKError} if consumerRegistration is null or not an instance of {@link model.AWSDKConsumerRegistration|AWSDKConsumerRegistration} errorCode will be {@link error.AWSDKErrorCode|AWSDKErrorCode.illegalArgument}\n   * @throws {error.AWSDKError} if patientMrnId, phone, address2, or (depending on the value of {@link model.AWSDKSystemConfiguration#consumerMiddleNameHandling|AWSDKSystemConfiguration.consumerMiddleNameHandling}) middleName, or middleInitial is not set to at least an empty string ( errorCode will be {@link error.AWSDKErrorCode|AWSDKErrorCode.illegalArgument}\n   * @returns {error.AWSDKError[]} an array of {@link error.AWSDKError|AWSDKError} that detail any validation errors.\n   */\n  validateRegistration(consumerRegistration) {\n    const currentFunction = 'ConsumerService.validateRegistration';\n    this.__logger.debug(currentFunction, 'Started', consumerRegistration);\n    const errArrayResult = [];\n    let fieldName;\n    let reason;\n    let recoverySuggestion;\n    if (!(consumerRegistration instanceof AWSDKConsumerRegistration)) {\n      const error = AWSDKError.AWSDKIllegalArgument('consumerRegistration is not instance of AWSDKConsumerRegistration');\n      this.__logger.error(currentFunction, 'Error', error);\n      throw error;\n    }\n    if (!Validator.isStringType(consumerRegistration.phone)) {\n      const error = AWSDKError.AWSDKIllegalArgument('phone must be a valid string');\n      this.__logger.error(currentFunction, 'Error', error);\n      throw error;\n    }\n    if (this.__systemConfiguration.consumerAddressRequired && !Validator.isStringType(consumerRegistration.address2)) {\n      const error = AWSDKError.AWSDKIllegalArgument('address2 must be a valid string');\n      this.__logger.error(currentFunction, 'Error', error);\n      throw error;\n    }\n    if (this.__systemConfiguration.consumerMiddleNameHandling === AWSDKConsumerMiddleNameHandling.INITIAL\n      && !Validator.isStringType(consumerRegistration.middleInitial)) {\n      const error = AWSDKError.AWSDKIllegalArgument('middleInitial must be a valid string');\n      this.__logger.error(currentFunction, 'Error', error);\n      throw error;\n    }\n    if (this.__systemConfiguration.consumerMiddleNameHandling === AWSDKConsumerMiddleNameHandling.FULLNAME\n      && !Validator.isStringType(consumerRegistration.middleName)) {\n      const error = AWSDKError.AWSDKIllegalArgument('middleName must be a valid string');\n      this.__logger.error(currentFunction, 'Error', error);\n      throw error;\n    }\n    if (!consumerRegistration.hasAcceptedDisclaimer) {\n      fieldName = 'hasAcceptedDisclaimer';\n      reason = 'field is set to wrong value';\n      recoverySuggestion = 'Must be true to register. Consumer must accept Terms Of Service to register';\n      errArrayResult.push(AWSDKError.AWSDKFieldValidationError(AWSDKConsumerRegistration, fieldName, reason, recoverySuggestion));\n    }\n    this.__validateConsumerUpdate(true, consumerRegistration, errArrayResult);\n    this.__logger.trace(currentFunction, 'Finished', errArrayResult);\n    return errArrayResult;\n  }\n\n  /**\n   * Validate the {@link model.AWSDKConsumerUpdate|AWSDKConsumerUpdate} object<br>\n   * <br>Potential validation errors:<br>\n   * <table summary=\"validation\" border=\"1\">\n   * <tr>\n   * <th>Field</th>\n   * <th>Validation Reason</th>\n   * <th>Notes</th>\n   * </tr>\n   * <tr>\n   * <td>email</td>\n   * <td>invalid field format</td>\n   * <td>At least 5 chars long, and valid email pattern</td>\n   * </tr>\n   * <tr>\n   * <td>phone</td>\n   * <td>invalid field format</td>\n   * <td>Must have format '[\\\\+]?[0-9.-]+' </td>\n   * </tr>\n   * <tr>\n   * <td>address1</td>\n   * <td>invalid field format</td>\n   * <td>If required, then must be at least 1 char long</td>\n   * </tr>\n   * <tr>\n   * <td>address2</td>\n   * <td>invalid field format</td>\n   * <td>Only required if {@link model.AWSDKSystemConfiguration#consumerAddressRequired|AWSDKSystemConfiguration.consumerAddressRequired} is true. Can be null, but if not, must be at least 1 char long</td>\n   * </tr>\n   * <tr>\n   * <td>city</td>\n   * <td>invalid field format</td>\n   * <td>Only required if {@link model.AWSDKSystemConfiguration#consumerAddressRequired|AWSDKSystemConfiguration.consumerAddressRequired} is true. At least 2 char long</td>\n   * </tr>\n   * <tr>\n   * <td>zipCode</td>\n   * <td>invalid field format</td>\n   * <td>Only required if {@link model.AWSDKSystemConfiguration#consumerAddressRequired|AWSDKSystemConfiguration.consumerAddressRequired} is true. If so, format must be: nnnnn or nnnnn-nnnn</td>\n   * </tr>\n   * <tr>\n   * <td>stateCode</td>\n   * <td>field required</td>\n   * <td>Only required if {@link model.AWSDKSystemConfiguration#consumerAddressRequired|AWSDKSystemConfiguration.consumerAddressRequired} is true</td>\n   * </tr>\n   * <tr>\n   * <td>stateCode</td>\n   * <td>invalid field value</td>\n   * <td>Only required if {@link model.AWSDKSystemConfiguration#consumerAddressRequired|AWSDKSystemConfiguration.consumerAddressRequired} is true. If so, Value must be in the list of supported state codes for address.</td>\n   * </tr>\n   * <tr>\n   * <td>countryCode</td>\n   * <td>field required</td>\n   * <td>Only required if {@link model.AWSDKSystemConfiguration#consumerAddressRequired|AWSDKSystemConfiguration.consumerAddressRequired} and {@link model.AWSDKSystemConfiguration#isMultiCountry|AWSDKSystemConfiguration.isMultiCountry} is true</td>\n   * </tr>\n   * <tr>\n   * <td>countryCode</td>\n   * <td>invalid field value</td>\n   * <td>Only required if {@link model.AWSDKSystemConfiguration#consumerAddressRequired|AWSDKSystemConfiguration.consumerAddressRequired} and {@link model.AWSDKSystemConfiguration#isMultiCountry|AWSDKSystemConfiguration.isMultiCountry} is true. If so, Value must be in the list of supported country codes for address.</td>\n   * </tr>\n   * <tr>\n   * <td>legalResidence</td>\n   * <td>invalid field value</td>\n   * <td>Value must be in the list of supported state codes for a legal residence</td>\n   * </tr>\n   * <tr>\n   * <td>legalResidenceCountryCode</td>\n   * <td>invalid field value</td>\n   * <td>Value must be in the list of supported country codes for a legal residence</td>\n   * </tr>\n   * <tr>\n   * <td>firstName</td>\n   * <td>invalid field format</td>\n   * <td>At least 1 char long</td>\n   * </tr>\n   * <tr>\n   * <td>middleInitial</td>\n   * <td>invalid field format</td>\n   * <td>Only allowed if {@link model.AWSDKSystemConfiguration#consumerMiddleNameHandling|AWSDKSystemConfiguration.consumerMiddleNameHandling} is set to 'INITIAL'. Can be blank or at most 1 character long. </td>\n   * </tr>\n   * <tr>\n   * <td>middleName</td>\n   * <td>invalid field format</td>\n   * <td>Only allowed if {@link model.AWSDKSystemConfiguration#consumerMiddleNameHandling|AWSDKSystemConfiguration.consumerMiddleNameHandling} is set to 'FULLNAME'. Can be blank or at most 100 characters long. </td>\n   * </tr>\n   * <tr>\n   * <td>lastName</td>\n   * <td>invalid field format</td>\n   * <td>At least 2 chars long</td>\n   * </tr>\n   * <tr>\n   * <td>dob</td>\n   * <td>invalid field format</td>\n   * <td>Must be valid date</td>\n   * </tr>\n   * <tr>\n   * <td>sdkUserId</td>\n   * <td>invalid field format</td>\n   * <td>Must be a non-empty String</td>\n   * </tr>\n   * </table>\n   *\n   * @param {model.AWSDKConsumerUpdate} consumerUpdate object to validate\n   * @returns {error.AWSDKError[]} an array of {@link error.AWSDKError|AWSDKError} that detail any validation errors.\n   */\n  validateConsumerUpdate(consumerUpdate) {\n    const currentFunction = 'ConsumerService.validateConsumerUpdate';\n    this.__logger.debug(currentFunction, 'Started', consumerUpdate);\n    const errArrayResult = [];\n    this.__validateConsumerUpdate(false, consumerUpdate, errArrayResult);\n    this.__logger.trace(currentFunction, 'Finished', errArrayResult);\n    return errArrayResult;\n  }\n\n  /**\n   * Validate the {@link model.AWSDKDependentRegistration|AWSDKDependentRegistration} object<br>\n   * <br>Potential validation errors:<br>\n   * <table summary=\"validation\" border=\"1\">\n   * <tr>\n   * <th>Field</th>\n   * <th>Validation Reason</th>\n   * <th>Notes</th>\n   * </tr>\n   * <tr>\n   * <td>firstName</td>\n   * <td>field required</td>\n   * <td>Set to non-empty value</td>\n   * </tr>\n   * <tr>\n   * <td>firstName</td>\n   * <td>invalid field format</td>\n   * <td>At least 1 char long</td>\n   * </tr>\n   * <tr>\n   * <td>middleInitial</td>\n   * <td>invalid field format</td>\n   * <td>Only allowed if {@link model.AWSDKSystemConfiguration#consumerMiddleNameHandling|AWSDKSystemConfiguration.consumerMiddleNameHandling} is set to 'INITIAL'. Can be blank or at most 1 character long. </td>\n   * </tr>\n   * <tr>\n   * <td>middleName</td>\n   * <td>invalid field format</td>\n   * <td>Only allowed if {@link model.AWSDKSystemConfiguration#consumerMiddleNameHandling|AWSDKSystemConfiguration.consumerMiddleNameHandling} is set to 'FULLNAME'. Can be blank or at most 100 characters long. </td>\n   * </tr>\n   * <tr>\n   * <td>lastName</td>\n   * <td>field required</td>\n   * <td>Set to non-empty value</td>\n   * </tr>\n   * <tr>\n   * <td>lastName</td>\n   * <td>invalid field format</td>\n   * <td>At least 2 chars long</td>\n   * </tr>\n   * <tr>\n   * <td>gender</td>\n   * <td>field required</td>\n   * <td>Set to non-empty value</td>\n   * </tr>\n   * <tr>\n   * <td>dob</td>\n   * <td>field required</td>\n   * <td>Set to non-empty value</td>\n   * </tr>\n   * <tr>\n   * <td>dob</td>\n   * <td>invalid field format</td>\n   * <td>Must be valid date</td>\n   * </tr>\n   * <tr>\n   * <td>sdkUserId</td>\n   * <td>invalid field format</td>\n   * <td>Must be a non-empty String</td>\n   * </tr>\n   * </table>\n   *\n   * @param {model.AWSDKDependentRegistration} dependentRegistration object to validate\n   * @returns {error.AWSDKError[]} an array of {@link error.AWSDKError|AWSDKError} that detail any validation errors.\n   */\n  validateDependentRegistration(dependentRegistration) {\n    const currentFunction = 'ConsumerService.validateDependentRegistration';\n    this.__logger.debug(currentFunction, 'Started', dependentRegistration);\n    const errArrayResult = [];\n    this.__validateBaseConsumerUpdate(true, dependentRegistration, errArrayResult);\n    this.__logger.trace(currentFunction, 'Finished', errArrayResult);\n    return errArrayResult;\n  }\n\n  /**\n   * Validate the {@link model.AWSDKDependentUpdate|AWSDKDependentUpdate} object<br>\n   * <br>Potential validation errors:<br>\n   * <table summary=\"validation\" border=\"1\">\n   * <tr>\n   * <th>Field</th>\n   * <th>Validation Reason</th>\n   * <th>Notes</th>\n   * </tr>\n   * <tr>\n   * <td>firstName</td>\n   * <td>invalid field format</td>\n   * <td>At least 1 char long</td>\n   * </tr>\n   * <tr>\n   * <td>middleInitial</td>\n   * <td>invalid field format</td>\n   * <td>Only allowed if {@link model.AWSDKSystemConfiguration#consumerMiddleNameHandling|AWSDKSystemConfiguration.consumerMiddleNameHandling} is set to 'INITIAL'. Can be blank or at most 1 character long. </td>\n   * </tr>\n   * <tr>\n   * <td>middleName</td>\n   * <td>invalid field format</td>\n   * <td>Only allowed if {@link model.AWSDKSystemConfiguration#consumerMiddleNameHandling|AWSDKSystemConfiguration.consumerMiddleNameHandling} is set to 'FULLNAME'. Can be blank or at most 100 characters long. </td>\n   * </tr>\n   * <tr>\n   * <td>lastName</td>\n   * <td>invalid field format</td>\n   * <td>At least 2 chars long</td>\n   * </tr>\n   * <tr>\n   * <td>dob</td>\n   * <td>invalid field format</td>\n   * <td>Must be valid date</td>\n   * </tr>\n   * <tr>\n   * <td>sdkUserId</td>\n   * <td>invalid field format</td>\n   * <td>Must be a non-empty String</td>\n   * </tr>\n   * <tr>\n   * <td>genderIdentityKey</td>\n   * <td>invalid field format</td>\n   * <td>Must be null, empty or non-whitespace-only string</td>\n   * </tr>\n   * </table>\n   *\n   * @param {model.AWSDKDependentUpdate} dependentUpdate object to validate\n   * @returns {error.AWSDKError[]} an array of {@link error.AWSDKError|AWSDKError} that detail any validation errors.\n   */\n  validateDependentUpdate(dependentUpdate) {\n    const currentFunction = 'ConsumerService.validateDependentUpdate';\n    this.__logger.debug(currentFunction, 'Started', dependentUpdate);\n    const errArrayResult = [];\n    this.__validateBaseConsumerUpdate(false, dependentUpdate, errArrayResult);\n    this.__logger.trace(currentFunction, 'Finished', errArrayResult);\n    return errArrayResult;\n  }\n\n  /**\n   * For internal Use Only!!\n   * @private\n   */\n  __checkConsumerProtectedFields(consumer, consumerUpdate) {\n    const modifiedProtectedFields = [];\n    if (this.__checkModifiedField(consumer.email, consumerUpdate.email) && this.isFieldProtected(consumer, 'email')) {\n      modifiedProtectedFields.push('email');\n    }\n    if (this.__checkModifiedField(consumer.phone, consumerUpdate.phone) && this.isFieldProtected(consumer, 'phone')) {\n      modifiedProtectedFields.push('phone');\n    }\n    const address = consumer.address;\n    if (this.__checkModifiedAddress(consumerUpdate, address, 'address1') && this.isFieldProtected(consumer, 'address1')) {\n      modifiedProtectedFields.push('address1');\n    }\n    if (this.__checkModifiedAddress(consumerUpdate, address, 'address2') && this.isFieldProtected(consumer, 'address2')) {\n      modifiedProtectedFields.push('address2');\n    }\n    if (this.__checkModifiedAddress(consumerUpdate, address, 'city') && this.isFieldProtected(consumer, 'city')) {\n      modifiedProtectedFields.push('city');\n    }\n    if (this.__checkModifiedAddress(consumerUpdate, address, 'state') && this.isFieldProtected(consumer, 'state')) {\n      modifiedProtectedFields.push('state');\n    }\n    if (this.__checkModifiedAddress(consumerUpdate, address, 'zipCode') && this.isFieldProtected(consumer, 'zipCode')) {\n      modifiedProtectedFields.push('zipCode');\n    }\n    return modifiedProtectedFields.concat(this.__checkBaseConsumerProtectedFields(consumer, consumerUpdate));\n  }\n\n  /**\n   * For internal Use Only!!\n   * @private\n   */\n  __checkBaseConsumerProtectedFields(consumer, consumerUpdate) {\n    const modifiedProtectedFields = [];\n    if (this.__checkModifiedField(consumer.firstName, consumerUpdate.firstName) && this.isFieldProtected(consumer, 'firstName')) {\n      modifiedProtectedFields.push('firstName');\n    }\n    if (this.__checkModifiedField(consumer.middleName, consumerUpdate.middleName) && this.isFieldProtected(consumer, 'middleName')) {\n      modifiedProtectedFields.push('middleName');\n    }\n    if (this.__checkModifiedField(consumer.middleInitial, consumerUpdate.middleInitial) && this.isFieldProtected(consumer, 'middleInitial')) {\n      modifiedProtectedFields.push('middleInitial');\n    }\n    if (this.__checkModifiedField(consumer.lastName, consumerUpdate.lastName) && this.isFieldProtected(consumer, 'lastName')) {\n      modifiedProtectedFields.push('lastName');\n    }\n    if ((consumerUpdate.dob && !Validator.areDatesEqual(consumer.dob, consumerUpdate.dob)) && this.isFieldProtected(consumer, 'dob')) {\n      modifiedProtectedFields.push('dob');\n    }\n    if (this.__checkModifiedField(consumer.gender, consumerUpdate.gender) && this.isFieldProtected(consumer, 'gender')) {\n      modifiedProtectedFields.push('gender');\n    }\n    return modifiedProtectedFields;\n  }\n\n  /**\n   * For internal Use Only!!\n   * @private\n   */\n  __checkModifiedAddress(consumerUpdate, address, fieldName) {\n    return (!address && Validator.isValidString(consumerUpdate[fieldName])) || (address && this.__checkModifiedField(address[fieldName], consumerUpdate[fieldName]));\n  }\n\n  /**\n   * For internal Use Only!!\n   * @private\n   */\n  __checkModifiedField(originalValue, newValue) {\n    return ((newValue !== originalValue) && newValue);\n  }\n\n  /**\n   * Internal Use only!!\n   * @private\n   */\n  __validateConsumerUpdate(fieldsRequired, consumerUpdate, errors) {\n    const currentFunction = 'ConsumerService.__validateConsumerUpdate';\n    this.__logger.trace(currentFunction, 'Started', fieldsRequired, consumerUpdate, errors);\n    let fieldName;\n    let reason;\n    let recoverySuggestion;\n    const sysConfig = this.__systemConfiguration;\n    if (Validator.isValidString(consumerUpdate.phone) && !Validator.isPhoneNumberValid(consumerUpdate.phone)) {\n      fieldName = 'phone';\n      reason = 'invalid format';\n      recoverySuggestion = 'See valid format in docs';\n      errors.push(AWSDKError.AWSDKFieldValidationError(AWSDKConsumerUpdate, fieldName, reason, recoverySuggestion));\n    }\n    if (fieldsRequired && !Validator.isValidString(consumerUpdate.email)) {\n      fieldName = 'email';\n      reason = 'field required';\n      recoverySuggestion = 'See valid format in docs';\n      errors.push(AWSDKError.AWSDKFieldValidationError(AWSDKConsumerUpdate, fieldName, reason, recoverySuggestion));\n    }\n    if (consumerUpdate.email && !Validator.isEmailValid(consumerUpdate.email)) {\n      fieldName = 'email';\n      reason = 'invalid format';\n      recoverySuggestion = 'See valid format in docs';\n      errors.push(AWSDKError.AWSDKFieldValidationError(AWSDKConsumerUpdate, fieldName, reason, recoverySuggestion));\n    }\n    const isAddressRequired = sysConfig.consumerAddressRequired;\n    if (isAddressRequired) {\n      if (fieldsRequired && !Validator.isValidString(consumerUpdate.address1)) {\n        fieldName = 'address1';\n        reason = 'field required';\n        recoverySuggestion = 'set to non-empty value';\n        errors.push(AWSDKError.AWSDKFieldValidationError(AWSDKConsumerUpdate, fieldName, reason, recoverySuggestion));\n      }\n      if (Validator.isValidString(consumerUpdate.address1) && !Validator.isAddressValid(consumerUpdate.address1, true)) {\n        fieldName = 'address1';\n        reason = 'invalid format';\n        recoverySuggestion = 'see valid format in docs';\n        errors.push(AWSDKError.AWSDKFieldValidationError(AWSDKConsumerUpdate, fieldName, reason, recoverySuggestion));\n      }\n      if (Validator.isValidString(consumerUpdate.address2) && !Validator.isAddressValid(consumerUpdate.address2, false)) {\n        fieldName = 'address2';\n        reason = 'invalid format';\n        recoverySuggestion = 'see valid format in docs';\n        errors.push(AWSDKError.AWSDKFieldValidationError(AWSDKConsumerUpdate, fieldName, reason, recoverySuggestion));\n      }\n      if (fieldsRequired && !Validator.isValidString(consumerUpdate.city)) {\n        fieldName = 'city';\n        reason = 'field required';\n        recoverySuggestion = 'set to non-empty value';\n        errors.push(AWSDKError.AWSDKFieldValidationError(AWSDKConsumerUpdate, fieldName, reason, recoverySuggestion));\n      }\n      if (Validator.isValidString(consumerUpdate.city) && consumerUpdate.city.length <= 1) {\n        fieldName = 'city';\n        reason = 'invalid format';\n        recoverySuggestion = 'see valid format in docs';\n        errors.push(AWSDKError.AWSDKFieldValidationError(AWSDKConsumerUpdate, fieldName, reason, recoverySuggestion));\n      }\n      if (fieldsRequired && !Validator.isValidString(consumerUpdate.zipCode)) {\n        fieldName = 'zipCode';\n        reason = 'field required';\n        recoverySuggestion = 'set to non-empty value';\n        errors.push(AWSDKError.AWSDKFieldValidationError(AWSDKConsumerUpdate, fieldName, reason, recoverySuggestion));\n      }\n      if (Validator.isValidString(consumerUpdate.zipCode) && !Validator.isZipCodeValid(consumerUpdate.zipCode)) {\n        fieldName = 'zipCode';\n        reason = 'invalid format';\n        recoverySuggestion = 'see valid format in docs';\n        errors.push(AWSDKError.AWSDKFieldValidationError(AWSDKConsumerUpdate, fieldName, reason, recoverySuggestion));\n      }\n      if (fieldsRequired || consumerUpdate.countryCode || consumerUpdate.stateCode) {\n        this.__validateCountryState(consumerUpdate.countryCode, consumerUpdate.stateCode, errors, true, false);\n      }\n    }\n    if (Validator.isValidString(consumerUpdate.preferredLocale) && !this.__systemConfiguration.supportedLocales.includes(consumerUpdate.preferredLocale)) {\n      fieldName = 'preferredLocale';\n      reason = 'unsupported locale';\n      recoverySuggestion = 'use a supported locale';\n      errors.push(AWSDKError.AWSDKFieldValidationError(AWSDKConsumerUpdate, fieldName, reason, recoverySuggestion));\n    }\n    if (fieldsRequired || consumerUpdate.legalResidenceCountryCode || consumerUpdate.legalResidence) {\n      this.__validateCountryState(consumerUpdate.legalResidenceCountryCode, consumerUpdate.legalResidence, errors, false, true, AWSDKConsumerUpdate);\n    }\n    this.__validateBaseConsumerUpdate(fieldsRequired, consumerUpdate, errors);\n    this.__logger.trace(currentFunction, 'Finished', errors);\n  }\n\n  /**\n   * For internal Use Only!!\n   * @private\n   */\n  __validateBaseConsumerUpdate(fieldsRequired, consumerBaseUpdate, errors) {\n    const currentFunction = 'ConsumerService.__validateBaseConsumerUpdate';\n    this.__logger.trace(currentFunction, 'Started', fieldsRequired, consumerBaseUpdate, errors);\n    let fieldName;\n    let reason;\n    let recoverySuggestion;\n    if (fieldsRequired && !Validator.isValidString(consumerBaseUpdate.firstName, false)) {\n      fieldName = 'firstName';\n      reason = 'field required';\n      recoverySuggestion = 'Set to non-empty value';\n      errors.push(AWSDKError.AWSDKFieldValidationError(AWSDKBaseConsumerUpdate, fieldName, reason, recoverySuggestion));\n    }\n    if (Validator.isValidString(consumerBaseUpdate.firstName) && !Validator.isFirstNameValid(consumerBaseUpdate.firstName)) {\n      fieldName = 'firstName';\n      reason = 'invalid format';\n      recoverySuggestion = 'See valid format in docs';\n      errors.push(AWSDKError.AWSDKFieldValidationError(AWSDKBaseConsumerUpdate, fieldName, reason, recoverySuggestion));\n    }\n    // both middle initial and middle name can be empty even if the system is configured to accept them\n    if (this.__systemConfiguration.consumerMiddleNameHandling === AWSDKConsumerMiddleNameHandling.INITIAL && consumerBaseUpdate.middleInitial != null && !Validator.isMiddleInitialValid(consumerBaseUpdate.middleInitial)) {\n      fieldName = 'middleInitial';\n      reason = 'invalid format';\n      recoverySuggestion = 'See valid format in docs';\n      errors.push(AWSDKError.AWSDKFieldValidationError(AWSDKBaseConsumerUpdate, fieldName, reason, recoverySuggestion));\n    }\n    if (this.__systemConfiguration.consumerMiddleNameHandling === AWSDKConsumerMiddleNameHandling.FULLNAME && consumerBaseUpdate.middleName != null && !Validator.isMiddleNameValid(consumerBaseUpdate.middleName)) {\n      fieldName = 'middleName';\n      reason = 'invalid format';\n      recoverySuggestion = 'See valid format in docs';\n      errors.push(AWSDKError.AWSDKFieldValidationError(AWSDKBaseConsumerUpdate, fieldName, reason, recoverySuggestion));\n    }\n    if (fieldsRequired && !Validator.isValidString(consumerBaseUpdate.lastName, false)) {\n      fieldName = 'lastName';\n      reason = 'field required';\n      recoverySuggestion = 'Set to non-empty value';\n      errors.push(AWSDKError.AWSDKFieldValidationError(AWSDKBaseConsumerUpdate, fieldName, reason, recoverySuggestion));\n    }\n    if (Validator.isValidString(consumerBaseUpdate.lastName) && !Validator.isLastNameValid(consumerBaseUpdate.lastName)) {\n      fieldName = 'lastName';\n      reason = 'invalid format';\n      recoverySuggestion = 'See valid format in docs';\n      errors.push(AWSDKError.AWSDKFieldValidationError(AWSDKBaseConsumerUpdate, fieldName, reason, recoverySuggestion));\n    }\n    if (fieldsRequired && !Validator.isValidString(consumerBaseUpdate.gender)) {\n      fieldName = 'gender';\n      reason = 'field required';\n      recoverySuggestion = 'Set to non-empty value';\n      errors.push(AWSDKError.AWSDKFieldValidationError(AWSDKBaseConsumerUpdate, fieldName, reason, recoverySuggestion));\n    }\n    // allowing gender identity key to be null/unset or empty string, but not all empty chars\n    const { genderIdentityKey } = consumerBaseUpdate;\n    if (this.__systemConfiguration.genderSupportEnabled && genderIdentityKey != null && genderIdentityKey !== '' && !Validator.isValidString(genderIdentityKey, false)) {\n      fieldName = 'genderIdentityKey';\n      reason = 'invalid format';\n      recoverySuggestion = 'See valid format in docs';\n      errors.push(AWSDKError.AWSDKFieldValidationError(AWSDKConsumerOverrideDetails, fieldName, reason, recoverySuggestion));\n    }\n    if (fieldsRequired && consumerBaseUpdate.dob == null) {\n      fieldName = 'dob';\n      reason = 'field required';\n      recoverySuggestion = 'Set to non-empty value';\n      errors.push(AWSDKError.AWSDKFieldValidationError(AWSDKBaseConsumerUpdate, fieldName, reason, recoverySuggestion));\n    }\n    if (consumerBaseUpdate.dob != null && (consumerBaseUpdate.dob instanceof Date) && consumerBaseUpdate.dob.getTime() > Date.now()) {\n      fieldName = 'dob';\n      reason = 'invalid value';\n      recoverySuggestion = 'Set to valid value';\n      errors.push(AWSDKError.AWSDKFieldValidationError(AWSDKBaseConsumerUpdate, fieldName, reason, recoverySuggestion));\n    }\n    if (consumerBaseUpdate.sdkUserId != null && !Validator.isValidString(consumerBaseUpdate.sdkUserId)) {\n      fieldName = 'sdkUserId';\n      reason = 'invalid format';\n      recoverySuggestion = 'See valid format in docs';\n      errors.push(AWSDKError.AWSDKFieldValidationError(AWSDKConsumerUpdate, fieldName, reason, recoverySuggestion));\n    }\n    const brandings = consumerBaseUpdate.brandings;\n    if (brandings && ((!Array.isArray(brandings)) || (Array.isArray(brandings) && brandings.length > 0 && brandings.some(item => typeof item !== 'string')))) {\n      fieldName = 'brandings';\n      reason = 'invalid format';\n      recoverySuggestion = 'See valid format in docs';\n      errors.push(AWSDKError.AWSDKFieldValidationError(AWSDKConsumerUpdate, fieldName, reason, recoverySuggestion));\n    }\n    this.__logger.trace(currentFunction, 'Finished', errors);\n  }\n\n  /**\n   * For internal Use Only!!\n   * @private\n   */\n  __validateCountryState(countryCode, stateCode, errors, checkAddress, checkResidence, objectType = null) {\n    const currentFunction = 'ConsumerService.__validateCountryState';\n    this.__logger.trace(currentFunction, 'Started', countryCode, stateCode, errors, checkAddress, checkResidence);\n    let fieldName;\n    let reason;\n    let recoverySuggestion;\n    if (this.__systemConfiguration.isMultiCountry && !Validator.isValidString(countryCode)) {\n      fieldName = checkResidence ? 'legalResidenceCountryCode' : 'addressCountryCode';\n      reason = 'field required';\n      recoverySuggestion = 'set to non-empty value';\n      errors.push(AWSDKError.AWSDKFieldValidationError(objectType, fieldName, reason, recoverySuggestion));\n      this.__logger.trace(currentFunction, 'Finished', errors);\n      return;\n    }\n    if (!Validator.isValidString(stateCode)) {\n      fieldName = checkResidence ? 'legalResidenceStateCode' : 'addressStateCode';\n      reason = 'field required';\n      recoverySuggestion = 'set to non-empty value';\n      errors.push(AWSDKError.AWSDKFieldValidationError(objectType, fieldName, reason, recoverySuggestion));\n      this.__logger.trace(currentFunction, 'Finished', errors);\n      return;\n    }\n\n    let country = null;\n    if (!Validator.isValidString(countryCode)) {\n      country = this.__countries[0];\n    } else {\n      country = this.__countries.find(element => element.code === countryCode);\n    }\n    if (!country) {\n      fieldName = checkResidence ? 'legalResidenceCountryCode' : 'addressCountryCode';\n      reason = 'invalid country code';\n      recoverySuggestion = `set to valid value for ${checkResidence ? 'legal residence' : 'address'}`;\n      errors.push(AWSDKError.AWSDKFieldValidationError(objectType, fieldName, reason, recoverySuggestion));\n      this.__logger.trace(currentFunction, 'Finished', errors);\n      return;\n    }\n    if (checkAddress) {\n      const state = country.states.find(element => element.code === stateCode && element.legalAddress === true);\n      if (!state) {\n        fieldName = 'addressStateCode';\n        reason = 'invalid state code for address';\n        recoverySuggestion = 'set to valid value for address';\n        errors.push(AWSDKError.AWSDKFieldValidationError(objectType, fieldName, reason, recoverySuggestion));\n      }\n    }\n    if (checkResidence) {\n      const state = country.states.find(element => element.code === stateCode && element.legalResidence === true);\n      if (!state) {\n        fieldName = 'legalResidenceStateCode';\n        reason = 'invalid state code for legal residence';\n        recoverySuggestion = 'set to valid value for legal residence';\n        errors.push(AWSDKError.AWSDKFieldValidationError(objectType, fieldName, reason, recoverySuggestion));\n      }\n    }\n    this.__logger.trace(currentFunction, 'Finished', errors);\n  }\n\n  /**\n   * Register a new {@link model.AWSDKConsumer|AWSDKConsumer}<br>\n   * see {@link service.ConsumerService#validateRegistration(model.AWSDKConsumerRegistration)|validateRegistration(consumerRegistration)} for details on validation of registration fields<br>\n   * The given {@link model.AWSDKConsumer} will be authenticated<br>\n   * @param {model.AWSDKConsumerRegistration} consumerRegistration REQUIRED the {@link model.AWSDKConsumerRegistration|AWSDKConsumerRegistration} object with registration information about the {@link model.AWSDKConsumer|AWSDKConsumer}\n   * @returns {Promise<model.AWSDKConsumer|error.AWSDKError>} a promise that will resolve to a {@link model.AWSDKConsumer|AWSDKConsumer} object or rejected with {@link error.AWSDKError|AWSDKError}\n   * <p><br>Potential Error Codes<br>\n   * <table summary=\"ErrorCodes\" border=\"1\">\n   * <thead>\n   * <tr><th>Error Code</th><th>reason</th></tr>\n   * </thead>\n   * <tbody>\n   * <tr><td>{@link error.AWSDKErrorCode.internalError|AWSDKErrorCode.internalError}</td><td>The AWSDK could not complete the request.</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.illegalArgument|AWSDKErrorCode.illegalArgument}</td><td>If consumerRegistration is null or not a valid instance of AWSDKConsumerRegistration</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.validationErrors|AWSDKErrorCode.validationErrors}</td><td>If any of the consumerRegistration values are invalid. The errors property will return the array of validation errors.</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.validationConsumerUnderage|AWSDKErrorCode.validationConsumerUnderage}</td><td>Cannot register underage consumer.</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.validationEmailInUse|AWSDKErrorCode.validationEmailInUse}</td><td>There's already a user in the system with the given email address.</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.validationSourceIdInUse|AWSDKErrorCode.validationSourceIdInUse}</td><td>When the source id associated with this Consumer already exists for a different Consumer.</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.updateConsumerAuthKeyFailed|AWSDKErrorCode.updateConsumerAuthKeyFailed}</td><td>Problem updating the consumerAuthKey.</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.invalidTimeZone|AWSDKErrorCode.invalidTimeZone}</td><td>The TimeZone provided is not a valid canonical timezone.</td></tr>\n   * </tbody>\n   * </table>\n   */\n  registerConsumer(consumerRegistration) {\n    const currentFunction = 'ConsumerService.registerConsumer';\n    this.__logger.debug(currentFunction, 'Started', consumerRegistration);\n    if (!(consumerRegistration instanceof AWSDKConsumerRegistration)) {\n      const error = AWSDKError.AWSDKIllegalArgument('Param \"consumerRegistration\" must be of type AWSDKConsumerRegistration');\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    const link = this.findNamedLink(this.__links, 'enrollMember');\n    if (!Validator.isValidLink(link)) {\n      const error = AWSDKError.AWSDKInternalError('service does not have a valid \"enrollMember\" link entry');\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    const errArray = this.validateRegistration(consumerRegistration);\n    if (errArray.length > 0) {\n      const error = AWSDKError.AWSDKValidationErrors(errArray);\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    const options = this.generateOptions('POST', link.url, false);\n    options.auth = this.getSdkAuth();\n    options.headers['Content-Type'] = 'application/json';\n    options.headers['X-App-Identifier'] = this.__config.sdkApiKey;\n    options.headers.Accept = 'application/vnd.amwell-v11.2+json';\n    options.body = consumerRegistration.__toRequestBody(this.__systemConfiguration);\n    return this.executeRequest(options, AWSDKConsumerResponse)\n      .then((consumerResponse) => {\n        this.__logger.debug(currentFunction, 'Got response', consumerResponse);\n        this.__logger.info(currentFunction, 'Complete');\n        // TODO need to call accept disclaimer but we are not authenticated\n        return consumerResponse.consumer;\n      })\n      .catch((error) => {\n        this.__logger.error(currentFunction, 'Error', error);\n        throw error;\n      });\n  }\n\n  /**\n   * Complete the registration for a partially registered {@link model.AWSDKConsumer|AWSDKConsumer}<br>\n   * @param {model.AWSDKAuthentication} authentication REQUIRED\n   * @param {String} legalResidenceState the two character State code (e.g. MA, ME, FL) REQUIRED\n   * @param {String} legalResidenceCountry the two character Country code (e.g. US)\n   * @param {String} newUsername the new username for the consumer REQUIRED\n   * @param {String} newPassword the new password for the consumer REQUIRED\n   * @returns {Promise<boolean|error.AWSDKError>} a promise that will resolve to a boolean indicating success, or rejected with an {@link error.AWSDKError|AWSDKError}\n   * <p><br>Potential Error Codes<br>\n   * <table summary=\"ErrorCodes\" border=\"1\">\n   * <thead>\n   * <tr><th>Error Code</th><th>reason</th></tr>\n   * </thead>\n   * <tbody>\n   * <tr><td>{@link error.AWSDKErrorCode.internalError|AWSDKErrorCode.internalError}</td><td>The AWSDK could not complete the request.</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.illegalArgument|AWSDKErrorCode.illegalArgument}</td><td>If authentication is null or not a valid instance of AWSDKAuthentication</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.validationRequiredParameterMissing|AWSDKErrorCode.validationRequiredParameterMissing}</td><td>Missing parameter.</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.validationErrors|AWSDKErrorCode.validationErrors}</td><td>If legalResidenceCountry or legalResidenceState values are invalid. The errors property will return the array of validation errors.</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.consumerAlreadyRegistered|AWSDKErrorCode.consumerAlreadyRegistered}</td><td>Consumer is already registered.</td></tr>\n   * </tbody>\n   * </table>\n   */\n  completeRegistration(authentication, legalResidenceState, legalResidenceCountry, newUsername, newPassword) {\n    const currentFunction = 'ConsumerService.completeRegistration';\n    this.__logger.debug(currentFunction, 'Started', authentication, legalResidenceState, legalResidenceCountry, newUsername, newPassword);\n    if (!(authentication instanceof AWSDKAuthentication)) {\n      const error = AWSDKError.AWSDKIllegalArgument('Param \"authentication\" must be of type AWSDKAuthentication');\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    if (!authentication.needsToCompleteRegistration) {\n      const error = AWSDKError.AWSDKConsumerAlreadyRegistered();\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    const errors = [];\n    this.__validateCountryState(legalResidenceCountry, legalResidenceState, errors, false, true);\n    if (errors.length > 0) {\n      const error = AWSDKError.AWSDKValidationErrors(errors);\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    if (!Validator.isValidString(newUsername)) {\n      const error = AWSDKError.AWSDKValidationRequiredParameterMissing('Param \"newUserName\" must be provided');\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    if (!Validator.isValidString(newPassword)) {\n      const error = AWSDKError.AWSDKValidationRequiredParameterMissing('Param \"newPassword\" must be provided');\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    const link = this.findNamedLink(authentication.authenticationLinks, 'completeEnrollment');\n    if (!Validator.isValidLink(link)) {\n      const error = AWSDKError.AWSDKInternalError('authentication does not have a valid \"completeEnrollment\" link entry');\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    const options = this.generateOptions('POST', link.url);\n    options.auth = this.getUserAuth(authentication.consumer);\n    options.form.set('sdkApiKey', this.__config.sdkApiKey);\n    options.form.set('sdkUserAuthKey', authentication.sdkUserAuthKey);\n    options.form.set('newUsername', newUsername);\n    options.form.set('newPassword', newPassword);\n    options.form.set('legalResidencyState', legalResidenceState);\n    options.form.set('legalResidenceCountry', legalResidenceCountry);\n    return this.executeRequest(options, AWSDKResponse)\n      .then((response) => {\n        this.__logger.debug(currentFunction, 'Got response', response);\n        this.__logger.info(currentFunction, 'Complete');\n        return true;\n      })\n      .catch((error) => {\n        this.__logger.error(currentFunction, 'Error', error);\n        throw error;\n      });\n  }\n\n  /**\n   *\n   * Update an existing {@link model.AWSDKConsumer|AWSDKConsumer}<br>\n   * @param {model.AWSDKConsumer} consumer REQUIRED the {@link model.AWSDKConsumer|AWSDKConsumer} object that the {@link model.AWSDKConsumerUpdate|AWSDKConsumerUpdate} is being applied to\n   * @param {model.AWSDKConsumerUpdate} consumerUpdate REQUIRED the {@link model.AWSDKConsumerUpdate|AWSDKConsumerUpdate} object with update information about the {@link model.AWSDKConsumer|AWSDKConsumer}\n   * @returns {Promise<model.AWSDKConsumer|error.AWSDKError>} a promise that will resolve to a {@link model.AWSDKConsumer|AWSDKConsumer} object or rejected with {@link error.AWSDKError|AWSDKError}\n   * <p><br>Potential Error Codes<br>\n   * <table summary=\"ErrorCodes\" border=\"1\">\n   * <thead>\n   * <tr><th>Error Code</th><th>reason</th></tr>\n   * </thead>\n   * <tbody>\n   * <tr><td>{@link error.AWSDKErrorCode.consumerNotAuthenticated|AWSDKErrorCode.consumerNotAuthenticated}</td><td>The consumer is not authenticated.</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.modifiedProtectedField|AWSDKErrorCode.modifiedProtectedField}</td><td>The consumer is feed controlled and some fields cannot be modified.</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.illegalArgument|AWSDKErrorCode.illegalArgument}</td><td>If consumer is not a valid instance of AWSDKConsumer\n   * or consumer update is not a valid instance of AWSDKConsumerUpdate</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.validationErrors|AWSDKErrorCode.validationErrors}</td><td>If any of the consumerUpdate values are invalid. The errors property will return the array of validation errors.</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.invalidTimeZone|AWSDKErrorCode.invalidTimeZone}</td><td>The TimeZone provided is not a valid canonical timezone.</td></tr>\n   * </tbody>\n   * </table>\n   */\n  updateConsumer(consumer, consumerUpdate) {\n    const currentFunction = 'ConsumerService.updateConsumer';\n    this.__logger.debug(currentFunction, 'Started', consumer, consumerUpdate);\n    if (!(consumer instanceof AWSDKConsumer)) {\n      const error = AWSDKError.AWSDKIllegalArgument('Param \"consumer\" must be of type AWSDKConsumer');\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    if (!(consumerUpdate instanceof AWSDKConsumerUpdate)) {\n      const error = AWSDKError.AWSDKIllegalArgument('Param \"consumerUpdate\" must be of type AWSDKConsumerUpdate');\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    const errArray = this.validateConsumerUpdate(consumerUpdate);\n    if (errArray.length > 0) {\n      const error = AWSDKError.AWSDKValidationErrors(errArray);\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    const modifiedProtectedFields = this.__checkConsumerProtectedFields(consumer, consumerUpdate);\n    if (modifiedProtectedFields.length > 0) {\n      const error = AWSDKError.AWSDKModifiedProtectedField(modifiedProtectedFields);\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    const auth = this.getUserAuth(consumer);\n    if (auth == null) {\n      const error = AWSDKError.AWSDKConsumerNotAuthenticated();\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    const options = this.generateOptions('PUT', consumer.href, false);\n    options.auth = auth;\n    options.headers['Content-Type'] = 'application/json';\n    options.headers.Accept = 'application/vnd.amwell-v11.2+json';\n    options.body = consumerUpdate.__toRequestBody(this.__systemConfiguration, this.__config.ignorePropagation);\n    return this.executeRequest(options, AWSDKConsumerResponse)\n      .then((consumerResponse) => {\n        this.__logger.debug(currentFunction, 'Got response', consumerResponse);\n        this.updateUserAuthEntry(consumer, consumerResponse.authToken);\n        this.__logger.info(currentFunction, 'Complete');\n        return consumerResponse.consumer;\n      })\n      .catch((error) => {\n        this.__logger.error(currentFunction, 'Error', error);\n        throw error;\n      });\n  }\n\n  /**\n   * Register a new {@link model.AWSDKConsumer} dependent <br>\n   * see {@link service.ConsumerService#validateDependentRegistration(model.AWSDKDependentRegistration)|validateDependentRegistration(dependentRegistration)} for details on validation of registration fields<br>\n   * @param {model.AWSDKConsumer} parent REQUIRED the {@link model.AWSDKConsumer|AWSDKConsumer} object with parent information for the {@link model.AWSDKConsumer|AWSDKConsumer} dependent\n   * @param {model.AWSDKDependentRegistration} dependentRegistration REQUIRED the {@link model.AWSDKDependentRegistration|AWSDKDependentRegistration} object with registration information about the {@link model.AWSDKConsumer|AWSDKConsumer} dependent\n   * @param {boolean} [performDependentCheck] a boolean indicating whether or not there should be a check for existence of the {@link model.AWSDKDependent|AWSDKDependent} we're trying to register <b>DEPRECATED: please use the property of the same name on AWSDKDependentRegistration</b>\n   * @returns {Promise<model.AWSDKConsumer|error.AWSDKError>} a promise that will resolve to a {@link model.AWSDKConsumer|AWSDKConsumer} object or rejected with {@link error.AWSDKError|AWSDKError}\n   * <p><br>Potential Error Codes<br>\n   * <table summary=\"ErrorCodes\" border=\"1\">\n   * <thead>\n   * <tr><th>Error Code</th><th>reason</th></tr>\n   * </thead>\n   * <tbody>\n   * <tr><td>{@link error.AWSDKErrorCode.consumerNotAuthenticated|AWSDKErrorCode.consumerNotAuthenticated}</td><td>The consumer is not authenticated.</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.illegalArgument|AWSDKErrorCode.illegalArgument}</td><td>If parent is not a valid instance of AWSDKConsumer\n   * or dependentRegistration is not a valid instance of AWSDKDependentRegistration</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.internalError|AWSDKErrorCode.internalError}</td><td>The AWSDK could not complete the request.</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.validationErrors|AWSDKErrorCode.validationErrors}</td><td>If any of the dependentRegistration values are invalid. The errors property will return the array of validation errors.</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.validationSourceIdInUse|AWSDKErrorCode.validationSourceIdInUse}</td><td>When the source id associated with this Consumer already exists for a different Consumer.</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.validationDependentMatchFound|AWSDKErrorCode.validationDependentMatchFound}</td><td>The dependent being registered already exists as a dependent for the Consumer</td></tr>\n   * </tbody>\n   * </table>\n   */\n  registerDependent(parent, dependentRegistration, performDependentCheck = false) {\n    const currentFunction = 'ConsumerService.registerDependent';\n    this.__logger.debug(currentFunction, 'Started', parent, dependentRegistration);\n    if (!(parent instanceof AWSDKConsumer)) {\n      const error = AWSDKError.AWSDKIllegalArgument('Param \"parent\" must be of type AWSDKConsumer');\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    if (!(dependentRegistration instanceof AWSDKDependentRegistration)) {\n      const error = AWSDKError.AWSDKIllegalArgument('Param \"dependentRegistration\" must be of type AWSDKDependentRegistration');\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    const errArray = this.validateDependentRegistration(dependentRegistration);\n    if (errArray.length > 0) {\n      const error = AWSDKError.AWSDKValidationErrors(errArray);\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    const auth = this.getUserAuth(parent);\n    if (auth == null) {\n      const error = AWSDKError.AWSDKConsumerNotAuthenticated();\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    const link = this.findNamedLink(this.__links, 'enrollDependent');\n    if (!Validator.isValidLink(link)) {\n      const error = AWSDKError.AWSDKInternalError('service does not have a valid \"enrollDependent\" link entry');\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    const options = this.generateOptions('POST', link.url, false);\n    options.auth = auth;\n    options.headers['Content-Type'] = 'application/json';\n    options.headers.Accept = 'application/vnd.amwell-v11.2.1+json, application/json';\n    dependentRegistration.encryptedMemberId = parent.id.encryptedId;\n\n    // For backwards compat -- Only set this from the parameter if it's true, eventually will be removed\n    if (performDependentCheck) dependentRegistration.performDependentCheck = performDependentCheck;\n\n    options.body = dependentRegistration.__toRequestBody(this.__systemConfiguration);\n    return this.executeRequest(options, AWSDKDependentResponse)\n      .then((dependentResponse) => {\n        this.__logger.debug(currentFunction, 'Got response', dependentResponse);\n        this.updateUserAuthEntry(parent, dependentResponse.authToken);\n        this.__logger.info(currentFunction, 'Complete');\n        return dependentResponse.dependent;\n      })\n      .catch((error) => {\n        this.__logger.error(currentFunction, 'Error', error);\n        throw error;\n      });\n  }\n\n  /**\n   * Update an existing {@link model.AWSDKConsumer} dependent <br>\n   * see {@link service.ConsumerService#validateDependentUpdate(model.AWSDKDependentUpdate)|validateDependentUpdate(dependentUpdate)} for details on validation of update-able fields<br>\n   * @param {model.AWSDKConsumer} dependent REQUIRED the {@link model.AWSDKConsumer|AWSDKConsumer} object that updates will be applied to\n   * @param {model.AWSDKDependentUpdate} dependentUpdate REQUIRED the {@link model.AWSDKDependentUpdate|AWSDKDependentUpdate} object containing the updates to {@link model.AWSDKConsumer|AWSDKConsumer} dependent\n   * @returns {Promise<model.AWSDKConsumer|error.AWSDKError>} a promise that will resolve to a {@link model.AWSDKConsumer|AWSDKConsumer} object or rejected with {@link error.AWSDKError|AWSDKError}\n   * <p><br>Potential Error Codes<br>\n   * <table summary=\"ErrorCodes\" border=\"1\">\n   * <thead>\n   * <tr><th>Error Code</th><th>reason</th></tr>\n   * </thead>\n   * <tbody>\n   * <tr><td>{@link error.AWSDKErrorCode.consumerNotAuthenticated|AWSDKErrorCode.consumerNotAuthenticated}</td><td>The consumer is not authenticated.</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.modifiedProtectedField|AWSDKErrorCode.modifiedProtectedField}</td><td>The consumer is feed controlled and some fields cannot be modified.</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.illegalArgument|AWSDKErrorCode.illegalArgument}</td><td>If dependent is not a valid instance of AWSDKConsumer\n   * or dependentUpdate is not a valid instance of AWSDKDependentUpdate</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.validationErrors|AWSDKErrorCode.validationErrors}</td><td>If any of the dependentUpdate values are invalid. The errors property will return the array of validation errors.</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.validationSourceIdInUse|AWSDKErrorCode.validationSourceIdInUse}</td><td>When the source id associated with this Consumer already exists for a different Consumer.</td></tr>\n   * </tbody>\n   * </table>\n   */\n  updateDependent(dependent, dependentUpdate) {\n    const currentFunction = 'ConsumerService.updateDependent';\n    this.__logger.debug(currentFunction, 'Started', dependent, dependentUpdate);\n    if (!(dependent instanceof AWSDKConsumer)) {\n      const error = AWSDKError.AWSDKIllegalArgument('Param \"dependent\" must be of type AWSDKConsumer');\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    if (!(dependentUpdate instanceof AWSDKDependentUpdate)) {\n      const error = AWSDKError.AWSDKIllegalArgument('Param \"dependentUpdate\" must be of type AWSDKDependentUpdate');\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    const errArray = this.validateDependentUpdate(dependentUpdate);\n    if (errArray.length > 0) {\n      const error = AWSDKError.AWSDKValidationErrors(errArray);\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    const modifiedProtectedFields = this.__checkBaseConsumerProtectedFields(dependent, dependentUpdate);\n    if (modifiedProtectedFields.length > 0) {\n      const error = AWSDKError.AWSDKModifiedProtectedField(modifiedProtectedFields);\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    const auth = this.getUserAuth(dependent);\n    if (auth == null) {\n      const error = AWSDKError.AWSDKConsumerNotAuthenticated();\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    const options = this.generateOptions('PUT', dependent.href, false);\n    options.auth = auth;\n    options.headers['Content-Type'] = 'application/json';\n    options.headers.Accept = 'application/vnd.amwell-v11.2.1+json, application/json';\n    options.body = dependentUpdate.__toRequestBody(this.__systemConfiguration);\n    return this.executeRequest(options, AWSDKDependentResponse)\n      .then((dependentResponse) => {\n        this.__logger.debug(currentFunction, 'Got response', dependentResponse);\n        this.updateUserAuthEntry(dependent, dependentResponse.authToken);\n        this.__logger.info(currentFunction, 'Complete');\n        return dependentResponse.dependent;\n      })\n      .catch((error) => {\n        this.__logger.error(currentFunction, 'Error', error);\n        throw error;\n      });\n  }\n\n  /**\n   * This method retrieves a list of {@link model.AWSDKConsumer|AWSDKConsumer} objects associated with a given {@link model.AWSDKConsumer|AWSDKConsumer}, which represent his/her dependents.\n   * @param {model.AWSDKConsumer} consumer the {@link model.AWSDKConsumer|AWSDKConsumer} whose dependents we want to retrieve.\n   * @returns {Promise<model.AWSDKConsumer[]|error.AWSDKError>} a promise that will resolve to a list of dependents associated with the consumer or rejected with an instance of an {@link error.AWSDKError|AWSDKError}.\n   * <p><br>Potential Error Codes<br>\n   * <table summary=\"ErrorCodes\" border=\"1\">\n   * <thead>\n   * <tr><th>Error Code</th><th>reason</th></tr>\n   * </thead>\n   * <tbody>\n   * <tr><td>{@link error.AWSDKErrorCode.consumerNotAuthenticated|AWSDKErrorCode.consumerNotAuthenticated}</td><td>The consumer is not authenticated.</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.illegalArgument|AWSDKErrorCode.illegalArgument}</td><td>If consumer is not a valid instance of AWSDKConsumer\n   * <tr><td>{@link error.AWSDKErrorCode.internalError|AWSDKErrorCode.internalError}</td><td>The AWSDK could not complete the request.</td></tr>\n   * </tbody>\n   * </table>\n   * @since 1.3.0\n   */\n  getDependents(consumer) {\n    const currentFunction = 'ConsumerService.getDependents';\n    this.__logger.debug(currentFunction, 'Started', consumer);\n    if (!(consumer instanceof AWSDKConsumer)) {\n      const error = AWSDKError.AWSDKIllegalArgument('Param \"consumer\" must be of type AWSDKConsumer');\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    const link = this.findNamedLink(consumer.links, 'dependents');\n    if (!Validator.isValidLink(link)) {\n      const error = AWSDKError.AWSDKInternalError('consumer does not have a \"dependents\" link entry');\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    const options = this.generateOptions('GET', link.url);\n    const auth = this.getUserAuth(consumer);\n    if (auth == null) {\n      const error = AWSDKError.AWSDKConsumerNotAuthenticated();\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    options.auth = auth;\n    return this.executeRequest(options, AWSDKDependentsListResponse)\n      .then((dependentsResponse) => {\n        this.__logger.debug(currentFunction, 'Got response', dependentsResponse);\n        this.updateUserAuthEntry(consumer, dependentsResponse.authToken);\n        this.__logger.info(currentFunction, 'Complete');\n        return dependentsResponse.dependents;\n      })\n      .catch((error) => {\n        this.__logger.error(currentFunction, 'Error', error);\n        throw error;\n      });\n  }\n\n  /**\n   * This method retrieves a notifications object for a {@link model.AWSDKConsumer|AWSDKConsumer}, which represents the user's upcoming appointments, outstanding dependent access requests, or unread secure messages.\n   * @param {model.AWSDKConsumer} consumer the {@link model.AWSDKConsumer|AWSDKConsumer} whose notifications we want to retrieve.\n   * @returns {Promise<model.AWSDKNotifications|error.AWSDKError>} a promise that will resolve to a {@link model.AWSDKNotifications|AWSDKNotifications} or rejected with an instance of an {@link error.AWSDKError|AWSDKError}.\n   * <p><br>Potential Error Codes<br>\n   * <table summary=\"ErrorCodes\" border=\"1\">\n   * <thead>\n   * <tr><th>Error Code</th><th>reason</th></tr>\n   * </thead>\n   * <tbody>\n   * <tr><td>{@link error.AWSDKErrorCode.consumerNotAuthenticated|AWSDKErrorCode.consumerNotAuthenticated}</td><td>The consumer is not authenticated.</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.illegalArgument|AWSDKErrorCode.illegalArgument}</td><td>If consumer is not a valid instance of AWSDKConsumer.</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.internalError|AWSDKErrorCode.internalError}</td><td>The AWSDK could not complete the request.</td></tr>\n   * </tbody>\n   * </table>\n   * @since 1.3.0\n   */\n  getNotifications(consumer) {\n    const currentFunction = 'ConsumerService.getNotifications';\n    this.__logger.debug(currentFunction, 'Started', consumer);\n    if (!(consumer instanceof AWSDKConsumer)) {\n      const error = AWSDKError.AWSDKIllegalArgument('Param \"consumer\" must be of type AWSDKConsumer');\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    const link = this.findNamedLink(consumer.links, 'notifications');\n    if (!Validator.isValidLink(link)) {\n      const error = AWSDKError.AWSDKInternalError('consumer does not have a \"notifications\" link entry');\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    const options = this.generateOptions('GET', link.url);\n    const auth = this.getUserAuth(consumer);\n    if (auth == null) {\n      const error = AWSDKError.AWSDKConsumerNotAuthenticated();\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    options.auth = auth;\n    return this.executeRequest(options, AWSDKNotificationsResponse)\n      .then((notificationsResponse) => {\n        this.__logger.debug(currentFunction, 'Got response', notificationsResponse);\n        this.updateUserAuthEntry(consumer, notificationsResponse.authToken);\n        this.__logger.info(currentFunction, 'Complete');\n        return notificationsResponse.notifications;\n      })\n      .catch((error) => {\n        this.__logger.error(currentFunction, 'Error', error);\n        throw error;\n      });\n  }\n\n  /**\n   * This method requests dependent access from one parent to another via email.\n   * @param {model.AWSDKConsumer} consumer the {@link model.AWSDKConsumer|AWSDKConsumer} who is requesting access to a dependent from another parent.\n   * @param {string} otherParentEmail the email address of the parent under which the dependent is currently registered\n   * @returns {Promise<boolean|error.AWSDKError>} a promise that will resolve to a boolean true or rejected with an instance of an {@link error.AWSDKError|AWSDKError}.\n   * <p><br>Potential Error Codes<br>\n   * <table summary=\"ErrorCodes\" border=\"1\">\n   * <thead>\n   * <tr><th>Error Code</th><th>reason</th></tr>\n   * </thead>\n   * <tbody>\n   * <tr><td>{@link error.AWSDKErrorCode.consumerNotAuthenticated|AWSDKErrorCode.consumerNotAuthenticated}</td><td>The consumer is not authenticated.</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.illegalArgument|AWSDKErrorCode.illegalArgument}</td><td>If consumer is not a valid instance of AWSDKConsumer or email is invalid\n   * <tr><td>{@link error.AWSDKErrorCode.internalError|AWSDKErrorCode.internalError}</td><td>The AWSDK could not complete the request.</td></tr>\n   * </tbody>\n   * </table>\n   * @since 1.3.0\n   */\n  requestDependentAccess(consumer, otherParentEmail) {\n    const currentFunction = 'ConsumerService.requestDependentAccess';\n    this.__logger.debug(currentFunction, 'Started', consumer);\n    if (!(consumer instanceof AWSDKConsumer)) {\n      const error = AWSDKError.AWSDKIllegalArgument('Param \"consumer\" must be of type AWSDKConsumer');\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    if (!Validator.isEmailValid(otherParentEmail)) {\n      const error = AWSDKError.AWSDKIllegalArgument('otherParentEmail is invalid');\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    const link = this.findNamedLink(consumer.links, 'requestDependentAccess');\n    if (!Validator.isValidLink(link)) {\n      const error = AWSDKError.AWSDKInternalError('consumer does not have a \"requestDependentAccess\" link entry');\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    const options = this.generateOptions('POST', link.url);\n    const auth = this.getUserAuth(consumer);\n    if (auth == null) {\n      const error = AWSDKError.AWSDKConsumerNotAuthenticated();\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    options.auth = auth;\n    options.form.set('emailAddress', otherParentEmail);\n    return this.executeRequest(options, AWSDKResponse)\n      .then((response) => {\n        this.__logger.debug(currentFunction, 'Got response', response);\n        this.updateUserAuthEntry(consumer, response.authToken);\n        this.__logger.info(currentFunction, 'Complete');\n        return true;\n      })\n      .catch((error) => {\n        this.__logger.error(currentFunction, 'Error', error);\n        throw error;\n      });\n  }\n\n  /**\n   * This method gets the latest pending dependent access request made to the guardian of the dependent.\n   * @param {model.AWSDKConsumer} consumer the {@link model.AWSDKConsumer|AWSDKConsumer} the parent who is the guardian of the dependent\n   * @returns {Promise<model.AWSDKDependentAccessRequest|error.AWSDKError>} a promise that will resolve to a {@link model.AWSDKDependentAccessRequest|AWSDKDependentAccessRequest} or rejected with an instance of an {@link error.AWSDKError|AWSDKError}.\n   * <p><br>Potential Error Codes<br>\n   * <table summary=\"ErrorCodes\" border=\"1\">\n   * <thead>\n   * <tr><th>Error Code</th><th>reason</th></tr>\n   * </thead>\n   * <tbody>\n   * <tr><td>{@link error.AWSDKErrorCode.consumerNotAuthenticated|AWSDKErrorCode.consumerNotAuthenticated}</td><td>The consumer is not authenticated.</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.illegalArgument|AWSDKErrorCode.illegalArgument}</td><td>If consumer is not a valid instance of AWSDKConsumer\n   * <tr><td>{@link error.AWSDKErrorCode.internalError|AWSDKErrorCode.internalError}</td><td>The AWSDK could not complete the request.</td></tr>\n   * </tbody>\n   * </table>\n   * @since 1.3.0\n   */\n  getDependentAccessRequest(consumer) {\n    const currentFunction = 'ConsumerService.getDependentAccessRequest';\n    this.__logger.debug(currentFunction, 'Started', consumer);\n    if (!(consumer instanceof AWSDKConsumer)) {\n      const error = AWSDKError.AWSDKIllegalArgument('Param \"consumer\" must be of type AWSDKConsumer');\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    const link = this.findNamedLink(consumer.links, 'dependentAccessNotification');\n    if (!Validator.isValidLink(link)) {\n      const error = AWSDKError.AWSDKInternalError('consumer does not have a \"dependentAccessNotification\" link entry');\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    const options = this.generateOptions('GET', link.url);\n    const auth = this.getUserAuth(consumer);\n    if (auth == null) {\n      const error = AWSDKError.AWSDKConsumerNotAuthenticated();\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    options.auth = auth;\n    return this.executeRequest(options, AWSDKDependentAccessRequestResponse)\n      .then((response) => {\n        this.__logger.debug(currentFunction, 'Got response', response);\n        this.updateUserAuthEntry(consumer, response.authToken);\n        this.__logger.info(currentFunction, 'Complete');\n        return response.dependentAccessRequest;\n      })\n      .catch((error) => {\n        this.__logger.error(currentFunction, 'Error', error);\n        throw error;\n      });\n  }\n\n  /**\n   * This method accepts the latest pending dependent access request made to the guardian of the dependent.\n   * @param {model.AWSDKConsumer} consumer the {@link model.AWSDKConsumer|AWSDKConsumer} the parent who is the guardian of dependent.\n   * @param {model.AWSDKDependentAccessRequest} accessRequest the {@link model.AWSDKDependentAccessRequest|AWSDKDependentAccessRequest} the access request that guardian is accepting.\n   * @param {model.AWSDKConsumer[]} dependents the list of dependents that the guardian wishes to grant the requestor access to.\n   * @returns {Promise<boolean|error.AWSDKError>} a promise that will resolve to a boolean or rejected with an instance of an {@link error.AWSDKError|AWSDKError}.\n   * <p><br>Potential Error Codes<br>\n   * <table summary=\"ErrorCodes\" border=\"1\">\n   * <thead>\n   * <tr><th>Error Code</th><th>reason</th></tr>\n   * </thead>\n   * <tbody>\n   * <tr><td>{@link error.AWSDKErrorCode.consumerNotAuthenticated|AWSDKErrorCode.consumerNotAuthenticated}</td><td>The consumer is not authenticated.</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.illegalArgument|AWSDKErrorCode.illegalArgument}</td><td>If consumer is not a valid instance of AWSDKConsumer\n   * <tr><td>{@link error.AWSDKErrorCode.internalError|AWSDKErrorCode.internalError}</td><td>The AWSDK could not complete the request.</td></tr>\n   * </tbody>\n   * </table>\n   * @since 1.3.0\n   */\n  acceptDependentAccessRequest(consumer, accessRequest, dependents) {\n    const currentFunction = 'ConsumerService.acceptDependentAccessRequest';\n    this.__logger.debug(currentFunction, 'Started', consumer, accessRequest, dependents);\n    if (!(consumer instanceof AWSDKConsumer)) {\n      const error = AWSDKError.AWSDKIllegalArgument('Param \"consumer\" must be of type AWSDKConsumer');\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    if (!(accessRequest instanceof AWSDKDependentAccessRequest)) {\n      const error = AWSDKError.AWSDKIllegalArgument('Param \"accessRequest\" must be of type AWSDKDependentAccessRequest');\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    if (!Array.isArray(dependents) || dependents.length === 0 ||\n      dependents.filter(item => !(item instanceof AWSDKConsumer)).length > 0) {\n      const error = AWSDKError.AWSDKIllegalArgument('Param \"dependents\" must be an array of AWSDKConsumer elements');\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    const link = this.findNamedLink(accessRequest.links, 'acceptDependentAccessRequest');\n    if (!Validator.isValidLink(link)) {\n      const error = AWSDKError.AWSDKInternalError('accessRequest param does not have a \"acceptDependentAccessRequest\" link entry');\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    const options = this.generateOptions('POST', link.url);\n    const auth = this.getUserAuth(consumer);\n    if (auth == null) {\n      const error = AWSDKError.AWSDKConsumerNotAuthenticated();\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    options.auth = auth;\n    dependents.forEach((dependent) => {\n      options.form.append('dependentIds', dependent.id.encryptedId);\n    });\n    return this.executeRequest(options, AWSDKResponse)\n      .then((response) => {\n        this.__logger.debug(currentFunction, 'Got response', response);\n        this.updateUserAuthEntry(consumer, response.authToken);\n        this.__logger.info(currentFunction, 'Complete');\n        return true;\n      })\n      .catch((error) => {\n        this.__logger.error(currentFunction, 'Error', error);\n        throw error;\n      });\n  }\n\n  /**\n   * This method declines the latest pending access to dependent request made to the guardian of the dependent.\n   * @param {model.AWSDKConsumer} consumer the {@link model.AWSDKConsumer|AWSDKConsumer} the parent who is the guardian of the dependent.\n   * @param {model.AWSDKDependentAccessRequest} accessRequest the {@link model.AWSDKDependentAccessRequest|AWSDKDependentAccessRequest} the access request that guardian is declining.\n   * @returns {Promise<boolean|error.AWSDKError>} a promise that will resolve to a boolean or rejected with an instance of an {@link error.AWSDKError|AWSDKError}.\n   * <p><br>Potential Error Codes<br>\n   * <table summary=\"ErrorCodes\" border=\"1\">\n   * <thead>\n   * <tr><th>Error Code</th><th>reason</th></tr>\n   * </thead>\n   * <tbody>\n   * <tr><td>{@link error.AWSDKErrorCode.consumerNotAuthenticated|AWSDKErrorCode.consumerNotAuthenticated}</td><td>The consumer is not authenticated.</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.illegalArgument|AWSDKErrorCode.illegalArgument}</td><td>If consumer is not a valid instance of AWSDKConsumer\n   * <tr><td>{@link error.AWSDKErrorCode.internalError|AWSDKErrorCode.internalError}</td><td>The AWSDK could not complete the request.</td></tr>\n   * </tbody>\n   * </table>\n   * @since 1.3.0\n   */\n  declineDependentAccessRequest(consumer, accessRequest) {\n    const currentFunction = 'ConsumerService.declineDependentAccessRequest';\n    this.__logger.debug(currentFunction, 'Started', consumer, accessRequest);\n    if (!(consumer instanceof AWSDKConsumer)) {\n      const error = AWSDKError.AWSDKIllegalArgument('Param \"consumer\" must be of type AWSDKConsumer');\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    if (!(accessRequest instanceof AWSDKDependentAccessRequest)) {\n      const error = AWSDKError.AWSDKIllegalArgument('Param \"accessRequest\" must be of type AWSDKDependentAccessRequest');\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    const link = this.findNamedLink(accessRequest.links, 'declineDependentAccessRequest');\n    if (!Validator.isValidLink(link)) {\n      const error = AWSDKError.AWSDKInternalError('accessRequest param does not have a \"declineDependentAccessRequest\" link entry');\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    const options = this.generateOptions('POST', link.url);\n    const auth = this.getUserAuth(consumer);\n    if (auth == null) {\n      const error = AWSDKError.AWSDKConsumerNotAuthenticated();\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    options.auth = auth;\n    return this.executeRequest(options, AWSDKResponse)\n      .then((response) => {\n        this.__logger.debug(currentFunction, 'Got response', response);\n        this.updateUserAuthEntry(consumer, response.authToken);\n        this.__logger.info(currentFunction, 'Complete');\n        return true;\n      })\n      .catch((error) => {\n        this.__logger.error(currentFunction, 'Error', error);\n        throw error;\n      });\n  }\n\n  /**\n   * Upon retrieval, an instance of {@link model.AWSDKAuthentication|AWSDKAuthentication} may contain a non-null value for\n   * {@link model.AWSDKAuthentication#getOutstandingDisclaimer|AWSDKAuthentication.getOutstandingDisclaimer}, which signifies that the disclaimer has\n   * been updated since the last time the Consumer accepted it.\n   * Call this method to confirm acceptance of the updated Consumer disclaimer.\n   * Be sure to test for a non-null value for {@link model.AWSDKAuthentication#getOutstandingDisclaimer|AWSDKAuthentication#getOutstandingDisclaimer}\n   * before calling this method, or you will receive an IllegalArgumentException.\n   *\n   * @param {model.AWSDKConsumer} consumer The {@link model.AWSDKConsumer|AWSDKConsumer} who is accepting any outstanding disclaimers\n   * @returns {Promise<model.AWSDKConsumer|error.AWSDKError>} a promise that will resolve to a {@link model.AWSDKConsumer|AWSDKConsumer} object or rejected with {@link error.AWSDKError|AWSDKError}\n   * <p><br>Potential Error Codes<br>\n   * <table summary=\"ErrorCodes\" border=\"1\">\n   * <thead>\n   * <tr><th>Error Code</th><th>reason</th></tr>\n   * </thead>\n   * <tbody>\n   * <tr><td>{@link error.AWSDKErrorCode.illegalArgument|AWSDKErrorCode.illegalArgument}</td><td>If consumer is null or not an instance of AWSDKConsumer</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.internalError|AWSDKErrorCode.internalError}</td><td>The AWSDK could not complete the request.</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.consumerNotAuthenticated|AWSDKErrorCode.consumerNotAuthenticated}</td><td>When the consumer is not authenticated.</td></tr>\n   * </tbody>\n   * </table>\n   */\n  acceptOutstandingDisclaimer(consumer) {\n    const currentFunction = 'ConsumerService.acceptOutstandingDisclaimer';\n    this.__logger.debug(currentFunction, 'Started', consumer);\n    if (!(consumer instanceof AWSDKConsumer)) {\n      const error = AWSDKError.AWSDKIllegalArgument('consumer is null or not an instance of AWSDKConsumer');\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    const link = this.findNamedLink(consumer.links, 'outstandingDisclaimer');\n    if (!Validator.isValidLink(link)) {\n      const error = AWSDKError.AWSDKInternalError('consumer does not have a \"outstandingDisclaimer\" link entry');\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    const options = this.generateOptions('PUT', link.url);\n    options.auth = this.getUserAuth(consumer);\n    if (options.auth == null) {\n      const error = AWSDKError.AWSDKConsumerNotAuthenticated();\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    options.form.set('acceptedMemberDisclaimer', true);\n    return this.executeRequest(options, AWSDKResponse)\n      .then((response) => {\n        this.__logger.debug(currentFunction, 'Got response', response);\n        this.updateUserAuthEntry(consumer, response.authToken);\n        this.__logger.info(currentFunction, 'Complete');\n        return consumer;\n      })\n      .catch((error) => {\n        this.__logger.error(currentFunction, 'Error', error);\n        throw error;\n      });\n  }\n\n  /**\n   * Retrieves a {@link model.AWSDKVisitReportList} for a given consumer for visits that are in the dispositions of Completed, Expired or Deleted\n   *\n   * @param {model.AWSDKConsumer} consumer The {@link model.AWSDKConsumer}\n   * @param {boolean} [scheduledOnly] Only retrieve reports for visits that were scheduled.\n   * @param {boolean} [completedOnly] Only retrieve reports for visits that were completed.\n   * @param {string} [since]  Only retrieve reports for visits since a specific date.\n   * @returns {Promise<model.AWSDKVisitReportList|error.AWSDKError>} a promise that will resolve to a {@link model.AWSDKVisitReportList|AWSDKVisitReportList} object or rejected with {@link error.AWSDKError|AWSDKError}\n   * <p><br>Potential Error Codes<br>\n   * <table summary=\"ErrorCodes\" border=\"1\">\n   * <thead>\n   * <tr><th>Error Code</th><th>reason</th></tr>\n   * </thead>\n   * <tbody>\n   * <tr><td>{@link error.AWSDKErrorCode.illegalArgument|AWSDKErrorCode.illegalArgument}</td><td>If consumer is null or not an instance of AWSDKConsumer</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.internalError|AWSDKErrorCode.internalError}</td><td>The AWSDK could not complete the request.</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.consumerNotAuthenticated|AWSDKErrorCode.ConsumerNotAuthenticated}</td><td>When the consumer is not authenticated.</td></tr>\n   * </tbody>\n   * </table>\n   * @deprecated use {@link service.ConsumerService#searchVisitReports()|searchVisitReports()}\n   */\n  getVisitReports(consumer, scheduledOnly = false, completedOnly = false, since) {\n    const currentFunction = 'ConsumerService.getVisitReports';\n    deprecated(currentFunction, 'Invoke the ConsumerService.searchVisitReports function instead', '3.X');\n    this.__logger.debug(currentFunction, 'Started', consumer, scheduledOnly, completedOnly, since);\n    if (!(consumer instanceof AWSDKConsumer)) {\n      const error = AWSDKError.AWSDKIllegalArgument('consumer is null or not an instance of AWSDKConsumer');\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    const link = this.findNamedLink(consumer.links, 'visitReports');\n    if (!Validator.isValidLink(link)) {\n      const error = AWSDKError.AWSDKInternalError('consumer does not have a \"visitReports\" link entry');\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    const options = this.generateOptions('GET', link.url, true);\n    options.auth = this.getUserAuth(consumer);\n    if (options.auth == null) {\n      const error = AWSDKError.AWSDKConsumerNotAuthenticated();\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    options.form.set('scheduledOnly', scheduledOnly || false);\n    if (since) {\n      options.form.set('since', since);\n    }\n    if (completedOnly) {\n      options.form.set('dispositions', 'Completed');\n    } else {\n      options.form.append('dispositions', 'Completed');\n      options.form.append('dispositions', 'Expired');\n      options.form.append('dispositions', 'Deleted');\n      options.form.append('dispositions', 'MemberDisconnected');\n      options.form.append('dispositions', 'MemberCanceled');\n      options.form.append('dispositions', 'Deleted');\n      options.form.append('dispositions', 'ProviderResponseTimeout');\n      options.form.append('dispositions', 'Bailed');\n      options.form.append('dispositions', 'ProviderDisconnected');\n      options.form.append('dispositions', 'ProviderCanceled');\n      options.form.append('dispositions', 'Expired');\n    }\n    return this.executeRequest(options, AWSDKVisitReportList)\n      .then((visitReportListResponse) => {\n        this.__logger.debug(currentFunction, 'Got response', visitReportListResponse);\n        this.updateUserAuthEntry(consumer, visitReportListResponse.authToken);\n        return visitReportListResponse;\n      })\n      .catch((error) => {\n        this.__logger.error(currentFunction, 'Error', error);\n        throw error;\n      });\n  }\n\n  /**\n   * Updates the medical conditions of a {@link model.AWSDKConsumer}.\n   *\n   * @param {model.AWSDKConsumer} consumer The {@link model.AWSDKConsumer} to update\n   * @param {model.AWSDKCondition[]} conditions The array of {@link model.AWSDKCondition}\n   * @returns {Promise<model.AWSDKConsumer|error.AWSDKError>} a promise that will resolve with the given {@link model.AWSDKConsumer|AWSDKConsumer} object or rejected with {@link error.AWSDKError|AWSDKError}\n   * <p><br>Potential Error Codes<br>\n   * <table summary=\"ErrorCodes\" border=\"1\">\n   * <thead>\n   * <tr><th>Error Code</th><th>reason</th></tr>\n   * </thead>\n   * <tbody>\n   * <tr><td>{@link error.AWSDKErrorCode.illegalArgument|AWSDKErrorCode.illegalArgument}</td><td>If consumer is null or not an instance of AWSDKConsumer\n   * or conditions is not an array of AWSDKCondition</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.internalError|AWSDKErrorCode.internalError}</td><td>The AWSDK could not complete the request.</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.consumerNotAuthenticated|AWSDKErrorCode.consumerNotAuthenticated}</td><td>The consumer is not authenticated.</td></tr>\n   * </tbody>\n   * </table>\n   */\n  updateConditions(consumer, conditions) {\n    const currentFunction = 'ConsumerService.updateConditions';\n    this.__logger.debug(currentFunction, 'Started', consumer, conditions);\n    if (!(consumer instanceof AWSDKConsumer)) {\n      const error = AWSDKError.AWSDKIllegalArgument('consumer is null or not an instance of AWSDKConsumer');\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    if (conditions === null || !(conditions instanceof Array)) {\n      const error = AWSDKError.AWSDKIllegalArgument('conditions is null or not an array of AWSDKCondition');\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    const termIds = [];\n    for (let i = 0; i < conditions.length; i += 1) {\n      const condition = conditions[i];\n      if (condition === null || !(condition instanceof AWSDKCondition)) {\n        const error = AWSDKError.AWSDKIllegalArgument('conditions is null or not an array of AWSDKCondition');\n        this.__logger.error(currentFunction, 'Error', error);\n        return Promise.reject(error);\n      }\n      if (condition.isCurrent === true) {\n        termIds.push(condition.termId);\n      }\n    }\n    const link = this.findNamedLink(consumer.links, 'conditions');\n    if (!Validator.isValidLink(link)) {\n      const error = AWSDKError.AWSDKInternalError('consumer does not have a valid \"conditions\" link entry');\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    const options = this.generateOptions('PUT', link.url, true);\n    options.auth = this.getUserAuth(consumer);\n    if (options.auth == null) {\n      const error = AWSDKError.AWSDKConsumerNotAuthenticated();\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    for (let i = 0; i < termIds.length; i += 1) {\n      options.form.append('conditions', termIds[i]);\n    }\n    return this.executeRequest(options, AWSDKConditionsResponse)\n      .then((response) => {\n        this.__logger.debug(currentFunction, 'Got response', response);\n        this.__logger.info(currentFunction, 'Complete');\n        return consumer;\n      })\n      .catch((error) => {\n        this.__logger.error(currentFunction, 'Error', error);\n        throw error;\n      });\n  }\n\n  /**\n   * Updates the {@link model.AWSDKVitals} for a given {@link model.AWSDKConsumer}\n   * @param {model.AWSDKConsumer} consumer The {@link model.AWSDKConsumer} to update\n   * @param {model.AWSDKVitals} vitals The {@link model.AWSDKVitals} of the consumer\n   * @returns {Promise<model.AWSDKConsumer|error.AWSDKError>} returns a promise that will be resolved to a {@link model.AWSDKConsumer} <br>\n   * or rejected with an {@link error.AWSDKError}\n   * <p><br>Potential Error Codes<br>\n   * <table summary=\"ErrorCodes\" border=\"1\">\n   * <thead>\n   * <tr><th>Error Code</th><th>reason</th></tr>\n   * </thead>\n   * <tbody>\n   * <tr><td>{@link error.AWSDKErrorCode.validationErrors|AWSDKErrorCode.validationErrors}</td><td>If any of the vital values are invalid. The errors property will return the array of validation errors.</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.consumerNotAuthenticated|AWSDKErrorCode.consumerNotAuthenticated}</td><td>The consumer is not authenticated.</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.illegalArgument|AWSDKErrorCode.illegalArgument}</td><td>If consumer is null or not an instance of AWSDKConsumer\n   * or vitals is not an instance of AWSDKVitals</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.internalError|AWSDKErrorCode.internalError}</td><td>The AWSDK could not complete the request.</td></tr>\n   * </tbody>\n   * </table>\n   */\n  updateVitals(consumer, vitals) {\n    const currentFunction = 'ConsumerService.updateConditions';\n    this.__logger.debug(currentFunction, 'Started', consumer, vitals);\n    if (!(consumer instanceof AWSDKConsumer)) {\n      const error = AWSDKError.AWSDKIllegalArgument('consumer is null or not an instance of AWSDKConsumer');\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    if (!(vitals instanceof AWSDKVitals)) {\n      const error = AWSDKError.AWSDKIllegalArgument('vitals is null or not an instance of AWSDKVitals');\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    const errArray = this.validateVitals(vitals);\n    if (errArray.length > 0) {\n      const error = AWSDKError.AWSDKValidationErrors(errArray);\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    const link = this.findNamedLink(consumer.links, 'vitals');\n    if (!Validator.isValidLink(link)) {\n      const error = AWSDKError.AWSDKInternalError('consumer does not have a valid \"vitals\" link entry');\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    const options = this.generateOptions('PUT', link.url, true);\n    options.auth = this.getUserAuth(consumer);\n    if (options.auth == null) {\n      const error = AWSDKError.AWSDKConsumerNotAuthenticated();\n      this.__logger.error('consumer service.updateVitals', 'Error', error);\n      return Promise.reject(error);\n    }\n    if (vitals.systolic && vitals.diastolic) {\n      options.form.set('systolic', vitals.systolic);\n      options.form.set('diastolic', vitals.diastolic);\n    }\n    if (vitals.temperature) {\n      options.form.set('temperature', vitals.temperature);\n    }\n    if (vitals.weight) {\n      options.form.set('weight', vitals.weight);\n    }\n    return this.executeRequest(options, AWSDKResponse)\n      .then((response) => {\n        this.__logger.debug(currentFunction, 'Got response', response);\n        this.updateUserAuthEntry(consumer, response.authToken);\n        this.__logger.info(currentFunction, 'Complete');\n        return consumer;\n      })\n      .catch((error) => {\n        this.__logger.error(currentFunction, 'Error', error);\n        throw error;\n      });\n  }\n\n  /**\n   * This method validates the fields in the {@link model.AWSDKVitals|AWSDKVitals}\n   * Temperature values are expected to be in fahrenheit (f).\n   * Weight values are expected to be pounds (lbs).\n   * Diastolic and Systolic values  are expected to be in millimeters of mercury (mmHg).\n   * @param {model.AWSDKVitals} vitals the vitals with updated information for validation\n   * @returns {error.AWSDKError[]} an array of {@link error.AWSDKError|AWSDKError} that detail any validation errors.\n   * <br>Potential validation errors:<br>\n   * <table summary=\"validation\" border=\"1\">\n   * <tr>\n   * <th>Field</th>\n   * <th>Validation Reason</th>\n   * <th>Notes</th>\n   * </tr>\n   * <tr>\n   * <td>temperature</td>\n   * <td>invalid format</td>\n   * <td>Set to valid number within the range of 0.0 to 120.0 F</td>\n   * </tr>\n   * <tr>\n   * <td>temperature</td>\n   * <td>out of range field</td>\n   * <td>Set to valid number within the range of 0.0 to 120.0 F</td>\n   * </tr>\n   * <tr>\n   * <td>weight</td>\n   * <td>invalid format</td>\n   * <td>Set to valid number within the range of 0.0 to 1500.0 lbs</td>\n   * </tr>\n   * <tr>\n   * <td>weight</td>\n   * <td>out of range field</td>\n   * <td>Set to valid number within the range of 0.0 to 1500.0 lbs</td>\n   * </tr>\n   * <tr>\n   * <td>systolic</td>\n   * <td>invalid format</td>\n   * <td>Set to valid number within the range of 0.0 to 250.0 mmHg</td>\n   * </tr>\n   * <tr>\n   * <td>systolic</td>\n   * <td>out of range field</td>\n   * <td>Set to valid number within the range of 0.0 to 250.0 mmHg</td>\n   * </tr>\n   * <tr>\n   * <td>diastolic</td>\n   * <td>invalid format</td>\n   * <td>Set to valid number within the range of 0.0 to 250.0 mmHg</td>\n   * </tr>\n   * <tr>\n   * <td>diastolic</td>\n   * <td>out of range field</td>\n   * <td>Set to valid number within the range of 0.0 to 250.0 mmHg</td>\n   * </tr>\n   * <tr>\n   * <td>diastolic</td>\n   * <td>diastolic not less than systolic</td>\n   * <td>Set to valid number below Systolic value</td>\n   * </tr>\n   * <tr>\n   * <td>diastolic</td>\n   * <td>field part of set</td>\n   * <td>Diastolic and Systolic must be provided together</td>\n   * </tr>\n   * <tr>\n   * <td>systolic</td>\n   * <td>field part of set</td>\n   * <td>Diastolic and Systolic must be provided together</td>\n   * </tr>\n   */\n  validateVitals(vitals) {\n    this.__logger.info('consumerService in validateVitals()');\n    this.__logger.debug('Found vitals ', vitals);\n    const errors = [];\n    if (!(vitals instanceof AWSDKVitals)) {\n      throw AWSDKError.AWSDKIllegalArgument('vitals is not instance of AWSDKVitals');\n    }\n    this.__validateVitals(vitals, errors);\n    return errors;\n  }\n\n  /**\n   * Internal Use only!!\n   * @private\n   */\n  __validateVitals(vitals, errors) {\n    let fieldName;\n    let reason;\n    let recoverySuggestion;\n    if (vitals.temperature && typeof vitals.temperature !== 'number') {\n      fieldName = 'temperature';\n      reason = 'invalid format';\n      recoverySuggestion = `Set to valid value within range of ${this.__minValueVitals} to ${this.__maxTemperatureValue} f`;\n      errors.push(AWSDKError.AWSDKFieldValidationError(AWSDKVitals, fieldName, reason, recoverySuggestion));\n    }\n    if (vitals.temperature > this.__maxTemperatureValue || vitals.temperature < this.__minValueVitals) {\n      fieldName = 'temperature';\n      reason = 'out of range field';\n      recoverySuggestion = `Set to valid value within range of ${this.__minValueVitals} to ${this.__maxTemperatureValue} f`;\n      errors.push(AWSDKError.AWSDKFieldValidationError(AWSDKVitals, fieldName, reason, recoverySuggestion));\n    }\n    if (vitals.weight && typeof vitals.weight !== 'number') {\n      fieldName = 'weight';\n      reason = 'invalid format';\n      recoverySuggestion = `Set to valid value within range of ${this.__minValueVitals} to ${this.__maxWeightValue} lbs`;\n      errors.push(AWSDKError.AWSDKFieldValidationError(AWSDKVitals, fieldName, reason, recoverySuggestion));\n    }\n    if (vitals.weight > this.__maxWeightValue || vitals.weight < this.__minValueVitals) {\n      fieldName = 'weight';\n      reason = 'out of range field';\n      recoverySuggestion = `Set to valid value within range of ${this.__minValueVitals} to ${this.__maxWeightValue} lbs`;\n      errors.push(AWSDKError.AWSDKFieldValidationError(AWSDKVitals, fieldName, reason, recoverySuggestion));\n    }\n    if (vitals.systolic && typeof vitals.systolic !== 'number') {\n      fieldName = 'systolic';\n      reason = 'invalid format';\n      recoverySuggestion = `Set to valid value within range of ${this.__minValueVitals} to ${this.__maxSystolicValue} mmHg`;\n      errors.push(AWSDKError.AWSDKFieldValidationError(AWSDKVitals, fieldName, reason, recoverySuggestion));\n    }\n    if (vitals.systolic > this.__maxSystolicValue || vitals.systolic < this.__minValueVitals) {\n      fieldName = 'systolic';\n      reason = 'out of range field';\n      recoverySuggestion = `Set to valid value within range of ${this.__minValueVitals} to ${this.__maxSystolicValue} mmHg`;\n      errors.push(AWSDKError.AWSDKFieldValidationError(AWSDKVitals, fieldName, reason, recoverySuggestion));\n    }\n    if (vitals.diastolic && typeof vitals.diastolic !== 'number') {\n      fieldName = 'diastolic';\n      reason = 'invalid format';\n      recoverySuggestion = `Set to valid value within range of ${this.__minValueVitals} to ${this.__maxDiastolicValue} mmHg`;\n      errors.push(AWSDKError.AWSDKFieldValidationError(AWSDKVitals, fieldName, reason, recoverySuggestion));\n    }\n    if (vitals.diastolic > this.__maxDiastolicValue || vitals.diastolic < this.__minValueVitals) {\n      fieldName = 'diastolic';\n      reason = 'out of range field';\n      recoverySuggestion = `Set to valid value within range of ${this.__minValueVitals} to ${this.__maxDiastolicValue} lbs`;\n      errors.push(AWSDKError.AWSDKFieldValidationError(AWSDKVitals, fieldName, reason, recoverySuggestion));\n    }\n    if (vitals.diastolic && vitals.systolic && vitals.diastolic >= vitals.systolic) {\n      fieldName = 'diastolic';\n      reason = 'diastolic not less than systolic';\n      recoverySuggestion = 'Set to valid value below Systolic value';\n      errors.push(AWSDKError.AWSDKFieldValidationError(AWSDKVitals, fieldName, reason, recoverySuggestion));\n    }\n    if (!vitals.diastolic && vitals.systolic) {\n      fieldName = 'diastolic';\n      reason = 'field part of set';\n      recoverySuggestion = 'Diastolic and Systolic must be provided together';\n      errors.push(AWSDKError.AWSDKFieldValidationError(AWSDKVitals, fieldName, reason, recoverySuggestion));\n    }\n    if (!vitals.systolic && vitals.diastolic) {\n      fieldName = 'systolic';\n      reason = 'field part of set';\n      recoverySuggestion = 'Diastolic and Systolic must be provided together';\n      errors.push(AWSDKError.AWSDKFieldValidationError(AWSDKVitals, fieldName, reason, recoverySuggestion));\n    }\n  }\n\n  /**\n   * Retrieves a full list of {@link model.AWSDKCondition}s available in the system.\n   * Conditions marked as 'current' are ones associated with the given {@link model.AWSDKConsumer}\n   *\n   * @param {model.AWSDKConsumer} consumer The {@link model.AWSDKConsumer}\n   * @returns {Promise<model.AWSDKCondition[]|error.AWSDKError>} a promise that will resolve with an array of the system's {@link model.AWSDKCondition}s or rejected with {@link error.AWSDKError|AWSDKError}\n   * <p><br>Potential Error Codes<br>\n   * <table summary=\"ErrorCodes\" border=\"1\">\n   * <thead>\n   * <tr><th>Error Code</th><th>reason</th></tr>\n   * </thead>\n   * <tbody>\n   * <tr><td>{@link error.AWSDKErrorCode.consumerNotAuthenticated|AWSDKErrorCode.consumerNotAuthenticated}</td><td>The consumer is not authenticated.</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.illegalArgument|AWSDKErrorCode.illegalArgument}</td><td>If consumer is null or not an instance of AWSDKConsumer</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.internalError|AWSDKErrorCode.internalError}</td><td>The AWSDK could not complete the request.</td></tr>\n   * </tbody>\n   * </table>\n   */\n  getConditions(consumer) {\n    const currentFunction = 'ConsumerService.getConditions';\n    this.__logger.debug(currentFunction, 'Started', consumer);\n    if (!(consumer instanceof AWSDKConsumer)) {\n      const error = AWSDKError.AWSDKIllegalArgument('consumer is null or not an instance of AWSDKConsumer');\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    const link = this.findNamedLink(consumer.links, 'conditions');\n    if (!Validator.isValidLink(link)) {\n      const error = AWSDKError.AWSDKInternalError('consumer does not have a valid \"conditions\" link entry');\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n\n    const options = this.generateOptions('GET', link.url, false);\n    options.auth = this.getUserAuth(consumer);\n    if (options.auth == null) {\n      const error = AWSDKError.AWSDKConsumerNotAuthenticated();\n      this.__logger.error('consumer service.getConditions', 'Error', error);\n      return Promise.reject(error);\n    }\n\n    return this.executeRequest(options, AWSDKConditionsResponse)\n      .then((response) => {\n        this.__logger.debug(currentFunction, 'Got response', response);\n        this.updateUserAuthEntry(consumer, response.authToken);\n        return response.conditions;\n      })\n      .catch((error) => {\n        this.__logger.error(currentFunction, 'Error', error);\n        throw error;\n      });\n  }\n\n  /**\n   * Retrieves the {@link model.AWSDKVitals} for a given {@link model.AWSDKConsumer}\n   * @param {model.AWSDKConsumer} consumer The {@link model.AWSDKConsumer} to get the vitals for\n   * @returns {Promise<model.AWSDKConsumer|error.AWSDKError>} returns a promise that will be resolved to a {@link model.AWSDKVitals} <br>\n   * or rejected with an {@link error.AWSDKError}\n   * <p><br>Potential Error Codes<br>\n   * <table summary=\"ErrorCodes\" border=\"1\">\n   * <thead>\n   * <tr><th>Error Code</th><th>reason</th></tr>\n   * </thead>\n   * <tbody>\n   * <tr><td>{@link error.AWSDKErrorCode.consumerNotAuthenticated|AWSDKErrorCode.consumerNotAuthenticated}</td><td>The consumer is not authenticated.</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.illegalArgument|AWSDKErrorCode.illegalArgument}</td><td>If consumer is null or not an instance of AWSDKConsumer</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.internalError|AWSDKErrorCode.internalError}</td><td>The AWSDK could not complete the request.</td></tr>\n   * </tbody>\n   * </table>\n   */\n  getVitals(consumer) {\n    const currentFunction = 'ConsumerService.getVitals';\n    this.__logger.debug(currentFunction, 'Started', consumer);\n    if (!(consumer instanceof AWSDKConsumer)) {\n      const error = AWSDKError.AWSDKIllegalArgument('consumer is null or not an instance of AWSDKConsumer');\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    const link = this.findNamedLink(consumer.links, 'vitals');\n    if (!Validator.isValidLink(link)) {\n      const error = AWSDKError.AWSDKInternalError('consumer does not have a valid \"vitals\" link entry');\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    const options = this.generateOptions('GET', link.url, false);\n    options.auth = this.getUserAuth(consumer);\n    if (options.auth == null) {\n      const error = AWSDKError.AWSDKConsumerNotAuthenticated();\n      this.__logger.error('consumer service.getVitals', 'Error', error);\n      return Promise.reject(error);\n    }\n    return this.executeRequest(options, AWSDKVitalsResponse)\n      .then((vitalsResponse) => {\n        this.__logger.debug(currentFunction, 'Got response', vitalsResponse);\n        this.updateUserAuthEntry(consumer, vitalsResponse.authToken);\n        return vitalsResponse.vitals;\n      })\n      .catch((error) => {\n        this.__logger.error(currentFunction, 'Error', error);\n        throw error;\n      });\n  }\n\n  /**\n   * Get the current {@link model.AWSDKPaymentMethod|AWSDKPaymentMethod} for the given {@link model.AWSDKConsumer|AWSDKConsumer}\n   *\n   * @param consumer the {@link model.AWSDKConsumer|AWSDKConsumer} to use to fetch the payment on file\n   * @returns {Promise<model.AWSDKPaymentMethod|error.AWSDKError>} returns a promise that will be resolved to a {@link model.AWSDKPaymentMethod} <br>\n   * or rejected with an {@link error.AWSDKError}\n   * <p><br>Potential Error Codes<br>\n   * <table summary=\"ErrorCodes\" border=\"1\">\n   * <thead>\n   * <tr><th>Error Code</th><th>reason</th></tr>\n   * </thead>\n   * <tbody>\n   * <tr><td>{@link error.AWSDKErrorCode.consumerNotAuthenticated|AWSDKErrorCode.consumerNotAuthenticated}</td><td>The consumer is not authenticated.</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.illegalArgument|AWSDKErrorCode.illegalArgument}</td><td>If consumer is null or not an instance of AWSDKConsumer</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.internalError|AWSDKErrorCode.internalError}</td><td>The AWSDK could not complete the request.</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.noPaymentInformationFound|AWSDKErrorCode.noPaymentInformationFound}</td><td>No Payment information found</td></tr>\n   * </tbody>\n   * </table>\n   */\n  getPaymentMethod(consumer) {\n    const currentFunction = 'ConsumerService.getPaymentMethod';\n    this.__logger.debug(currentFunction, 'Started', consumer);\n    if (!(consumer instanceof AWSDKConsumer)) {\n      const error = AWSDKError.AWSDKIllegalArgument('consumer is null or not an instance of AWSDKConsumer');\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    const link = this.findNamedLink(consumer.links, 'payment');\n    if (!Validator.isValidLink(link)) {\n      const error = AWSDKError.AWSDKInternalError('consumer does not have a valid \"payment\" link entry');\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    const options = this.generateOptions('GET', link.url, false);\n    options.auth = this.getUserAuth(consumer);\n    if (options.auth == null) {\n      const error = AWSDKError.AWSDKConsumerNotAuthenticated();\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    return this.executeRequest(options, AWSDKPaymentMethodResponse)\n      .then((paymentMethodResponse) => {\n        this.__logger.debug(currentFunction, 'Got response', paymentMethodResponse);\n        this.updateUserAuthEntry(consumer, paymentMethodResponse.authToken);\n        return paymentMethodResponse.paymentMethod;\n      })\n      .catch((error) => {\n        this.__logger.error(currentFunction, 'Error', error);\n        throw error;\n      });\n  }\n\n  /**\n   * This method allows for a search of medications by name. It takes as argument a {@link model.AWSDKConsumer|AWSDKConsumer} and a free-form String text that represents the name of the medication being searched.\n   * @param {model.AWSDKConsumer} consumer the consumer who is authenticated at this particular point\n   * @param {String} medicationText the free form text representing the medication being searched. Needs to be a minimum of 3 char for search to be performed.\n   * @returns {Promise<model.AWSDKMedicationList|error.AWSDKError>} a promise that will resolve to a {@link model.AWSDKMedicationList|AWSDKMedicationList} reject with an {@link error.AWSDKError|AWSDKError}\n   * <p><br>Potential Error Codes<br>\n   * <table summary=\"ErrorCodes\" border=\"1\">\n   * <thead>\n   * <tr><th>Error Code</th><th>reason</th></tr>\n   * </thead>\n   * <tbody>\n   * <tr><td>{@link error.AWSDKErrorCode.illegalArgument|AWSDKErrorCode.illegalArgument}</td><td>If consumer is null or not an instance of AWSDKConsumer</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.internalError|AWSDKErrorCode.internalError}</td><td>The AWSDK could not complete the request.</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.consumerNotAuthenticated|AWSDKErrorCode.consumerNotAuthenticated}</td><td>Consumer is not authenticated.</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.medicationSearchTextTooShort|AWSDKErrorCode.medicationSearchTextTooShort}</td><td>The medication search text is too short</td></tr>\n   * </tbody>\n   * </table>\n   */\n  searchMedications(consumer, medicationSearchText) {\n    const currentFunction = 'ConsumerService.searchMedications';\n    this.__logger.debug(currentFunction, 'Started', consumer);\n    if (consumer == null) {\n      const error = AWSDKError.AWSDKIllegalArgument('consumer argument is null');\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    if (!(consumer instanceof AWSDKConsumer)) {\n      const error = AWSDKError.AWSDKIllegalArgument('consumer argument is of wrong type');\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    if (medicationSearchText == null) {\n      const error = AWSDKError.AWSDKIllegalArgument('medicationSearchText is null');\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    if (!Validator.isStringType(medicationSearchText)) {\n      const error = AWSDKError.AWSDKIllegalArgument('medicationSearchText is of wrong type');\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    if (medicationSearchText.length < 3) {\n      const error = AWSDKError.AWSDKMedicationSearchTextTooShort('medicationSearchText', 3);\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    const link = this.findNamedLink(this.__links, 'medicationSearch');\n    if (!Validator.isValidLink(link)) {\n      const error = AWSDKError.AWSDKInternalError('service does not have a valid \"medicationSearch\" link entry');\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    const options = this.generateOptions('GET', link.url);\n    options.form.set('medication', medicationSearchText);\n    const auth = this.getUserAuth(consumer);\n    if (!auth) {\n      const error = AWSDKError.AWSDKConsumerNotAuthenticated();\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    options.auth = auth;\n    return this.executeRequest(options, AWSDKMedicationList)\n      .then((medicationsResponse) => {\n        this.__logger.debug(currentFunction, 'Got response', medicationsResponse);\n        this.updateUserAuthEntry(consumer, medicationsResponse.authToken);\n        return medicationsResponse;\n      })\n      .catch((error) => {\n        this.__logger.error(currentFunction, 'Error', error);\n        throw error;\n      });\n  }\n  /**\n   * This service method allows callers to retrieve a list of medications ({@link model.AWSDKMedicationList|AWSDKMedicationList}) pertaining to a {@link model.AWSDKConsumer|AWSDKConsumer}\n   * @param {model.AWSDKConsumer} consumer the {@link model.AWSDKConsumer|AWSDKConsumer} whose medications list we want to retrieve\n   * @returns {Promise<model.AWSDKMedicationList|error.AWSDKError>} a Promise that resolves to a {@link model.AWSDKMedicationList|AWSDKMedicationList} or is rejected with a {@link error.AWSDKError|AWSDKError}\n   * <p><br>Potential Error Codes<br>\n   * <table summary=\"ErrorCodes\" border=\"1\">\n   * <thead>\n   * <tr><th>Error Code</th><th>reason</th></tr>\n   * </thead>\n   * <tbody>\n   * <tr><td>{@link error.AWSDKErrorCode.consumerNotAuthenticated|AWSDKErrorCode.consumerNotAuthenticated}</td><td>The consumer is not authenticated.</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.illegalArgument|AWSDKErrorCode.illegalArgument}</td><td>If consumer is null or not an instance of AWSDKConsumer</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.internalError|AWSDKErrorCode.internalError}</td><td>The AWSDK could not complete the request.</td></tr>\n   * </tbody>\n   * </table>\n   */\n  getMedications(consumer) {\n    const currentFunction = 'ConsumerService.getMedications';\n    this.__logger.debug(currentFunction, 'Started', consumer);\n    if (consumer == null) {\n      const error = AWSDKError.AWSDKIllegalArgument('consumer is null ');\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    if (!(consumer instanceof AWSDKConsumer)) {\n      const error = AWSDKError.AWSDKIllegalArgument('consumer is not an instance of AWSDKConsumer');\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    const link = this.findNamedLink(consumer.links, 'medications');\n    if (!Validator.isValidLink(link)) {\n      const error = AWSDKError.AWSDKInternalError('consumer does not have a valid \"medications\" link entry');\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    const options = this.generateOptions('GET', link.url);\n    const auth = this.getUserAuth(consumer);\n    if (!auth) {\n      const error = AWSDKError.AWSDKConsumerNotAuthenticated();\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    options.auth = auth;\n    return this.executeRequest(options, AWSDKMedicationList)\n      .then((medicationsResponse) => {\n        this.__logger.debug(currentFunction, 'Got response', medicationsResponse);\n        this.updateUserAuthEntry(consumer, medicationsResponse.authToken);\n        return medicationsResponse;\n      })\n      .catch((error) => {\n        this.__logger.error(currentFunction, 'Error', error);\n        throw error;\n      });\n  }\n\n  /**\n   * This service allows a {@link model.AWSDKConsumer|AWSDKConsumer} to update their medications list.\n   * @param {model.AWSDKConsumer} consumer the {@link model.AWSDKConsumer|AWSDKConsumer} whose medications list we want to update\n   * @param {model.AWSDKMedication[]} medications an array of medications representing the medications to be updated.\n   * @returns {Promise<boolean|error.AWSDKError>} returns a Promise that will resolve to a boolean true or reject with an {@link error.AWSDKError|AWSDKError}\n   * <p><br>Potential Error Codes<br>\n   * <table summary=\"ErrorCodes\" border=\"1\">\n   * <thead>\n   * <tr><th>Error Code</th><th>reason</th></tr>\n   * </thead>\n   * <tbody>\n   * <tr><td>{@link error.AWSDKErrorCode.consumerNotAuthenticated|AWSDKErrorCode.consumerNotAuthenticated}</td><td>The consumer is not authenticated.</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.illegalArgument|AWSDKErrorCode.illegalArgument}</td><td>If consumer is not an instance of AWSDKConsumer or\n   * medications in not an array of AWSDKMedication</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.internalError|AWSDKErrorCode.internalError}</td><td>The AWSDK could not complete the request.</td></tr>\n   * </tbody>\n   * </table>\n   */\n  updateMedications(consumer, medications) {\n    const currentFunction = 'ConsumerService.updateMedications';\n    this.__logger.debug(currentFunction, 'Started', consumer, medications);\n    if (consumer == null) {\n      const error = AWSDKError.AWSDKIllegalArgument('consumer is null ');\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    if (!(consumer instanceof AWSDKConsumer)) {\n      const error = AWSDKError.AWSDKIllegalArgument('consumer is not an instance of AWSDKConsumer');\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    if (medications == null) {\n      const error = AWSDKError.AWSDKIllegalArgument('medications is null');\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    if (!Array.isArray(medications)) {\n      const error = AWSDKError.AWSDKIllegalArgument('medications is not an array');\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    const indexOfErr = medications.find(item => !(item instanceof AWSDKMedication));\n    if (indexOfErr) {\n      const error = AWSDKError.AWSDKIllegalArgument(`medications at index: ${indexOfErr} is not an instance of AWSDKMedication`);\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    const link = this.findNamedLink(consumer.links, 'medications');\n    if (!Validator.isValidLink(link)) {\n      const error = AWSDKError.AWSDKInternalError('consumer does not have a valid \"medications\" link entry');\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    const options = this.generateOptions('PUT', link.url);\n    const auth = this.getUserAuth(consumer);\n    if (!auth) {\n      const error = AWSDKError.AWSDKConsumerNotAuthenticated();\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    options.auth = auth;\n    const medicationIds = medications.map(item => item.id.encryptedId);\n    for (let i = 0; i < medicationIds.length; i += 1) {\n      options.form.append('medications', medicationIds[i]);\n    }\n    return this.executeRequest(options)\n      .then(() => {\n        this.__logger.info(currentFunction, 'Completed');\n        return true;\n      })\n      .catch((error) => {\n        this.__logger.error(currentFunction, 'Error', error);\n        throw error;\n      });\n  }\n\n  /**\n   * This method MUST be called before calling the {@link service.ConsumerService#updatePaymentMethod|updatePaymentMethod}\n   * After obtaining the {@link model.AWSDKPaymentRequest|AWSDKPaymentRequest} object, fill out the desired fields ({@link service.ConsumerService#validatePaymentRequest|validatePaymentRequest} for\n   * a description of desired fields) and call the {@link service.ConsumerService#updatePaymentMethod|updatePaymentMethod}\n   * to update the consumer payment information.\n   * @returns {model.AWSDKPaymentRequest} object which will include the payment information to update for the {@link model.AWSDKConsumer|AWSDKConsumer}\n   */\n  newPaymentRequest() {\n    return new AWSDKPaymentRequest();\n  }\n\n  /**\n   * This method is used to update the payment information on file pertaining to a {@link model.AWSDKConsumer|AWSDKConsumer}. The caller of this method MUST call the {@link service.ConsumerService#newPaymentRequest|newPaymentRequest} <br>\n   * and fill the request form with new credit card information. Additionally, the caller can (optionally) validate the {@link model.AWSDKPaymentRequest|AWSDKPaymentRequest} by explicitly calling {@link service.ConsumerService#validatePaymentRequest|validatePaymentRequest} <br>\n   * The {@link model.AWSDKPaymentRequest|AWSDKPaymentRequest} will ALWAYS be validated when calling this update method.\n   * @param {model.AWSDKConsumer} consumer the authenticated consumer whose payment information to update.\n   * @param {model.AWSDKPaymentRequest} paymentRequest the completed payment request form\n   * @returns {Promise<model.AWSDKPaymentMethod|error.AWSDKError>} a promise that resolves to a {@link model.AWSDKPaymentMethod|AWSDKPaymentMethod} or is rejected as {@link error.AWSDKError|AWSDKError} if there are issues with the call\n   * <p><br>Potential Error Codes<br>\n   * <table summary=\"ErrorCodes\" border=\"1\">\n   * <thead>\n   * <tr><th>Error Code</th><th>reason</th></tr>\n   * </thead>\n   * <tbody>\n   * <tr><td>{@link error.AWSDKErrorCode.consumerNotAuthenticated|AWSDKErrorCode.consumerNotAuthenticated}</td><td>The consumer is not authenticated.</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.consumerNotFound|AWSDKErrorCode.consumerNotFound}</td><td>Consumer not found</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.creditCardDeclinedError|AWSDKErrorCode.creditCardDeclinedError}</td><td>Credit card declined</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.creditCardInvalidZipCode|AWSDKErrorCode.creditCardInvalidZipCode}</td><td>Invalid zip code</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.creditCardInvalidCVV|AWSDKErrorCode.creditCardInvalidCVV}</td><td>Invalid CVV code</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.creditCardValidationError|AWSDKErrorCode.creditCardValidationError}</td><td>Invalid credit card number</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.illegalArgument|AWSDKErrorCode.illegalArgument}</td><td>If consumer is not a valid instance of AWSDKConsumer or\n   * paymentRequest in not a valid instance of AWSDKPaymentRequest</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.internalError|AWSDKErrorCode.internalError}</td><td>The AWSDK could not complete the request.</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.noPaymentInformationFound|AWSDKErrorCode.noPaymentInformationFound}</td><td>No payment information found</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.validationErrors|AWSDKErrorCode.validationErrors}</td><td>If any of the paymentRequest values are invalid. The errors property will return the array of validation errors.</td></tr>\n   * </tbody>\n   * </table>\n   */\n  updatePaymentMethod(consumer, paymentRequest) {\n    const currentFunction = 'ConsumerService.updatePaymentMethod';\n    this.__logger.debug(currentFunction, 'Started', consumer, paymentRequest);\n    if (!(paymentRequest instanceof AWSDKPaymentRequest)) {\n      const error = AWSDKError.AWSDKIllegalArgument('paymentRequest');\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    if (!(consumer instanceof AWSDKConsumer)) {\n      const error = AWSDKError.AWSDKIllegalArgument('consumer');\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    const errors = this.validatePaymentRequest(paymentRequest);\n    if (errors.length > 0) {\n      const error = AWSDKError.AWSDKValidationErrors(errors);\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    const link = this.findNamedLink(consumer.links, 'payment');\n    if (!Validator.isValidLink(link)) {\n      const error = AWSDKError.AWSDKInternalError('consumer does not have a valid \"payment\" link entry');\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    const options = this.generateOptions('PUT', link.url, false);\n    options.auth = this.getUserAuth(consumer);\n    if (options.auth == null) {\n      const error = AWSDKError.AWSDKConsumerNotAuthenticated();\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    options.headers['Content-Type'] = 'application/json';\n    const body = {\n      creditCardNumber: paymentRequest.creditCardNumber,\n      creditCardMonth: paymentRequest.creditCardMonth - 1, // server uses 0 based index\n      creditCardYear: paymentRequest.creditCardYear,\n      creditCardSecCode: paymentRequest.creditCardSecCode,\n      creditCardZip: paymentRequest.creditCardZip,\n      nameOnCard: paymentRequest.nameOnCard,\n      country: paymentRequest.country,\n      state: paymentRequest.state,\n      city: paymentRequest.city,\n      address1: paymentRequest.address1,\n      address2: paymentRequest.address2,\n    };\n    options.body = JSON.stringify(body);\n    return this.executeRequest(options, AWSDKPaymentMethodResponse)\n      .then((paymentResponse) => {\n        this.__logger.debug(currentFunction, 'Got response', paymentResponse);\n        this.updateUserAuthEntry(consumer, paymentResponse.authToken);\n        this.__logger.info(currentFunction, 'Completed');\n        return paymentResponse.paymentMethod;\n      })\n      .catch((error) => {\n        this.__logger.error(currentFunction, 'Error', error);\n        throw error;\n      });\n  }\n\n  /**\n   * This method validates the fields in the {@link model.AWSDKPaymentRequest|AWSDKPaymentRequest}\n   * <br>Potential validation errors:<br>\n   * <table summary=\"validation\" border=\"1\">\n   * <tr>\n   * <th>Field</th>\n   * <th>Validation Reason</th>\n   * <th>Notes</th>\n   * </tr>\n   * <tr>\n   * <td>nameOnCard</td>\n   * <td>field required</td>\n   * <td>Set to non-empty value</td>\n   * </tr>\n   * <tr>\n   * <td>creditCardNumber</td>\n   * <td>field required</td>\n   * <td>Set to non-empty value</td>\n   * </tr>\n   * <tr>\n   * <td>creditCardNumber</td>\n   * <td>invalid field format</td>\n   * <td></td>\n   * </tr>\n   * <tr>\n   * <td>creditCardSecCode</td>\n   * <td>field required</td>\n   * <td>set to non-empty field</td>\n   * </tr>\n   * <tr>\n   * <td>creditCardSecCode</td>\n   * <td>invalid field format</td>\n   * <td></td>\n   * </tr>\n   * <tr>\n   * <td>address1</td>\n   * <td>invalid field format</td>\n   * <td>if non-empty, must be at least 1 char long</td>\n   * </tr>\n   * <tr>\n   * <td>address1</td>\n   * <td>required field</td>\n   * <td>set to non-empty value</td>\n   * </tr>\n   * <tr>\n   * <td>address2</td>\n   * <td>invalid field format</td>\n   * <td>If non-empty, then must be at least 1 char long</td>\n   * </tr>\n   * <tr>\n   * <td>city</td>\n   * <td>invalid field format</td>\n   * <td>if non-empty, must be at least 1 char long</td>\n   * </tr>\n   * <tr>\n   * <td>city</td>\n   * <td>required field</td>\n   * <td>set to non-empty value</td>\n   * </tr>\n   * <tr>\n   * <td>stateCode</td>\n   * <td>field required</td>\n   * <td>set to non-empty value</td>\n   * </tr>\n   * <tr>\n   * <td>stateCode</td>\n   * <td>invalid field value</td>\n   * <td>Value must be in the list of supported state codes for address.</td>\n   * </tr>\n   * <tr>\n   * <td>countryCode</td>\n   * <td>field required</td>\n   * <td>Only required if {@link model.AWSDKSystemConfiguration#isMultiCountry|AWSDKSystemConfiguration.isMultiCountry} is true</td>\n   * </tr>\n   * <tr>\n   * <td>countryCode</td>\n   * <td>invalid field value</td>\n   * <td>Only required if {@link model.AWSDKSystemConfiguration#isMultiCountry|AWSDKSystemConfiguration.isMultiCountry} is true. If so, Value must be in the list of supported country codes for address.</td>\n   * </tr>\n   * <tr>\n   * <td>creditCardZip</td>\n   * <td>invalid field format</td>\n   * <td>format must be: nnnnn or nnnnn-nnnn</td>\n   * </tr>\n   * <tr>\n   * <td>creditCardMonth</td>\n   * <td>field required</td>\n   * <td>set to non-empty field</td>\n   * </tr>\n   * <tr>\n   * <td>creditCardMonth</td>\n   * <td>invalid field format</td>\n   * <td>number >= 1 and number <= 12. If in same year, this cannot be in the past</td>\n   * </tr>\n   * <tr>\n   * <td>creditCardYear</td>\n   * <td>field required</td>\n   * <td>Set to non-empty value</td>\n   * </tr>\n   * <tr>\n   * <td>creditCardYear</td>\n   * <td>invalid field format</td>\n   * <td>format: yyyy, Please note that year cannot be in the past/td>\n   * </tr>\n   * </table>\n   * @param {model.AWSDKPaymentRequest} paymentRequest the payment request form with updated payment information for validation\n   * @returns {Array.<error.AWSDKError>} an array of {@link error.AWSDKError|AWSDKError} that detail any validation errors.\n   */\n  validatePaymentRequest(paymentRequest) {\n    const currentFunction = 'ConsumerService.validatePaymentRequest';\n    this.__logger.debug(currentFunction, 'Started', paymentRequest);\n    let fieldName;\n    let reason;\n    let recoverySuggestion;\n    const errors = [];\n    if (!Validator.isValidString(paymentRequest.nameOnCard)) {\n      fieldName = 'nameOnCard';\n      reason = 'field required';\n      recoverySuggestion = 'Set to non-empty value';\n      errors.push(AWSDKError.AWSDKFieldValidationError(AWSDKPaymentRequest, fieldName, reason, recoverySuggestion));\n    }\n    if (!Validator.isValidString(paymentRequest.creditCardNumber)) {\n      fieldName = 'creditCardNumber';\n      reason = 'field required';\n      recoverySuggestion = 'Set to non-empty value';\n      errors.push(AWSDKError.AWSDKFieldValidationError(AWSDKPaymentRequest, fieldName, reason, recoverySuggestion));\n    }\n    if (!Validator.isValidString(paymentRequest.creditCardSecCode)) {\n      fieldName = 'creditCardSecCode';\n      reason = 'field required';\n      recoverySuggestion = 'Set to non-empty value';\n      errors.push(AWSDKError.AWSDKFieldValidationError(AWSDKPaymentRequest, fieldName, reason, recoverySuggestion));\n    }\n    if (Validator.isValidString(paymentRequest.creditCardNumber) && Validator.isValidString(paymentRequest.creditCardSecCode)) {\n      this.__validateCreditCardAndCvv(paymentRequest.creditCardNumber, paymentRequest.creditCardSecCode, errors, AWSDKPaymentRequest);\n    }\n    if (!Validator.isValidString(paymentRequest.address1)) {\n      fieldName = 'address1';\n      reason = 'field required';\n      recoverySuggestion = 'Set to non-empty value';\n      errors.push(AWSDKError.AWSDKFieldValidationError(AWSDKPaymentRequest, fieldName, reason, recoverySuggestion));\n    } else if (!Validator.isAddressValid(paymentRequest.address1, false)) {\n      fieldName = 'address1';\n      reason = 'invalid format';\n      recoverySuggestion = 'See correct format in documentation';\n      errors.push(AWSDKError.AWSDKFieldValidationError(AWSDKPaymentRequest, fieldName, reason, recoverySuggestion));\n    }\n    if (!Validator.isAddressValid(paymentRequest.address2, false)) {\n      fieldName = 'address2';\n      reason = 'invalid format';\n      recoverySuggestion = 'See correct format in documentation';\n      errors.push(AWSDKError.AWSDKFieldValidationError(AWSDKPaymentRequest, fieldName, reason, recoverySuggestion));\n    }\n    if (!Validator.isValidString(paymentRequest.creditCardZip)) {\n      fieldName = 'creditCardZip';\n      reason = 'field required';\n      recoverySuggestion = 'Set to non-empty value';\n      errors.push(AWSDKError.AWSDKFieldValidationError(AWSDKPaymentRequest, fieldName, reason, recoverySuggestion));\n    } else if (!Validator.isZipCodeValid(paymentRequest.creditCardZip)) {\n      fieldName = 'creditCardZip';\n      reason = 'invalid format';\n      recoverySuggestion = 'See correct format in documentation';\n      errors.push(AWSDKError.AWSDKFieldValidationError(AWSDKPaymentRequest, fieldName, reason, recoverySuggestion));\n    }\n    if (!Validator.isValidString(paymentRequest.city)) {\n      fieldName = 'city';\n      reason = 'field required';\n      recoverySuggestion = 'Set to non-empty value';\n      errors.push(AWSDKError.AWSDKFieldValidationError(AWSDKPaymentRequest, fieldName, reason, recoverySuggestion));\n    } else if (paymentRequest.city.length <= 1) {\n      fieldName = 'city';\n      reason = 'invalid format';\n      recoverySuggestion = 'See correct format in documentation';\n      errors.push(AWSDKError.AWSDKFieldValidationError(AWSDKPaymentRequest, fieldName, reason, recoverySuggestion));\n    }\n\n    this.__validateCountryState(paymentRequest.country, paymentRequest.state, errors, false, false, AWSDKPaymentRequest);\n\n    if (!paymentRequest.creditCardMonth) {\n      fieldName = 'creditCardMonth';\n      reason = 'field required';\n      recoverySuggestion = 'Set to non-empty value';\n      errors.push(AWSDKError.AWSDKFieldValidationError(AWSDKPaymentRequest, fieldName, reason, recoverySuggestion));\n    } else if (paymentRequest.creditCardMonth < 1 || paymentRequest.creditCardMonth > 12) {\n      fieldName = 'creditCardMonth';\n      reason = 'out of range field';\n      recoverySuggestion = 'See correct format in documentation';\n      errors.push(AWSDKError.AWSDKFieldValidationError(AWSDKPaymentRequest, fieldName, reason, recoverySuggestion));\n    }\n    const currentDate = new Date();\n    const year = paymentRequest.creditCardYear;\n    const currentMonth = parseInt(currentDate.getMonth(), 10) + 1;\n    const currentYear = parseInt(currentDate.getFullYear(), 10);\n    if (!year) {\n      fieldName = 'creditCardYear';\n      reason = 'field required';\n      recoverySuggestion = 'Set to non-empty value';\n      errors.push(AWSDKError.AWSDKFieldValidationError(AWSDKPaymentRequest, fieldName, reason, recoverySuggestion));\n    } else if ((year && year.toString().length !== 4)) {\n      fieldName = 'creditCardYear';\n      reason = 'out of range field';\n      recoverySuggestion = 'See correct range in documentation';\n      errors.push(AWSDKError.AWSDKFieldValidationError(AWSDKPaymentRequest, fieldName, reason, recoverySuggestion));\n    }\n    if ((paymentRequest.creditCardYear < currentYear)\n      || (paymentRequest.creditCardYear === currentYear\n      && paymentRequest.creditCardMonth < currentMonth)) {\n      fieldName = 'creditCardYear';\n      reason = 'invalid format';\n      recoverySuggestion = 'See comments in docs';\n      errors.push(AWSDKError.AWSDKFieldValidationError(AWSDKPaymentRequest, fieldName, reason, recoverySuggestion));\n    }\n    this.__logger.trace(currentFunction, 'Finished', errors);\n    return errors;\n  }\n\n  __validateCreditCardAndCvv(cardNumber, cvvNumber, errors, objectType) {\n    let fieldName = '';\n    let reason = '';\n    let recoverySuggestion = '';\n\n    const cardType = this.__creditCardTypes.find(cc => cardNumber.toString().match(cc.regex));\n    if (!cardType) {\n      fieldName = 'creditCardNumber';\n      reason = 'invalid format';\n      recoverySuggestion = 'See correct format in documentation';\n      errors.push(AWSDKError.AWSDKFieldValidationError(objectType, fieldName, reason, recoverySuggestion));\n    } else if (!Validator.isCVV(cvvNumber, cardType.cvvLength)) {\n      fieldName = 'creditCardSecCode';\n      reason = 'invalid format';\n      recoverySuggestion = 'See correct format in documentation';\n      errors.push(AWSDKError.AWSDKFieldValidationError(objectType, fieldName, reason, recoverySuggestion));\n    }\n  }\n\n  /**\n   * Returns an array of {@link model.AWSDKAllergy} for a given {@link model.AWSDKConsumer}. The allergies that are pertinent to\n   * the current consumer have the property 'isCurrent' set to true.\n   * @param {model.AWSDKConsumer} consumer the {@link model.AWSDKConsumer} whose allergies we are intersted in fetching\n   * @returns {Promise<model.AWSDKAllergy[]|error.AWSDKError>} an Promise that will be resolved to an array of allergies or rejected as error.\n   * <p><br>Potential Error Codes<br>\n   * <table summary=\"ErrorCodes\" border=\"1\">\n   * <thead>\n   * <tr><th>Error Code</th><th>reason</th></tr>\n   * </thead>\n   * <tbody>\n   * <tr><td>{@link error.AWSDKErrorCode.consumerNotAuthenticated }</td><td>Unauthenticated consumer</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.illegalArgument|AWSDKErrorCode.illegalArgument}</td><td>If consumer is null or not a valid instance of AWSDKConsumer</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.internalError|AWSDKErrorCode.internalError}</td><td>The AWSDK could not complete the request.</td></tr>\n   * </tbody>\n   * </table>\n   */\n  getAllergies(consumer) {\n    const currentFunction = 'ConsumerService.getAllergies';\n    this.__logger.debug(currentFunction, 'Started', consumer);\n    if (!(consumer instanceof AWSDKConsumer)) {\n      const error = AWSDKError.AWSDKIllegalArgument('consumer is null or not an instance of AWSDKConsumer');\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    const link = this.findNamedLink(consumer.links, 'allergies');\n    if (!Validator.isValidLink(link)) {\n      const error = AWSDKError.AWSDKInternalError('consumer does not have a valid \"allergies\" link entry');\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    const options = this.generateOptions('GET', link.url, false);\n    const auth = this.getUserAuth(consumer);\n    if (!auth) {\n      const error = AWSDKError.AWSDKConsumerNotAuthenticated();\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    options.auth = auth;\n    return this.executeRequest(options, AWSDKAllergiesResponse)\n      .then((allergiesResponse) => {\n        this.__logger.debug(currentFunction, 'Got response', allergiesResponse);\n        this.updateUserAuthEntry(consumer, allergiesResponse.authToken);\n        return allergiesResponse.allergies;\n      })\n      .catch((error) => {\n        this.__logger.error(currentFunction, 'Error', error);\n        throw error;\n      });\n  }\n\n  /**\n   * Returns a {@link model.AWSDKSubscription} for a given {@link model.AWSDKConsumer}.\n   * @param {model.AWSDKConsumer} consumer the {@link model.AWSDKConsumer} whose insurance subscription we're interested in fetching\n   * @returns {Promise<model.AWSDKSubscription|error.AWSDKError>} an Promise that will be resolved to a subscription or rejected as an error.\n   * <p><br>Potential Error Codes<br>\n   * <table summary=\"ErrorCodes\" border=\"1\">\n   * <thead>\n   * <tr><th>Error Code</th><th>reason</th></tr>\n   * </thead>\n   * <tbody>\n   * <tr><td>{@link error.AWSDKErrorCode.consumerNotAuthenticated|AWSDKErrorCode.consumerNotAuthenticated}</td><td>Unauthenticated consumer</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.illegalArgument|AWSDKErrorCode.illegalArgument}</td><td>If consumer is null or not a valid instance of AWSDKConsumer</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.internalError|AWSDKErrorCode.internalError}</td><td>The AWSDK could not complete the request.</td></tr>\n   * </tbody>\n   * </table>\n   */\n  getInsuranceSubscription(consumer) {\n    const currentFunction = 'ConsumerService.getInsuranceSubscription';\n    this.__logger.debug(currentFunction, 'Started', consumer);\n    if (!(consumer instanceof AWSDKConsumer)) {\n      const error = AWSDKError.AWSDKIllegalArgument('consumer is null or not instance of AWSDKConsumer');\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    const link = this.findNamedLink(consumer.links, 'insurance');\n    if (!Validator.isValidLink(link)) {\n      const error = AWSDKError.AWSDKInternalError('consumer does not have a valid \"insurance\" link entry');\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    const auth = this.getUserAuth(consumer);\n    if (!auth) {\n      const error = AWSDKError.AWSDKConsumerNotAuthenticated();\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    const options = this.generateOptions('GET', link.url, false);\n    options.auth = auth;\n    return this.executeRequest(options, AWSDKSubscriptionResponse)\n      .then((subscriptionResponse) => {\n        this.__logger.debug(currentFunction, 'Got response', subscriptionResponse);\n        this.updateUserAuthEntry(consumer, subscriptionResponse.authToken);\n        return subscriptionResponse.insuranceDetails;\n      })\n      .catch((error) => {\n        this.__logger.error(currentFunction, 'Error', error);\n        throw error;\n      });\n  }\n\n  /**\n   * Remove the existing {@link model.AWSDKSubscription} from the given {@link model.AWSDKConsumer|AWSDKConsumer}. <br>\n   * @param {model.AWSDKConsumer} consumer the consumer whose insurance subscription should be removed\n   * @returns {Promise<Boolean|error.AWSDKError>} a promise that resolves successfully if the subscription was removed or is rejected as {@link error.AWSDKError|AWSDKError} if there are issues with the call\n   * <p><br>Potential Error Codes<br>\n   * <table summary=\"ErrorCodes\" border=\"1\">\n   * <thead>\n   * <tr><th>Error Code</th><th>reason</th></tr>\n   * </thead>\n   * <tbody>\n   * <tr><td>{@link error.AWSDKErrorCode.authenticationAccessDenied|AWSDKErrorCode.authenticationAccessDenied}</td><td>Unauthenticated consumer</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.consumerNotFound|AWSDKErrorCode.consumerNotFound}</td><td>Consumer not found</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.illegalArgument|AWSDKErrorCode.illegalArgument}</td><td>Missing parameter.</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.internalError|AWSDKErrorCode.internalError}</td><td>The AWSDK could not complete the request.</td></tr>\n   * </tbody>\n   * </table>\n   */\n  removeInsuranceSubscription(consumer) {\n    const currentFunction = 'ConsumerService.removeInsuranceSubscription';\n    this.__logger.debug(currentFunction, 'Started', consumer);\n    if (!(consumer instanceof AWSDKConsumer)) {\n      const error = AWSDKError.AWSDKIllegalArgument('consumer is null or not an instance of AWSDKConsumer');\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    const link = this.findNamedLink(consumer.links, 'insurance');\n    if (!Validator.isValidLink(link)) {\n      const error = AWSDKError.AWSDKInternalError('consumer does not have a valid \"insurance\" link entry');\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    const auth = this.getUserAuth(consumer);\n    if (!auth) {\n      const error = AWSDKError.AWSDKConsumerNotAuthenticated();\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    const options = this.generateOptions('PUT', link.url, true);\n    options.auth = auth;\n    options.form.set('healthPlanId', null);\n    return this.executeRequest(options, AWSDKSubscriptionResponse)\n      .then((subscriptionResponse) => {\n        this.__logger.debug(currentFunction, 'Got response', subscriptionResponse);\n        this.__logger.info(currentFunction, 'Completed');\n        this.updateUserAuthEntry(consumer, subscriptionResponse.authToken);\n        return subscriptionResponse.insuranceDetails === null;\n      }).catch((error) => {\n        this.__logger.error(currentFunction, 'Error', error);\n        throw error;\n      });\n  }\n\n  /**\n   * This method is used to update the insurance information on file pertaining to a {@link model.AWSDKConsumer|AWSDKConsumer}. <br>\n   * and fill the request form with new insurance information. If the 'ignoreEligibilityChecks' attribute on the\n   * {@link model.AWSDKSubscriptionUpdate|AWSDKSubscriptionUpdate} is set to false this will automatically check for eligibility after updating. <br>\n   * @param {model.AWSDKConsumer} consumer the consumer whose insurance subscription is being updated\n   * @param {model.AWSDKSubscriptionUpdate} subscriptionUpdate the completed insurance form\n   * @returns {Promise<model.AWSDKSubscription|error.AWSDKError>} a promise that resolves to a {@link model.AWSDKSubscription|AWSDKSubscription} or is rejected as {@link error.AWSDKError|AWSDKError} if there are issues with the call\n   * <p><br>Potential Error Codes<br>\n   * <table summary=\"ErrorCodes\" border=\"1\">\n   * <thead>\n   * <tr><th>Error Code</th><th>reason</th></tr>\n   * </thead>\n   * <tbody>\n   * <tr><td>{@link error.AWSDKErrorCode.authenticationAccessDenied|AWSDKErrorCode.authenticationAccessDenied}</td><td>Unauthenticated consumer</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.healthPlanIsFeedControlled|AWSDKErrorCode.healthPlanIsFeedControlled}</td><td>The consumer's existing health plan is feed controlled</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.eligibilityCheckError|AWSDKErrorCode.eligibilityCheckError}</td><td>There was a problem during the eligibility check process</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.pollingTimeout|AWSDKErrorCode.pollingTimeout}</td><td>The eligibility check exceeded its allotted polling time</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.inaccurateSubscriberInfo|AWSDKErrorCode.inaccurateSubscriberInfo}</td><td>Inaccurate subscriber information was rejected during the eligibility check</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.consumerNotFound|AWSDKErrorCode.consumerNotFound}</td><td>Consumer not found</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.illegalArgument|AWSDKErrorCode.illegalArgument}</td><td>Missing parameter.</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.internalError|AWSDKErrorCode.internalError}</td><td>The AWSDK could not complete the request.</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.healthPlanSubscriptionEnrollmentError|AWSDKErrorCode.healthPlanSubscriptionEnrollmentError}</td><td>There was some issue with either the subscriber id or the suffix id of the plan.</td></tr>\n   * </tbody>\n   * </table>\n   */\n  updateInsuranceSubscription(consumer, subscriptionUpdate) {\n    const currentFunction = 'ConsumerService.updateInsuranceSubscription';\n    this.__logger.debug(currentFunction, 'Started', consumer, subscriptionUpdate);\n    if (!(subscriptionUpdate instanceof AWSDKSubscriptionUpdate)) {\n      const error = AWSDKError.AWSDKIllegalArgument('subscriptionUpdate is null or not an instance of AWSDKSubscriptionUpdate');\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    if (!(consumer instanceof AWSDKConsumer)) {\n      const error = AWSDKError.AWSDKIllegalArgument('consumer is null or not an instance of AWSDKConsumer');\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    const currentHealthPlan = consumer.subscription ? consumer.subscription.healthPlan : null;\n    if (currentHealthPlan && currentHealthPlan.feedControlled) {\n      const error = AWSDKError.AWSDKHealthPlanIsFeedControlled();\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    const errors = this.validateSubscriptionUpdate(subscriptionUpdate, consumer);\n    if (errors.length > 0) {\n      const error = AWSDKError.AWSDKValidationErrors(errors);\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    const link = this.findNamedLink(consumer.links, 'insurance');\n    if (!Validator.isValidLink(link)) {\n      const error = AWSDKError.AWSDKInternalError('consumer does not have a valid \"insurance\" link entry');\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    const auth = this.getUserAuth(consumer);\n    if (!auth) {\n      const error = AWSDKError.AWSDKConsumerNotAuthenticated();\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    const options = this.generateOptions('PUT', link.url, true);\n\n    options.auth = auth;\n    options.form.set('healthPlanId', subscriptionUpdate.healthPlan ? subscriptionUpdate.healthPlan.id.encryptedId : null);\n    options.form.set('subscriberId', subscriptionUpdate.subscriberId);\n    options.form.set('subscriberSuffix', subscriptionUpdate.subscriberSuffix);\n    options.form.set('eligibilityRequestId', subscriptionUpdate.eligibilityRequestId);\n    options.form.set('relationshipToSubscriber', subscriptionUpdate.relationshipToSubscriberCode.warehouseValue);\n\n    if (subscriptionUpdate.relationshipToSubscriberCode.displayName !== 'SUBSCRIBER') {\n      options.form.set('primarySubscriberFirstName', subscriptionUpdate.primarySubscriberFirstName);\n      options.form.set('primarySubscriberLastName', subscriptionUpdate.primarySubscriberLastName);\n      options.form.set('primarySubscriberDob', Util.formatISODate(subscriptionUpdate.primarySubscriberDateOfBirth));\n    }\n\n    options.form.set('ignoreEligibility', subscriptionUpdate.ignoreEligibilityChecks);\n    options.form.set('firstName', consumer.firstName);\n    options.form.set('lastName', consumer.lastName);\n    options.form.set('middleInitial', consumer.middleInitial);\n    options.form.set('gender', consumer.genderEnum === AWSDKGender.FEMALE ? 'FEMALE' : 'MALE');\n    options.form.set('dob', Util.formatISODate(consumer.dob));\n\n    return this.executeRequest(options, AWSDKSubscriptionResponse)\n      .then((subscriptionResponse) => {\n        this.__logger.debug(currentFunction, 'Got response', subscriptionResponse);\n        this.updateUserAuthEntry(consumer, subscriptionResponse.authToken);\n        const subscription = subscriptionResponse.insuranceDetails;\n        const eligibilityCheck = subscription ? subscription.eligibilityCheck : null;\n\n        // check for and initiate polling for eligibility\n        if (eligibilityCheck && eligibilityCheck.eligibilityRequestId && !eligibilityCheck.eligibilityCheckCompleted) {\n          return this.__waitForEligibilityCheckToFinish(consumer, eligibilityCheck)\n            .then((eligibilityCheckResult) => {\n              if (eligibilityCheckResult.eligibilityError) {\n                return Promise.reject(AWSDKError.AWSDKEligibilityCheckError(eligibilityCheckResult.eligibilityError));\n              }\n              const newUpdate = subscriptionUpdate;\n              newUpdate.eligibilityRequestId = eligibilityCheckResult.eligibilityRequestId;\n              this.__logger.info(currentFunction, 'Eligibility Check Completed');\n              return this.updateInsuranceSubscription(consumer, newUpdate);\n            }).catch((error) => {\n              this.__logger.error(currentFunction, 'Error', error);\n              throw error;\n            });\n        }\n        this.__logger.info(currentFunction, 'Completed');\n        return subscription;\n      }).catch((error) => {\n        this.__logger.error(currentFunction, 'Error', error);\n        throw error;\n      });\n  }\n  /**\n   * Internal Use only!!\n   * @private\n   */\n  __waitForEligibilityCheckToFinish(consumer, eligibilityCheck) {\n    const currentFunction = 'ConsumerService.__waitForEligibilityCheckToFinish';\n    this.__logger.debug(currentFunction, 'Started', consumer, eligibilityCheck);\n    const interval = this.__config.eligibilityPollingInterval;\n    const endTime = Number(new Date()) + (this.__config.eligibilityPollingTimeout);\n    let errorCount = 0;\n    const errorLimit = 3;\n    const checkCondition = (resolve, reject) => {\n      this.__checkEligibility(consumer, eligibilityCheck)\n        .then((eligibilityCheckResult) => {\n          if (eligibilityCheckResult.eligibilityCheckCompleted) {\n            this.__logger.info(currentFunction, 'Completed');\n            resolve(eligibilityCheckResult);\n          } else if (Number(new Date()) < endTime) {\n            setTimeout(checkCondition, interval, resolve, reject);\n          } else {\n            const error = AWSDKError.AWSDKPollingTimeout();\n            errorCount += 3;\n            this.__logger.error(currentFunction, 'Polling request timed out', error);\n            reject(error);\n          }\n        })\n        .catch((error) => {\n          errorCount += 1;\n          this.__logger.warn(currentFunction, 'error during polling', errorCount, error);\n          if (errorCount >= errorLimit) {\n            this.__logger.error(currentFunction, 'Error', error);\n            reject(error);\n          } else {\n            setTimeout(checkCondition, interval, resolve, reject);\n          }\n        });\n    };\n    return new Promise(checkCondition);\n  }\n  /**\n   * Internal Use only!!\n   * @private\n   */\n  __checkEligibility(consumer, eligbilityCheck) {\n    const currentFunction = 'ConsumerService.__checkEligibility';\n    this.__logger.debug(currentFunction, 'Started', consumer, eligbilityCheck);\n    const link = this.findNamedLink(eligbilityCheck.links, 'status');\n    if (!Validator.isValidLink(link)) {\n      // no need to log as it is logged in __waitForEligibilityCheckToFinish\n      return Promise.reject(AWSDKError.AWSDKInternalError('eligbilityCheck does not have a valid \"status\" link entry'));\n    }\n    const auth = this.getUserAuth(consumer);\n    if (!auth) {\n      // no need to log as it is logged in __waitForEligibilityCheckToFinish\n      return Promise.reject(AWSDKError.AWSDKConsumerNotAuthenticated());\n    }\n    const options = this.generateOptions('GET', link.url, true);\n    options.auth = auth;\n    options.form.set('id', eligbilityCheck.eligibilityRequestId);\n    return this.executeRequest(options, AWSDKEligibilityResponse)\n      .then((eligibilityResponse) => {\n        this.__logger.trace(currentFunction, 'Got response', eligibilityResponse);\n        this.updateUserAuthEntry(consumer, eligibilityResponse.authToken);\n        return eligibilityResponse.eligibilityCheck;\n      });\n  }\n  /**\n   * This method updates the list of known allergies for a given consumer.\n   * @param {model.AWSDKConsumer} consumer the {@link model.AWSDKConsumer} whose allergies list we want to update\n   * @param {model.AWSDKAllergy[]} allergies the list of allergies to update for the consumer\n   * @returns {Boolean|error.AWSDKError} boolean true if the update succeeded, error otherwise\n   * <p><br>Potential Error Codes<br>\n   * <table summary=\"ErrorCodes\" border=\"1\">\n   * <thead>\n   * <tr><th>Error Code</th><th>reason</th></tr>\n   * </thead>\n   * <tbody>\n   * <tr><td>{@link error.AWSDKErrorCode#RequiredParameterMissing}</td><td>Missing parameter.</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode#ValidationError}</td><td>validation failed for parameter</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode#consumerNotAuthenticated}</td><td>Unauthenticated consumer</td></tr>\n   * </tbody>\n   * </table>\n   */\n  updateAllergies(consumer, allergies) {\n    const currentFunction = 'ConsumerService.updateAllergies';\n    this.__logger.debug(currentFunction, 'Started', consumer, allergies);\n    if (consumer == null) {\n      const error = AWSDKError.AWSDKValidationRequiredParameterMissing('consumer');\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    if (allergies == null) {\n      const error = AWSDKError.AWSDKValidationRequiredParameterMissing('allergies');\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    if (!(consumer instanceof AWSDKConsumer)) {\n      const error = AWSDKError.AWSDKValidationError('consumer');\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    if (!Array.isArray(allergies)) {\n      const error = AWSDKError.AWSDKValidationError('\"allergies\" must be a non-empty array');\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    const allergyIds = [];\n    for (let i = 0; i < allergies.length; i += 1) {\n      const item = allergies[i];\n      if (!(item instanceof AWSDKAllergy)) {\n        const error = AWSDKError.AWSDKValidationError('\"allergies\" contains an invalid type');\n        this.__logger.error(currentFunction, 'Error', error);\n        return Promise.reject(error);\n      }\n      if (item.isCurrent) {\n        allergyIds.push(item.termId);\n      }\n    }\n    const link = this.findNamedLink(consumer.links, 'allergies');\n    if (!Validator.isValidLink(link)) {\n      const error = AWSDKError.AWSDKInternalError('consumer does not have a valid \"allergies\" link entry');\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    const options = this.generateOptions('PUT', link.url);\n    const auth = this.getUserAuth(consumer);\n    if (!auth) {\n      const error = AWSDKError.AWSDKConsumerNotAuthenticated();\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    options.auth = auth;\n    allergyIds.forEach((id) => {\n      options.form.append('allergies', id);\n    });\n    options.form.allergies = allergyIds;\n    return this.executeRequest(options, AWSDKResponse)\n      .then((response) => {\n        this.__logger.debug(currentFunction, 'Got response', response);\n        this.updateUserAuthEntry(consumer, response.authToken);\n        this.__logger.info(currentFunction, 'Completed');\n        return true;\n      })\n      .catch((error) => {\n        this.__logger.error(currentFunction, 'Error', error);\n        throw error;\n      });\n  }\n\n  /**\n   * This method validates the fields in the {@link model.AWSDKSubscriptionUpdate|AWSDKSubscriptionUpdate}\n   * @param {model.AWSDKSubscriptionUpdate} subscriptionUpdate the subscription request form with updated subscription information for validation\n   * @param {model.AWSDKConsumer} consumer the consumer for whom subscription is being changed for\n   * @returns {error.AWSDKError[]} an array of {@link error.AWSDKError|AWSDKError} that detail any validation errors.\n   * <br>Potential validation errors:<br>\n   * <table summary=\"validation\" border=\"1\">\n   * <tr>\n   * <th>Field</th>\n   * <th>Validation Reason</th>\n   * <th>Notes</th>\n   * </tr>\n   * <tr>\n   * <td>healthPlan</td>\n   * <td>invalid value healthPlan is feed controlled</td>\n   * <td>Set to a valid value</td>\n   * </tr>\n   * <tr>\n   * <td>healthPlan</td>\n   * <td>invalid value</td>\n   * <td>Set to a healthPlan that is not feed controlled</td>\n   * </tr>\n   * <tr>\n   * <td>subscriberSuffix</td>\n   * <td>field required</td>\n   * <td>Set to non-empty value</td>\n   * </tr>\n   * <tr>\n   * <td>subscriberId</td>\n   * <td>field required</td>\n   * <td>Set to non-empty value</td>\n   * </tr>\n   * <tr>\n   * <td>subscriberId</td>\n   * <td>invalid value</td>\n   * <td>{errorMessage}</td>\n   * </tr>\n   * <tr>\n   * <td>relationshipToSubscriberCode</td>\n   * <td>field required</td>\n   * <td>Set to non-empty value</td>\n   * </tr>\n   * <tr>\n   * <td>relationshipToSubscriberCode</td>\n   * <td>invalid value</td>\n   * <td>Set to valid value</td>\n   * </tr>\n   * <tr>\n   * <td>relationshipToSubscriberCode</td>\n   * <td>invalid value for dependent</td>\n   * <td>Set to valid value for dependent</td>\n   * </tr>\n   * <tr>\n   * <td>primarySubscriberFirstName</td>\n   * <td>field required</td>\n   * <td>Set to non-empty value</td>\n   * </tr>\n   * <tr>\n   * <td>primarySubscriberFirstName</td>\n   * <td>invalid value</td>\n   * <td>Set to valid value</td>\n   * </tr>\n   * <tr>\n   * <td>primarySubscriberLastName</td>\n   * <td>field required</td>\n   * <td>Set to non-empty value</td>\n   * </tr>\n   * <tr>\n   * <td>primarySubscriberLastName</td>\n   * <td>invalid value</td>\n   * <td>Set to valid value</td>\n   * </tr>\n   * <tr>\n   * <td>primarySubscriberDateOfBirth</td>\n   * <td>field required</td>\n   * <td>Set to non-empty value</td>\n   * </tr>\n   * <tr>\n   * <td>primarySubscriberDateOfBirth</td>\n   * <td>invalid value</td>\n   * <td>Set to valid value</td>\n   * </tr>\n   * <tr>\n   * </table>\n   */\n  validateSubscriptionUpdate(subscriptionUpdate, consumer) {\n    this.__logger.info('consumerService in validateSubscriptionUpdate()');\n    this.__logger.debug('Found subscriptionUpdate ', subscriptionUpdate);\n    const errors = [];\n    if (!(subscriptionUpdate instanceof AWSDKSubscriptionUpdate)) {\n      throw AWSDKError.AWSDKIllegalArgument('subscriptionUpdate is not instance of AWSDKSubscriptionUpdate');\n    }\n    this.__validateSubscriptionUpdate(subscriptionUpdate, consumer, errors);\n    return errors;\n  }\n\n  /**\n   * Internal Use only!!\n   * @private\n   */\n  __validateSubscriptionUpdate(subscriptionUpdate, consumer, errors) {\n    let fieldName;\n    let reason;\n    let recoverySuggestion;\n    const healthPlan = subscriptionUpdate.healthPlan;\n    if (healthPlan && !(healthPlan instanceof AWSDKHealthPlan)) {\n      fieldName = 'healthPlan';\n      reason = 'invalid value';\n      recoverySuggestion = 'Set to valid value';\n      errors.push(AWSDKError.AWSDKFieldValidationError(AWSDKHealthPlan, fieldName, reason, recoverySuggestion));\n    }\n    if (healthPlan && (healthPlan instanceof AWSDKHealthPlan)) {\n      if (healthPlan.feedControlled) {\n        fieldName = 'healthPlan';\n        reason = 'invalid value healthPlan is feed controlled';\n        recoverySuggestion = 'Set to a healthPlan that is not feed controlled';\n        errors.push(AWSDKError.AWSDKFieldValidationError(AWSDKSubscriptionUpdate, fieldName, reason, recoverySuggestion));\n      }\n      if (healthPlan.usesSuffix && !Validator.isValidString(subscriptionUpdate.subscriberSuffix)) {\n        fieldName = 'subscriberSuffix';\n        reason = 'field required';\n        recoverySuggestion = 'Set to non-empty value';\n        errors.push(AWSDKError.AWSDKFieldValidationError(AWSDKSubscriptionUpdate, fieldName, reason, recoverySuggestion));\n      }\n      if (!Validator.isValidString(subscriptionUpdate.subscriberId)) {\n        fieldName = 'subscriberId';\n        reason = 'field required';\n        recoverySuggestion = 'Set to non-empty value';\n        errors.push(AWSDKError.AWSDKFieldValidationError(AWSDKSubscriptionUpdate, fieldName, reason, recoverySuggestion));\n      } else if (healthPlan.payerInfo && Validator.isValidString(healthPlan.payerInfo.subscriberIdPattern)) {\n        const pattern = new RegExp(healthPlan.payerInfo.subscriberIdPattern);\n        if (!pattern.test(subscriptionUpdate.subscriberId)) {\n          fieldName = 'subscriberId';\n          reason = 'invalid value';\n          recoverySuggestion = healthPlan.payerInfo.subscriberIdPatternErrorMessage;\n          errors.push(AWSDKError.AWSDKFieldValidationError(AWSDKSubscriptionUpdate, fieldName, reason, recoverySuggestion));\n        }\n      }\n    }\n    const relationship = subscriptionUpdate.relationshipToSubscriberCode;\n    if (!relationship) {\n      fieldName = 'relationshipToSubscriberCode';\n      reason = 'field required';\n      recoverySuggestion = 'Set to non-empty value';\n      errors.push(AWSDKError.AWSDKFieldValidationError(AWSDKSubscriptionUpdate, fieldName, reason, recoverySuggestion));\n    }\n    if (relationship && !(relationship instanceof AWSDKRelationshipToSubscriberCode)) {\n      fieldName = 'relationshipToSubscriberCode';\n      reason = 'invalid value';\n      recoverySuggestion = 'Set to valid value';\n      errors.push(AWSDKError.AWSDKFieldValidationError(AWSDKSubscriptionUpdate, fieldName, reason, recoverySuggestion));\n    }\n    if (relationship && (relationship instanceof AWSDKRelationshipToSubscriberCode)) {\n      if ((consumer.parent || consumer.isDependent) && !relationship.isValidForMinorAccount) {\n        fieldName = 'relationshipToSubscriberCode';\n        reason = 'invalid value for dependent';\n        recoverySuggestion = 'Set to valid value for dependent';\n        errors.push(AWSDKError.AWSDKFieldValidationError(AWSDKSubscriptionUpdate, fieldName, reason, recoverySuggestion));\n      }\n      if (subscriptionUpdate.relationshipToSubscriberCode.displayName !== 'SUBSCRIBER') {\n        if (!Validator.isValidString(subscriptionUpdate.primarySubscriberFirstName, false)) {\n          fieldName = 'primarySubscriberFirstName';\n          reason = 'field required';\n          recoverySuggestion = 'Set to non-empty value';\n          errors.push(AWSDKError.AWSDKFieldValidationError(AWSDKSubscriptionUpdate, fieldName, reason, recoverySuggestion));\n        }\n        if (!Validator.isFirstNameValid(subscriptionUpdate.primarySubscriberFirstName)) {\n          fieldName = 'primarySubscriberFirstName';\n          reason = 'invalid value';\n          recoverySuggestion = 'Set to valid value';\n          errors.push(AWSDKError.AWSDKFieldValidationError(AWSDKSubscriptionUpdate, fieldName, reason, recoverySuggestion));\n        }\n        if (!Validator.isValidString(subscriptionUpdate.primarySubscriberLastName, false)) {\n          fieldName = 'primarySubscriberLastName';\n          reason = 'field required';\n          recoverySuggestion = 'Set to non-empty value';\n          errors.push(AWSDKError.AWSDKFieldValidationError(AWSDKSubscriptionUpdate, fieldName, reason, recoverySuggestion));\n        }\n        if (!Validator.isLastNameValid(subscriptionUpdate.primarySubscriberLastName)) {\n          fieldName = 'primarySubscriberLastName';\n          reason = 'invalid value';\n          recoverySuggestion = 'Set to valid value';\n          errors.push(AWSDKError.AWSDKFieldValidationError(AWSDKSubscriptionUpdate, fieldName, reason, recoverySuggestion));\n        }\n        if (subscriptionUpdate.primarySubscriberDateOfBirth == null) {\n          fieldName = 'primarySubscriberDateOfBirth';\n          reason = 'field required';\n          recoverySuggestion = 'Set to non-empty value';\n          errors.push(AWSDKError.AWSDKFieldValidationError(AWSDKSubscriptionUpdate, fieldName, reason, recoverySuggestion));\n        }\n        if (subscriptionUpdate.primarySubscriberDateOfBirth != null && (subscriptionUpdate.primarySubscriberDateOfBirth instanceof Date) && subscriptionUpdate.primarySubscriberDateOfBirth.getTime() > Date.now()) {\n          fieldName = 'primarySubscriberDateOfBirth';\n          reason = 'invalid value';\n          recoverySuggestion = 'Set to valid value';\n          errors.push(AWSDKError.AWSDKFieldValidationError(AWSDKSubscriptionUpdate, fieldName, reason, recoverySuggestion));\n        }\n      }\n    }\n  }\n\n  /**\n   * This method is used to add a service key to a {@link model.AWSDKConsumer|AWSDKConsumer}.\n   * @param {model.AWSDKConsumer} consumer the authenticated consumer that the service key will be added too.\n   * @param {String} serviceKey the service key to add\n   * @returns {Promise<model.AWSDKConsumer|error.AWSDKError>} a promise that resolves to a {@link model.AWSDKConsumer|AWSDKConsumer} or is rejected as {@link error.AWSDKError|AWSDKError} if there are issues with the call\n   * <p><br>Potential Error Codes<br>\n   * <table summary=\"ErrorCodes\" border=\"1\">\n   * <thead>\n   * <tr><th>Error Code</th><th>reason</th></tr>\n   * </thead>\n   * <tbody>\n   * <tr><td>{@link error.AWSDKErrorCode.consumerNotFound|AWSDKErrorCode.consumerNotFound}</td><td>Consumer not found</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.consumerNotAuthenticated|AWSDKErrorCode.consumerNotAuthenticated}</td><td>The consumer is not authenticated.</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.illegalArgument|AWSDKErrorCode.validationError}</td><td>Consumer is not a valid instance of AWSDKConsumer or serviceKey is null.</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.invalidServiceKeyError|AWSDKErrorCode.invalidServiceKeyError}</td><td>Invalid service key</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.internalError|AWSDKErrorCode.internalError}</td><td>The AWSDK could not complete the request.</td></tr>\n   * </tbody>\n   * </table>\n   * @since 1.0.0\n   */\n  addServiceKey(consumer, serviceKey) {\n    const currentFunction = 'ConsumerService.addServiceKey';\n    this.__logger.debug(currentFunction, 'Started', consumer, serviceKey);\n\n    if (!(consumer instanceof AWSDKConsumer)) {\n      const error = AWSDKError.AWSDKIllegalArgument('consumer is not an instance of AWSDKConsumer');\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    if (serviceKey == null) {\n      const error = AWSDKError.AWSDKIllegalArgument('serviceKey is null');\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    const link = this.findNamedLink(consumer.links, 'serviceKey');\n    if (!Validator.isValidLink(link)) {\n      const error = AWSDKError.AWSDKInternalError('consumer does not have a valid \"serviceKey\" link entry');\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    if (!Validator.isValidString(serviceKey)) {\n      const error = AWSDKError.AWSDKInvalidServiceKeyError();\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    const options = this.generateOptions('PUT', link.url, true);\n    options.auth = this.getUserAuth(consumer);\n    if (options.auth == null) {\n      const error = AWSDKError.AWSDKConsumerNotAuthenticated();\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    options.form.set('serviceKey', serviceKey);\n    return this.executeRequest(options, AWSDKResponse)\n      .then((response) => {\n        this.__logger.debug(currentFunction, 'Got response', response);\n        this.updateUserAuthEntry(consumer, response.authToken);\n        this.__logger.info(currentFunction, 'Completed');\n        return consumer;\n      })\n      .catch((error) => {\n        this.__logger.error(currentFunction, 'Error', error);\n        throw error;\n      });\n  }\n  /**\n   * Get the current {@link model.AWSDKHealthSummary|AWSDKHealthSummary} for the given {@link model.AWSDKConsumer|AWSDKConsumer}\n   *\n   * @param consumer the {@link model.AWSDKConsumer|AWSDKConsumer} to use to fetch the payment on file\n   * @returns {Promise<model.AWSDKHealthSummary|error.AWSDKError>} returns a promise that will be resolved to a {@link model.AWSDKHealthSummary} <br>\n   * or rejected with an {@link error.AWSDKError}\n   * <tr><td>{@link error.AWSDKErrorCode.authenticationAccessDenied|AWSDKErrorCode.authenticationAccessDenied}</td><td>Unauthenticated consumer</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.illegalArgument|AWSDKErrorCode.validationError}</td><td>A parameter is not the correct type.</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.internalError|AWSDKErrorCode.internalError}</td><td>The AWSDK could not complete the request.</td></tr>\n   * </tbody>\n   * </table>\n   */\n  getHealthSummary(consumer) {\n    const currentFunction = 'ConsumerService.getHealthSummary';\n    this.__logger.debug(currentFunction, 'Started', consumer);\n    if (!(consumer instanceof AWSDKConsumer)) {\n      return Promise.reject(AWSDKError.AWSDKIllegalArgument('consumerRegistration is null or not an instance of AWSDKConsumer'));\n    }\n    const link = this.findNamedLink(consumer.links, 'healthSummary');\n    if (!Validator.isValidLink(link)) {\n      return Promise.reject(AWSDKError.AWSDKInternalError('consumer does not have a \"healthSummary\" link entry'));\n    }\n    const options = this.generateOptions('GET', link.url, false);\n    const auth = this.getUserAuth(consumer);\n    if (auth == null) {\n      return Promise.reject(AWSDKError.AWSDKConsumerNotAuthenticated());\n    }\n    options.auth = auth;\n    return this.executeRequest(options, AWSDKHealthSummaryResponse)\n      .then((healthSummaryResponse) => {\n        this.updateUserAuthEntry(consumer, healthSummaryResponse.authToken);\n        return healthSummaryResponse.healthSummary;\n      })\n      .catch((error) => {\n        this.__logger.error(currentFunction, 'Error', error);\n        throw error;\n      });\n  }\n\n  /** This service method allows the fetching of an image card from an {@link model.AWSDKHealthPlan|AWSDKHealthPlan}\n   * @param {model.AWSDKConsumer} consumer the {@link model.AWSDKConsumer|AWSDKConsumer} subscribing to the health plan\n   * @param {model.AWSDKHealthPlan} healthPlan the insurance health plan to which the consumer is a subscriber and whose image card we seek to fetch.\n   * @returns {Promise<Blob|error.AWSDKError>} a Promise that will resolve to a {@link Blob} of data or reject to an {@link error.AWSDKError|AWSDKError}\n   * <p><br>Potential Error Codes<br>\n   * <table summary=\"ErrorCodes\" border=\"1\">\n   * <thead>\n   * <tr><th>Error Code</th><th>reason</th></tr>\n   * </thead>\n   * <tbody>\n   * <tr><td>{@link error.AWSDKErrorCode.consumerNotAuthenticated|AWSDKErrorCode.consumerNotAuthenticated}</td><td>Consumer is not authenticated.</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.illegalArgument|AWSDKErrorCode.illegalArgument}</td><td>A parameter is not the correct type.</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.internalError|AWSDKErrorCode.internalError}</td><td>The AWSDK could not complete the request.</td></tr>\n   * </tbody>\n   * </table>\n   */\n  getHealthPlanCardImage(consumer, healthPlan) {\n    const currentFunction = 'HealthPlanService.getHealthPlanCardImage';\n    this.__logger.debug(currentFunction, 'Started', consumer, healthPlan);\n    if (!(consumer instanceof AWSDKConsumer)) {\n      const error = AWSDKError.AWSDKIllegalArgument('consumer is null or not an instance of AWSDKConsumer');\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    if (!(healthPlan instanceof AWSDKHealthPlan)) {\n      const error = AWSDKError.AWSDKIllegalArgument('healthPlan is null or not an instance of AWSDKHealthPlan');\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    const link = this.findNamedLink(healthPlan.links, 'cardImage');\n    if (!Validator.isValidLink(link)) {\n      const error = AWSDKError.AWSDKInternalError('healthPlan does not have a valid \"cardImage\" link entry');\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    const options = this.generateOptions('GET', link.url);\n    const auth = this.getUserAuth(consumer);\n    if (!auth) {\n      const error = AWSDKError.AWSDKConsumerNotAuthenticated();\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    options.auth = auth;\n    return this.executeRequest(options)\n      .then((blob) => {\n        this.__logger.debug(currentFunction, 'Got response', blob);\n        return blob;\n      })\n      .catch((error) => {\n        this.__logger.error(currentFunction, 'Error', error);\n        throw error;\n      });\n  }\n\n  /**\n   * This method fetches a {@link model.AWSDKVisitReport|AWSDKVisitReport} for a consumer. The visit report is in PDF format and pertains to a previous visit <br>\n   * between this consumer and a given provider.\n   * @param {model.AWSDKConsumer} consumer the {@link model.AWSDKConsumer|AWSDKConsumer} whose visit report we want to fetch\n   * @param {model.AWSDKVisitReport} visitReport the object representing a {@link model.AWSDKVisitReport|AWSDKVisitReport} with links to its PDF resource\n   * @returns {Promise<Blob|error.AWSDKError>} a Promise that will resolve to a Blob or rejected with an {@link error.AWSDKError}\n   * <p><br>Potential Error Codes<br>\n   * <table summary=\"ErrorCodes\" border=\"1\">\n   * <thead>\n   * <tr><th>Error Code</th><th>reason</th></tr>\n   * </thead>\n   * <tbody>\n   * <tr><td>{@link error.AWSDKErrorCode.consumerNotAuthenticated|AWSDKErrorCode.consumerNotAuthenticated}</td><td>Consumer is not authenticated.</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.illegalArgument|AWSDKErrorCode.illegalArgument}</td><td>consumer is not an instance of AWSDKConsumer or visitReport is not an instance of AWSDKVisitReport</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.internalError|AWSDKErrorCode.internalError}</td><td>The AWSDK could not complete the request.</td></tr>\n   * </tbody>\n   * </table>\n   * @since 2.8.0\n   */\n  getVisitReportPDF(consumer, visitReport) {\n    const currentFunction = 'ConsumerService.getVisitReportPDF';\n    this.__logger.debug(currentFunction, 'Started', consumer, visitReport);\n    if (!(consumer instanceof AWSDKConsumer)) {\n      const error = AWSDKError.AWSDKIllegalArgument('consumer is not an instance of AWSDKConsumer');\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    if (!(visitReport instanceof AWSDKVisitReport)) {\n      const error = AWSDKError.AWSDKIllegalArgument('visitReport is not an instance of AWSDKVisitReport');\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    const link = this.findNamedLink(visitReport.links, 'report');\n    if (!Validator.isValidLink(link)) {\n      const error = AWSDKError.AWSDKInternalError('visitReport does not have a valid \"report\" link entry');\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    const options = this.generateOptions('GET', link.url, false);\n    options.headers.Accept = 'application/pdf';\n    const auth = this.getUserAuth(consumer);\n    if (!auth) {\n      const error = AWSDKError.AWSDKConsumerNotAuthenticated();\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    options.auth = auth;\n    return this.executeRequest(options)\n      .then((blob) => {\n        this.__logger.debug(currentFunction, 'Got response', blob);\n        return blob;\n      })\n      .catch((error) => {\n        this.__logger.error(currentFunction, 'Error', error);\n        throw error;\n      });\n  }\n\n  /**\n   * This method fetches a {@link model.AWSDKVisitReport|AWSDKVisitReport} for a consumer. The visit report is in PDF format and pertains to a previous visit <br>\n   * between this consumer and a given provider.\n   * @param {model.AWSDKConsumer} consumer the {@link model.AWSDKConsumer|AWSDKConsumer} whose visit report we want to fetch\n   * @param {model.AWSDKVisitReport} visitReport the object representing a {@link model.AWSDKVisitReport|AWSDKVisitReport} with links to its PDF resource\n   * @returns {Promise<Blob|error.AWSDKError>} a Promise that will resolve to a Blob or rejected with an {@link error.AWSDKError}\n   * <p><br>Potential Error Codes<br>\n   * <table summary=\"ErrorCodes\" border=\"1\">\n   * <thead>\n   * <tr><th>Error Code</th><th>reason</th></tr>\n   * </thead>\n   * <tbody>\n   * <tr><td>{@link error.AWSDKErrorCode.consumerNotAuthenticated|AWSDKErrorCode.consumerNotAuthenticated}</td><td>Consumer is not authenticated.</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.illegalArgument|AWSDKErrorCode.illegalArgument}</td><td>consumer is not an instance of AWSDKConsumer or visitReport is not an instance of AWSDKVisitReport</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.internalError|AWSDKErrorCode.internalError}</td><td>The AWSDK could not complete the request.</td></tr>\n   * </tbody>\n   * </table>\n   * @since 1.0.0\n   * @deprecated use {@link service.ConsumerService#getVisitReportPDF()|ConsumerService#getVisitReportPDF()}\n   */\n  getVisitReport(consumer, visitReport) {\n    deprecated('ConsumerService.getVisitReport', 'Invoke the ConsumerService.getVisitReportPDF function instead', '3.X');\n    return this.getVisitReportPDF(consumer, visitReport);\n  }\n\n  /**\n   * This method fetches a {@link model.AWSDKVisitReportDetail|AWSDKVisitReportDetail} for a consumer.\n   * @param {model.AWSDKConsumer} consumer the {@link model.AWSDKConsumer|AWSDKConsumer} whose visit report we want to fetch\n   * @param {model.AWSDKVisitReport} visitReport the object representing a {@link model.AWSDKVisitReport|AWSDKVisitReport} with links to its detail resource\n   * @returns {Promise<model.AWSDKVisitReportDetail|error.AWSDKError>} a Promise that will resolve to a {@link model.AWSDKVisitReportDetail|AWSDKVisitReportDetail} or rejected with an {@link error.AWSDKError}\n   * <p><br>Potential Error Codes<br>\n   * <table summary=\"ErrorCodes\" border=\"1\">\n   * <thead>\n   * <tr><th>Error Code</th><th>reason</th></tr>\n   * </thead>\n   * <tbody>\n   * <tr><td>{@link error.AWSDKErrorCode.consumerNotAuthenticated|AWSDKErrorCode.consumerNotAuthenticated}</td><td>Consumer is not authenticated.</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.illegalArgument|AWSDKErrorCode.illegalArgument}</td><td>consumer is not an instance of AWSDKConsumer or visitReport is not an instance of AWSDKVisitReport</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.internalError|AWSDKErrorCode.internalError}</td><td>The AWSDK could not complete the request.</td></tr>\n   * </tbody>\n   * </table>\n   * @since 1.2.0\n   */\n  getVisitReportDetail(consumer, visitReport) {\n    const currentFunction = 'ConsumerService.getVisitReportDetail';\n    this.__logger.debug(currentFunction, 'Started', consumer, visitReport);\n    if (!(consumer instanceof AWSDKConsumer)) {\n      const error = AWSDKError.AWSDKIllegalArgument('consumer is not an instance of AWSDKConsumer');\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    if (!(visitReport instanceof AWSDKVisitReport)) {\n      const error = AWSDKError.AWSDKIllegalArgument('visitReport is not an instance of AWSDKVisitReport');\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    const link = this.findNamedLink(visitReport.links, 'data');\n    if (!Validator.isValidLink(link)) {\n      const error = AWSDKError.AWSDKInternalError('visitReport does not have a valid \"data\" link entry');\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    const options = this.generateOptions('GET', link.url, false);\n    const auth = this.getUserAuth(consumer);\n    if (!auth) {\n      const error = AWSDKError.AWSDKConsumerNotAuthenticated();\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    options.auth = auth;\n    return this.executeRequest(options, AWSDKVisitReportDetailResponse)\n      .then((visitReportDetailResponse) => {\n        this.__logger.debug(currentFunction, 'Got response', visitReportDetailResponse);\n        this.updateUserAuthEntry(consumer, visitReportDetailResponse.authToken);\n        return visitReportDetailResponse.visitReportDetail;\n      })\n      .catch((error) => {\n        this.__logger.error(currentFunction, 'Error', error);\n        throw error;\n      });\n  }\n\n  /**\n   * This method allows a {@link model.AWSDKConsumer|AWSDKConsumer} to access all their health documents stored on the American Well telehealth platform\n   * @argument {model.AWSDKConsumer} consumer the currently authenticated {@link model.AWSDKConsumer|AWSDKConsumer}\n   * @argument {model.AWSDKSortOrder} [sortOrder] an optional parameter that represents the sort order of the returned health document records. Defaults to {@link model.AWSDKSortOrder.ASC}.\n   * @returns {Promise<model.AWSDKHealthDocumentRecordList|error.AWSDKError>} a Promise that will resolve to a {@link model.AWSDKHealthDocumentRecordList|AWSDKHealthDocumentRecordList} or rejected with an {@link error.AWSDKError|AWSDKError}\n   * <p><br>Potential Error Codes<br>\n   * <table summary=\"ErrorCodes\" border=\"1\">\n   * <thead>\n   * <tr><th>Error Code</th><th>reason</th></tr>\n   * </thead>\n   * <tbody>\n   * <tr><td>{@link error.AWSDKErrorCode.illegalArgument|AWSDKErrorCode.illegalArgument}</td><td>A parameter is not the correct type.</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.validationRequiredParameterMissing|AWSDKErrorCode.validationRequiredParameterMissing}</td><td>Missing parameter.</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.consumerNotAuthenticated|AWSDKErrorCode.consumerNotAuthenticated}</td><td>Consumer is not authenticated.</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.internalError|AWSDKErrorCode.internalError}</td><td>The AWSDK could not complete the request.</td></tr>\n   * </tbody>\n   * </table>\n   * @since 1.0.0\n   * @deprecated use {@link service.ConsumerService#searchHealthDocumentRecords()|searchHealthDocumentRecords()}\n   */\n  getHealthDocumentRecords(consumer, sortOrder = AWSDKSortOrder.ASC) {\n    const currentFunction = 'ConsumerService.getHealthDocumentRecords';\n    deprecated(currentFunction, 'Invoke the ConsumerService.searchHealthDocumentRecords function instead', '3.X');\n    this.__logger.debug(currentFunction, 'Started', consumer, sortOrder);\n    if (!(consumer instanceof AWSDKConsumer)) {\n      const error = AWSDKError.AWSDKIllegalArgument('consumer is not an instance of AWSDKConsumer');\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    let res;\n    switch (sortOrder) {\n      case AWSDKSortOrder.ASC:\n        res = 'asc';\n        break;\n      case AWSDKSortOrder.DESC:\n        res = 'desc';\n        break;\n      default: {\n        const error = AWSDKError.AWSDKIllegalArgument('sortOrder is not of correct type');\n        this.__logger.error(currentFunction, 'Error', error);\n        return Promise.reject(error);\n      }\n    }\n    const link = this.findNamedLink(consumer.links, 'healthDocumentRecords');\n    if (!Validator.isValidLink(link)) {\n      const error = AWSDKError.AWSDKInternalError('consumer does not have a valid \"healthDocumentRecords\" link entry');\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    const options = this.generateOptions('GET', link.url);\n    const auth = this.getUserAuth(consumer);\n    if (!auth) {\n      return Promise.reject(AWSDKError.AWSDKConsumerNotAuthenticated());\n    }\n    options.auth = auth;\n    options.form.set('sortOrder', res);\n    return this.executeRequest(options, AWSDKHealthDocumentRecordList)\n      .then((healthDocumentRecordList) => {\n        this.__logger.debug(currentFunction, 'Got response', healthDocumentRecordList);\n        this.updateUserAuthEntry(healthDocumentRecordList.authToken);\n        return healthDocumentRecordList;\n      })\n      .catch((error) => {\n        this.__logger.error(currentFunction, 'Error', error);\n        throw error;\n      });\n  }\n\n  /**\n   * This method allows the currently authenticated {@link model.AWSDKConsumer|AWSDKConsumer} to retrieve the attachment associated with the {@link model.AWSDKHealthDocumentRecord|AWSDKHealthDocumentRecord}\n   * @argument {model.AWSDKConsumer} consumer the currently authenticated consumer\n   * @argument {model.AWSDKHealthDocumentRecord} healthDocRecord the health document record whose attachment you want to get.\n   * @returns {Promise<Blob|error.AWSDKError>} a promise that will resolve to a Blob of data or rejected with an {@link error.AWSDKError|AWSDKError}.\n   * <p><br>Potential Error Codes<br>\n   * <table summary=\"ErrorCodes\" border=\"1\">\n   * <thead>\n   * <tr><th>Error Code</th><th>reason</th></tr>\n   * </thead>\n   * <tbody>\n   * <tr><td>{@link error.AWSDKErrorCode.illegalArgument|AWSDKErrorCode.illegalArgument}</td><td>A parameter is not the correct type.</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.consumerNotAuthenticated|AWSDKErrorCode.consumerNotAuthenticated}</td><td>Consumer is not authenticated.</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.unsupportedMimeType|AWSDKErrorCode.unsupportedMimeType}</td><td>The mime type of data is not supported. See {@link model.AWSDKSystemConfiguration#mimeTypeWhitelist|AWSDKSystemConfiguration.mimeTypeWhitelist}</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.internalError|AWSDKErrorCode.internalError}</td><td>The AWSDK could not complete the request.</td></tr>\n   * </tbody>\n   * </table>\n   * @since 1.0.0\n   */\n  getHealthDocumentRecordAttachment(consumer, healthDocRecord) {\n    const currentFunction = 'ConsumerService.getHealthDocumentRecordAttachment';\n    this.__logger.debug(currentFunction, 'Started', consumer, healthDocRecord);\n    if (!(consumer instanceof AWSDKConsumer)) {\n      const error = AWSDKError.AWSDKIllegalArgument('consumer is not an instance of AWSDKConsumer');\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    if (!(healthDocRecord instanceof AWSDKHealthDocumentRecord)) {\n      const error = AWSDKError.AWSDKIllegalArgument('healthDocRecord is not an instance of AWSDKHealthDocumentRecord');\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    const attachment = healthDocRecord.attachment;\n    if (!(attachment instanceof AWSDKHealthDocumentAttachment)) {\n      const error = AWSDKError.AWSDKIllegalArgument('healthDocRecord.attachment is not an instance of AWSDKHealthDocumentAttachment');\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    const link = this.findNamedLink(attachment.links, 'getAttachment');\n    if (!Validator.isValidLink(link)) {\n      const error = AWSDKError.AWSDKInternalError('attachment does not have a valid \"getAttachment\" link entry');\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    const options = this.generateOptions('GET', link.url, false);\n    const mimeType = attachment.type;\n    if (!Validator.isValidString(mimeType)) {\n      const error = AWSDKError.AWSDKUnsupportedMimeType('attachment.type');\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    const currAccHeader = options.headers.Accept;\n    options.headers.Accept = `${currAccHeader}, ${mimeType}`;\n    const auth = this.getUserAuth(consumer);\n    if (!auth) {\n      const error = AWSDKError.AWSDKConsumerNotAuthenticated();\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    options.auth = auth;\n    return this.executeRequest(options)\n      .then((blob) => {\n        if (!(blob instanceof Blob)) {\n          return new Blob([blob], { type: mimeType });\n        }\n        this.__logger.info(currentFunction, 'Completed');\n        return blob;\n      })\n      .catch((error) => {\n        this.__logger.error(currentFunction, 'Error', error);\n        throw error;\n      });\n  }\n\n  /**\n   * This method allows the currently authenticated {@link model.AWSDKConsumer|AWSDKConsumer} to remove an existing {@link model.AWSDKHealthDocumentRecord|AWSDKHealthDocumentRecord} from consumer's health history\n   * @argument {model.AWSDKConsumer} consumer the currently authenticated consumer whose record we want to remove\n   * @argument {model.AWSDKHealthDocumentRecord} healthDocRecord the health document we want to remove from health history\n   * @returns {Promise<boolean|error.AWSDKError>} returns a Promise that will resolve to a boolean true or reject with an {@link error.AWSDKError|AWSDKError}\n   * <p><br>Potential Error Codes<br>\n   * <table summary=\"ErrorCodes\" border=\"1\">\n   * <thead>\n   * <tr><th>Error Code</th><th>reason</th></tr>\n   * </thead>\n   * <tbody>\n   * <tr><td>{@link error.AWSDKErrorCode.illegalArgument|AWSDKErrorCode.illegalArgument}</td><td>A parameter is not the correct type.</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.consumerNotAuthenticated|AWSDKErrorCode.consumerNotAuthenticated}</td><td>Consumer is not authenticated.</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.internalError|AWSDKErrorCode.internalError}</td><td>The AWSDK could not complete the request.</td></tr>\n   * </tbody>\n   * </table>\n   * @since 1.0.0\n   */\n  removeHealthDocumentRecord(consumer, healthDocRecord) {\n    const currentFunction = 'ConsumerService.removeHealthDocumentRecord';\n    this.__logger.debug(currentFunction, 'Started', consumer, healthDocRecord);\n    if (consumer == null) {\n      const error = AWSDKError.AWSDKIllegalArgument('consumer is null');\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    if (healthDocRecord == null) {\n      const error = AWSDKError.AWSDKIllegalArgument('healthDocRecord is null');\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    if (!(consumer instanceof AWSDKConsumer)) {\n      const error = AWSDKError.AWSDKIllegalArgument('consumer is not an instance of AWSDKConsumer');\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    if (!(healthDocRecord instanceof AWSDKHealthDocumentRecord)) {\n      const error = AWSDKError.AWSDKIllegalArgument('healthDocRecord is not an instance of AWSDKHealthDocumentRecord');\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    const link = this.findNamedLink(healthDocRecord.links, 'delete');\n    if (!Validator.isValidLink(link)) {\n      const error = AWSDKError.AWSDKInternalError('healthDocRecord does not have a valid \"delete\" link entry');\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    const options = this.generateOptions('DELETE', link.url, false);\n    const auth = this.getUserAuth(consumer);\n    if (!auth) {\n      const error = AWSDKError.AWSDKConsumerNotAuthenticated();\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    options.auth = auth;\n    return this.executeRequest(options)\n      .then(() => {\n        this.__logger.info(currentFunction, 'Completed');\n        return true;\n      })\n      .catch((error) => {\n        this.__logger.error(currentFunction, 'Error', error);\n        throw error;\n      });\n  }\n\n  /**\n   * This method adds a health document record to the {@link model.AWSDKConsumer|AWSDKConsumer}'s files.\n   * @argument {model.AWSDKConsumer} consumer the consumer whose health documents we want to update.\n   * @argument {Blob|File} data a blob of data represented by a blob or a file.\n   * @argument {String} fileName the name of the file we want to update.\n   * @argument {model.AWSDKVisit} visit the visit whose health documents we want to update.\n   * @argument {String} comment a comment about the health document we want to update.\n   * @returns {Promise<model.AWSDKHealthDocumentRecord|error.AWSDKError>} a promise that will be resolved to a {@link model.AWSDKDocumentRecord|AWSDKHealthDocumentRecord} or <br>\n   * rejected with an {@link error.AWSDKError|AWSDKError}\n   * <p><br>Potential Error Codes<br>\n   * <table summary=\"ErrorCodes\" border=\"1\">\n   * <thead>\n   * <tr><th>Error Code</th><th>reason</th></tr>\n   * </thead>\n   * <tbody>\n   * <tr><td>{@link error.AWSDKErrorCode.consumerNotAuthenticated|AWSDKErrorCode.consumerNotAuthenticated}</td><td>Consumer is not authenticated.</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.illegalArgument|AWSDKErrorCode.illegalArgument}</td><td>A parameter is not the correct type.</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.internalError|AWSDKErrorCode.internalError}</td><td>The AWSDK could not complete the request.</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.attachmentSizeTooLarge|AWSDKErrorCode.attachmentSizeTooLarge}</td><td>The size of data is larger than supported. See {@link model.AWSDKSystemConfiguration#secureMessageAttachmentMaxSizeKB|AWSDKSystemConfiguration.secureMessageAttachmentMaxSizeKB}</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.unsupportedMimeType|AWSDKErrorCode.unsupportedMimeType}</td><td>The mime type of data is not supported. See {@link model.AWSDKSystemConfiguration#mimeTypeWhitelist|AWSDKSystemConfiguration.mimeTypeWhitelist}</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.failedVirusScan|AWSDKErrorCode.failedVirusScan}</td><td>The attachment has a virus detcted by the telehealth platform. </td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.fileExists|AWSDKErrorCode.fileExists}</td><td>The attachment already exists on the telehealth platform. </td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.fileReadError|AWSDKErrorCode.fileReadError}</td><td>The attachment could not be uploaded to the telehealth platform. </td></tr>\n   * </tbody>\n   * </table>\n   * @since 1.0.0\n   */\n  addHealthDocumentAttachment(consumer, data, fileName, visit, comment) {\n    const currentFunction = 'ConsumerService.addHealthDocumentAttachment';\n    this.__logger.debug(currentFunction, 'Started', consumer, data, fileName);\n    if (!(consumer instanceof AWSDKConsumer)) {\n      const error = AWSDKError.AWSDKIllegalArgument('consumer is null or not an instance of AWSDKConsumer');\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    if (!(data instanceof Blob) && !(data instanceof File)) {\n      const error = AWSDKError.AWSDKIllegalArgument('data must be a Blob or File');\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    if (!Validator.isValidString(fileName)) {\n      const error = AWSDKError.AWSDKIllegalArgument('filename is not an instance of String');\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    const link = this.findNamedLink(consumer.links, 'addHealthDocumentRecord');\n    if (!Validator.isValidLink(link)) {\n      const error = AWSDKError.AWSDKInternalError('consumer does not have a valid \"addHealthDocumentRecord\" link entry');\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    const size = data.size;\n    const maxSizeInKb = this.__systemConfiguration.secureMessageAttachmentMaxSizeKB;\n    if (maxSizeInKb < (size / 1024)) {\n      const error = AWSDKError.AWSDKAttachmentSizeTooLarge('data', maxSizeInKb);\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    if (visit && !(visit instanceof AWSDKVisit)) {\n      const error = AWSDKError.AWSDKIllegalArgument('visit optional argument is not an instance of AWSDKVisit');\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    if (comment && !Validator.isValidString(comment)) {\n      const error = AWSDKError.AWSDKIllegalArgument('comment optional argument is not an instance of String');\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    const options = this.generateOptions('POST', link.url, false);\n    const type = data.type ? data.type : '';\n    if (!this.__systemConfiguration.mimeTypeWhitelist.includes(type)) {\n      const error = AWSDKError.AWSDKUnsupportedMimeType('data');\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    options.headers.Accept = `${options.headers.Accept}, ${type}`;\n    const auth = this.getUserAuth(consumer);\n    if (!auth) {\n      const error = AWSDKError.AWSDKConsumerNotAuthenticated();\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    options.auth = auth;\n    const fd = new FormData();\n    fd.append('media', data, fileName);\n    fd.append('filename', fileName);\n    if (visit) fd.append('engagementId', visit.id.encryptedId);\n    if (comment) fd.append('comment', comment);\n    options.body = fd;\n    return this.executeRequest(options, AWSDKHealthDocumentRecordResponse)\n      .then((response) => {\n        this.__logger.debug(currentFunction, 'Got response', response);\n        this.updateUserAuthEntry(consumer, response.authToken);\n        this.__logger.info(currentFunction, 'Completed');\n        return response.documentRecord;\n      })\n      .catch((error) => {\n        this.__logger.error(currentFunction, 'Error', error);\n        throw error;\n      });\n  }\n\n\n  /**\n   * Get the current shipping {@link model.AWSDKAddress|AWSDKAddress} for the given {@link model.AWSDKConsumer|AWSDKConsumer}\n   *\n   * @param consumer the {@link model.AWSDKConsumer|AWSDKConsumer} whose shipping address to fetch\n   * @returns {Promise<model.AWSDKAddress|error.AWSDKError>} returns a promise that will be resolved to an {@link model.AWSDKAddress} <br>\n   * or rejected with an {@link error.AWSDKError}\n   * <tr><td>{@link error.AWSDKErrorCode.consumerNotAuthenticated|AWSDKErrorCode.consumerNotAuthenticated}</td><td>Unauthenticated consumer</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.illegalArgument|AWSDKErrorCode.illegalArgument}</td><td>consumer is not a valid instance of AWSDKConsumer</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.internalError|AWSDKErrorCode.internalError}</td><td>The AWSDK could not complete the request.</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.noShippingAddressFound|AWSDKErrorCode.noShippingAddressFound}</td><td>No shipping address was found for the consumer</td></tr>\n   * </tbody>\n   * </table>\n   */\n  getShippingAddress(consumer) {\n    const currentFunction = 'ConsumerService.getShippingAddress';\n    this.__logger.debug(currentFunction, 'Started', consumer);\n    if (!(consumer instanceof AWSDKConsumer)) {\n      const error = AWSDKError.AWSDKIllegalArgument('consumer is null or not an instance of AWSDKConsumer');\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    const link = this.findNamedLink(consumer.links, 'shipping');\n    if (!Validator.isValidLink(link)) {\n      const error = AWSDKError.AWSDKInternalError('consumer does not have a valid \"shipping\" link entry');\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    const options = this.generateOptions('GET', link.url, false);\n    options.auth = this.getUserAuth(consumer);\n    if (!options.auth) {\n      const error = AWSDKError.AWSDKConsumerNotAuthenticated();\n      this.__logger.error(currentFunction, error);\n      return Promise.reject(error);\n    }\n    return this.executeRequest(options, AWSDKAddressResponse)\n      .then((response) => {\n        this.__logger.debug(currentFunction, 'Got response', response);\n        this.updateUserAuthEntry(consumer, response.authToken);\n        return response.address;\n      })\n      .catch((error) => {\n        this.__logger.error(currentFunction, 'Error', error);\n        throw error;\n      });\n  }\n\n  /**\n   * Update the given {@link model.AWSDKConsumer}'s shipping address to the data provided in the given {@link model.AWSDKAddressUpdate} object\n   * @param {model.AWSDKConsumer} consumer the consumer to update\n   * @param {model.AWSDKAddressUpdate} shippingAddress the consumer's shipping address to update\n   * @returns {Promise<model.AWSDKAddress|error.AWSDKError>} a Promise that resolves to the updated {@link model.AWSDKAddress|AWSDKAddress}, or is rejected with a {@link error.AWSDKError|AWSDKError}\n   * <p><br>Potential Error Codes<br>\n   * <table summary=\"ErrorCodes\" border=\"1\">\n   * <thead>\n   * <tr><th>Error Code</th><th>reason</th></tr>\n   * </thead>\n   * <tbody>\n   * <tr><td>{@link error.AWSDKErrorCode.consumerNotAuthenticated|AWSDKErrorCode.consumerNotAuthenticated}</td><td>Consumer is not authenticated.</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.illegalArgument|AWSDKErrorCode.illegalArgument}</td><td>A parameter is not the correct type.</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.internalError|AWSDKErrorCode.internalError}</td><td>The AWSDK could not complete the request.</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.validationErrors|AWSDKErrorCode.validationErrors}</td><td>If the zipCode of the shippingAddress argument is invalid.</td></tr>\n   * </tbody>\n   * </table>\n   */\n  updateShippingAddress(consumer, shippingAddress) {\n    const currentFunction = 'ConsumerService.updateShippingAddress';\n    const errors = [];\n    this.__logger.debug(currentFunction, 'Started', consumer, shippingAddress);\n    if (consumer == null) {\n      const error = AWSDKError.AWSDKIllegalArgument('consumer is null');\n      this.__logger.error(currentFunction, error);\n      return Promise.reject(error);\n    }\n    if (!(consumer instanceof AWSDKConsumer)) {\n      const error = AWSDKError.AWSDKIllegalArgument('consumer is not an instance of AWSDKConsumer');\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    if (shippingAddress == null) {\n      const error = AWSDKError.AWSDKIllegalArgument('shippingAddress is null');\n      this.__logger.error(currentFunction, error);\n      return Promise.reject(error);\n    }\n    if (!(shippingAddress instanceof AWSDKAddressUpdate)) {\n      const error = AWSDKError.AWSDKIllegalArgument('shippingAddress argument is not an instance AWSDKAddressUpdate');\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    if (Validator.isValidString(shippingAddress.zipCode) && !Validator.isZipCodeValid(shippingAddress.zipCode)) {\n      const fieldName = 'shippingZipCode';\n      const reason = 'invalid format';\n      const recoverySuggestion = 'see valid format in docs';\n      errors.push(AWSDKError.AWSDKFieldValidationError(AWSDKConsumerRegistration, fieldName, reason, recoverySuggestion));\n      const error = AWSDKError.AWSDKValidationErrors(errors);\n      return Promise.reject(error);\n    }\n    const link = this.findNamedLink(consumer.links, 'shipping');\n    if (!Validator.isValidLink(link)) {\n      const error = AWSDKError.AWSDKInternalError('consumer does not have a valid \"shipping\" link entry');\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    const options = this.generateOptions('PUT', link.url);\n    options.auth = this.getUserAuth(consumer);\n    if (!options.auth) {\n      const error = AWSDKError.AWSDKConsumerNotAuthenticated();\n      this.__logger.error(currentFunction, error);\n      return Promise.reject(error);\n    }\n    options.form.set('address1', shippingAddress.address1);\n    options.form.set('address2', shippingAddress.address2);\n    options.form.set('city', shippingAddress.city);\n    options.form.set('state', shippingAddress.stateCode);\n    options.form.set('zipCode', shippingAddress.zipCode);\n    options.form.set('country', shippingAddress.countryCode);\n    return this.executeRequest(options, AWSDKAddressResponse)\n      .then((response) => {\n        this.__logger.debug(currentFunction, 'Got response', response);\n        this.updateUserAuthEntry(consumer, response.authToken);\n        this.__logger.info(currentFunction, 'Completed');\n        return response.address;\n      })\n      .catch((error) => {\n        this.__logger.error(currentFunction, 'Error', error);\n        throw error;\n      });\n  }\n\n  /**\n   * Get an instance of {@link model.AWSDKAddressUpdate|AWSDKAddressUpdate} to use for updating a consumer's shipping address. <br>\n   * @param {String} address1 the first line of the address\n   * @param {String} address2 the second line of the address\n   * @param {String} city  the city name\n   * @param {model.AWSDKState} geographicalState the actual underlying {@link model.AWSDKState} of the address\n   * @param {String} zipCode  the zip (postal) code for this physical location\n   * @returns {model.AWSDKAddressUpdate} returns an instance of a {@link model.AWSDKAddressUpdate|AWSDKAddressUpdate}\n   * @throws {error.AWSDKError} with an {@link error.AWSDKErrorCode.illegalArgument|AWSDKErrorCode.illegalArgument} if the state is not an instance of {@link model.AWSDKState|AWSDKState}\n   */\n  newAddressUpdate(address1, address2, city, state, zipCode) {\n    return new AWSDKAddressUpdate(address1, address2, city, state, zipCode);\n  }\n\n  /**\n   * Checks whether a given field on a given consumer is considered protected (i.e. it's feed controlled) <br>\n   * @param {model.AWSDKConsumer} consumer the consumer whose field to check\n   * @param {String} fieldName the name of the field on the consumer to check\n   * @returns {Boolean} returns TRUE if the given field is protected on the given provider\n   */\n  isFieldProtected(consumer, fieldName) {\n    const protectedMap = {\n      dob: 'details.birthDate',\n      email: 'details.emailAddress',\n      firstName: 'details.firstName',\n      gender: 'details.gender',\n      lastName: 'details.lastName',\n      middleInitial: 'details.middleInitial',\n      middleName: 'details.middleInitial',\n      phone: 'details.phoneNumber',\n      address1: 'details.primaryAddress.address1',\n      address2: 'details.primaryAddress.address2',\n      city: 'details.primaryAddress.city',\n      state: 'details.primaryAddress.state',\n      zipCode: 'details.primaryAddress.zipCode',\n    };\n    return consumer.memberType === 'HP' && this.__systemConfiguration.protectedFieldNames.includes(protectedMap[fieldName]);\n  }\n\n  /**\n   * This method validates the fields in the {@link model.AWSDKTrackerRequest|AWSDKTrackerRequest}\n   * @param {model.AWSDKTrackerRequest} trackerRequest the tracker request to be validated\n   * @returns {error.AWSDKError[]} an array of {@link error.AWSDKError|AWSDKError} that detail any validation errors.\n   * <br>Potential validation errors:<br>\n   * <table summary=\"validation\" border=\"1\">\n   * <tr>\n   * <th>Field</th>\n   * <th>Validation Reason</th>\n   * <th>Notes</th>\n   * </tr>\n   * <tr>\n   * <td>data.value</td>\n   * <td>out of range field</td>\n   * <td>Set to a valid number within the range of the minimum and maximum values of the trackerComponent</td>\n   * </tr>\n   * @since 1.4.0\n   */\n  validateTrackerRequest(trackerRequest) {\n    const currentFunction = 'ConsumerService.validateTrackerRequest';\n    this.__logger.debug(currentFunction, 'Started', trackerRequest);\n    const errArrayResult = [];\n    this.__validateTrackerRequest(trackerRequest, errArrayResult);\n    this.__logger.debug(currentFunction, 'Finished', errArrayResult);\n    return errArrayResult;\n  }\n\n  /**\n   * Internal Use only!!\n   * @private\n   */\n  __validateTrackerRequest(trackerRequest, errors) {\n    const currentFunction = 'ConsumerService.__validateTrackerRequest';\n    this.__logger.debug(currentFunction, 'Started', trackerRequest, errors);\n    let fieldName;\n    let reason;\n    let recoverySuggestion;\n    trackerRequest.entries.forEach((entryRequest) => {\n      entryRequest.data.forEach((dataPointRequest) => {\n        if (dataPointRequest.value < dataPointRequest.trackerComponent.minimum || dataPointRequest.value > dataPointRequest.trackerComponent.maximum) {\n          fieldName = dataPointRequest.trackerComponent.title;\n          reason = 'out of range field';\n          recoverySuggestion = `value must be between ${dataPointRequest.trackerComponent.minimum} and ${dataPointRequest.trackerComponent.maximum} ${dataPointRequest.trackerComponent.unitOfMeasureShortDescription}`;\n          errors.push(AWSDKError.AWSDKFieldValidationError(AWSDKTrackerRequest, fieldName, reason, recoverySuggestion));\n        }\n      });\n    });\n    this.__logger.debug(currentFunction, 'Finished', errors);\n    return errors;\n  }\n\n  /**\n   * Find all the trackers associated with a particular {@link model.AWSDKConsumer|AWSDKConsumer} that match the trackerTemplate uuid criteria\n   * @param {model.AWSDKConsumer} consumer the {@link model.AWSDKConsumer|AWSDKConsumer} for whom we're seeking trackers for\n   * @param {model.AWSDKTrackersSearchCriteria}  trackersSearchCriteria the searchTrackers searchCriteria object to be used\n   * @returns {Promise<model.AWSDKTrackerEntry[]|error.AWSDKError>} a Promise that resolves to {@link model.AWSDKTrackerEntry[]|AWSDKTrackerEntry[]}, or is rejected with a {@link error.AWSDKError|AWSDKError}\n   * <p><br>Potential Error Codes<br>\n   * <table summary=\"ErrorCodes\" border=\"1\">\n   * <thead>\n   * <tr><th>Error Code</th><th>reason</th></tr>\n   * </thead>\n   * <tbody>\n   * <tr><td>{@link error.AWSDKErrorCode.consumerNotAuthenticated|AWSDKErrorCode.consumerNotAuthenticated}</td><td>Consumer is not authenticated.</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.illegalArgument|AWSDKErrorCode.illegalArgument}</td><td>A parameter is not the correct type.</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.internalError|AWSDKErrorCode.internalError}</td><td>The AWSDK could not complete the request.</td></tr>\n   * </tbody>\n   * </table>\n   * @since 1.4.0\n   */\n  searchTrackers(consumer, trackersSearchCriteria) {\n    const currentFunction = 'ConsumerService.searchTrackers';\n    this.__logger.debug(currentFunction, 'Started', consumer, trackersSearchCriteria);\n    if (!(consumer instanceof AWSDKConsumer)) {\n      const error = AWSDKError.AWSDKIllegalArgument('consumer must be an instance of AWSDKConsumer');\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    if (!(trackersSearchCriteria instanceof AWSDKTrackersSearchCriteria)) {\n      const error = AWSDKError.AWSDKIllegalArgument('trackersSearchCriteria must be of type AWSDKTrackersSearchCriteria');\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    if (!trackersSearchCriteria.trackerTemplate) {\n      const error = AWSDKError.AWSDKIllegalArgument('trackersSearchCriteria.trackerTemplate must be set');\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    if (!trackersSearchCriteria.timeZone) {\n      const error = AWSDKError.AWSDKIllegalArgument('timeZone must be set');\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    const startDate = trackersSearchCriteria.startDate;\n    const endDate = trackersSearchCriteria.endDate;\n    if (startDate && endDate && (endDate - startDate) < 0) {\n      const error = AWSDKError.AWSDKIllegalArgument('trackersSearchCriteria.endDate must be a Date referencing a later date than trackersSearchCriteria.startDate', 'endDate');\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    const link = this.findNamedLink(consumer.links, 'trackers');\n    if (!Validator.isValidLink(link)) {\n      const error = AWSDKError.AWSDKInternalError('consumer does not have a valid \"trackers\" link entry');\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    const options = this.generateOptions('GET', link.url);\n    options.form.set('trackerId', trackersSearchCriteria.__uuid());\n    options.form.set('timeZone', trackersSearchCriteria.timeZone);\n    if (startDate) options.form.set('startDate', Util.formatISODateTime(startDate));\n    if (endDate) options.form.set('endDate', Util.formatISODateTime(endDate));\n    options.auth = this.getUserAuth(consumer);\n    if (!options.auth) {\n      const error = AWSDKError.AWSDKConsumerNotAuthenticated();\n      this.__logger.error(currentFunction, error);\n      return Promise.reject(error);\n    }\n    return this.executeRequest(options, AWSDKTrackerEntriesList)\n      .then((response) => {\n        this.__logger.debug(currentFunction, 'Got response', response);\n        this.updateUserAuthEntry(consumer, response.authToken);\n        return response.trackers;\n      })\n      .catch((error) => {\n        this.__logger.error(currentFunction, 'Error', error);\n        throw error;\n      });\n  }\n  /**\n   * Delete all the trackers associated with a particular {@link model.AWSDKConsumer|AWSDKConsumer} that match the search criteria\n   * @param {model.AWSDKConsumer} consumer the {@link model.AWSDKConsumer|AWSDKConsumer} for whom we're deleting trackers for\n   * @param {model.AWSDKTrackersSearchCriteria} trackerSearchCriteria the trackers search criteria to be used to delete tracker information\n   * @returns {Promise<boolean|error.AWSDKError>} a Promise that resolves to a boolean true, or is rejected with a {@link error.AWSDKError|AWSDKError}\n   * <p><br>Potential Error Codes<br>\n   * <table summary=\"ErrorCodes\" border=\"1\">\n   * <thead>\n   * <tr><th>Error Code</th><th>reason</th></tr>\n   * </thead>\n   * <tbody>\n   * <tr><td>{@link error.AWSDKErrorCode.consumerNotAuthenticated|AWSDKErrorCode.consumerNotAuthenticated}</td><td>Consumer is not authenticated.</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.illegalArgument|AWSDKErrorCode.illegalArgument}</td><td>A parameter is not the correct type.</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.internalError|AWSDKErrorCode.internalError}</td><td>The AWSDK could not complete the request.</td></tr>\n   * </tbody>\n   * </table>\n   * @since 1.4.0\n   */\n  deleteTrackers(consumer, trackersSearchCriteria) {\n    const currentFunction = 'ConsumerService.deleteTrackers';\n    this.__logger.debug(currentFunction, 'Started', consumer, trackersSearchCriteria);\n    if (!(consumer instanceof AWSDKConsumer)) {\n      const error = AWSDKError.AWSDKIllegalArgument('consumer must be an instance of AWSDKConsumer');\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    if (!(trackersSearchCriteria instanceof AWSDKTrackersSearchCriteria)) {\n      const error = AWSDKError.AWSDKIllegalArgument('trackersSearchCriteria must be an instance of AWSDKTrackersSearchCriteria');\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    if (!trackersSearchCriteria.trackerTemplate) {\n      const error = AWSDKError.AWSDKIllegalArgument('trackersSearchCriteria.trackerTemplate must be set');\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    if (!trackersSearchCriteria.timeZone) {\n      const error = AWSDKError.AWSDKIllegalArgument('trackersSearchCriteria.timeZone must be set');\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    const startDate = trackersSearchCriteria.startDate;\n    const endDate = trackersSearchCriteria.endDate;\n    if (startDate && endDate && (endDate - startDate) < 0) {\n      const error = AWSDKError.AWSDKIllegalArgument('trackersSearchCriteria.endDate must be a Date referencing a later date than trackersSearchCriteria.startDate', 'endDate');\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    const link = this.findNamedLink(consumer.links, 'trackers');\n    if (!Validator.isValidLink(link)) {\n      const error = AWSDKError.AWSDKInternalError('consumer does not have a valid \"trackers\" link entry');\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    const options = this.generateOptions('DELETE', link.url);\n    options.form.set('trackerId', trackersSearchCriteria.__uuid());\n    options.form.set('timeZone', trackersSearchCriteria.timeZone);\n    if (startDate) options.form.set('startDate', Util.formatISODateTime(startDate));\n    if (endDate) options.form.set('endDate', Util.formatISODateTime(endDate));\n    options.auth = this.getUserAuth(consumer);\n    if (!options.auth) {\n      const error = AWSDKError.AWSDKConsumerNotAuthenticated();\n      this.__logger.error(currentFunction, error);\n      return Promise.reject(error);\n    }\n    return this.executeRequest(options, AWSDKResponse)\n      .then((response) => {\n        this.__logger.debug(currentFunction, 'Got response', response);\n        this.updateUserAuthEntry(consumer, response.authToken);\n        return true;\n      })\n      .catch((error) => {\n        this.__logger.error(currentFunction, 'Error', error);\n        throw error;\n      });\n  }\n\n  /**\n   * Add a tracker to a {@link model.AWSDKConsumer|AWSDKConsumer}'s profile\n   * @param {model.AWSDKConsumer} consumer the consumer whose tracker we want to add\n   * @param {model.AWSDKTrackerRequest} trackerRequest the request object used to add trackers for a given {@link model.AWSDKConsumer|AWSDKConsumer}. This object is obtained by a call to {@see ConsumerService#getNewTrackerRequest}.\n   * @returns {Promise<boolean|error.AWSDKError>} a Promise that resolves to a boolean true, or is rejected with a {@link error.AWSDKError|AWSDKError}\n   * <p><br>Potential Error Codes<br>\n   * <table summary=\"ErrorCodes\" border=\"1\">\n   * <thead>\n   * <tr><th>Error Code</th><th>reason</th></tr>\n   * </thead>\n   * <tbody>\n   * <tr><td>{@link error.AWSDKErrorCode.consumerNotAuthenticated|AWSDKErrorCode.consumerNotAuthenticated}</td><td>Consumer is not authenticated.</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.illegalArgument|AWSDKErrorCode.illegalArgument}</td><td>A parameter is not the correct type.</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.internalError|AWSDKErrorCode.internalError}</td><td>The AWSDK could not complete the request.</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.validationErrors|AWSDKErrorCode.validationErrors}</td><td>If any of the values in trackerDataPointRequest are invalid. The errors property will return an array of validation errors.</td></tr>\n   * </tbody>\n   * </table>\n   * @since 1.4.0\n   */\n  addTracker(consumer, trackerRequest) {\n    const currentFunction = 'ConsumerService.addTracker';\n    this.__logger.debug(currentFunction, 'Started', consumer, trackerRequest);\n    if (!(consumer instanceof AWSDKConsumer)) {\n      const error = AWSDKError.AWSDKIllegalArgument('consumer must be an instance of AWSDKConsumer');\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    if (!(trackerRequest instanceof AWSDKTrackerRequest)) {\n      const error = AWSDKError.AWSDKIllegalArgument('trackerRequest must be an instance of AWSDKTrackerRequest');\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    const errArray = this.validateTrackerRequest(trackerRequest);\n    if (errArray.length > 0) {\n      const error = AWSDKError.AWSDKValidationErrors(errArray);\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    const link = this.findNamedLink(consumer.links, 'trackers');\n    if (!Validator.isValidLink(link)) {\n      const error = AWSDKError.AWSDKInternalError('consumer does not have a valid \"trackers\" link entry');\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    const options = this.generateOptions('POST', link.url, false);\n    options.headers['Content-Type'] = 'application/json';\n    options.auth = this.getUserAuth(consumer);\n    if (!options.auth) {\n      const error = AWSDKError.AWSDKConsumerNotAuthenticated();\n      this.__logger.error(currentFunction, error);\n      return Promise.reject(error);\n    }\n    options.body = trackerRequest.__getAsRequestBody();\n    return this.executeRequest(options, AWSDKResponse)\n      .then((response) => {\n        this.__logger.debug(currentFunction, 'Got response', response);\n        this.updateUserAuthEntry(consumer, response.authToken);\n        return true;\n      })\n      .catch((error) => {\n        this.__logger.error(currentFunction, 'Error', error);\n        throw error;\n      });\n  }\n  /**\n   * This method returns an instance of {@link model.AWSDKTrackerRequest|AWSDKTrackerRequest} to be used for adding a tracker to a consumer's profile\n   * @returns {model.AWSDKTrackerRequest} an instance of {@link model.AWSDKTrackerRequest}\n   */\n  getNewTrackerRequest() {\n    return new AWSDKTrackerRequest();\n  }\n\n  /**\n   * This method returns an instance of {@link model.AWSDKTrackerEntryRequest|AWSDKTrackerEntryRequest} to be used for adding a tracker entry to a tracker request\n   * @returns {model.AWSDKTrackerEntryRequest} an instance of {@link model.AWSDKTrackerEntryRequest}\n   */\n  getNewTrackerEntryRequest() {\n    return new AWSDKTrackerEntryRequest();\n  }\n\n  /**\n   * This method returns an instance of {@link model.AWSDKTrackerDataPointRequest|AWSDKTrackerDataPointRequest} to be used for adding a tracker data point to a tracker entry request\n   * @returns {model.AWSDKTrackerDataPointRequest} an instance of {@link model.AWSDKTrackerDataPointRequest}\n   */\n  getNewTrackerDataPointRequest() {\n    return new AWSDKTrackerDataPointRequest();\n  }\n\n  /**\n   * This method returns an instance of {@link model.AWSDKTrackersSearchCriteria|AWSDKTrackersSearchCriteria} to be used to create search criteria for a {@link service.ConsumerService#searchTrackers} or {@link service.ConsumerService#deleteTrackers} request\n   * @param {Object} searchCriteria the search criteria object to be used\n   * @returns {model.AWSDKTrackersSearchCriteria} an instance of {@link model.AWSDKTrackersSearchCriteria}\n   */\n  getNewTrackersSearchCriteria(searchCriteria) {\n    return new AWSDKTrackersSearchCriteria(searchCriteria);\n  }\n\n  /**\n   * Get an instance of {@link model.AWSDKExamDataRequest|AWSDKExamDataRequest} to use when creating an exam data request for a device integration request.\n   * @returns {model.AWSDKExamDataRequest} an instance of {@link model.AWSDKExamDataRequest}\n   * @since 1.4.0\n   */\n  getNewExamDataRequest() {\n    return new AWSDKExamDataRequest();\n  }\n\n  /**\n   * Get an instance of {@link model.AWSDKDeviceIntegrationRequest|AWSDKDeviceIntegrationRequest} to use when adding device integration data. <br>\n   * @param {model.AWSDKExamDataRequest[]} examDataEntries the list of exam data entries associated with the device integration request\n   * @returns {model.AWSDKDeviceIntegrationRequest} returns an instance of a {@link model.AWSDKDeviceIntegrationRequest|AWSDKDeviceIntegrationRequest} object\n   * <p><br>Potential Error Codes<br>\n   * <table summary=\"ErrorCodes\" border=\"1\">\n   * <thead>\n   * <tr><th>Error Code</th><th>reason</th></tr>\n   * </thead>\n   * <tbody>\n   * <tr><td>{@link error.AWSDKErrorCode.illegalArgument|AWSDKErrorCode.illegalArgument}</td><td>A parameter is not the correct type.</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.validationErrors|AWSDKErrorCode.validationErrors}</td><td>If any of the items in examDataEntries is invalid. The errors property will return the array of validation errors.</td></tr>\n   * </tbody>\n   * </table>\n   * @since 1.4.0\n   */\n  getNewDeviceIntegrationRequest(examDataEntries, visit = null) {\n    return new AWSDKDeviceIntegrationRequest(examDataEntries, visit);\n  }\n\n  /**\n   * This method validates the fields in the {@link model.AWSDKDeviceIntegrationRequest|AWSDKDeviceIntegrationRequest}\n   * @param {model.AWSDKDeviceIntegrationRequest} deviceIntegrationRequest the device integration request to be validated\n   * @returns {error.AWSDKError[]} an array of {@link error.AWSDKError|AWSDKError} that detail any validation errors.\n   * <br>Potential validation errors:<br>\n   * <table summary=\"validation\" border=\"1\">\n   * <tr>\n   * <th>Field</th>\n   * <th>Validation Reason</th>\n   * <th>Notes</th>\n   * </tr>\n   * <tr>\n   * <td>id</td>\n   * <td>invalid format</td>\n   * <td>Set to a string value.</td>\n   * </tr>\n   * <tr>\n   * <td>id</td>\n   * <td>required field</td>\n   * <td>This field is required.</td>\n   * </tr>\n   * <tr>\n   * <td>type</td>\n   * <td>invalid format</td>\n   * <td>Set to a string value.</td>\n   * </tr>\n   * <tr>\n   * <td>type</td>\n   * <td>required field</td>\n   * <td>This field is required.</td>\n   * </tr>\n   * <tr>\n   * <td>dateTime</td>\n   * <td>invalid format</td>\n   * <td>Set to a dateTime value.</td>\n   * </tr>\n   * <tr>\n   * <td>dateTime</td>\n   * <td>required field</td>\n   * <td>This field is required.</td>\n   * </tr>\n   * <tr>\n   * </table>\n   * @since 1.4.0\n   */\n  validateDeviceIntegrationRequest(deviceIntegrationRequest) {\n    const currentFunction = 'ConsumerService.validateDeviceIntegrationRequest';\n    this.__logger.debug(currentFunction, 'Started', deviceIntegrationRequest);\n    const errArrayResult = [];\n    this.__validateDeviceIntegrationRequest(true, deviceIntegrationRequest, errArrayResult);\n    this.__logger.debug(currentFunction, 'Finished', errArrayResult);\n    return errArrayResult;\n  }\n\n  /**\n   * Internal Use only!!\n   * @private\n   */\n  __validateDeviceIntegrationRequest(fieldsRequired, deviceIntegrationRequest, errors) {\n    const currentFunction = 'ConsumerService.__validateDeviceIntegrationRequest';\n    this.__logger.debug(currentFunction, 'Started', fieldsRequired, deviceIntegrationRequest, errors);\n    let fieldName;\n    let reason;\n    let recoverySuggestion;\n    if (!Array.isArray(deviceIntegrationRequest.examDataEntries)) {\n      fieldName = 'deviceIntegrationRequest.examDataEntries';\n      reason = 'invalid type';\n      recoverySuggestion = 'examDataEntries must be of type Array';\n      errors.push(AWSDKError.AWSDKFieldValidationError(AWSDKDeviceIntegrationRequest, fieldName, reason, recoverySuggestion));\n    }\n    if (deviceIntegrationRequest.examDataEntries.length === 0) {\n      fieldName = 'deviceIntegrationRequest.examDataEntries';\n      reason = 'empty exam data array';\n      recoverySuggestion = 'examDataEntries must have at least one element';\n      errors.push(AWSDKError.AWSDKFieldValidationError(AWSDKDeviceIntegrationRequest, fieldName, reason, recoverySuggestion));\n    }\n    deviceIntegrationRequest.examDataEntries.forEach((examDataEntry) => {\n      if (!(examDataEntry instanceof AWSDKExamDataRequest)) {\n        fieldName = 'deviceIntegrationRequest.examDataEntries';\n        reason = 'invalid type';\n        recoverySuggestion = 'entry must be of type AWSDKExamDataRequest';\n        errors.push(AWSDKError.AWSDKFieldValidationError(AWSDKDeviceIntegrationRequest, fieldName, reason, recoverySuggestion));\n      }\n      if (fieldsRequired && !Validator.isValidString(examDataEntry.id)) {\n        fieldName = 'id';\n        reason = 'field required';\n        recoverySuggestion = 'See valid format in docs';\n        errors.push(AWSDKError.AWSDKFieldValidationError(AWSDKDeviceIntegrationRequest, fieldName, reason, recoverySuggestion));\n      }\n      if (!Validator.isStringType(examDataEntry.id)) {\n        fieldName = 'id';\n        reason = 'invalid type';\n        recoverySuggestion = 'id must be of type string';\n        errors.push(AWSDKError.AWSDKFieldValidationError(AWSDKDeviceIntegrationRequest, fieldName, reason, recoverySuggestion));\n      }\n      if (fieldsRequired && !Validator.isValidString(examDataEntry.type)) {\n        fieldName = 'type';\n        reason = 'field required';\n        recoverySuggestion = 'See valid format in docs';\n        errors.push(AWSDKError.AWSDKFieldValidationError(AWSDKDeviceIntegrationRequest, fieldName, reason, recoverySuggestion));\n      }\n      if (!Validator.isStringType(examDataEntry.type)) {\n        fieldName = 'type';\n        reason = 'invalid type';\n        recoverySuggestion = 'type must be of type String';\n        errors.push(AWSDKError.AWSDKFieldValidationError(AWSDKDeviceIntegrationRequest, fieldName, reason, recoverySuggestion));\n      }\n      if (fieldsRequired && !examDataEntry.dateTime) {\n        fieldName = 'dateTime';\n        reason = 'field required';\n        recoverySuggestion = 'See valid format in docs';\n        errors.push(AWSDKError.AWSDKFieldValidationError(AWSDKDeviceIntegrationRequest, fieldName, reason, recoverySuggestion));\n      }\n      if (fieldsRequired && !Validator.isValidDate(examDataEntry.dateTime)) {\n        fieldName = 'dateTime';\n        reason = 'invalid type';\n        recoverySuggestion = 'dateTime must be of type Date';\n        errors.push(AWSDKError.AWSDKFieldValidationError(AWSDKDeviceIntegrationRequest, fieldName, reason, recoverySuggestion));\n      }\n    });\n    this.__logger.debug(currentFunction, 'Finished', errors);\n    return errors;\n  }\n\n  /**\n   * Updates the given {@link model.AWSDKConsumer}'s profile with the data provided in the given {@link model.AWSDKDeviceIntegrationRequest} object\n   * Also updates {@link model.AWSDKVisit} with the data provided in the given {@link model.AWSDKDeviceIntegrationRequest} object\n   * @param {model.AWSDKConsumer} consumer the {@link model.AWSDKConsumer|AWSDKConsumer} associated with the device integration data request\n   * @param {model.AWSDKDeviceIntegrationRequest} deviceIntegrationRequest the {@link model.AWSDKDeviceIntegrationRequest|AWSDKDeviceIntegrationRequest}\n   * @returns {Promise<boolean|error.AWSDKError>} a Promise that resolves to a boolean true, or is rejected with a {@link error.AWSDKError|AWSDKError}\n   * <p><br>Potential Error Codes<br>\n   * <table summary=\"ErrorCodes\" border=\"1\">\n   * <thead>\n   * <tr><th>Error Code</th><th>reason</th></tr>\n   * </thead>\n   * <tbody>\n   * <tr><td>{@link error.AWSDKErrorCode.consumerNotAuthenticated|AWSDKErrorCode.consumerNotAuthenticated}</td><td>Consumer is not authenticated.</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.illegalArgument|AWSDKErrorCode.illegalArgument}</td><td>A parameter is not the correct type.</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.validationErrors|AWSDKErrorCode.validationErrors}</td><td>If any of the deviceIntegrationRequest values are invalid. The errors property will return the array of validation errors.</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.internalError|AWSDKErrorCode.internalError}</td><td>The AWSDK could not complete the request.</td></tr>\n   * </tbody>\n   * </table>\n   * @since 1.4.0\n   */\n  addDeviceIntegrationData(consumer, deviceIntegrationRequest) {\n    const currentFunction = 'ConsumerService.addDeviceIntegrationData';\n    this.__logger.debug(currentFunction, 'Started', deviceIntegrationRequest);\n    if (!(consumer instanceof AWSDKConsumer)) {\n      const error = AWSDKError.AWSDKIllegalArgument('consumer is not an instance of AWSDKConsumer');\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    if (!(deviceIntegrationRequest instanceof AWSDKDeviceIntegrationRequest)) {\n      const error = AWSDKError.AWSDKIllegalArgument('deviceIntegrationRequest is not an instance of AWSDKDeviceIntegrationRequest');\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    const validationErrors = this.validateDeviceIntegrationRequest(deviceIntegrationRequest);\n    if (validationErrors.length > 0) {\n      const error = AWSDKError.AWSDKValidationErrors(validationErrors);\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    const link = this.findNamedLink(consumer.links, 'deviceIntegrationData');\n    if (!Validator.isValidLink(link)) {\n      const error = AWSDKError.AWSDKInternalError('consumer does not have a \"deviceIntegrationData\" link entry');\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    const options = this.generateOptions('PUT', link.url);\n    options.auth = this.getUserAuth(consumer);\n    if (options.auth == null) {\n      const error = AWSDKError.AWSDKConsumerNotAuthenticated();\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    options.headers['Content-Type'] = 'application/json';\n    options.body = deviceIntegrationRequest.__toRequestBody();\n    return this.executeRequest(options, AWSDKResponse)\n      .then((response) => {\n        this.__logger.trace(currentFunction, 'Got response', response);\n        this.updateUserAuthEntry(consumer, response.authToken);\n        this.__logger.debug(currentFunction, 'Finished');\n        return true;\n      })\n      .catch((error) => {\n        this.__logger.error(currentFunction, 'Error', error);\n        throw error;\n      });\n  }\n\n  /**\n   * Get {@link AWSDKOnlineVisitFollowUpItems}s for a given {@link AWSDKConsumer}\n   * @param {AWSDKConsumer} consumer the {@link AWSDKConsumer} to search {@link AWSDKOnlineVisitFollowUpItem}s for\n   * @returns {Promise<AWSDKPaginatedOnlineVisitFollowUpItems|AWSDKError>} a Promise that resolves to {@link AWSDKPaginatedOnlineVisitFollowUpItems}, or is rejected with a {@link AWSDKError}\n   * <p><br>Potential Error Codes<br>\n   * <table summary=\"ErrorCodes\" border=\"1\">\n   * <thead>\n   * <tr><th>Error Code</th><th>reason</th></tr>\n   * </thead>\n   * <tbody>\n   * <tr><td>{@link AWSDKErrorCode.consumerNotAuthenticated}</td><td>Consumer is not authenticated.</td></tr>\n   * <tr><td>{@link AWSDKErrorCode.illegalArgument}</td><td>A parameter is not the correct type.</td></tr>\n   * <tr><td>{@link AWSDKErrorCode.internalError}</td><td>The AWSDK could not complete the request.</td></tr>\n   * </tbody>\n   * </table>\n   * @since 3.0.0\n   */\n  getOnlineVisitFollowUpItems(consumer) {\n    const currentFunction = 'ConsumerService.getOnlineVisitFollowUpItems';\n    this.__logger.debug(currentFunction, 'Started', consumer);\n    if (!(consumer instanceof AWSDKConsumer)) {\n      const error = AWSDKError.AWSDKIllegalArgument('consumer is not an instance of AWSDKConsumer');\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n\n    const link = this.findNamedLink(consumer.links, 'agendaItemFollowUps');\n    if (!Validator.isValidLink(link)) {\n      const error = AWSDKError.AWSDKInternalError('consumer does not have a valid \"agendaItemFollowUps\" link entry');\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n\n    const request = this.generateOptions('GET', link.url, false);\n    request.auth = this.getUserAuth(consumer);\n    if (!request.auth) {\n      const error = AWSDKError.AWSDKConsumerNotAuthenticated();\n      this.__logger.error(currentFunction, error);\n      return Promise.reject(error);\n    }\n\n    return this.executeRequest(request, AWSDKPaginatedOnlineVisitFollowUpItemsResponse)\n      .then((response) => {\n        this.__logger.trace(currentFunction, 'Got response', response);\n        this.updateUserAuthEntry(consumer, response.authToken);\n        this.__logger.debug(currentFunction, 'Finished');\n        return response.paginatedOnlineVisitFollowUpItems;\n      })\n      .catch((error) => {\n        this.__logger.error(currentFunction, 'Error', error);\n        throw error;\n      });\n  }\n\n  /**\n   * Search {@link model.PostVisitFollowUpItem}s for a given {@link model.AWSDKConsumer|AWSDKConsumer}\n   * @param {model.AWSDKConsumer} consumer the {@link model.AWSDKConsumer|AWSDKConsumer} to search PostVisitFollowUpItems for\n   * @param {Object} [options] the object containing search criteria and parameters\n   * @param {number}  [options.pageSize] if provided will limit the pageSize to the value of the provided integer\n   * @param {Date}  [options.startDate] if provided will return only items after the date\n   * @param {Date}  [options.endDate] if provided will return only items before the date\n   * @param {model.AWSDKPostVisitFollowUpItemsTypeFilter}  [options.type] if provided will return only items of the specified type\n   * @param {boolean}  [options.resolved] if provided will filter items to only those with a matching resolved status\n   * @returns {Promise<model.AWSDKPaginatedPostVisitFollowUpItems|error.AWSDKError>} a Promise that resolves to {@link model.AWSDKPaginatedPostVisitFollowUpItems|AWSDKPaginatedPostVisitFollowUpItems}, or is rejected with a {@link error.AWSDKError|AWSDKError}\n   * <p><br>Potential Error Codes<br>\n   * <table summary=\"ErrorCodes\" border=\"1\">\n   * <thead>\n   * <tr><th>Error Code</th><th>reason</th></tr>\n   * </thead>\n   * <tbody>\n   * <tr><td>{@link error.AWSDKErrorCode.consumerNotAuthenticated|AWSDKErrorCode.consumerNotAuthenticated}</td><td>Consumer is not authenticated.</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.illegalArgument|AWSDKErrorCode.illegalArgument}</td><td>A parameter is not the correct type.</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.internalError|AWSDKErrorCode.internalError}</td><td>The AWSDK could not complete the request.</td></tr>\n   * </tbody>\n   * </table>\n   * @since 2.8.0\n   */\n  searchPostVisitFollowUpItems(consumer, options = {}) {\n    const currentFunction = 'ConsumerService.searchPostVisitFollowUpItems';\n    this.__logger.debug(currentFunction, 'Started', consumer, options);\n\n    if (!(consumer instanceof AWSDKConsumer)) {\n      const error = AWSDKError.AWSDKIllegalArgument('consumer is not an instance of AWSDKConsumer');\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    const link = this.findNamedLink(consumer.links, 'postVisitFollowUpItems');\n    if (!Validator.isValidLink(link)) {\n      const error = AWSDKError.AWSDKInternalError('consumer does not have a valid \"postVisitFollowUpItems\" link entry');\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    if (options.type && !Validator.isValidStringEnumValue(options.type, AWSDKPostVisitFollowUpItemsTypeFilter)) {\n      const error = AWSDKError.AWSDKIllegalArgument('options.type must be a AWSDKPostVisitFollowUpItemsTypeFilter');\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    if (options.resolved != null && typeof options.resolved !== 'boolean') {\n      const error = AWSDKError.AWSDKIllegalArgument('options.resolved must a boolean');\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n\n    return this.__buildPaginatedRequest(consumer, options, link.url)\n      .then(request => this.executeRequest(request, AWSDKPaginatedPostVisitFollowUpItemsResponse))\n      .then((result) => {\n        this.__logger.debug(currentFunction, 'Got response', result);\n        this.updateUserAuthEntry(consumer, result.authToken);\n        return result.paginatedPostVisitFollowUpItems;\n      })\n      .catch((error) => {\n        this.__logger.error(currentFunction, 'Error', error);\n        throw error;\n      });\n  }\n\n  /**\n   * Mark an individual {@link model.PostVisitFollowUpItem} as resolved.\n   *\n   * The resolved attribute on {@link model.PostVisitFollowUpItem} must be false.\n   *\n   * @param {model.AWSDKConsumer} consumer the {@link model.AWSDKConsumer|AWSDKConsumer} that owns the {@link model.PostVisitFollowUpItem}\n   * @param {model.PostVisitFollowUpItem} postVisitFollowUpItem the {@link model.PostVisitFollowUpItem} to mark as resolved.\n   * @returns {Promise<Boolean|error.AWSDKError>} a Promise that resolves to true, or is rejected with a {@link error.AWSDKError|AWSDKError}\n   * <p><br>Potential Error Codes<br>\n   * <table summary=\"ErrorCodes\" border=\"1\">\n   * <thead>\n   * <tr><th>Error Code</th><th>reason</th></tr>\n   * </thead>\n   * <tbody>\n   * <tr><td>{@link error.AWSDKErrorCode.consumerNotAuthenticated|AWSDKErrorCode.consumerNotAuthenticated}</td><td>Consumer is not authenticated.</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.illegalArgument|AWSDKErrorCode.illegalArgument}</td><td>A parameter is not the correct type.</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.internalError|AWSDKErrorCode.internalError}</td><td>The AWSDK could not complete the request.</td></tr>\n   * </tbody>\n   * </table>\n   * @since 2.8.0\n   */\n  markPostVisitFollowUpItemResolved(consumer, postVisitFollowUpItem) {\n    const currentFunction = 'ConsumerService.markPostVisitFollowUpItemResolved';\n    this.__logger.debug(currentFunction, 'Started', consumer, postVisitFollowUpItem);\n\n    if (!(consumer instanceof AWSDKConsumer)) {\n      const error = AWSDKError.AWSDKIllegalArgument('consumer must be an instance of AWSDKConsumer');\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    if (!(postVisitFollowUpItem instanceof AWSDKPostVisitFollowUpItem)) {\n      const error = AWSDKError.AWSDKIllegalArgument('postVisitFollowUpItem must be an instance of AWSDKPostVisitFollowUpItem');\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    const link = this.findNamedLink(postVisitFollowUpItem.links, 'resolve');\n    if (!Validator.isValidLink(link)) {\n      const error = AWSDKError.AWSDKInternalError('postVisitFollowUpItem does not have a valid \"resolve\" link entry');\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    if (postVisitFollowUpItem.resolved) {\n      const error = AWSDKError.AWSDKIllegalArgument('postVisitFollowUpItem.resolved must be FALSE');\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n\n    const request = this.generateOptions('PUT', link.url, false);\n    request.auth = this.getUserAuth(consumer);\n\n    if (!request.auth) {\n      const error = AWSDKError.AWSDKConsumerNotAuthenticated();\n      this.__logger.error(currentFunction, error);\n      return Promise.reject(error);\n    }\n\n    return this.executeRequest(request, AWSDKResponse)\n      .then((result) => {\n        this.__logger.debug(currentFunction, 'Got response', result);\n        this.updateUserAuthEntry(consumer, result.authToken);\n        return true;\n      })\n      .catch((error) => {\n        this.__logger.error(currentFunction, 'Error', error);\n        throw error;\n      });\n  }\n\n  /**\n   * Dismiss an individual {@link AWSDKOnlineVisitFollowUpItem}.\n   *\n   * The resolved attribute on the {@link AWSDKOnlineVisitFollowUpItem} must be false.\n   *\n   * @param {AWSDKConsumer} consumer the {@link AWSDKConsumer} that owns the {@link AWSDKOnlineVisitFollowUpItem}\n   * @param {AWSDKOnlineVisitFollowUpItem} onlineVisitFollowUpItem the {@link AWSDKOnlineVisitFollowUpItem} to dismiss.\n   * @returns {Promise<Boolean|error.AWSDKError>} a Promise that resolves to true, or is rejected with a {@link error.AWSDKError|AWSDKError}\n   * <p><br>Potential Error Codes<br>\n   * <table summary=\"ErrorCodes\" border=\"1\">\n   * <thead>\n   * <tr><th>Error Code</th><th>reason</th></tr>\n   * </thead>\n   * <tbody>\n   * <tr><td>{@link AWSDKErrorCode.consumerNotAuthenticated}</td><td>Consumer is not authenticated.</td></tr>\n   * <tr><td>{@link AWSDKErrorCode.illegalArgument}</td><td>A parameter is not the correct type.</td></tr>\n   * <tr><td>{@link AWSDKErrorCode.internalError}</td><td>The AWSDK could not complete the request.</td></tr>\n   * </tbody>\n   * </table>\n   * @since 3.0.0\n   */\n  dismissOnlineVisitFollowUpItem(consumer, onlineVisitFollowUpItem) {\n    const currentFunction = 'ConsumerService.dismissOnlineVisitFollowUpItem';\n    this.__logger.debug(currentFunction, 'Started', consumer, onlineVisitFollowUpItem);\n\n    if (!(consumer instanceof AWSDKConsumer)) {\n      const error = AWSDKError.AWSDKIllegalArgument('consumer must be an instance of AWSDKConsumer');\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    if (!(onlineVisitFollowUpItem instanceof AWSDKOnlineVisitFollowUpItem)) {\n      const error = AWSDKError.AWSDKIllegalArgument('onlineVisitFollowUpItem must be an instance of AWSDKOnlineVisitFollowUpItem');\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    const link = this.findNamedLink(onlineVisitFollowUpItem.links, 'disposition');\n    if (!Validator.isValidLink(link)) {\n      const error = AWSDKError.AWSDKInternalError('onlineVisitFollowUpItem does not have a valid \"disposition\" link entry');\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    if (onlineVisitFollowUpItem.resolved) {\n      const error = AWSDKError.AWSDKIllegalArgument('onlineVisitFollowUpItem.resolved must be FALSE');\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n\n    const request = this.generateOptions('PUT', link.url, false);\n    request.auth = this.getUserAuth(consumer);\n\n    if (!request.auth) {\n      const error = AWSDKError.AWSDKConsumerNotAuthenticated();\n      this.__logger.error(currentFunction, error);\n      return Promise.reject(error);\n    }\n\n    return this.executeRequest(request, AWSDKResponse)\n      .then((result) => {\n        this.__logger.debug(currentFunction, 'Got response', result);\n        this.updateUserAuthEntry(consumer, result.authToken);\n        return true;\n      })\n      .catch((error) => {\n        this.__logger.error(currentFunction, 'Error', error);\n        throw error;\n      });\n  }\n\n  /**\n   * This method fetches a non-appointment type {@link model.AWSDKPostVisitFollowUpItem|AWSDKPostVisitFollowUpItem} for a consumer in PDF format.\n   *\n   * @param {model.AWSDKConsumer} consumer the {@link model.AWSDKConsumer|AWSDKConsumer} whose postVisitFollowUpItem we want to fetch\n   * @param {model.AWSDKPostVisitFollowUpItem} postVisitFollowUpItem the non-appointment item to fetch a PDF of\n   * @returns {Promise<Blob|error.AWSDKError>} a Promise that will resolve to a Blob or rejected with an {@link error.AWSDKError}\n   * <p><br>Potential Error Codes<br>\n   * <table summary=\"ErrorCodes\" border=\"1\">\n   * <thead>\n   * <tr><th>Error Code</th><th>reason</th></tr>\n   * </thead>\n   * <tbody>\n   * <tr><td>{@link error.AWSDKErrorCode.consumerNotAuthenticated|AWSDKErrorCode.consumerNotAuthenticated}</td><td>Consumer is not authenticated.</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.illegalArgument|AWSDKErrorCode.illegalArgument}</td><td>A parameter is not the correct type.</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.internalError|AWSDKErrorCode.internalError}</td><td>The AWSDK could not complete the request.</td></tr>\n   * </tbody>\n   * </table>\n   * @since 2.8.0\n   */\n  getPostVisitFollowUpItemPDF(consumer, postVisitFollowUpItem) {\n    const currentFunction = 'ConsumerService.getPostVisitFollowUpItemPDF';\n    this.__logger.debug(currentFunction, 'Started', consumer, postVisitFollowUpItem);\n    if (!(consumer instanceof AWSDKConsumer)) {\n      const error = AWSDKError.AWSDKIllegalArgument('consumer is not an instance of AWSDKConsumer');\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    if (!(postVisitFollowUpItem instanceof AWSDKPostVisitFollowUpItem)) {\n      const error = AWSDKError.AWSDKIllegalArgument('postVisitFollowUpItem is not an instance of AWSDKPostVisitFollowUpItem');\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    if (postVisitFollowUpItem.type === AWSDKPostVisitFollowUpItemType.APPOINTMENT) {\n      const error = AWSDKError.AWSDKIllegalArgument('postVisitFollowUpItem.type must not be APPOINTMENT');\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    const link = this.findNamedLink(postVisitFollowUpItem.links, 'download');\n    if (!Validator.isValidLink(link)) {\n      const error = AWSDKError.AWSDKInternalError('postVisitFollowUpItem does not have a valid \"download\" link entry');\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    const options = this.generateOptions('GET', link.url, false);\n    options.headers.Accept = 'application/pdf';\n    const auth = this.getUserAuth(consumer);\n    if (!auth) {\n      const error = AWSDKError.AWSDKConsumerNotAuthenticated();\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    options.auth = auth;\n    return this.executeRequest(options)\n      .then((blob) => {\n        this.__logger.debug(currentFunction, 'Got response', blob);\n        return blob;\n      })\n      .catch((error) => {\n        this.__logger.error(currentFunction, 'Error', error);\n        throw error;\n      });\n  }\n\n  /**\n   * Search {@link model.AWSDKVisitReport}s for a given {@link model.AWSDKConsumer|AWSDKConsumer}\n   * @param {model.AWSDKConsumer} consumer the {@link model.AWSDKConsumer|AWSDKConsumer} to search AWSDKVisitReports for\n   * @param {Object} [options] the object containing search criteria and parameters\n   * @param {number}  [options.pageSize] if provided will limit the pageSize to the value of the provided integer\n   * @param {Date}  [options.startDate] if provided will return only items after the date\n   * @param {Date}  [options.endDate] if provided will return only items before the date\n   * @param {model.AWSDKDisposition[]}  [options.dispositions] if provided will filter visit reports to only matching dispositions, otherwise will return only Completed visits\n   * @param {boolean}  [options.scheduledOnly] if provided will filter visit reports to those for scheduled visits\n   * @returns {Promise<model.AWSDKPaginatedVisitReports|error.AWSDKError>} a Promise that resolves to {@link model.AWSDKPaginatedVisitReports|AWSDKPaginatedVisitReports}, or is rejected with a {@link error.AWSDKError|AWSDKError}\n   * <p><br>Potential Error Codes<br>\n   * <table summary=\"ErrorCodes\" border=\"1\">\n   * <thead>\n   * <tr><th>Error Code</th><th>reason</th></tr>\n   * </thead>\n   * <tbody>\n   * <tr><td>{@link error.AWSDKErrorCode.consumerNotAuthenticated|AWSDKErrorCode.consumerNotAuthenticated}</td><td>Consumer is not authenticated.</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.illegalArgument|AWSDKErrorCode.illegalArgument}</td><td>A parameter is not the correct type.</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.internalError|AWSDKErrorCode.internalError}</td><td>The AWSDK could not complete the request.</td></tr>\n   * </tbody>\n   * </table>\n   * @since 2.8.0\n   */\n  searchVisitReports(consumer, options = {}) {\n    const currentFunction = 'ConsumerService.searchVisitReports';\n    this.__logger.debug(currentFunction, 'Started', consumer, options);\n\n    if (!(consumer instanceof AWSDKConsumer)) {\n      const error = AWSDKError.AWSDKIllegalArgument('consumer must be an instance of AWSDKConsumer');\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    const link = this.findNamedLink(consumer.links, 'visitReportList');\n    if (!Validator.isValidLink(link)) {\n      const error = AWSDKError.AWSDKInternalError('consumer does not have a valid \"visitReportList\" link entry');\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    if (options.scheduledOnly != null && typeof options.scheduledOnly !== 'boolean') {\n      const error = AWSDKError.AWSDKIllegalArgument('options.scheduledOnly must a boolean');\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    if (options.dispositions && (!Array.isArray(options.dispositions) || !options.dispositions.every(d => Validator.isValidEnumValue(d, AWSDKDisposition)))) {\n      const error = AWSDKError.AWSDKIllegalArgument('options.dispositions must be a valid array of AWSDKDisposition types');\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n\n    // convert to correct format for request\n    if (options.dispositions) {\n      options.dispositions = options.dispositions.map(d => GenericParser.parseAndConvertEnumValue(d));\n    }\n\n    return this.__buildPaginatedRequest(consumer, options, link.url)\n      .then(request => this.executeRequest(request, AWSDKPaginatedVisitReportsResponse))\n      .then((result) => {\n        this.__logger.debug(currentFunction, 'Got response', result);\n        this.updateUserAuthEntry(consumer, result.authToken);\n        return result.paginatedVisitReports;\n      })\n      .catch((error) => {\n        this.__logger.error(currentFunction, 'Error', error);\n        throw error;\n      });\n  }\n\n  /**\n   * Search {@link model.AWSDKHealthDocumentRecords}s for a given {@link model.AWSDKConsumer|AWSDKConsumer}\n   * @param {model.AWSDKConsumer} consumer the {@link model.AWSDKConsumer|AWSDKConsumer} to search AWSDKHealthDocumentRecords for\n   * @param {Object} [options] the object containing search criteria and parameters\n   * @param {number}  [options.pageSize] if provided will limit the pageSize to the value of the provided integer\n   * @param {Date}  [options.startDate] if provided will return only items after the date\n   * @param {Date}  [options.endDate] if provided will return only items before the date\n   * @param {boolean}  [options.sortAsc] set to TRUE to sort the documents by uploadDate in ascending order. Defaults to descending order.\n   * @returns {Promise<model.AWSDKPaginatedHealthDocumentRecords|error.AWSDKError>} a Promise that resolves to {@link model.AWSDKPaginatedHealthDocumentRecords|AWSDKPaginatedHealthDocumentRecords}, or is rejected with a {@link error.AWSDKError|AWSDKError}\n   * <p><br>Potential Error Codes<br>\n   * <table summary=\"ErrorCodes\" border=\"1\">\n   * <thead>\n   * <tr><th>Error Code</th><th>reason</th></tr>\n   * </thead>\n   * <tbody>\n   * <tr><td>{@link error.AWSDKErrorCode.consumerNotAuthenticated|AWSDKErrorCode.consumerNotAuthenticated}</td><td>Consumer is not authenticated.</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.illegalArgument|AWSDKErrorCode.illegalArgument}</td><td>A parameter is not the correct type.</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.internalError|AWSDKErrorCode.internalError}</td><td>The AWSDK could not complete the request.</td></tr>\n   * </tbody>\n   * </table>\n   * @since 2.8.0\n   */\n  searchHealthDocumentRecords(consumer, options = {}) {\n    const currentFunction = 'ConsumerService.searchHealthDocumentRecords';\n    this.__logger.debug(currentFunction, 'Started', consumer, options);\n\n    if (!(consumer instanceof AWSDKConsumer)) {\n      const error = AWSDKError.AWSDKIllegalArgument('consumer must be an instance of AWSDKConsumer');\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    const link = this.findNamedLink(consumer.links, 'healthDocumentRecordList');\n    if (!Validator.isValidLink(link)) {\n      const error = AWSDKError.AWSDKInternalError('consumer does not have a valid \"healthDocumentRecordList\" link entry');\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    if (options.sortAsc != null && typeof options.sortAsc !== 'boolean') {\n      const error = AWSDKError.AWSDKIllegalArgument('options.sortAsc must a boolean');\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n\n    return this.__buildPaginatedRequest(consumer, options, link.url)\n      .then(request => this.executeRequest(request, AWSDKPaginatedHealthDocumentRecordsResponse))\n      .then((result) => {\n        this.__logger.debug(currentFunction, 'Got response', result);\n        this.updateUserAuthEntry(consumer, result.authToken);\n        return result.paginatedHealthDocumentRecords;\n      })\n      .catch((error) => {\n        this.__logger.error(currentFunction, 'Error', error);\n        throw error;\n      });\n  }\n}\nexport default ConsumerService;\n","/*!\r\n * American Well Consumer Web SDK\r\n *\r\n * Copyright © 2018 American Well.\r\n * All rights reserved.\r\n *\r\n * It is illegal to use, reproduce or distribute\r\n * any part of this Intellectual Property without\r\n * prior written authorization from American Well.\r\n */\r\nimport AWSDKPharmacy from '../../../model/pharmacy/awsdk_pharmacy';\r\nimport AWSDKResponse from './awsdk_response';\r\nimport GenericParser from '../../parser/generic_parser';\r\n\r\n/**\r\n * Simple wrapper around a collection of {@link model.AWSDKPharmacy}s\r\n * @property {model.AWSDKPharmacy[]} pharmacies the {@link model.AWSDKPharmacy}s\r\n * @extends model.AWSDKResponse\r\n */\r\nclass AWSDKPharmaciesResponse extends AWSDKResponse {\r\n  get pharmacies() {\r\n    return this.__data.pharmacies.map(item => GenericParser.parseObject(item, AWSDKPharmacy));\r\n  }\r\n}\r\n\r\nexport default AWSDKPharmaciesResponse;\r\n","/*!\r\n * American Well Consumer Web SDK\r\n *\r\n * Copyright (c) 2018 American Well.\r\n * All rights reserved.\r\n *\r\n * It is illegal to use, reproduce or distribute\r\n * any part of this Intellectual Property without\r\n * prior written authorization from American Well.\r\n */\r\n\r\nimport AWSDKResponse from './awsdk_response';\r\nimport AWSDKPharmacy from '../../../model/pharmacy/awsdk_pharmacy';\r\nimport GenericParser from '../../parser/generic_parser';\r\n\r\n/**\r\n * Simple wrapper around an {@link model.AWSDKPharmacy}\r\n * @property {model.AWSDKPharmacy} pharmacy the {@link model.AWSDKPharmacy}\r\n * @extends model.AWSDKResponse\r\n */\r\nclass AWSDKPharmacyResponse extends AWSDKResponse {\r\n  get pharmacy() {\r\n    return GenericParser.parseObject(this.__data.pharmacy, AWSDKPharmacy);\r\n  }\r\n}\r\n\r\nexport default AWSDKPharmacyResponse;\r\n","/*!\n * American Well Consumer Web SDK\n *\n * Copyright © 2017 American Well.\n * All rights reserved.\n *\n * It is illegal to use, reproduce or distribute\n * any part of this Intellectual Property without\n * prior written authorization from American Well.\n */\nimport Service from './service';\nimport Validator from '../internal/validator/validator';\nimport AWSDKConsumer from '../model/consumer/awsdk_consumer';\nimport AWSDKPharmacy from '../model/pharmacy/awsdk_pharmacy';\nimport AWSDKPharmaciesResponse from '../internal/model/response/awsdk_pharmacies_response';\nimport AWSDKPharmacyResponse from '../internal/model/response/awsdk_pharmacy_response';\nimport AWSDKResponse from '../internal/model/response/awsdk_response';\nimport AWSDKState from '../model/awsdk_state';\nimport AWSDKError from '../error/awsdk_error';\n\n/**\n * This service handles everything related to an {@link model.AWSDKPharmacy|AWSDKPharmacy} and supporting infrastructure\n *\n * @since 1.0.0\n * @hideconstructor\n * @extends service.Service\n */\nclass PharmacyService extends Service {\n  constructor(props) {\n    super(props);\n    this.__systemConfiguration = props.systemConfiguration;\n  }\n\n  /**\n   * Retrieves a list of {@link model.AWSDKPharmacy|AWSDKPharmacy} objects pertaining to a {@link model.AWSDKConsumer|AWSDKConsumer}\n   * @param {model.AWSDKConsumer} consumer the {@link model.AWSDKConsumer|AWSDKConsumer} whose pharmacies to retrieve\n   * @returns {Promise<model.AWSDKPharmacy[]|error.AWSDKError>} a Promise that resolves to a list of {@link model.AWSDKPharmacy|AWSDKPharmacy} or is rejected with a {@link error.AWSDKError|AWSDKError}\n   * <p><br>Potential Error Codes<br>\n   * <table summary=\"ErrorCodes\" border=\"1\">\n   * <thead>\n   * <tr><th>Error Code</th><th>reason</th></tr>\n   * </thead>\n   * <tbody>\n   * <tr><td>{@link error.AWSDKErrorCode.consumerNotAuthenticated|AWSDKErrorCode.consumerNotAuthenticated}</td><td>Consumer is not authenticated.</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.illegalArgument|AWSDKErrorCode.illegalArgument}</td><td>A parameter is not the correct type.</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.internalError|AWSDKErrorCode.internalError}</td><td>The AWSDK could not complete the request.</td></tr>\n   * </tbody>\n   * </table>\n   */\n  getPharmaciesForConsumer(consumer) {\n    const currentFunction = 'PharmacyService.getPharmaciesForConsumer';\n    this.__logger.debug(currentFunction, 'Started', consumer);\n    if (consumer == null) {\n      const error = AWSDKError.AWSDKIllegalArgument('consumer argument is null');\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    if (!(consumer instanceof AWSDKConsumer)) {\n      const error = AWSDKError.AWSDKIllegalArgument('consumer argument is not of type AWSDKConsumer');\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    const link = this.findNamedLink(consumer.links, 'pharmacies');\n    if (!Validator.isValidLink(link)) {\n      const error = AWSDKError.AWSDKInternalError('consumer does not have a valid \"pharmacies\" link entry');\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    const options = this.generateOptions('GET', link.url, false);\n    options.auth = this.getUserAuth(consumer);\n    if (!options.auth) {\n      const error = AWSDKError.AWSDKConsumerNotAuthenticated();\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    return this.executeRequest(options, AWSDKPharmaciesResponse)\n      .then((response) => {\n        this.__logger.debug(currentFunction, 'Got response', response);\n        this.updateUserAuthEntry(consumer, response.authToken);\n        return response.pharmacies;\n      })\n      .catch((error) => {\n        this.__logger.error(currentFunction, 'Error', error);\n        throw error;\n      });\n  }\n  /**\n   * Retrieves the preferred {@link model.AWSDKPharmacy|AWSDKPharmacy} for the given {@link model.AWSDKConsumer|AWSDKConsumer}\n   * @param {model.AWSDKConsumer} consumer the {@link model.AWSDKConsumer|AWSDKConsumer} whose preferred pharmacy to retrieve\n   * @returns {Promise<model.AWSDKPharmacy|error.AWSDKError>} a Promise that resolves to an {@link model.AWSDKPharmacy|AWSDKPharmacy} or is rejected with a {@link error.AWSDKError|AWSDKError}\n   * <p><br>Potential Error Codes<br>\n   * <table summary=\"ErrorCodes\" border=\"1\">\n   * <thead>\n   * <tr><th>Error Code</th><th>reason</th></tr>\n   * </thead>\n   * <tbody>\n   * <tr><td>{@link error.AWSDKErrorCode.noPreferredPharmacyFound|AWSDKErrorCode.noPreferredPharmacyFound}</td><td>No preferred pharmacy exists for the given consumer.</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.consumerNotAuthenticated|AWSDKErrorCode.consumerNotAuthenticated}</td><td>Consumer is not authenticated.</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.illegalArgument|AWSDKErrorCode.illegalArgument}</td><td>A parameter is not the correct type.</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.internalError|AWSDKErrorCode.internalError}</td><td>The AWSDK could not complete the request.</td></tr>\n   * </tbody>\n   * </table>\n   */\n  getPreferredPharmacy(consumer) {\n    const currentFunction = 'PharmacyService.getPreferredPharmacy';\n    this.__logger.debug(currentFunction, 'Started', consumer);\n    if (consumer == null) {\n      const error = AWSDKError.AWSDKIllegalArgument('consumer argument is null');\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    if (!(consumer instanceof AWSDKConsumer)) {\n      const error = AWSDKError.AWSDKIllegalArgument('consumer argument is not of type AWSDKConsumer');\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    const link = this.findNamedLink(consumer.links, 'pharmacy');\n    if (!Validator.isValidLink(link)) {\n      const error = AWSDKError.AWSDKInternalError('consumer does not have a valid \"pharmacy\" link entry');\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    const options = this.generateOptions('GET', link.url, false);\n    options.auth = this.getUserAuth(consumer);\n    if (!options.auth) {\n      const error = AWSDKError.AWSDKConsumerNotAuthenticated();\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    return this.executeRequest(options, AWSDKPharmacyResponse)\n      .then((response) => {\n        this.__logger.debug(currentFunction, 'Got response', response);\n        this.updateUserAuthEntry(consumer, response.authToken);\n        return response.pharmacy;\n      })\n      .catch((error) => {\n        this.__logger.error(currentFunction, 'Error', error);\n        throw error;\n      });\n  }\n\n  /**\n   * Updates the preferred {@link model.AWSDKPharmacy|AWSDKPharmacy} for the given {@link model.AWSDKConsumer|AWSDKConsumer}\n   * @param {model.AWSDKConsumer} consumer the {@link model.AWSDKConsumer|AWSDKConsumer} whose preferred pharmacy to update\n   * @param {model.AWSDKPharmacy} pharmacy the preferred {@link model.AWSDKPharmacy|AWSDKPharmacy}\n   * @returns {Promise<model.AWSDKConsumer|error.AWSDKError>} a Promise that resolves to the {@link model.AWSDKConsumer|AWSDKConsumer} that was passed, or is rejected with a {@link error.AWSDKError|AWSDKError}\n   * <p><br>Potential Error Codes<br>\n   * <table summary=\"ErrorCodes\" border=\"1\">\n   * <thead>\n   * <tr><th>Error Code</th><th>reason</th></tr>\n   * </thead>\n   * <tbody>\n   * <tr><td>{@link error.AWSDKErrorCode.consumerNotAuthenticated|AWSDKErrorCode.consumerNotAuthenticated}</td><td>Consumer is not authenticated.</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.illegalArgument|AWSDKErrorCode.illegalArgument}</td><td>A parameter is not the correct type.</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.internalError|AWSDKErrorCode.internalError}</td><td>The AWSDK could not complete the request.</td></tr>\n   * </tbody>\n   * </table>\n   */\n  updatePreferredPharmacy(consumer, pharmacy) {\n    const currentFunction = 'PharmacyService.updatePreferredPharmacy';\n    this.__logger.debug(currentFunction, 'Started', consumer, pharmacy);\n    if (consumer == null) {\n      const error = AWSDKError.AWSDKIllegalArgument('consumer argument is null');\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    if (!(consumer instanceof AWSDKConsumer)) {\n      const error = AWSDKError.AWSDKIllegalArgument('consumer argument is not of type AWSDKConsumer');\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    if (pharmacy == null) {\n      const error = AWSDKError.AWSDKIllegalArgument('pharmacy argument is null');\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    if (!(pharmacy instanceof AWSDKPharmacy)) {\n      const error = AWSDKError.AWSDKIllegalArgument('pharmacy argument is not of type AWSDKPharmacy');\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    const link = this.findNamedLink(consumer.links, 'pharmacy');\n    if (!Validator.isValidLink(link)) {\n      const error = AWSDKError.AWSDKInternalError('consumer does not have a valid \"pharmacy\" link entry');\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    const options = this.generateOptions('PUT', link.url);\n    options.auth = this.getUserAuth(consumer);\n    if (!options.auth) {\n      const error = AWSDKError.AWSDKConsumerNotAuthenticated();\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    options.form.set('pharmacyId', pharmacy.id.encryptedId);\n    return this.executeRequest(options, AWSDKResponse)\n      .then((response) => {\n        this.__logger.debug(currentFunction, 'Got response', response);\n        this.updateUserAuthEntry(consumer, response.authToken);\n        this.__logger.info(currentFunction, 'Completed');\n        return consumer;\n      })\n      .catch((error) => {\n        this.__logger.error(currentFunction, 'Error', error);\n        throw error;\n      });\n  }\n\n  /**\n   * Search for {@link model.AWSDKPharmacy}s that meet the provided search criteria. At least one search criteria argument must be supplied.\n   * @param {String} [city] the city in which to search\n   * @param {model.AWSDKState} [state] the state in which to search\n   * @param {String} [zipCode] the zipCode in which to search\n   * @param {String} [pharmacyType] the type of pharmacy to search for\n   * @returns {Promise<model.AWSDKPharmacy[]|error.AWSDKError>} a Promise that resolves a collection of {@link model.AWSDKPharmacy|AWSDKPharmacy} that match the search criteria, or is rejected with a {@link error.AWSDKError|AWSDKError}\n   * <p><br>Potential Error Codes<br>\n   * <table summary=\"ErrorCodes\" border=\"1\">\n   * <thead>\n   * <tr><th>Error Code</th><th>reason</th></tr>\n   * </thead>\n   * <tbody>\n   * <tr><td>{@link error.AWSDKErrorCode.illegalArgument|AWSDKErrorCode.illegalArgument}</td><td>A parameter is not the correct type.</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.internalError|AWSDKErrorCode.internalError}</td><td>The AWSDK could not complete the request.</td></tr>\n   * </tbody>\n   * </table>\n   */\n  getPharmacies(city, state, zipCode, pharmacyType) {\n    const currentFunction = 'PharmacyService.getPharmacies';\n    this.__logger.debug(currentFunction, 'Started', city, state, zipCode, pharmacyType);\n    if (!city && !state && !zipCode && !pharmacyType) {\n      const error = AWSDKError.AWSDKIllegalArgument('minimum of 1 search criteria is required');\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    if (Validator.isValidString(zipCode) && !Validator.isZipCodeValid(zipCode)) {\n      const error = AWSDKError.AWSDKIllegalArgument('zip code is not valid', 'zipCode');\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    if (state && !(state instanceof AWSDKState)) {\n      const error = AWSDKError.AWSDKIllegalArgument('state argument is incorrect type');\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    const link = this.findNamedLink(this.__links, 'pharmacySearch');\n    if (!Validator.isValidLink(link)) {\n      const error = AWSDKError.AWSDKInternalError('service does not have a valid \"pharmacySearch\" link entry');\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    const options = this.generateOptions('GET', link.url);\n    options.auth = this.getSdkAuth();\n    options.form.set('city', city);\n    options.form.set('state', state ? state.code : null);\n    options.form.set('zip', zipCode);\n    options.form.set('type', pharmacyType);\n    return this.executeRequest(options, AWSDKPharmaciesResponse)\n      .then((response) => {\n        this.__logger.debug(currentFunction, 'Got response', response);\n        return response.pharmacies;\n      })\n      .catch((error) => {\n        this.__logger.error(currentFunction, 'Error', error);\n        throw error;\n      });\n  }\n\n  /**\n   * Search for {@link model.AWSDKPharmacy}s that are within the specified radius of the given longitude and latitude.\n   * @param {Number} longitude the longitude component of the coordinates to search for\n   * @param {Number} latitude the latitude component of the coordinates to search for\n   * @param {Number} [radius] the max radius to consider (in miles)\n   * @param {Boolean} [excludeMailOrderPharmacies] exclude mail order pharmacies from the search result\n   * @returns {Promise<model.AWSDKPharmacy[]|error.AWSDKError>} a Promise that resolves a collection of {@link model.AWSDKPharmacy|AWSDKPharmacy} that match the search criteria, or is rejected with a {@link error.AWSDKError|AWSDKError}\n   * <p><br>Potential Error Codes<br>\n   * <table summary=\"ErrorCodes\" border=\"1\">\n   * <thead>\n   * <tr><th>Error Code</th><th>reason</th></tr>\n   * </thead>\n   * <tbody>\n   * <tr><td>{@link error.AWSDKErrorCode.illegalArgument|AWSDKErrorCode.illegalArgument}</td><td>A parameter is not the correct type.</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.internalError|AWSDKErrorCode.internalError}</td><td>The AWSDK could not complete the request.</td></tr>\n   * </tbody>\n   * </table>\n   * @since 1.1.0\n   */\n  getPharmaciesByLongitudeAndLatitude(longitude, latitude, radius, excludeMailOrderPharmacies) {\n    const currentFunction = 'PharmacyService.getPharmaciesByLongitudeAndLatitude';\n    this.__logger.debug(currentFunction, 'Started', longitude, latitude, radius, excludeMailOrderPharmacies);\n    if (!longitude || isNaN(parseFloat(longitude))) {\n      const error = AWSDKError.AWSDKIllegalArgument('valid value for \"longitude\" not provided');\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    if (!latitude || isNaN(parseFloat(latitude))) {\n      const error = AWSDKError.AWSDKIllegalArgument('valid value for \"latitude\" not provided');\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    if (radius && isNaN(parseInt(radius, 10))) {\n      const error = AWSDKError.AWSDKIllegalArgument('\"radius\" must be an integer');\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    const link = this.findNamedLink(this.__links, 'pharmaciesNearMe');\n    if (!Validator.isValidLink(link)) {\n      const error = AWSDKError.AWSDKInternalError('service does not have a valid \"pharmaciesNearMe\" link entry');\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    const options = this.generateOptions('GET', link.url);\n    options.auth = this.getSdkAuth();\n    options.form.set('longitude', longitude);\n    options.form.set('latitude', latitude);\n    options.form.set('radius', radius);\n    options.form.set('excludeMailOrderParam', excludeMailOrderPharmacies);\n    return this.executeRequest(options, AWSDKPharmaciesResponse)\n      .then((response) => {\n        this.__logger.debug(currentFunction, 'Got response', response);\n        return response.pharmacies;\n      })\n      .catch((error) => {\n        this.__logger.error(currentFunction, 'Error', error);\n        throw error;\n      });\n  }\n\n  /**\n   * Delete the {@link model.AWSDKPharmacy}s from the given {@link model.AWSDKConsumer}'s account.\n   * @param {model.AWSDKConsumer} consumer the consumer whose pharmacy to delete\n   * @param {model.AWSDKPharmacy} pharmacy the pharmacy to delete\n   * @returns {Promise<boolean|error.AWSDKError>} a promise that will resolve to a boolean indicating success, or rejected with an {@link error.AWSDKError|AWSDKError}\n   * <p><br>Potential Error Codes<br>\n   * <table summary=\"ErrorCodes\" border=\"1\">\n   * <thead>\n   * <tr><th>Error Code</th><th>reason</th></tr>\n   * </thead>\n   * <tbody>\n   * <tr><td>{@link error.AWSDKErrorCode.consumerNotAuthenticated|AWSDKErrorCode.consumerNotAuthenticated}</td><td>Consumer is not authenticated.</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.illegalArgument|AWSDKErrorCode.illegalArgument}</td><td>A parameter is not the correct type.</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.internalError|AWSDKErrorCode.internalError}</td><td>The AWSDK could not complete the request.</td></tr>\n   * </tbody>\n   * </table>\n   * @since 1.2.0\n   */\n  deletePharmacy(consumer, pharmacy) {\n    const currentFunction = 'PharmacyService.deletePharmacy';\n    this.__logger.debug(currentFunction, 'Started', consumer, pharmacy);\n    if (!(consumer instanceof AWSDKConsumer)) {\n      const error = AWSDKError.AWSDKIllegalArgument('consumer argument is not of type AWSDKConsumer');\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    if (!(pharmacy instanceof AWSDKPharmacy)) {\n      const error = AWSDKError.AWSDKIllegalArgument('pharmacy argument is not of type AWSDKPharmacy');\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    const link = this.findNamedLink(consumer.links, 'pharmacy');\n    if (!Validator.isValidLink(link)) {\n      const error = AWSDKError.AWSDKInternalError('consumer does not have a valid \"pharmacy\" link entry');\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    const options = this.generateOptions('DELETE', link.url);\n    options.auth = this.getUserAuth(consumer);\n    if (!options.auth) {\n      const error = AWSDKError.AWSDKConsumerNotAuthenticated();\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    options.form.set('pharmacyId', pharmacy.id.encryptedId);\n    return this.executeRequest(options, AWSDKResponse)\n      .then((response) => {\n        this.__logger.debug(currentFunction, 'Got response', response);\n        this.updateUserAuthEntry(consumer, response.authToken);\n        this.__logger.info(currentFunction, 'Completed');\n        return true;\n      })\n      .catch((error) => {\n        this.__logger.error(currentFunction, 'Error', error);\n        throw error;\n      });\n  }\n}\n\nexport default PharmacyService;\n","/*!\n * American Well Consumer Web SDK\n *\n * Copyright (c) 2017 American Well.\n * All rights reserved.\n *\n * It is illegal to use, reproduce or distribute\n * any part of this Intellectual Property without\n * prior written authorization from American Well.\n */\nimport AWSDKResponse from '../../internal/model/response/awsdk_response';\nimport GenericParser from '../../internal/parser/generic_parser';\n\n/**\n * The AWSDKAvailabilityList class represents a wrapper object that encapsulates a response to a request for a list of date/times.\n * @property {Date[]} availability an array of {@link Date}\n * @since 1.1.0\n * @extends model.AWSDKResponse\n */\nclass AWSDKAvailabilityList extends AWSDKResponse {\n  get availability() {\n    return this.__data.availability.map(item => GenericParser.parseDate(item));\n  }\n}\n\nexport default AWSDKAvailabilityList;\n","/*!\n * American Well Consumer Web SDK\n *\n * Copyright © 2017 American Well.\n * All rights reserved.\n *\n * It is illegal to use, reproduce or distribute\n * any part of this Intellectual Property without\n * prior written authorization from American Well.\n */\n\nimport AWSDKResource from './awsdk_resource';\n/**\n * AWSDKLanguage class represents a language object with all necessary information to successfully describe a language.\n * See {@link model.AWSDKResource|AWSDKResource} for details.\n * @extends model.AWSDKResource\n */\nclass AWSDKLanguage extends AWSDKResource {}\n\nexport default AWSDKLanguage;\n","/*!\r\n * American Well Consumer Web SDK\r\n *\r\n * Copyright (c) 2017 American Well.\r\n * All rights reserved.\r\n *\r\n * It is illegal to use, reproduce or distribute\r\n * any part of this Intellectual Property without\r\n * prior written authorization from American Well.\r\n */\r\nimport AWSDKEntity from '../awsdk_entity';\r\n\r\n/**\r\n * The AWSDKPracticeSubCategory class representing a subCategory object in a {@link model.AWSDKPracticeCategory|AWSDKPracticeCategory}\r\n * @property {String} name the name of this subCategory\r\n * @property {Number} practiceCount the number of practices in this subCategory\r\n * @extends model.AWSDKEntity\r\n */\r\nclass AWSDKPracticeSubCategory extends AWSDKEntity {\r\n  get name() {\r\n    return this.__data.name;\r\n  }\r\n\r\n  get practiceCount() {\r\n    return this.__data.practiceCount;\r\n  }\r\n}\r\n\r\nexport default AWSDKPracticeSubCategory;\r\n","/*!\r\n * American Well Consumer Web SDK\r\n *\r\n * Copyright (c) 2017 American Well.\r\n * All rights reserved.\r\n *\r\n * It is illegal to use, reproduce or distribute\r\n * any part of this Intellectual Property without\r\n * prior written authorization from American Well.\r\n */\r\n\r\nimport AWSDKEntity from '../awsdk_entity';\r\nimport AWSDKPracticeSubCategory from './awsdk_practice_sub_category';\r\nimport GenericParser from '../../internal/parser/generic_parser';\r\n/**\r\n * The AWSDKPracticeCategory class represents a practice category object\r\n * @property {String} title the title of the practice category\r\n * @property {model.AWSDKPracticeSubCategory[]} subCategories an array of {@link model.AWSDKPracticeSubCategory|AWSDKPracticeSubCategory}\r\n * @extends model.AWSDKEntity\r\n */\r\nclass AWSDKPracticeCategory extends AWSDKEntity {\r\n  get title() {\r\n    return this.__data.title;\r\n  }\r\n\r\n  get subCategories() {\r\n    return this.__data.subCategories.map(item => GenericParser.parseObject(item, AWSDKPracticeSubCategory));\r\n  }\r\n}\r\n\r\nexport default AWSDKPracticeCategory;\r\n","/*!\n * American Well Consumer Web SDK\n *\n * Copyright (c) 2017 American Well.\n * All rights reserved.\n *\n * It is illegal to use, reproduce or distribute\n * any part of this Intellectual Property without\n * prior written authorization from American Well.\n */\nimport GenericParser from '../../internal/parser/generic_parser';\nimport AWSDKPractice from './awsdk_practice';\nimport AWSDKPracticeCategory from './awsdk_practice_category';\nimport AWSDKResponse from '../../internal/model/response/awsdk_response';\n\n/**\n * The AWSDKPracticesResponse class represents a wrapper object that encapsulates a response to a request for a list of practices.\n * @property {model.AWSDKPractice[]} practices an array of {@link model.AWSDKPractice|AWSDKPractice} objects\n * @property {model.AWSDKPracticeCategory[]} practiceCategories an array of {@link model.AWSDKPracticeCategory|AWSDKPracticeCategory} objects\n * @extends model.AWSDKResponse\n */\nclass AWSDKPracticeList extends AWSDKResponse {\n  get practices() {\n    return this.__data.practiceList.practices.map(item => GenericParser.parseObject(item, AWSDKPractice));\n  }\n\n  get practiceCategories() {\n    return this.__data.practiceList.categories.map(item => GenericParser.parseObject(item, AWSDKPracticeCategory));\n  }\n}\n\nexport default AWSDKPracticeList;\n","/*!\n * American Well Consumer Web SDK\n *\n * Copyright (c) 2017 American Well.\n * All rights reserved.\n *\n * It is illegal to use, reproduce or distribute\n * any part of this Intellectual Property without\n * prior written authorization from American Well.\n */\nimport GenericParser from '../../parser/generic_parser';\nimport AWSDKResponse from './awsdk_response';\nimport AWSDKPractice from '../../../model/practice/awsdk_practice';\n\n/**\n * The AWSDKPracticeResponse class represents the response object to a call for a practice details\n * @property {model.AWSDKPractice} practiceDetails the practice details for a given practice\n * @extends model.AWSDKResponse\n */\nclass AWSDKPracticeResponse extends AWSDKResponse {\n  get practiceDetails() {\n    return GenericParser.parseObject(this.__data.practice, AWSDKPractice);\n  }\n}\n\nexport default AWSDKPracticeResponse;\n","/*!\r\n * American Well Consumer Web SDK\r\n *\r\n * Copyright (c) 2018 American Well.\r\n * All rights reserved.\r\n *\r\n * It is illegal to use, reproduce or distribute\r\n * any part of this Intellectual Property without\r\n * prior written authorization from American Well.\r\n */\r\n\r\nimport AWSDKLanguage from '../awsdk_language';\r\nimport AWSDKError from '../../error/awsdk_error';\r\nimport AWSDKConsumer from '../consumer/awsdk_consumer';\r\nimport Validator from '../../internal/validator/validator';\r\n\r\n/**\r\n * This class represents the search criteria for finding a practice.\r\n * Get an instance of this via {@link service.PracticeService#getNewPracticeSearchCriteria()|PracticeService.getNewPracticeSearchCriteria}\r\n * @property {String} [practiceType] the practice type to search for. Possible values are: DEFAULT, EXCLUSIVE, NORMAL.\r\n * @property {String} [sourceId] the source Id to search for.\r\n * @property {model.AWSDKLanguage} [language] an AWSDKLanguage object which specifies the language.\r\n * @property {model.AWSDKConsumer} [consumer] an AWSDKConsumer object which specifies the consumer.\r\n * @property {Number} [maxResults] an integer which specifies the maximum number of results to return.\r\n * @since 1.3.0\r\n */\r\nclass AWSDKPracticeSearchCriteria {\r\n  constructor(criteria = {}) {\r\n    this.__practiceType = criteria.practiceType;\r\n    this.__sourceId = criteria.sourceId;\r\n    this.__language = criteria.language;\r\n    this.__consumer = criteria.consumer;\r\n    this.__maxResults = criteria.maxResults;\r\n  }\r\n  get practiceType() {\r\n    return this.__practiceType;\r\n  }\r\n  set practiceType(practiceType) {\r\n    this.__practiceType = practiceType;\r\n  }\r\n  get sourceId() {\r\n    return this.__sourceId;\r\n  }\r\n  set sourceId(sourceId) {\r\n    this.__sourceId = sourceId;\r\n  }\r\n  get consumer() {\r\n    return this.__consumer;\r\n  }\r\n  set consumer(consumer) {\r\n    if (!(consumer instanceof AWSDKConsumer)) {\r\n      throw AWSDKError.AWSDKIllegalArgument('consumer must be of type AWSDKConsumer');\r\n    }\r\n    this.__consumer = consumer;\r\n  }\r\n  get language() {\r\n    return this.__language;\r\n  }\r\n  set language(language) {\r\n    if (!(language instanceof AWSDKLanguage)) {\r\n      throw AWSDKError.AWSDKIllegalArgument('language must be of type AWSDKLanguage');\r\n    }\r\n    this.__language = language;\r\n  }\r\n  get maxResults() {\r\n    return this.__maxResults;\r\n  }\r\n  set maxResults(maxResults) {\r\n    if (!(Validator.isInt(maxResults))) {\r\n      throw AWSDKError.AWSDKIllegalArgument('maxResults must be of type int');\r\n    }\r\n    this.__maxResults = maxResults;\r\n  }\r\n}\r\nexport default AWSDKPracticeSearchCriteria;\r\n","/*!\r\n * American Well Consumer Web SDK\r\n *\r\n * Copyright (c) 2018 American Well.\r\n * All rights reserved.\r\n *\r\n * It is illegal to use, reproduce or distribute\r\n * any part of this Intellectual Property without\r\n * prior written authorization from American Well.\r\n */\r\n\r\nimport AWSDKPracticeBase from '../../internal/model/awsdk_practice_base';\r\nimport GenericParser from '../../internal/parser/generic_parser';\r\n\r\n/**\r\n * This class represents the result of an authenticated or unauthenticated search for a practice by practiceType and/or language.\r\n * @property {String} href the link to the practice details\r\n * @property {Boolean} hasLogo boolean true if the practice has a logo, false otherwise.\r\n * @property {Boolean} hasSmallLogo boolean true if the practice has a small logo, false otherwise.\r\n * @property {Boolean} hideProviderVisitCostEstimate TRUE if the provider's estimated visit cost should be hidden for this practice\r\n * @since 1.1.0\r\n * @extends model.AWSDKPracticeBase\r\n */\r\nclass AWSDKPracticeSearchResult extends AWSDKPracticeBase {\r\n\r\n  get hasLogo() {\r\n    return GenericParser.parseBoolean(this.__data.hasLogo);\r\n  }\r\n\r\n  get hasSmallLogo() {\r\n    return GenericParser.parseBoolean(this.__data.hasSmallLogo);\r\n  }\r\n  /**\r\n   * @since 1.5.0\r\n   */\r\n  get hideProviderVisitCostEstimate() {\r\n    return GenericParser.parseBoolean(this.__data.hideProviderVisitCostEstimate);\r\n  }\r\n}\r\nexport default AWSDKPracticeSearchResult;\r\n","/*!\r\n * American Well Consumer Web SDK\r\n *\r\n * Copyright (c) 2018 American Well.\r\n * All rights reserved.\r\n *\r\n * It is illegal to use, reproduce or distribute\r\n * any part of this Intellectual Property without\r\n * prior written authorization from American Well.\r\n */\r\nimport AWSDKResponse from './awsdk_response';\r\nimport GenericParser from '../../parser/generic_parser';\r\nimport AWSDKPracticeSearchResult from '../../../model/practice/awsdk_practice_search_result';\r\n\r\nclass AWSDKPracticeSearchResponse extends AWSDKResponse {\r\n  get practiceSearchResults() {\r\n    return this.__data.practiceSearchResults.map(item => GenericParser.parseObject(item, AWSDKPracticeSearchResult));\r\n  }\r\n}\r\nexport default AWSDKPracticeSearchResponse;\r\n","/*!\r\n * American Well Consumer Web SDK\r\n *\r\n * Copyright (c) 2018 American Well.\r\n * All rights reserved.\r\n *\r\n * It is illegal to use, reproduce or distribute\r\n * any part of this Intellectual Property without\r\n * prior written authorization from American Well.\r\n */\r\n\r\nimport AWSDKEntity from '../awsdk_entity';\r\nimport GenericParser from '../../internal/parser/generic_parser';\r\nimport AWSDKProviderType from '../provider/awsdk_provider_type';\r\n/**\r\n * Encapsulates information about a {@link model.AWSDKPractice}'s specialty applicable to on-demand visits\r\n * @property {Boolean} intakeConditionsEnabled whether the specialty collects {@link model.AWSDKCondition}s on intake intake\r\n * @property {Boolean} intakeAllergiesEnabled whether the specialty collects {@link model.AWSDKAllergy}s on intake intake\r\n * @property {Boolean} intakeMedicationsEnabled whether the specialty collects {@link model.AWSDKMedication}s on intake\r\n * @property {Boolean} intakeVitalsEnabled whether the specialty collects {@link model.AWSDKVital}s on intake\r\n * @property {Boolean} providersAvailable whether the specialty has any providers available at the time of last update\r\n * @since 1.3.1\r\n * @property {model.AWSDKProviderType[]} providerTypes the provider types associated with this specialty\r\n * @since 1.1.0\r\n * @extends model.AWSDKEntity\r\n */\r\nclass AWSDKOnDemandSpecialty extends AWSDKEntity {\r\n  get intakeConditionEnabled() {\r\n    return GenericParser.parseBoolean(this.__data.intakeConditionEnabled);\r\n  }\r\n  get intakeAllergiesEnabled() {\r\n    return GenericParser.parseBoolean(this.__data.intakeAllergiesEnabled);\r\n  }\r\n  get intakeMedicationsEnabled() {\r\n    return GenericParser.parseBoolean(this.__data.intakeMedicationsEnabled);\r\n  }\r\n  get intakeVitalsEnabled() {\r\n    return GenericParser.parseBoolean(this.__data.intakeVitalsEnabled);\r\n  }\r\n  get providersAvailable() {\r\n    return GenericParser.parseBoolean(this.__data.providersAvailable);\r\n  }\r\n  get providerTypes() {\r\n    return (Array.isArray(this.__data.providerTypes) && this.__data.providerTypes.map(item => GenericParser.parseObject(item, AWSDKProviderType))) || [];\r\n  }\r\n}\r\n\r\nexport default AWSDKOnDemandSpecialty;\r\n","/*!\r\n * American Well Consumer Web SDK\r\n *\r\n * Copyright © 2018 American Well.\r\n * All rights reserved.\r\n *\r\n * It is illegal to use, reproduce or distribute\r\n * any part of this Intellectual Property without\r\n * prior written authorization from American Well.\r\n */\r\nimport AWSDKOnDemandSpecialty from '../../../model/practice/awsdk_on_demand_specialty';\r\nimport AWSDKResponse from './awsdk_response';\r\nimport GenericParser from '../../parser/generic_parser';\r\n\r\n/**\r\n * Wrapper around a collection of {@link model.AWSDKOnDemandSpecialty}s\r\n * @property {model.AWSDKOnDemandSpecialty[]} specialties the {@link model.AWSDKOnDemandSpecialty}s\r\n * @extends model.AWSDKResponse\r\n */\r\nclass AWSDKOnDemandSpecialtiesResponse extends AWSDKResponse {\r\n  get specialties() {\r\n    return this.__data.specialties.map(item => GenericParser.parseObject(item, AWSDKOnDemandSpecialty));\r\n  }\r\n}\r\n\r\nexport default AWSDKOnDemandSpecialtiesResponse;\r\n","/*!\r\n * American Well Consumer Web SDK\r\n *\r\n * Copyright (c) 2018 American Well.\r\n * All rights reserved.\r\n *\r\n * It is illegal to use, reproduce or distribute\r\n * any part of this Intellectual Property without\r\n * prior written authorization from American Well.\r\n */\r\n\r\nimport AWSDKError from '../../error/awsdk_error';\r\nimport AWSDKLanguage from '../awsdk_language';\r\nimport Validator from '../../internal/validator/validator';\r\nimport AWSDKPractice from './awsdk_practice';\r\nimport AWSDKPracticeSubCategory from './awsdk_practice_sub_category';\r\n\r\n/**\r\n * This class represents the search criteria for finding a practice's future availability.\r\n * Get an instance of this via {@link service.PracticeService#getNewPracticeFutureAvailabilitySearchCriteria()|PracticeService.getNewPracticeFutureAvailabilitySearchCriteria}\r\n * @property {String} timeZone the canonical time zone name, i.e. America/New_York\r\n * @property {(model.AWSDKPractice|model.AWSDKPracticeSubCategory)} [practiceOrSubCategory] the {@link model.AWSDKPractice|AWSDKPractice} or {@link model.AWSDKPracticeSubCategory|AWSDKPracticeSubCategory} whose details we want to retrieve.\r\n * @property {String} [searchTerm] the text used to filter the available dates by provider names.\r\n * @property {model.AWSDKLanguage} [languageSpoken] the {@link model.AWSDKLanguage|AWSDKLanguage} spoken to filter the available dates on.\r\n * @property {Date} [appointmentDate] the appointment date to filter the available dates on.\r\n * @property {Number} [maxResults] limit the number of results returned. Should be an integer.\r\n * @since 1.3.1\r\n */\r\nclass AWSDKPracticeFutureAvailabilitySearchCriteria {\r\n  constructor(criteria = {}) {\r\n    if (criteria) {\r\n      this.__timeZone = criteria.timeZone;\r\n      this.__practiceOrSubCategory = criteria.practiceOrSubCategory;\r\n      this.__searchTerm = criteria.searchTerm;\r\n      this.__languageSpoken = criteria.languageSpoken;\r\n      this.__appointmentDate = criteria.appointmentDate;\r\n      this.__maxResults = criteria.maxResults;\r\n    }\r\n  }\r\n\r\n  get timeZone() {\r\n    return this.__timeZone;\r\n  }\r\n\r\n  set timeZone(timeZone) {\r\n    this.__timeZone = timeZone;\r\n  }\r\n\r\n  get practiceOrSubCategory() {\r\n    return this.__practiceOrSubCategory;\r\n  }\r\n\r\n  set practiceOrSubCategory(practiceOrSubCategory) {\r\n    if (!(practiceOrSubCategory instanceof AWSDKPractice) && !(practiceOrSubCategory instanceof AWSDKPracticeSubCategory)) {\r\n      throw AWSDKError.AWSDKIllegalArgument('practiceOrSubCategory must be an instance of AWSDKPractice or AWSDKPracticeSubCategory');\r\n    }\r\n    this.__practiceOrSubCategory = practiceOrSubCategory;\r\n  }\r\n\r\n  get searchTerm() {\r\n    return this.__searchTerm;\r\n  }\r\n\r\n  set searchTerm(searchTerm) {\r\n    this.__searchTerm = searchTerm;\r\n  }\r\n\r\n  get languageSpoken() {\r\n    return this.__languageSpoken;\r\n  }\r\n\r\n  set languageSpoken(languageSpoken) {\r\n    if (!(languageSpoken instanceof AWSDKLanguage)) {\r\n      throw AWSDKError.AWSDKIllegalArgument('languageSpoken must be of type AWSDKLanguage');\r\n    }\r\n    this.__languageSpoken = languageSpoken;\r\n  }\r\n\r\n  get appointmentDate() {\r\n    return this.__appointmentDate;\r\n  }\r\n\r\n  set appointmentDate(appointmentDate) {\r\n    if (!(appointmentDate instanceof Date)) {\r\n      throw AWSDKError.AWSDKIllegalArgument('appointmentDate must be of type Date');\r\n    }\r\n    this.__appointmentDate = appointmentDate;\r\n  }\r\n\r\n  get maxResults() {\r\n    return this.__maxResults;\r\n  }\r\n\r\n  set maxResults(maxResults) {\r\n    if (!(Validator.isInt(maxResults))) {\r\n      throw AWSDKError.AWSDKIllegalArgument('maxResults must be of type int');\r\n    }\r\n    this.__maxResults = maxResults;\r\n  }\r\n}\r\nexport default AWSDKPracticeFutureAvailabilitySearchCriteria;\r\n","/*!\n * American Well Consumer Web SDK\n *\n * Copyright © 2017 American Well.\n * All rights reserved.\n *\n * It is illegal to use, reproduce or distribute\n * any part of this Intellectual Property without\n * prior written authorization from American Well.\n */\nimport AWSDKAvailabilityList from '../model/practice/awsdk_availability_list';\nimport AWSDKError from './../error/awsdk_error';\nimport AWSDKConsumer from '../model/consumer/awsdk_consumer';\nimport AWSDKLanguage from '../model/awsdk_language';\nimport AWSDKPractice from '../model/practice/awsdk_practice';\nimport AWSDKPracticeList from '../model/practice/awsdk_practice_list';\nimport AWSDKPracticeBase from '../internal/model/awsdk_practice_base';\nimport AWSDKPracticeResponse from '../internal/model/response/awsdk_practice_response';\nimport AWSDKPracticeSearchCriteria from '../model/practice/awsdk_practice_search_criteria';\nimport AWSDKPracticeSearchResponse from '../internal/model/response/awsdk_practice_search_response';\nimport AWSDKPracticeCategory from '../model/practice/awsdk_practice_category';\nimport AWSDKPracticeSubCategory from '../model/practice/awsdk_practice_sub_category';\nimport AWSDKOnDemandSpecialtiesResponse from '../internal/model/response/awsdk_on_demand_specialties_response';\nimport Service from './service';\nimport Validator from '../internal/validator/validator';\nimport Util from '../internal/util/util';\nimport AWSDKPracticeFutureAvailabilitySearchCriteria from '../model/practice/awsdk_practice_future_availability_search_criteria';\n\n/**\n * This PracticeService class contains all necessary service methods for getting practice related information from the American Well telehealth platform.<br>\n * An instance of this class is obtained via a call to {@link awsdk.AWSDK#practiceService|AWSDK.practiceService}\n * @extends service.Service\n */\nclass PracticeService extends Service {\n  /**\n   * Retrieve an array of {@link model.AWSDKPractice|AWSDKPractice} for the given {@link model.AWSDKConsumer|AWSDKConsumer}, which is retrieved via a call {@link service.ConsumerService#getConsumer|ConsumerService.getConsumer} <br>\n   * The resulting response will also have an array of {@link model.AWSDKPracticeCategory|AWSDKPracticeCategory}\n   * @param {model.AWSDKConsumer} consumer the {@link model.AWSDKConsumer|AWSDKConsumer} whose list of practices we seek to retrieve\n   * @returns {Promise<model.AWSDKPracticeList|error.AWSDKError>} Returns a promise that will be resolved to a {@link model.AWSDKPracticeList|AWSDKPracticeList} or will\n   * be rejected with an {@link error.AWSDKError|AWSDKError}.\n   * <p><br>Potential Error Codes<br>\n   * <table summary=\"ErrorCodes\" border=\"1\">\n   * <thead>\n   * <tr><th>Error Code</th><th>reason</th></tr>\n   * </thead>\n   * <tbody>\n   * <tr><td>{@link error.AWSDKErrorCode.consumerNotAuthenticated|AWSDKErrorCode.consumerNotAuthenticated}</td><td>The consumer is not authenticated.</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.illegalArgument|AWSDKErrorCode.illegalArgument}</td><td>When the consumer is not an instance of {@link model.AWSDKConsumer|AWSDKConsumer}.</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.internalError|AWSDKErrorCode.internalError}</td><td>The AWSDK could not complete the request.</td></tr>\n   * </tbody>\n   * </table>\n   * @since 1.0.0\n   */\n  getPractices(consumer) {\n    const currentFunction = 'PracticeService.getPractices';\n    this.__logger.debug(currentFunction, 'Started', consumer);\n    if (!(consumer instanceof AWSDKConsumer)) {\n      const error = AWSDKError.AWSDKIllegalArgument('Param \"consumer\" must be an instance of AWSDKConsumer');\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    const link = this.findNamedLink(consumer.links, 'practicesWithCategories');\n    if (!Validator.isValidLink(link)) {\n      const error = AWSDKError.AWSDKInternalError('consumer does not have a \"practicesWithCategories\" link entry');\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    const options = this.generateOptions('GET', link.url);\n    options.auth = this.getUserAuth(consumer);\n    if (options.auth == null) {\n      const error = AWSDKError.AWSDKConsumerNotAuthenticated();\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    return this.executeRequest(options, AWSDKPracticeList)\n      .then((practiceList) => {\n        this.__logger.debug(currentFunction, 'Got response', practiceList);\n        this.updateUserAuthEntry(consumer, practiceList.authToken);\n        return practiceList;\n      })\n      .catch((error) => {\n        this.__logger.error(currentFunction, 'Error', error);\n        throw error;\n      });\n  }\n\n  /**\n   * Retrieve the practice details for the given {@link model.AWSDKPractice|AWSDKPractice}, which is retrieved via a call to {@link service.PracticeService#getPractices|PracticeService.getPractices} <br>\n   * @param {model.AWSDKPractice|model.AWSDKPracticeSearchResult|model.AWSDKPracticeInfo} practice the {@link model.AWSDKPractice|AWSDKPractice} or {@link model.AWSDKPracticeSearchResult|AWSDKPracticeSearchResult} whose details we want to retrieve.\n   * @returns {Promise<model.AWSDKPractice|error.AWSDKError>} returns a promise that will be resolved to a {@link model.AWSDKPractice|AWSDKPractice} or will\n   * be rejected with a {@link error.AWSDKError|AWSDKError}.\n   * <p><br>Potential Error Codes<br>\n   * <table summary=\"ErrorCodes\" border=\"1\">\n   * <tr><th>Error Code</th><th>reason</th></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.illegalArgument|AWSDKErrorCode.illegalArgument}</td><td>The practice argument is not an instance of {@link model.AWSDKPractice|AWSDKPractice}</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.internalError|AWSDKErrorCode.internalError}</td><td>The AWSDK could not complete the request.</td></tr>\n   * </table>\n   * @since 1.0.0\n   */\n  getPracticeDetails(practice) {\n    const currentFunction = 'PracticeService.getPracticeDetails';\n    this.__logger.debug(currentFunction, 'Started', practice);\n    if ((!(practice instanceof AWSDKPracticeBase))) {\n      const error = AWSDKError.AWSDKIllegalArgument('practice is not an instance of AWSDKPracticeSearchResult, AWSDKPractice, or AWSDKPracticeInfo');\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    const url = practice.href;\n    if (!Validator.isValidString(url)) {\n      const error = AWSDKError.AWSDKInternalError('The practice argument does not contain a valid href property');\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    const options = this.generateOptions('GET', url);\n    options.auth = this.getSdkAuth();\n    return this.executeRequest(options, AWSDKPracticeResponse)\n      .then((practiceResponse) => {\n        this.__logger.debug(currentFunction, 'Got response', practiceResponse);\n        return practiceResponse.practiceDetails;\n      })\n      .catch((error) => {\n        this.__logger.error(currentFunction, 'Error', error);\n        throw error;\n      });\n  }\n\n  /**\n   * Get an instance of {@link model.AWSDKPracticeFutureAvailabilitySearchCriteria|AWSDKPracticeFutureAvailabilitySearchCriteria} to use when searching for a practice's future availability. <br>\n   * @param {Object} [searchCriteria] the search criteria in JSON Format\n   * @returns {model.AWSDKPracticeFutureAvailabilitySearchCriteria} returns an instance of a {@link model.AWSDKPracticeFutureAvailabilitySearchCriteria|AWSDKPracticeFutureAvailabilitySearchCriteria} object\n   * @since 1.3.1\n   */\n  getNewPracticeFutureAvailabilitySearchCriteria(searchCriteria) {\n    return new AWSDKPracticeFutureAvailabilitySearchCriteria(searchCriteria);\n  }\n\n  /**\n   * Retrieve a List of Dates for the given {@link model.AWSDKPractice|AWSDKPractice} for scheduling appointments in the future<br>\n   * There is an optional {@link java.util.Date} parameter for appointmentDate. Providing it will limit the search\n   * to the given date.  If this date is not provided, the next date with available appointments will be used<br>\n   * @param {model.AWSDKConsumer} consumer the {@link model.AWSDKConsumer|AWSDKConsumer} or whose list of practices we seek to retrieve\n   * @param {model.AWSDKPracticeFutureAvailabilitySearchCriteria} practiceFutureAvailabilitySearchCriteria the {@link model.AWSDKPracticeFutureAvailabilitySearchCriteria|AWSDKPracticeFutureAvailabilitySearchCriteria} to use when searching for a practice's future availability.\n   * @returns {Promise<model.AWSDKAvailabilityList|error.AWSDKError>} returns a promise that will be resolved to a {@link model.AWSDKAvailabilityList|AWSDKAvailabilityList} or will\n   * be rejected with a {@link error.AWSDKError|AWSDKError}.\n   * <p><br>Potential Error Codes<br>\n   * <table summary=\"ErrorCodes\" border=\"1\">\n   * <tr><th>Error Code</th><th>reason</th></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.consumerNotAuthenticated|AWSDKErrorCode.consumerNotAuthenticated}</td><td>The consumer is not authenticated.</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.illegalArgument|AWSDKErrorCode.illegalArgument}</td><td>A parameter is not the correct type.</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.internalError|AWSDKErrorCode.internalError}</td><td>The AWSDK could not complete the request.</td></tr>\n   * </table>\n   * @since 1.1.0\n   */\n  practiceFutureAvailabilitySearch(consumer, practiceFutureAvailabilitySearchCriteria) {\n    const currentFunction = 'PracticeService.practiceFutureAvailabilitySearch';\n    this.__logger.debug(currentFunction, 'Started', consumer, practiceFutureAvailabilitySearchCriteria);\n    if (!(consumer instanceof AWSDKConsumer)) {\n      const error = AWSDKError.AWSDKIllegalArgument('Param \"consumer\" must be an instance of AWSDKConsumer');\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    if (!(practiceFutureAvailabilitySearchCriteria instanceof AWSDKPracticeFutureAvailabilitySearchCriteria)) {\n      const error = AWSDKError.AWSDKIllegalArgument('Param \"practiceFutureAvailabilitySearchCriteria\" must be an instance of AWSDKPracticeFutureAvailabilitySearchCriteria');\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n\n    const criteria = practiceFutureAvailabilitySearchCriteria;\n    if (!Validator.isValidString(criteria.timeZone)) {\n      const error = AWSDKError.AWSDKIllegalArgument('Param \"practiceFutureAvailabilitySearchCriteria.timeZone\" must be a valid String');\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    if (criteria.practiceOrSubCategory != null && !(criteria.practiceOrSubCategory instanceof AWSDKPractice) && !(criteria.practiceOrSubCategory instanceof AWSDKPracticeSubCategory)) {\n      const error = AWSDKError.AWSDKIllegalArgument('Param \"practiceFutureAvailabilitySearchCriteria.practiceOrSubCategory\" must be an instance of AWSDKPractice or AWSDKPracticeSubCategory');\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    if (criteria.languageSpoken != null && !(criteria.languageSpoken instanceof AWSDKLanguage)) {\n      const error = AWSDKError.AWSDKIllegalArgument('Param \"practiceFutureAvailabilitySearchCriteria.languageSpoken\" must be an instance of AWSDKLanguage');\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    if (criteria.appointmentDate != null && !(criteria.appointmentDate instanceof Date)) {\n      const error = AWSDKError.AWSDKIllegalArgument('Param \"practiceFutureAvailabilitySearchCriteria.appointmentDate\" must be an instance of Date');\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    if (criteria.maxResults != null && !(Validator.isInt(criteria.maxResults))) {\n      const error = AWSDKError.AWSDKIllegalArgument('Param \"practiceFutureAvailabilitySearchCriteria.maxResults\" must be an integer');\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    const link = this.findNamedLink(this.__links, 'practiceFutureAvailabilitySearch');\n    if (!Validator.isValidLink(link)) {\n      const error = AWSDKError.AWSDKInternalError('service does not have a \"practiceFutureAvailabilitySearch\" link entry');\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    const options = this.generateOptions('GET', link.url, true);\n    options.auth = this.getUserAuth(consumer);\n    if (options.auth == null) {\n      const error = AWSDKError.AWSDKConsumerNotAuthenticated();\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    options.form.set('memberId', consumer.id.encryptedId);\n    if (criteria.practiceOrSubCategory != null) {\n      if (criteria.practiceOrSubCategory instanceof AWSDKPractice) {\n        options.form.set('practiceId', criteria.practiceOrSubCategory.id.encryptedId);\n      } else {\n        options.form.set('practiceSubCategoryId', criteria.practiceOrSubCategory.id.encryptedId);\n      }\n    }\n    if (criteria.searchTerm != null) {\n      options.form.set('searchTerm', criteria.searchTerm);\n    }\n    if (criteria.languageSpoken != null) {\n      options.form.set('languageSpoken', criteria.languageSpoken.value);\n    }\n    if (criteria.appointmentDate != null) {\n      options.form.set('appointmentDate', Util.formatISODateTime(criteria.appointmentDate));\n    }\n    options.form.set('currentTime', Util.formatISODateTime(new Date()));\n    options.form.set('timeZone', criteria.timeZone);\n    if (criteria.maxResults != null) {\n      options.form.set('maxResults', criteria.maxResults);\n    }\n    return this.executeRequest(options, AWSDKAvailabilityList)\n      .then((availablilityList) => {\n        this.__logger.debug(currentFunction, 'Got response', availablilityList);\n        this.updateUserAuthEntry(consumer, availablilityList.authToken);\n        return availablilityList;\n      })\n      .catch((error) => {\n        this.__logger.error(currentFunction, 'Error', error);\n        throw error;\n      });\n  }\n\n  /**\n   * Retrieve the collection of {@link model.AWSDKOnDemandSpecialty[]} associated with the given {@link model.AWSDKPractice}, satisfying the optional search term\n   * @param {model.AWSDKConsumer} consumer the {@link model.AWSDKConsumer|AWSDKConsumer} for whom to perform the search.\n   * @param {model.AWSDKPractice} practice the {@link model.AWSDKPractice|AWSDKPractice} to search in.\n   * @param {String} [searchTerm] a term by which to limit the search\n   * @returns {Promise<model.AWSDKPractice|error.AWSDKError>} returns a promise that will be resolved to a {@link model.AWSDKPractice|AWSDKPractice} or will\n   * be rejected with a {@link error.AWSDKError|AWSDKError}.\n   * <p><br>Potential Error Codes<br>\n   * <table summary=\"ErrorCodes\" border=\"1\">\n   * <tr><th>Error Code</th><th>reason</th></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.consumerNotAuthenticated|AWSDKErrorCode.consumerNotAuthenticated}</td><td>The consumer is not authenticated.</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.illegalArgument|AWSDKErrorCode.illegalArgument}</td><td>The practice argument is not an instance of {@link model.AWSDKPractice|AWSDKPractice}\n   * or the consumer argument is not an instance of {@link model.AWSDKConsumer}</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.internalError|AWSDKErrorCode.internalError}</td><td>The AWSDK could not complete the request.</td></tr>\n   * </table>\n   * @since 1.1.0\n   */\n  getOnDemandSpecialties(consumer, practice, searchTerm) {\n    const currentFunction = 'PracticeService.getOnDemandSpecialties';\n    this.__logger.debug(currentFunction, 'Started', consumer, practice, searchTerm);\n    if (!(consumer instanceof AWSDKConsumer)) {\n      const error = AWSDKError.AWSDKIllegalArgument('Argument \"consumer\" must be an instance of AWSDKConsumer');\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    if (!(practice instanceof AWSDKPractice)) {\n      const error = AWSDKError.AWSDKIllegalArgument('Argument \"practice\" must be an instance of AWSDKPractice');\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    const link = this.findNamedLink(practice.links, 'specialtiesInPracticeSearch');\n    if (!Validator.isValidLink(link)) {\n      const error = AWSDKError.AWSDKInternalError('practice does not have a \"specialtiesInPracticeSearch\" link entry');\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    const options = this.generateOptions('GET', link.url, true);\n    options.auth = this.getUserAuth(consumer);\n    if (options.auth == null) {\n      const error = AWSDKError.AWSDKConsumerNotAuthenticated();\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    options.form.set('memberId', consumer.id.encryptedId);\n    options.form.set('searchTerm', searchTerm);\n    return this.executeRequest(options, AWSDKOnDemandSpecialtiesResponse).then((response) => {\n      this.__logger.debug(currentFunction, 'Got response', response);\n      this.updateUserAuthEntry(consumer, response.authToken);\n      return response.specialties;\n    }).catch((error) => {\n      this.__logger.error(currentFunction, 'Error', error);\n      throw error;\n    });\n  }\n\n  /**\n   * Get an instance of {@link model.AWSDKPracticeSearchCriteria|AWSDKPracticeSearchCriteria} to use when searching for practices. <br>\n   * @param {Object} searchCriteria the search criteria in JSON Format\n   * @returns {model.AWSDKPracticeSearchCriteria} returns an instance of a {@link model.AWSDKPracticeSearchCriteria|AWSDKPracticeSearchCriteria} object\n   * <p><br>Potential Error Codes<br>\n   * <table summary=\"ErrorCodes\" border=\"1\">\n   * <thead>\n   * <tr><th>Error Code</th><th>reason</th></tr>\n   * </thead>\n   * <tbody>\n   * <tr><td>{@link error.AWSDKErrorCode.illegalArgument|AWSDKErrorCode.illegalArgument}</td><td>A parameter is not the correct type.</td></tr>\n   * </tbody>\n   * </table>\n   * @since 1.3.0\n   */\n  getNewPracticeSearchCriteria(searchCriteria) {\n    const currentFunction = 'PracticeService.getNewPracticeSearchCriteria';\n    if (searchCriteria === null) {\n      const error = AWSDKError.AWSDKIllegalArgument('searchCriteria argument is null');\n      this.__logger.error(currentFunction, 'Error', error);\n      throw error;\n    }\n    return new AWSDKPracticeSearchCriteria(searchCriteria);\n  }\n\n  /**\n   * This method allows for an authenticated and unauthenticated search for a list of {@link model.AWSDKPracticeSearchResult|AWSDKPracticeSearchResult} based on type. Additionally, the caller can pass in the language and maxResults\n   * as a way of filtering the response list further.\n   * @param {String} [practiceType] the practice type to search for. Possible values are: DEFAULT, EXCLUSIVE, NORMAL. If no practiceType is passed, this method returns practices of DEFAULT type.\n   * @param {model.AWSDKConsumer} [consumer] the {@link model.AWSDKConsumer|AWSDKConsumer} context for authenticated searches\n   * @param {model.AWSDKLanguage} [language] filters the list of practice based on language\n   * @param {Number} [maxResults] an integer which specifies the maximum number of results to return.\n   * @returns {Promise<model.AWSDKPracticeSearchResult[]|error.AWSDKError>} returns a promise that will be resolved to a {@link model.AWSDKPracticeSearchResult[]|AWSDKPracticeSearchResult[]} or will\n   * be rejected with a {@link error.AWSDKError|AWSDKError}.\n   * <p><br>Potential Error Codes<br>\n   * <table summary=\"ErrorCodes\" border=\"1\">\n   * <tr><th>Error Code</th><th>reason</th></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.consumerNotAuthenticated|AWSDKErrorCode.consumerNotAuthenticated}</td><td>The consumer is not authenticated.</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.illegalArgument|AWSDKErrorCode.illegalArgument}</td><td>One of the arguments is not the correct type</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.internalError|AWSDKErrorCode.internalError}</td><td>The AWSDK could not complete the request.</td></tr>\n   * </table>\n   * @since 1.1.0\n   */\n  findPracticesByType(practiceType, consumer, language, maxResults) {\n    const currentFunction = 'PracticeService.findPracticesByType';\n    this.__logger.debug(currentFunction, 'Started', consumer, practiceType, language, maxResults);\n    return this.findPractices(this.getNewPracticeSearchCriteria({ practiceType, sourceId: null, consumer, language, maxResults }));\n  }\n\n  /**\n   * This method allows for an authenticated and unauthenticated search for a list of {@link model.AWSDKPracticeSearchResult|AWSDKPracticeSearchResult} based on a set of search criteria. The caller can set the practice type, sourceId, language and maxResults of the AWSDKPracticeSearchCriteria.\n   * as a way of filtering the response list further.\n   * @param {model.AWSDKPracticeSearchCriteria} practiceSearchCriteria the {@link model.AWSDKPracticeSearchCriteria|AWSDKPracticeSearchCriteria} context for searches\n   * @returns {Promise<model.AWSDKPracticeSearchResult[]|error.AWSDKError>} returns a promise that will be resolved to a {@link model.AWSDKPracticeSearchResult[]|AWSDKPracticeSearchResult[]} or will\n   * be rejected with a {@link error.AWSDKError|AWSDKError}.\n   * <p><br>Potential Error Codes<br>\n   * <table summary=\"ErrorCodes\" border=\"1\">\n   * <tr><th>Error Code</th><th>reason</th></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.consumerNotAuthenticated|AWSDKErrorCode.consumerNotAuthenticated}</td><td>The consumer is not authenticated.</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.illegalArgument|AWSDKErrorCode.illegalArgument}</td><td>One of the arguments is not the correct type</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.internalError|AWSDKErrorCode.internalError}</td><td>The AWSDK could not complete the request.</td></tr>\n   * </table>\n   * @since 1.3.0\n   */\n  findPractices(practiceSearchCriteria) {\n    const currentFunction = 'PracticeService.findPractices';\n    this.__logger.debug(currentFunction, 'Started', practiceSearchCriteria);\n    if (!(practiceSearchCriteria instanceof AWSDKPracticeSearchCriteria)) {\n      const error = AWSDKError.AWSDKIllegalArgument('practiceSearchCriteria is null or not an instance of AWSDKPracticeSearchCriteria');\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    if (practiceSearchCriteria.consumer != null && !(practiceSearchCriteria.consumer instanceof AWSDKConsumer)) {\n      const error = AWSDKError.AWSDKIllegalArgument('Argument \"consumer\" must be of type AWSDKConsumer');\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    if (practiceSearchCriteria.practiceType != null) {\n      if (!Validator.isValidString(practiceSearchCriteria.practiceType)) {\n        const error = AWSDKError.AWSDKIllegalArgument('Argument \"practiceType\" must be a valid String');\n        this.__logger.error(currentFunction, 'Error', error);\n        return Promise.reject(error);\n      } else if (['NORMAL', 'DEFAULT', 'EXCLUSIVE'].indexOf(practiceSearchCriteria.practiceType.toUpperCase()) === -1) {\n        const error = AWSDKError.AWSDKValidationError(practiceSearchCriteria.practiceType.toString());\n        this.__logger.error(currentFunction, 'Error', error);\n        return Promise.reject(error);\n      }\n    }\n    if (practiceSearchCriteria.sourceId != null) {\n      if (!Validator.isValidString(practiceSearchCriteria.sourceId)) {\n        const error = AWSDKError.AWSDKIllegalArgument('Argument \"sourceId\" must be a valid String');\n        this.__logger.error(currentFunction, 'Error', error);\n        return Promise.reject(error);\n      }\n    }\n    if (practiceSearchCriteria.maxResults != null && !Validator.isInt(practiceSearchCriteria.maxResults)) {\n      const error = AWSDKError.AWSDKIllegalArgument('Argument \"maxResults\" must be an integer');\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    if (practiceSearchCriteria.language != null && !(practiceSearchCriteria.language instanceof AWSDKLanguage)) {\n      const error = AWSDKError.AWSDKIllegalArgument('Argument \"language\" must be of type AWSDKLanguage');\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    const link = this.findNamedLink(this.__links, 'practiceSearch');\n    if (!Validator.isValidLink(link)) {\n      const error = AWSDKError.AWSDKInternalError('PracticeService does not have a \"practiceSearch\" link entry');\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    const options = this.generateOptions('GET', link.url);\n    if (practiceSearchCriteria.consumer != null) {\n      options.auth = this.getUserAuth(practiceSearchCriteria.consumer);\n      if (options.auth == null) {\n        const error = AWSDKError.AWSDKConsumerNotAuthenticated();\n        this.__logger.error(currentFunction, 'Error', error);\n        return Promise.reject(error);\n      }\n    } else {\n      options.auth = this.getSdkAuth();\n    }\n    if (practiceSearchCriteria.consumer) {\n      options.form.set('memberId', practiceSearchCriteria.consumer.id.encryptedId);\n    }\n    if (practiceSearchCriteria.practiceType) {\n      options.form.set('type', practiceSearchCriteria.practiceType.toUpperCase());\n    }\n    if (practiceSearchCriteria.sourceId) {\n      options.form.set('practiceSourceId', practiceSearchCriteria.sourceId);\n    }\n    if (practiceSearchCriteria.language) {\n      options.form.set('languageSpoken', practiceSearchCriteria.language.resourceKey);\n    }\n    options.form.set('maxResults', practiceSearchCriteria.maxResults);\n    return this.executeRequest(options, AWSDKPracticeSearchResponse)\n      .then((practiceSearchResponse) => {\n        this.__logger.debug(currentFunction, 'Got response', practiceSearchResponse);\n        if (practiceSearchCriteria.consumer != null) {\n          this.updateUserAuthEntry(practiceSearchCriteria.consumer, practiceSearchResponse.authToken);\n        }\n        return practiceSearchResponse.practiceSearchResults;\n      }).catch((error) => {\n        this.__logger.error(currentFunction, 'Error', error);\n        throw error;\n      });\n  }\n\n  /**\n   * This method returns a filtered list of {@link model.AWSDKPractice|AWSDKPractice} objects based on the provided {@link model.AWSDKPracticeCategory|AWSDKPracticeCategory}\n   * @param {model.AWSDKPractice[]} practices the list of {@link model.AWSDKPractice|AWSDKPractice} objects to filter\n   * @param {model.AWSDKPracticeCategory} practiceCategory the {@link model.AWSDKPracticeCategory|AWSDKPracticeCategory} used to filter the list of practices\n   * @returns {model.AWSDKPractice[]} the list of practices filtered by the practiceCategory\n   * @throws {error.AWSDKError} with an {@link error.AWSDKErrorCode.illegalArgument|AWSDKErrorCode.illegalArgument} if practices is not a {model.AWSDKPractice[]} or practiceCategory is not a {model.AWSDKPracticeCategory}\n   * @since 1.2.0\n   */\n  getPracticesByCategory(practices, practiceCategory) {\n    const currentFunction = 'PracticeService.getPracticesByCategory';\n    this.__logger.debug(currentFunction, 'Started', practices, practiceCategory);\n    if (!practices || !Array.isArray(practices)) {\n      const error = AWSDKError.AWSDKIllegalArgument('Argument \"practices\" must be of type AWSDKPractice[]');\n      this.__logger.error(currentFunction, 'Error', error);\n      throw error;\n    }\n    if (!(practiceCategory instanceof AWSDKPracticeCategory)) {\n      const error = AWSDKError.AWSDKIllegalArgument('Argument \"practiceCategory\" must be of type AWSDKPracticeCategory');\n      this.__logger.error(currentFunction, 'Error', error);\n      throw error;\n    }\n\n    const subCategoryIds = practiceCategory.subCategories.map(s => s.id.encryptedId);\n\n    return practices.filter((p) => {\n      if (!(p instanceof AWSDKPractice)) {\n        const error = AWSDKError.AWSDKIllegalArgument('Argument \"practices\" must be of type AWSDKPractice[]');\n        this.__logger.error(currentFunction, 'Error', error);\n        throw error;\n      }\n      return p.subCategoryIds.map(s => s.encryptedId).some(s => subCategoryIds.includes(s));\n    });\n  }\n}\nexport default PracticeService;\n","/*!\n * American Well Consumer Web SDK\n *\n * Copyright © 2017 American Well.\n * All rights reserved.\n *\n * It is illegal to use, reproduce or distribute\n * any part of this Intellectual Property without\n * prior written authorization from American Well.\n */\n\nimport AWSDKResponse from './awsdk_response';\nimport GenericParser from '../../parser/generic_parser';\nimport AWSDKProviderDetails from '../../../model/provider/awsdk_provider_details';\n/**\n * Represents a response object wrapper to a single {@link AWSDKProviderDetails} object type\n * @property {@link AWSDKProviderDetails} provider the provider details for a given provider\n * @extends model.AWSDKResponse\n */\nclass AWSDKProviderDetailsResponse extends AWSDKResponse {\n  get providerDetails() {\n    return GenericParser.parseObject(this.__data.provider, AWSDKProviderDetails);\n  }\n}\n\nexport default AWSDKProviderDetailsResponse;\n","/*!\r\n * American Well Consumer Web SDK\r\n *\r\n * Copyright © 2018 American Well.\r\n * All rights reserved.\r\n *\r\n * It is illegal to use, reproduce or distribute\r\n * any part of this Intellectual Property without\r\n * prior written authorization from American Well.\r\n */\r\n\r\nimport AWSDKDataObject from '../awsdk_dataobject';\r\nimport AWSDKProvider from './awsdk_provider';\r\nimport GenericParser from '../../internal/parser/generic_parser';\r\n\r\n/**\r\n * AWSDKProviderAvailability class which represents a Provider with available time slot for appointments\r\n * @property {model.AWSDKProvider} provider The provider.\r\n * @property {Date[]} availableAppointmentTimeSlots The available appointment time slots.\r\n * @since 1.1.0\r\n * @extends model.AWSDKDataObject\r\n */\r\nclass AWSDKProviderAvailability extends AWSDKDataObject {\r\n  get provider() {\r\n    return GenericParser.parseObject(this.__data.providerSearchResult, AWSDKProvider);\r\n  }\r\n  get availableAppointmentTimeSlots() {\r\n    return this.__data.availableAppointmentTimeSlots.map(item => GenericParser.parseDate(item));\r\n  }\r\n}\r\n\r\nexport default AWSDKProviderAvailability;\r\n","/*!\n * American Well Consumer Web SDK\n *\n * Copyright (c) 2018 American Well.\n * All rights reserved.\n *\n * It is illegal to use, reproduce or distribute\n * any part of this Intellectual Property without\n * prior written authorization from American Well.\n */\n\nimport AWSDKDataObject from '../awsdk_dataobject';\nimport AWSDKProviderAvailability from './awsdk_provider_availability';\nimport GenericParser from '../../internal/parser/generic_parser';\n\n/**\n * A class representing a collection of {@link model.AWSDKProviderAvailability} objects\n * @property {model.AWSDKProviderAvailability[]} futureAvailableProviders representing an array of {@link model.AWSDKProviderAvailability} objects\n * @property {Date} date the date for which these providers are available\n * @since 1.1.0\n * @extends model.AWSDKDataObject\n */\nclass AWSDKProvidersAvailability extends AWSDKDataObject {\n  get futureAvailableProviders() {\n    return this.__data.futureAvailableProviders.map(item => GenericParser.parseObject(item, AWSDKProviderAvailability));\n  }\n\n  get date() {\n    return GenericParser.parseDate(this.__data.date);\n  }\n}\n\nexport default AWSDKProvidersAvailability;\n","/*!\n * American Well Consumer Web SDK\n *\n * Copyright (c) 2017 American Well.\n * All rights reserved.\n *\n * It is illegal to use, reproduce or distribute\n * any part of this Intellectual Property without\n * prior written authorization from American Well.\n */\n\nimport AWSDKProvidersAvailability from '../../../model/provider/awsdk_providers_availability';\nimport AWSDKResponse from './awsdk_response';\nimport GenericParser from '../../parser/generic_parser';\n\n/**\n *  Represents a response object wrapper to a single {@link model.AWSDKProvidersAvailability} object type\n * @property {model.AWSDKProvidersAvailability} providers the providers future availability\n * @extends model.AWSDKResponse\n */\nclass AWSDKProvidersAvailabilityResponse extends AWSDKResponse {\n  get providers() {\n    return GenericParser.parseObject(this.__data.providers, AWSDKProvidersAvailability);\n  }\n}\nexport default AWSDKProvidersAvailabilityResponse;\n","/*!\n * American Well Consumer Web SDK\n *\n * Copyright (c) 2017 American Well.\n * All rights reserved.\n *\n * It is illegal to use, reproduce or distribute\n * any part of this Intellectual Property without\n * prior written authorization from American Well.\n */\n\nimport AWSDKProvider from '../../../model/provider/awsdk_provider';\nimport AWSDKResponse from './awsdk_response';\nimport GenericParser from '../../parser/generic_parser';\n\n/**\n * A wrapper class representing a collection of {@link model.AWSDKProvider} objects\n * @property {model.AWSDKProvider[]} providers representing an array of {@link model.AWSDKProvider} objects\n * @extends model.AWSDKResponse\n */\nclass AWSDKProvidersResponse extends AWSDKResponse {\n  get providers() {\n    return this.__data.providers.map(item => GenericParser.parseObject(item, AWSDKProvider));\n  }\n}\nexport default AWSDKProvidersResponse;\n","/*!\r\n * American Well Consumer Web SDK\r\n *\r\n * Copyright (c) 2018 American Well.\r\n * All rights reserved.\r\n *\r\n * It is illegal to use, reproduce or distribute\r\n * any part of this Intellectual Property without\r\n * prior written authorization from American Well.\r\n */\r\nimport GenericParser from '../../internal/parser/generic_parser';\r\nimport AWSDKEntity from '../../model/awsdk_entity';\r\n/**\r\n * This class represents the estimated cost of a visit with a Provider.\r\n * @property {Number} cost the estimated cost of the visit\r\n * @property {String} formattedCost the localized string of the estimated visit cost\r\n * @property {Number} extensionCost the estimated cost of a visit extension\r\n * @property {String} formattedExtensionCost the localized string of the estimated visit extension cost\r\n * @property {String} currencyCode the code of the currency in which the estimated cost is represented\r\n * @property {Boolean} isDeferredBillingSupported boolean true if deferred billing is supported for cost estimation, false otherwise.\r\n * @since 1.1.0\r\n * @extends model.AWSDKEntity\r\n */\r\nclass AWSDKEstimatedVisitCost extends AWSDKEntity {\r\n  get cost() {\r\n    return this.__data.cost;\r\n  }\r\n\r\n  get formattedCost() {\r\n    return this.__data.formattedCost;\r\n  }\r\n\r\n  get extensionCost() {\r\n    return this.__data.extensionCost;\r\n  }\r\n\r\n  get formattedExtensionCost() {\r\n    return this.__data.formattedExtensionCost;\r\n  }\r\n\r\n  get currencyCode() {\r\n    return this.__data.currencyCode;\r\n  }\r\n\r\n  get isDeferredBillingSupported() {\r\n    return GenericParser.parseBoolean(this.__data.deferredBillingSupported);\r\n  }\r\n}\r\nexport default AWSDKEstimatedVisitCost;\r\n","/*!\r\n * American Well Consumer Web SDK\r\n *\r\n * Copyright (c) 2018 American Well.\r\n * All rights reserved.\r\n *\r\n * It is illegal to use, reproduce or distribute\r\n * any part of this Intellectual Property without\r\n * prior written authorization from American Well.\r\n */\r\n\r\nimport AWSDKResponse from './awsdk_response';\r\nimport GenericParser from '../../parser/generic_parser';\r\nimport AWSDKEstimatedVisitCost from '../../../model/visit/awsdk_estimated_visit_cost';\r\n\r\n/**\r\n * This class represents a response from a call to {@link service.ProviderService#getEstimatedVisitCost|ProviderService.getEstimatedVisitCost()}\r\n * @property {model.AWSDKEstimatedVisitCost} estimatedCost an object representing the estimated visit cost with a Provider\r\n * @extends model.AWSDKResponse\r\n */\r\nclass AWSDKEstimatedVisitCostResponse extends AWSDKResponse {\r\n  get estimatedCost() {\r\n    return GenericParser.parseObject(this.__data.estimatedCost, AWSDKEstimatedVisitCost);\r\n  }\r\n}\r\nexport default AWSDKEstimatedVisitCostResponse;\r\n","/*!\r\n * American Well Consumer Web SDK\r\n *\r\n * Copyright (c) 2018 American Well.\r\n * All rights reserved.\r\n *\r\n * It is illegal to use, reproduce or distribute\r\n * any part of this Intellectual Property without\r\n * prior written authorization from American Well.\r\n */\r\n\r\nimport AWSDKError from '../../error/awsdk_error';\r\nimport AWSDKLanguage from '../awsdk_language';\r\nimport Validator from '../../internal/validator/validator';\r\nimport AWSDKPractice from '../practice/awsdk_practice';\r\nimport AWSDKPracticeSubCategory from '../practice/awsdk_practice_sub_category';\r\n\r\n/**\r\n * This class represents the search criteria for finding a provider's future availability.\r\n * Get an instance of this via {@link service.ProviderService#getNewProviderFutureAvailabilitySearchCriteria()|ProviderService.getNewProviderFutureAvailabilitySearchCriteria}\r\n * @property {String} timeZone the canonical time zone name, i.e. America/New_York\r\n * @property {(model.AWSDKPractice|model.AWSDKPracticeSubCategory)} [practiceOrSubCategory] the {@link model.AWSDKPractice|AWSDKPractice} or {@link model.AWSDKPracticeSubCategory|AWSDKPracticeSubCategory} whose details we want to retrieve.\r\n * @property {String} [searchTerm] the text used to filter the available dates by provider names.\r\n * @property {model.AWSDKLanguage} [languageSpoken] the {@link model.AWSDKLanguage|AWSDKLanguage} spoken to filter the available dates on.\r\n * @property {Date} [appointmentDate] the appointment date to filter the available dates on.\r\n * @property {Number} [limitInDays] the number of days past the specified appointment date to filter providers on.\r\n * @property {Number} [maxResults] limit the number of results returned. Should be an integer.\r\n * @since 1.3.1\r\n */\r\nclass AWSDKProviderFutureAvailabilitySearchCriteria {\r\n  constructor(criteria = {}) {\r\n    if (criteria) {\r\n      this.__timeZone = criteria.timeZone;\r\n      this.__practiceOrSubCategory = criteria.practiceOrSubCategory;\r\n      this.__searchTerm = criteria.searchTerm;\r\n      this.__languageSpoken = criteria.languageSpoken;\r\n      this.__appointmentDate = criteria.appointmentDate;\r\n      this.__limitInDays = criteria.limitInDays;\r\n      this.__maxResults = criteria.maxResults;\r\n    }\r\n  }\r\n\r\n  get timeZone() {\r\n    return this.__timeZone;\r\n  }\r\n\r\n  set timeZone(timeZone) {\r\n    this.__timeZone = timeZone;\r\n  }\r\n\r\n  get practiceOrSubCategory() {\r\n    return this.__practiceOrSubCategory;\r\n  }\r\n\r\n  set practiceOrSubCategory(practiceOrSubCategory) {\r\n    if (!(practiceOrSubCategory instanceof AWSDKPractice) && !(practiceOrSubCategory instanceof AWSDKPracticeSubCategory)) {\r\n      throw AWSDKError.AWSDKIllegalArgument('practiceOrSubCategory must be an instance of AWSDKPractice or AWSDKPracticeSubCategory');\r\n    }\r\n    this.__practiceOrSubCategory = practiceOrSubCategory;\r\n  }\r\n\r\n  get searchTerm() {\r\n    return this.__searchTerm;\r\n  }\r\n\r\n  set searchTerm(searchTerm) {\r\n    this.__searchTerm = searchTerm;\r\n  }\r\n\r\n  get languageSpoken() {\r\n    return this.__languageSpoken;\r\n  }\r\n\r\n  set languageSpoken(languageSpoken) {\r\n    if (!(languageSpoken instanceof AWSDKLanguage)) {\r\n      throw AWSDKError.AWSDKIllegalArgument('languageSpoken must be of type AWSDKLanguage');\r\n    }\r\n    this.__languageSpoken = languageSpoken;\r\n  }\r\n\r\n  get appointmentDate() {\r\n    return this.__appointmentDate;\r\n  }\r\n\r\n  set appointmentDate(appointmentDate) {\r\n    if (!(appointmentDate instanceof Date)) {\r\n      throw AWSDKError.AWSDKIllegalArgument('appointmentDate must be of type Date');\r\n    }\r\n    this.__appointmentDate = appointmentDate;\r\n  }\r\n\r\n  get limitInDays() {\r\n    return this.__limitInDays;\r\n  }\r\n\r\n  set limitInDays(limitInDays) {\r\n    if (!(Validator.isInt(limitInDays))) {\r\n      throw AWSDKError.AWSDKIllegalArgument('limitInDays must be of type int');\r\n    }\r\n    this.__limitInDays = limitInDays;\r\n  }\r\n\r\n  get maxResults() {\r\n    return this.__maxResults;\r\n  }\r\n\r\n  set maxResults(maxResults) {\r\n    if (!(Validator.isInt(maxResults))) {\r\n      throw AWSDKError.AWSDKIllegalArgument('maxResults must be of type int');\r\n    }\r\n    this.__maxResults = maxResults;\r\n  }\r\n}\r\nexport default AWSDKProviderFutureAvailabilitySearchCriteria;\r\n","/*!\r\n * American Well Consumer Web SDK\r\n *\r\n * Copyright (c) 2018 American Well.\r\n * All rights reserved.\r\n *\r\n * It is illegal to use, reproduce or distribute\r\n * any part of this Intellectual Property without\r\n * prior written authorization from American Well.\r\n */\r\n\r\nimport AWSDKError from '../../error/awsdk_error';\r\nimport Validator from '../../internal/validator/validator';\r\nimport AWSDKProviderDetails from './awsdk_provider_details';\r\n\r\n/**\r\n * This class represents the search criteria for finding a provider's availability.\r\n * Get an instance of this via {@link service.ProviderService#getNewProviderAvailabilityCriteria()|ProviderService.getNewProviderAvailabilityCriteria}\r\n * @property {model.AWSDKProviderDetails} providerDetails the {@link model.AWSDKProviderDetails|AWSDKProviderDetails} to use\r\n * @property {String} timeZone the canonical time zone to use, i.e. America/New_York\r\n * @property {Date} [appointmentDate] the appointment date to filter the available dates on.\r\n * @property {Number} [limitInDays] the number of days past the specified appointment date to filter providers on.\r\n * @since 1.3.1\r\n */\r\nclass AWSDKProviderAvailabilityCriteria {\r\n  constructor(criteria = {}) {\r\n    if (criteria) {\r\n      this.__providerDetails = criteria.providerDetails;\r\n      this.__timeZone = criteria.timeZone;\r\n      this.__appointmentDate = criteria.appointmentDate;\r\n      this.__limitInDays = criteria.limitInDays;\r\n    }\r\n  }\r\n\r\n  get timeZone() {\r\n    return this.__timeZone;\r\n  }\r\n\r\n  set timeZone(timeZone) {\r\n    this.__timeZone = timeZone;\r\n  }\r\n\r\n  get providerDetails() {\r\n    return this.__providerDetails;\r\n  }\r\n\r\n  set providerDetails(providerDetails) {\r\n    if (!(providerDetails instanceof AWSDKProviderDetails)) {\r\n      throw AWSDKError.AWSDKIllegalArgument('providerDetails must be an instance of AWSDKPractice or AWSDKProviderDetails');\r\n    }\r\n    this.__providerDetails = providerDetails;\r\n  }\r\n\r\n  get appointmentDate() {\r\n    return this.__appointmentDate;\r\n  }\r\n\r\n  set appointmentDate(appointmentDate) {\r\n    if (!(appointmentDate instanceof Date)) {\r\n      throw AWSDKError.AWSDKIllegalArgument('appointmentDate must be of type Date');\r\n    }\r\n    this.__appointmentDate = appointmentDate;\r\n  }\r\n\r\n  get limitInDays() {\r\n    return this.__limitInDays;\r\n  }\r\n\r\n  set limitInDays(limitInDays) {\r\n    if (!(Validator.isInt(limitInDays))) {\r\n      throw AWSDKError.AWSDKIllegalArgument('limitInDays must be of type int');\r\n    }\r\n    this.__limitInDays = limitInDays;\r\n  }\r\n}\r\nexport default AWSDKProviderAvailabilityCriteria;\r\n","/*!\r\n * American Well Consumer Web SDK\r\n *\r\n * Copyright (c) 2020 American Well.\r\n * All rights reserved.\r\n *\r\n * It is illegal to use, reproduce or distribute\r\n * any part of this Intellectual Property without\r\n * prior written authorization from American Well.\r\n */\r\nimport AWSDKDataObject from '../awsdk_dataobject';\r\n\r\n/**\r\n * The AWSDKPracticeSearchType class represents a practice search type that can be used to filter a list of providers based on their practice type.\r\n * @property {String} label the localized label for this search type\r\n * @property {String} type the non-localized actual value of this type\r\n * @extends model.AWSDKDataObject\r\n * @since 3.0.0\r\n */\r\nclass AWSDKPracticeSearchType extends AWSDKDataObject {\r\n  get label() {\r\n    return this.__data.label;\r\n  }\r\n\r\n  get type() {\r\n    return this.__data.searchType;\r\n  }\r\n}\r\n\r\nexport default AWSDKPracticeSearchType;\r\n","/*!\n * American Well Consumer Web SDK\n *\n * Copyright © 2017 American Well.\n * All rights reserved.\n *\n * It is illegal to use, reproduce or distribute\n * any part of this Intellectual Property without\n * prior written authorization from American Well.\n */\nimport deprecated from 'awcoresdk/lib/util/deprecated';\nimport AWSDKAvailabilityList from '../model/practice/awsdk_availability_list';\nimport AWSDKError from './../error/awsdk_error';\nimport AWSDKConsumer from '../model/consumer/awsdk_consumer';\nimport AWSDKLanguage from '../model/awsdk_language';\nimport AWSDKPractice from '../model/practice/awsdk_practice';\nimport AWSDKPracticeSubCategory from '../model/practice/awsdk_practice_sub_category';\nimport AWSDKProvider from '../model/provider/awsdk_provider';\nimport AWSDKProviderDetails from '../model/provider/awsdk_provider_details';\nimport AWSDKProviderDetailsResponse from '../internal/model/response/awsdk_provider_details_response';\nimport AWSDKProvidersAvailabilityResponse from '../internal/model/response/awsdk_providers_availability_response';\nimport AWSDKProvidersResponse from '../internal/model/response/awsdk_providers_response';\nimport AWSDKPracticeSearchResult from '../model/practice/awsdk_practice_search_result';\nimport AWSDKOnDemandSpecialty from '../model/practice/awsdk_on_demand_specialty';\nimport AWSDKState from '../model/awsdk_state';\nimport Service from './service';\nimport Validator from '../internal/validator/validator';\nimport Util from '../internal/util/util';\nimport AWSDKEstimatedVisitCostResponse from '../internal/model/response/awsdk_estimated_visit_cost_response';\nimport AWSDKProviderType from '../model/provider/awsdk_provider_type';\nimport AWSDKProviderFutureAvailabilitySearchCriteria from '../model/provider/awsdk_provider_future_availability_search_criteria';\nimport AWSDKProviderAvailabilityCriteria from '../model/provider/awsdk_provider_availability_criteria';\nimport AWSDKPracticeSearchType from '../model/practice/awsdk_practice_search_type';\n\n/**\n * This is the ProviderService class, which contains all necessary methods for getting provider related information.\n * @extends service.Service\n */\nclass ProviderService extends Service {\n  /**\n   * Retrieve an array of {@link model.AWSDKProvider|AWSDKProvider} for the given practice, via {@link model.AWSDKPractice|AWSDKPractice}\n   * retrieved via {@link service.PracticeService#getPractice|PracticeService.getPractice} <br>\n   * Providing a {@link model.AWSDKConsumer|AWSDKConsumer} (OPTIONAL) will ALWAYS filter results to a list of providers visible to that consumer. Omit consumer if that's not what you want.\n   * The {@link model.AWSDKConsumer|AWSDKConsumer} is retrieved via {@link service.ConsumerService#getConsumer|ConsumerService.getConsumer} <br>\n   *\n   * @param {model.AWSDKPractice} practice REQUIRED limits the result to providers in this practice\n   * @param {model.AWSDKConsumer} [consumer] limits the results to providers visible to this consumer\n   * @returns {Promise<model.AWSDKProvider[]|error.AWSDKError>} Returns a promise that will be resolved to an array of {@link model.AWSDKProvider|AWSDKProvider} or will\n   * be rejected with an {@link error.AWSDKError|AWSDKError}.\n   * <p><br>Potential Error Codes<br>\n   * <table summary=\"ErrorCodes\" border=\"1\">\n   * <tr><th>Error Code</th><th>reason</th>\n   * <tr><td>{@link error.AWSDKErrorCode.consumerNotAuthenticated|AWSDKErrorCode.consumerNotAuthenticated}</td><td>The consumer is not authenticated.</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.illegalArgument|AWSDKErrorCode.illegalArgument}</td><td>Missing argument or argument is not the correct type.</td>\n   * <tr><td>{@link error.AWSDKErrorCode.internalError|AWSDKErrorCode.internalError}</td><td>The AWSDK could not complete the request.</td></tr>\n   * </table>\n   * @since 1.0.0\n   */\n  findProvidersInPractice(practice, consumer = null) {\n    const currentFunction = 'ProviderService.findProvidersInPractice';\n    this.__logger.debug(currentFunction, 'Started', practice, consumer);\n    if (!(practice instanceof AWSDKPractice)) {\n      const error = AWSDKError.AWSDKIllegalArgument('practice is null or not an instance of AWSDKPractice');\n      this.__logger.error(currentFunction, 'error', error);\n      return Promise.reject(error);\n    }\n    if (consumer !== null && !(consumer instanceof AWSDKConsumer)) {\n      const error = AWSDKError.AWSDKIllegalArgument('consumer is not an instance of AWSDKConsumer');\n      this.__logger.error(currentFunction, 'error', error);\n      return Promise.reject(error);\n    }\n    const link = this.findNamedLink(practice.links, 'providersInPracticeSearch');\n    if (!Validator.isValidLink(link)) {\n      const error = AWSDKError.AWSDKInternalError('practice does not have a \"providersInPracticeSearch\" link entry');\n      this.__logger.error(currentFunction, 'error', error);\n      return Promise.reject(error);\n    }\n    const options = this.generateOptions('GET', link.url);\n    if (consumer != null) {\n      options.auth = this.getUserAuth(consumer);\n      if (options.auth == null) {\n        const error = AWSDKError.AWSDKConsumerNotAuthenticated();\n        this.__logger.error(currentFunction, 'error', error);\n        return Promise.reject(error);\n      }\n      // for a get request any form parameters will be added as query strings\n      options.form.set('memberId', consumer.id.encryptedId);\n    } else {\n      options.auth = this.getSdkAuth();\n    }\n    return this.executeRequest(options, AWSDKProvidersResponse)\n      .then((providersResponse) => {\n        this.__logger.debug(currentFunction, 'Got response', providersResponse);\n        if (consumer != null) {\n          this.updateUserAuthEntry(consumer, providersResponse.authToken);\n        }\n        return providersResponse.providers;\n      })\n      .catch((error) => {\n        this.__logger.error(currentFunction, 'Error', error);\n        throw error;\n      });\n  }\n  /**\n   * Retrieve the {@link model.AWSDKProviderDetails|AWSDKProviderDetails} details for the given provider, via {@link model.AWSDKProvider|AWSDKProvider}\n   * retrieved via {@link service.ProviderService#findProvidersInPractice|ProviderService.findProvidersInPractice}  <br>\n   *\n   * @param {model.AWSDKProvider} provider REQUIRED\n   * @param {model.AWSDKConsumer} [consumer] the authenticated consumer, if any.\n   * @returns {Promise<model.AWSDKProviderDetails|error.AWSDKError>}\n   * Returns a promise that will be resolved to an {@link model.AWSDKProviderDetails|ProviderDetails}\n   * or will be rejected with an {@link error.AWSDKError|AWSDKError}.\n   * <p><br>Potential Error Codes<br>\n   * <table summary=\"ErrorCodes\" border=\"1\">\n   * <tr><th>Error Code</th><th>reason</th></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.consumerNotAuthenticated|AWSDKErrorCode.consumerNotAuthenticated}</td><td>The consumer is not authenticated.</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.illegalArgument|AWSDKErrorCode.illegalArgument}</td><td>Missing argument or argument is not the correct type.</td>\n   * <tr><td>{@link error.AWSDKErrorCode.internalError|AWSDKErrorCode.internalError}</td><td>The AWSDK could not complete the request.</td></tr>\n   * </table>\n   * @since 1.0.0\n   */\n  getProviderDetails(provider, consumer = null) {\n    const currentFunction = 'ProviderService.getProviderDetails';\n    this.__logger.debug(currentFunction, 'Started', provider, consumer);\n    if (!(provider instanceof AWSDKProvider)) {\n      const error = AWSDKError.AWSDKIllegalArgument('provider is null or not an instance of AWSDKProvider');\n      this.__logger.error(currentFunction, 'error', error);\n      return Promise.reject(error);\n    }\n    if (consumer !== null && !(consumer instanceof AWSDKConsumer)) {\n      const error = AWSDKError.AWSDKIllegalArgument('consumer is not an instance of AWSDKConsumer');\n      this.__logger.error(currentFunction, 'error', error);\n      return Promise.reject(error);\n    }\n    const url = provider.href;\n    if (!Validator.isValidString(url)) {\n      const error = AWSDKError.AWSDKInternalError('provider has an invalid href');\n      this.__logger.error(currentFunction, 'error', error);\n      return Promise.reject(error);\n    }\n    const options = this.generateOptions('GET', url);\n    if (consumer != null) {\n      options.auth = this.getUserAuth(consumer);\n      if (options.auth == null) {\n        const error = AWSDKError.AWSDKConsumerNotAuthenticated();\n        this.__logger.error(currentFunction, 'error', error);\n        return Promise.reject(error);\n      }\n    } else {\n      options.auth = this.getSdkAuth();\n    }\n    return this.executeRequest(options, AWSDKProviderDetailsResponse)\n      .then((providerDetailsResponse) => {\n        this.__logger.debug(currentFunction, 'Got response', providerDetailsResponse);\n        if (consumer != null) {\n          this.updateUserAuthEntry(consumer, providerDetailsResponse.authToken);\n        }\n        return providerDetailsResponse.providerDetails;\n      })\n      .catch((error) => {\n        this.__logger.error(currentFunction, 'Error', error);\n        throw error;\n      });\n  }\n\n  /**\n   * Get an instance of {@link model.AWSDKProviderFutureAvailabilitySearchCriteria|AWSDKProviderFutureAvailabilitySearchCriteria} to use when searching a provider's future availability. <br>\n   * @param {Object} [searchCriteria] the search criteria in JSON Format\n   * @returns {model.AWSDKProviderFutureAvailabilitySearchCriteria} returns an instance of a {@link model.AWSDKProviderFutureAvailabilitySearchCriteria|AWSDKProviderFutureAvailabilitySearchCriteria} object\n   * @since 1.3.1\n   */\n  getNewProviderFutureAvailabilitySearchCriteria(searchCriteria) {\n    return new AWSDKProviderFutureAvailabilitySearchCriteria(searchCriteria);\n  }\n\n  /**\n   * Retrieve an array of {@link model.AWSDKProvider|AWSDKProvider}  for the given {@link model.AWSDKPractice|AWSDKPractice} for scheduling appointments in the future<br>\n   * There is an optional {@link java.util.Date} parameter for appointmentDate. Providing it will limit the search\n   * to the given date.  If this date is not provided, the next date with available appointments will be used<br>\n   * @param {model.AWSDKConsumer} consumer the {@link model.AWSDKConsumer|AWSDKConsumer} whose list of practices we seek to retrieve\n   * @param {model.AWSDKProviderFutureAvailabilitySearchCriteria} AWSDKProviderFutureAvailabilitySearchCriteria the {@link model.AWSDKProviderFutureAvailabilitySearchCriteria|AWSDKProviderFutureAvailabilitySearchCriteria} to use when searching for a provider's future availability.\n   * @returns {Promise<model.AWSDKProvidersAvailability|error.AWSDKError>} returns a promise that will be resolved to a {@link model.AWSDKProvidersAvailability|AWSDKProvidersAvailability} or will\n   * be rejected with a {@link error.AWSDKError|AWSDKError}.\n   * <p><br>Potential Error Codes<br>\n   * <table summary=\"ErrorCodes\" border=\"1\">\n   * <tr><th>Error Code</th><th>reason</th></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.consumerNotAuthenticated|AWSDKErrorCode.consumerNotAuthenticated}</td><td>The consumer is not authenticated.</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.illegalArgument|AWSDKErrorCode.illegalArgument}</td><td>A parameter is not the correct type.</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.internalError|AWSDKErrorCode.internalError}</td><td>The AWSDK could not complete the request.</td></tr>\n   * </table>\n   * @since 1.1.0\n   */\n  providerFutureAvailabilitySearch(consumer, providerFutureAvailabilitySearchCriteria) {\n    const currentFunction = 'ProviderService.providerFutureAvailabilitySearch';\n    this.__logger.debug(currentFunction, 'Started', consumer, providerFutureAvailabilitySearchCriteria);\n    if (!(consumer instanceof AWSDKConsumer)) {\n      const error = AWSDKError.AWSDKIllegalArgument('Param \"consumer\" must be an instance of AWSDKConsumer');\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    if (!(providerFutureAvailabilitySearchCriteria instanceof AWSDKProviderFutureAvailabilitySearchCriteria)) {\n      const error = AWSDKError.AWSDKIllegalArgument('Param \"providerFutureAvailabilitySearchCriteria\" must be an instance of AWSDKProviderFutureAvailabilitySearchCriteria');\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n\n    const criteria = providerFutureAvailabilitySearchCriteria;\n    if (!Validator.isValidString(criteria.timeZone)) {\n      const error = AWSDKError.AWSDKIllegalArgument('Param \"providerFutureAvailabilitySearchCriteria.timeZone\" must be a valid String');\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    if (criteria.practiceOrSubCategory != null && !(criteria.practiceOrSubCategory instanceof AWSDKPractice) && !(criteria.practiceOrSubCategory instanceof AWSDKPracticeSubCategory)) {\n      const error = AWSDKError.AWSDKIllegalArgument('Param \"providerFutureAvailabilitySearchCriteria.practiceOrSubCategory\" must be an instance of AWSDKPractice or AWSDKPracticeSubCategory');\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    if (criteria.languageSpoken != null && !(criteria.languageSpoken instanceof AWSDKLanguage)) {\n      const error = AWSDKError.AWSDKIllegalArgument('Param \"providerFutureAvailabilitySearchCriteria.languageSpoken\" must be an instance of AWSDKLanguage');\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    if (criteria.appointmentDate != null && !(criteria.appointmentDate instanceof Date)) {\n      const error = AWSDKError.AWSDKIllegalArgument('Param \"providerFutureAvailabilitySearchCriteria.appointmentDate\" must be an instance of Date');\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    if (criteria.limitInDays != null && !(Validator.isInt(criteria.limitInDays))) {\n      const error = AWSDKError.AWSDKIllegalArgument('Param \"providerFutureAvailabilitySearchCriteria.limitInDays\" must be an integer');\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    if (criteria.maxResults != null && !(Validator.isInt(criteria.maxResults))) {\n      const error = AWSDKError.AWSDKIllegalArgument('Param \"providerFutureAvailabilitySearchCriteria.maxResults\" must be an integer');\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    const link = this.findNamedLink(this.__links, 'providerFutureAvailabilitySearch');\n    if (!Validator.isValidLink(link)) {\n      const error = AWSDKError.AWSDKInternalError('service does not have a \"providerFutureAvailabilitySearch\" link entry');\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    const options = this.generateOptions('GET', link.url, true);\n    options.auth = this.getUserAuth(consumer);\n    if (options.auth == null) {\n      const error = AWSDKError.AWSDKConsumerNotAuthenticated();\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    options.form.set('memberId', consumer.id.encryptedId);\n    if (criteria.practiceOrSubCategory != null) {\n      if (criteria.practiceOrSubCategory instanceof AWSDKPractice) {\n        options.form.set('practiceId', criteria.practiceOrSubCategory.id.encryptedId);\n      } else {\n        options.form.set('practiceSubCategoryId', criteria.practiceOrSubCategory.id.encryptedId);\n      }\n    }\n    if (criteria.searchTerm != null) {\n      options.form.set('searchTerm', criteria.searchTerm);\n    }\n    if (criteria.languageSpoken != null) {\n      options.form.set('languageSpoken', criteria.languageSpoken.value);\n    }\n    if (criteria.appointmentDate != null) {\n      options.form.set('appointmentDate', Util.formatISODateTime(criteria.appointmentDate));\n    }\n    options.form.set('currentTime', Util.formatISODateTime(new Date()));\n    options.form.set('timeZone', criteria.timeZone);\n    if (criteria.limitInDays != null) {\n      options.form.set('limitInDays', criteria.limitInDays);\n    }\n    if (criteria.maxResults != null) {\n      options.form.set('maxResults', criteria.maxResults);\n    }\n    return this.executeRequest(options, AWSDKProvidersAvailabilityResponse)\n      .then((providersAvailablilityResponse) => {\n        this.__logger.debug(currentFunction, 'Got response', providersAvailablilityResponse);\n        this.updateUserAuthEntry(consumer, providersAvailablilityResponse.authToken);\n        return providersAvailablilityResponse.providers;\n      })\n      .catch((error) => {\n        this.__logger.error(currentFunction, 'Error', error);\n        throw error;\n      });\n  }\n\n  /**\n   * Get an instance of {@link model.AWSDKProviderAvailabilityCriteria|AWSDKProviderAvailabilityCriteria} to use when searching a provider's availability. <br>\n   * @param {Object} [criteria] the search criteria in JSON Format\n   * @returns {model.AWSDKProviderAvailabilityCriteria} returns an instance of a {@link model.AWSDKProviderAvailabilityCriteria|AWSDKProviderFutureAvailabilitySearchCriteria} object\n   * @since 1.3.1\n   */\n  getNewProviderAvailabilityCriteria(criteria) {\n    return new AWSDKProviderAvailabilityCriteria(criteria);\n  }\n\n  /**\n   * Retrieve a List of Dates for the given {@link mode.AWSDKProviderDetails} for scheduling appointments in\n   * the future<br>\n   * There is an optional {@link java.util.Date} field on the {@link model.AWSDKProviderAvailabilityCriteria|AWSDKProviderAvailabilityCriteria} for appointmentDate. Providing it will limit the search\n   * to the given date.  If this date is not provided, the server will automatically find and return the next date\n   * with available appointments<br>\n   * @param {model.AWSDKConsumer} consumer the {@link model.AWSDKConsumer|AWSDKConsumer} to use\n   * @param {model.AWSDKProviderAvailabilityCriteria} providerAvailabilityCriteria the {@link model.AWSDKProviderAvailabilityCriteria|AWSDKProviderAvailabilityCriteria} to use\n   * @returns {Promise<model.AWSDKAvailabilityList|error.AWSDKError>} returns a promise that will be resolved to a {@link model.AWSDKAvailabilityList|AWSDKAvailabilityList} or will\n   * be rejected with a {@link error.AWSDKError|AWSDKError}.\n   * <p><br>Potential Error Codes<br>\n   * <table summary=\"ErrorCodes\" border=\"1\">\n   * <tr><th>Error Code</th><th>reason</th></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.consumerNotAuthenticated|AWSDKErrorCode.consumerNotAuthenticated}</td><td>The consumer is not authenticated.</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.illegalArgument|AWSDKErrorCode.illegalArgument}</td><td>A parameter is not the correct type.</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.internalError|AWSDKErrorCode.internalError}</td><td>The AWSDK could not complete the request.</td></tr>\n   * </table>\n   * @since 1.1.0\n   */\n  getProviderAvailability(consumer, providerAvailabilityCriteria) {\n    const currentFunction = 'ProviderService.getProviderAvailability';\n    this.__logger.debug(currentFunction, 'Started', consumer, providerAvailabilityCriteria);\n    if (!(consumer instanceof AWSDKConsumer)) {\n      const error = AWSDKError.AWSDKIllegalArgument('Param \"consumer\" must be an instance of AWSDKConsumer');\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    if (!(providerAvailabilityCriteria instanceof AWSDKProviderAvailabilityCriteria)) {\n      const error = AWSDKError.AWSDKIllegalArgument('Param \"providerAvailabilityCriteria\" must be an instance of AWSDKProviderAvailabilityCriteria');\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n\n    const criteria = providerAvailabilityCriteria;\n    if (!(criteria.providerDetails instanceof AWSDKProviderDetails)) {\n      const error = AWSDKError.AWSDKIllegalArgument('Param \"providerAvailabilityCriteria.providerDetails\" must be an instance of AWSDKProviderDetails');\n      this.__logger.error(currentFunction, 'error', error);\n      return Promise.reject(error);\n    }\n    if (!Validator.isValidString(criteria.timeZone)) {\n      const error = AWSDKError.AWSDKIllegalArgument('Param \"providerAvailabilityCriteria.timeZone\" must be a valid String');\n      this.__logger.error(currentFunction, 'error', error);\n      return Promise.reject(error);\n    }\n    if (criteria.appointmentDate != null && !(criteria.appointmentDate instanceof Date)) {\n      const error = AWSDKError.AWSDKIllegalArgument('Param \"providerAvailabilityCriteria.appointmentDate\" must be an instance of Date');\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    if (criteria.limitInDays != null && !(Validator.isInt(criteria.limitInDays))) {\n      const error = AWSDKError.AWSDKIllegalArgument('Param \"providerAvailabilityCriteria.limitInDays\" must be an integer');\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    const link = this.findNamedLink(criteria.providerDetails.links, 'availability');\n    if (!Validator.isValidLink(link)) {\n      const error = AWSDKError.AWSDKInternalError('providerDetails does not have a valid \"availability\" link entry');\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    const options = this.generateOptions('GET', link.url, true);\n    options.auth = this.getUserAuth(consumer);\n    if (options.auth == null) {\n      const error = AWSDKError.AWSDKConsumerNotAuthenticated();\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    if (criteria.appointmentDate != null) {\n      options.form.set('appointmentDate', Util.formatISODateTime(criteria.appointmentDate));\n    }\n    options.form.set('currentTime', Util.formatISODateTime(new Date()));\n    options.form.set('timeZone', criteria.timeZone);\n    if (criteria.limitInDays != null) {\n      options.form.set('limitInDays', criteria.limitInDays);\n    }\n    return this.executeRequest(options, AWSDKAvailabilityList)\n      .then((availablilityList) => {\n        this.__logger.debug(currentFunction, 'Got response', availablilityList);\n        this.updateUserAuthEntry(consumer, availablilityList.authToken);\n        return availablilityList;\n      })\n      .catch((error) => {\n        this.__logger.error(currentFunction, 'Error', error);\n        throw error;\n      });\n  }\n  /**\n   * Retrieve an array of past {@link model.AWSDKProvider|AWSDKProvider}s for the given consumer.<br>\n   *\n   * @param {model.AWSDKConsumer} consumer the consumer to find past providers for\n   * @param {object} [options] an object of optional search parameters\n   * @param {Number} [options.maxResults] limits the max number of providers returned by the search\n   * @param {model.AWSDKPractice} [options.practice] when provided narrows the search to only providers within the practice\n   * @param {model.AWSDKPracticeSearchType} [options.practiceSearchType] when provided narrows the search to only providers in practices of the specified type\n   * @returns {Promise<model.AWSDKProvider[]|error.AWSDKError>} Returns a promise that will be resolved to an array of {@link model.AWSDKProvider|AWSDKProvider} or will\n   * be rejected with an {@link error.AWSDKError|AWSDKError}.\n   * <p><br>Potential Error Codes<br>\n   * <table summary=\"ErrorCodes\" border=\"1\">\n   * <tr><th>Error Code</th><th>reason</th>\n   * <tr><td>{@link error.AWSDKErrorCode.consumerNotAuthenticated|AWSDKErrorCode.consumerNotAuthenticated}</td><td>The consumer is not authenticated.</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.illegalArgument|AWSDKErrorCode.illegalArgument}</td><td>Missing argument or argument is not the correct type.</td>\n   * <tr><td>{@link error.AWSDKErrorCode.internalError|AWSDKErrorCode.internalError}</td><td>The AWSDK could not complete the request.</td></tr>\n   * </table>\n   * @since 3.0.0\n   */\n  searchPastProviders(consumer, options = {}) {\n    const currentFunction = 'ProviderService.findPastProviders';\n    this.__logger.debug(currentFunction, 'Started', consumer, options);\n    if (!(consumer instanceof AWSDKConsumer)) {\n      const error = AWSDKError.AWSDKIllegalArgument('consumer is null or not an instance of AWSDKConsumer');\n      this.__logger.error(currentFunction, 'error', error);\n      return Promise.reject(error);\n    }\n    if (options.maxResults && (!Validator.isInt(options.maxResults) || options.maxResults < 0)) {\n      const error = AWSDKError.AWSDKIllegalArgument('options.maxResults is not a positive integer');\n      this.__logger.error(currentFunction, 'error', error);\n      return Promise.reject(error);\n    }\n    if (options.practice && !(options.practice instanceof AWSDKPractice)) {\n      const error = AWSDKError.AWSDKIllegalArgument('options.practice is not an instance of AWSDKPractice');\n      this.__logger.error(currentFunction, 'error', error);\n      return Promise.reject(error);\n    }\n    if (options.practiceSearchType && !(options.practiceSearchType instanceof AWSDKPracticeSearchType)) {\n      const error = AWSDKError.AWSDKIllegalArgument('options.practiceSearchType is not an instance of AWSDKPracticeSearchType');\n      this.__logger.error(currentFunction, 'error', error);\n      return Promise.reject(error);\n    }\n    const link = this.findNamedLink(consumer.links, 'pastProviders');\n    if (!Validator.isValidLink(link)) {\n      const error = AWSDKError.AWSDKInternalError('consumer does not have a \"pastProviders\" link entry');\n      this.__logger.error(currentFunction, 'error', error);\n      return Promise.reject(error);\n    }\n    const requestOptions = this.generateOptions('GET', link.url);\n    requestOptions.auth = this.getUserAuth(consumer);\n    if (requestOptions.auth == null) {\n      const error = AWSDKError.AWSDKConsumerNotAuthenticated();\n      this.__logger.error(currentFunction, 'error', error);\n      return Promise.reject(error);\n    }\n\n    if (options.maxResults) requestOptions.form.set('limit', options.maxResults);\n    if (options.practice) requestOptions.form.set('practiceId', options.practice.id.encryptedId);\n    if (options.practiceSearchType) requestOptions.form.set('practiceSearchType', options.practiceSearchType.type);\n\n    return this.executeRequest(requestOptions, AWSDKProvidersResponse)\n      .then((providersResponse) => {\n        this.__logger.debug(currentFunction, 'Got response', providersResponse);\n        this.updateUserAuthEntry(consumer, providersResponse.authToken);\n        return providersResponse.providers;\n      })\n      .catch((error) => {\n        this.__logger.error(currentFunction, 'Error', error);\n        throw error;\n      });\n  }\n  /**\n   * Retrieve an array of past {@link model.AWSDKProvider|AWSDKProvider}s for the given consumer.<br>\n   *\n   * @param {model.AWSDKConsumer} consumer the consumer to find past providers for\n   * @param {Number} [maxResults] limits the max number of providers returned by the search\n   * @returns {Promise<model.AWSDKProvider[]|error.AWSDKError>} Returns a promise that will be resolved to an array of {@link model.AWSDKProvider|AWSDKProvider} or will\n   * be rejected with an {@link error.AWSDKError|AWSDKError}.\n   * <p><br>Potential Error Codes<br>\n   * <table summary=\"ErrorCodes\" border=\"1\">\n   * <tr><th>Error Code</th><th>reason</th>\n   * <tr><td>{@link error.AWSDKErrorCode.consumerNotAuthenticated|AWSDKErrorCode.consumerNotAuthenticated}</td><td>The consumer is not authenticated.</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.illegalArgument|AWSDKErrorCode.illegalArgument}</td><td>Missing argument or argument is not the correct type.</td>\n   * <tr><td>{@link error.AWSDKErrorCode.internalError|AWSDKErrorCode.internalError}</td><td>The AWSDK could not complete the request.</td></tr>\n   * </table>\n   * @since 1.1.0\n   * @deprecated please use searchPastProviders instead\n   */\n  findPastProviders(consumer, maxResults) {\n    const currentFunction = 'ProviderService.findPastProviders';\n    deprecated(currentFunction, 'Invoke the ProviderService.searchPastProviders function instead', '3.X');\n    this.__logger.debug(currentFunction, 'Started', consumer, maxResults);\n    return this.searchPastProviders(consumer, { maxResults });\n  }\n\n  /**\n   * This method allows for the retrieval of an array of {@link model.AWSDKProvider|AWSDKProvider} based on an authenticated or unauthenticated search. <br>\n   * All the parameters to this method are optional when making an <em>unauthenticated</em> search. The parameters allow to filter the result obtained. Only the consumer <br>\n   * parameter is required when making an <em>authenticated</em> request.\n   * @param {model.AWSDKConsumer} [consumer] the consumer whose context to use for providers search. Only needed if making authenticated searches.\n   * @param {model.AWSDKPractice|model.AWSDKPracticeSearchResult} [practice] the practice for which to get the list of providers from.\n   * @param {model.AWSDKOnDemandSpecialty} [onDemandSpecialty] the on-demand specialty practice to filter by.\n   * @param {String} [searchTerm] the name or regular expression to use to search for provider by name. Needs to be at least 3 chars long\n   * @param {model.AWSDKProviderType[]} [specialties] an array of provider specialties to filter by.\n   * @param {String[]} [sourceIds] the array of sourceIds to filter by\n   * @param {model.AWSDKState} [licensedInState] the state where the provider is licensed to practice\n   * @param {model.AWSDKLanguage} [languageSpoken] a language that the provider speaks\n   * @param {Number} [maxResults] the maximum number of results to return from the search. Must be a positive integer\n   * @returns {Promise<model.AWSDKProvider[]|error.AWSDKError>} Returns a promise that will be resolved to an array of {@link model.AWSDKProvider|AWSDKProvider} or will\n   * be rejected with an {@link error.AWSDKError|AWSDKError}.\n   * <p><br>Potential Error Codes<br>\n   * <table summary=\"ErrorCodes\" border=\"1\">\n   * <tr><th>Error Code</th><th>reason</th>\n   * <tr><td>{@link error.AWSDKErrorCode.consumerNotAuthenticated|AWSDKErrorCode.consumerNotAuthenticated}</td><td>The consumer is not authenticated.</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.illegalArgument|AWSDKErrorCode.illegalArgument}</td><td>Missing argument or argument is not the correct type.</td>\n   * <tr><td>{@link error.AWSDKErrorCode.internalError|AWSDKErrorCode.internalError}</td><td>The AWSDK could not complete the request.</td></tr>\n   * </table>\n   * @since 1.1.0\n   */\n  findProviders(consumer, practice, onDemandSpecialty, searchTerm, specialties, sourceIds, licensedInState, languageSpoken, maxResults) {\n    const currentFunction = 'ProviderService.findProviders';\n    this.__logger.debug(currentFunction, 'Started',\n      consumer, practice, onDemandSpecialty, searchTerm, specialties, sourceIds, licensedInState, languageSpoken, maxResults);\n    if (consumer != null && !(consumer instanceof AWSDKConsumer)) {\n      const error = AWSDKError.AWSDKIllegalArgument('consumer is not an instance of AWSDKConsumer');\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    if (practice != null) {\n      if (!(practice instanceof AWSDKPractice) && !(practice instanceof AWSDKPracticeSearchResult)) {\n        const error = AWSDKError.AWSDKIllegalArgument('practice is not an instance of neither AWSDKPractice nor AWSDKPracticeSearchResult');\n        this.__logger.error(currentFunction, 'Error', error);\n        return Promise.reject(error);\n      }\n    }\n    if (onDemandSpecialty != null && !(onDemandSpecialty instanceof AWSDKOnDemandSpecialty)) {\n      const error = AWSDKError.AWSDKIllegalArgument('onDemandSpecialty is not an instance of AWSDKOnDemandSpecialty');\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    if (searchTerm != null) {\n      if (!(Validator.isValidString(searchTerm))) {\n        const error = AWSDKError.AWSDKIllegalArgument('searchTerm must be an instance of String');\n        this.__logger.error(currentFunction, 'Error', error);\n        return Promise.reject(error);\n      } else if (!Validator.hasValidFormat(searchTerm, 100, 3, /./)) {\n        const error = AWSDKError.AWSDKValidationError(searchTerm);\n        this.__logger.error(currentFunction, 'Error', error);\n        return Promise.reject(error);\n      }\n    }\n    if (specialties && (!Array.isArray(specialties) || specialties.find(pt => !(pt instanceof AWSDKProviderType)))) {\n      const error = AWSDKError.AWSDKIllegalArgument('specialties optional argument is not an array AWSDKProviderType');\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    if (sourceIds != null) {\n      if (!Array.isArray(sourceIds)) {\n        const error = AWSDKError.AWSDKIllegalArgument('Argument \"sourceIds\" must be an Array of Strings');\n        this.__logger.error(currentFunction, 'Error', error);\n        return Promise.reject(error);\n      }\n      const errors = sourceIds.filter(item => !Validator.isValidString(item));\n      if (errors.length > 0) {\n        const error = AWSDKError.AWSDKValidationError('sourceIds');\n        this.__logger.error(currentFunction, 'Error', error);\n        return Promise.reject(error);\n      }\n    }\n    if (licensedInState != null && !(licensedInState instanceof AWSDKState)) {\n      const error = AWSDKError.AWSDKIllegalArgument('Argument \"licensedInState\" must be of type AWSDKState');\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    if (languageSpoken != null && !(languageSpoken instanceof AWSDKLanguage)) {\n      const error = AWSDKError.AWSDKIllegalArgument('Argument \"language\" must be of type AWSDKLanguage');\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    if (maxResults != null && (!Validator.isInt(maxResults) || maxResults <= 0)) {\n      const error = AWSDKError.AWSDKIllegalArgument('Argument \"maxResults\" must be a positive integer');\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    const link = this.findNamedLink(this.__links, 'providerSearch');\n    if (!Validator.isValidLink(link)) {\n      const error = AWSDKError.AWSDKInternalError('PracticeService does not have a \"providerSearch\" link entry');\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    const options = this.generateOptions('GET', link.url);\n    if (consumer != null) {\n      options.auth = this.getUserAuth(consumer);\n      if (options.auth == null) {\n        const error = AWSDKError.AWSDKConsumerNotAuthenticated();\n        this.__logger.error(currentFunction, 'Error', error);\n        return Promise.reject(error);\n      }\n    } else {\n      options.auth = this.getSdkAuth();\n    }\n    if (consumer) {\n      options.form.set('memberId', consumer.id.encryptedId);\n    }\n    if (practice) {\n      options.form.set('practiceId', practice.id.encryptedId);\n    }\n    if (onDemandSpecialty) {\n      options.form.set('onDemandSpecialtyId', onDemandSpecialty.id.encryptedId);\n    }\n    if (licensedInState) {\n      options.form.set('state', licensedInState.code);\n    }\n    if (languageSpoken) {\n      options.form.set('languageSpoken', languageSpoken.resourceKey);\n    }\n    if (sourceIds) {\n      sourceIds.forEach(entry => options.form.append('sourceIds', entry));\n    }\n    if (specialties) {\n      specialties.forEach(entry => options.form.append('providerTypes', entry.resourceKey));\n    }\n    options.form.set('maxResults', maxResults);\n    options.form.set('searchTerm', searchTerm);\n    return this.executeRequest(options, AWSDKProvidersResponse)\n      .then((providersResponse) => {\n        this.__logger.debug(currentFunction, 'Got response', providersResponse);\n        if (consumer != null) {\n          this.updateUserAuthEntry(consumer, providersResponse.authToken);\n        }\n        return providersResponse.providers;\n      }).catch((error) => {\n        this.__logger.error(currentFunction, 'Error', error);\n        throw error;\n      });\n  }\n\n  /**\n   * This method allows for the retrieval of the estimated cost of a visit, before insurance, with a given Provider.\n   * @param {model.AWSDKProviderDetails} providerDetails the Provider whose cost of visit with we wish to obtain.\n   * @param {model.AWSDKConsumer} consumer the authenticated {@link model.AWSDKConsumer|AWSDKConsumer} inquiring about the pricing of a visit with this Provider\n   * @returns {Promise<model.AWSDKEstimatedVisitCost>|error.AWSDKError} a Promise that will resolve to an instance of {@link model.AWSDKEstimatedVisitCost|AWSDKEstimatedVisitCost}\n   * or will be rejected with an instance of {@link error.AWSDKError}\n   * <p><br>Potential Error Codes<br>\n   * <table summary=\"ErrorCodes\" border=\"1\">\n   * <tr><th>Error Code</th><th>reason</th>\n   * <tr><td>{@link error.AWSDKErrorCode.consumerNotAuthenticated|AWSDKErrorCode.consumerNotAuthenticated}</td><td>The consumer is not authenticated.</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.illegalArgument|AWSDKErrorCode.illegalArgument}</td><td>Missing argument or argument is not the correct type.</td>\n   * <tr><td>{@link error.AWSDKErrorCode.internalError|AWSDKErrorCode.internalError}</td><td>The AWSDK could not complete the request.</td></tr>\n   * </table>\n   * @since 1.1.0\n   */\n  getEstimatedVisitCost(providerDetails, consumer) {\n    const currentFunction = 'ProviderService.getEstimatedVisitCost';\n    this.__logger.debug(currentFunction, 'Started', providerDetails, consumer);\n    this.__logger.info(currentFunction, 'Started');\n    if (!(consumer instanceof AWSDKConsumer)) {\n      const error = AWSDKError.AWSDKIllegalArgument('consumer is not an instance of AWSDKConsumer');\n      this.__logger.error(currentFunction, 'error', error);\n      return Promise.reject(error);\n    }\n    if (!(providerDetails instanceof AWSDKProviderDetails)) {\n      const error = AWSDKError.AWSDKIllegalArgument('providerDetails is not an instance of AWSDKProviderDetails');\n      this.__logger.error(currentFunction, 'error', error);\n      return Promise.reject(error);\n    }\n    const link = this.findNamedLink(providerDetails.links, 'estimatedCost');\n    if (!Validator.isValidLink(link)) {\n      const error = AWSDKError.AWSDKInternalError('A \"estimatedCost\" link entry was not found');\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    const options = this.generateOptions('GET', link.url);\n    options.auth = this.getUserAuth(consumer);\n    if (options.auth == null) {\n      const error = AWSDKError.AWSDKConsumerNotAuthenticated();\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    options.form.set('memberId', consumer.id.encryptedId);\n    return this.executeRequest(options, AWSDKEstimatedVisitCostResponse)\n      .then((estimatedCostResponse) => {\n        this.__logger.debug(currentFunction, 'Got response', estimatedCostResponse);\n        this.updateUserAuthEntry(consumer, estimatedCostResponse.authToken);\n        return estimatedCostResponse.estimatedCost;\n      }).catch((error) => {\n        this.__logger.error(currentFunction, 'Error', error);\n        throw error;\n      });\n  }\n}\nexport default ProviderService;\n","/*!\n * American Well Consumer Web SDK\n *\n * Copyright (c) 2020 American Well.\n * All rights reserved.\n *\n * It is illegal to use, reproduce or distribute\n * any part of this Intellectual Property without\n * prior written authorization from American Well.\n */\nimport AWSDKEntity from '../awsdk_entity';\n\n/**\n * A class that represents the device pairing details\n * @property {String} pairingCode the code used for pairing a device.\n * @property {String} applicationServerUrl the URL of the remote server the device is pairing with.\n * @since 2.6.0\n * @extends model.AWSDKEntity\n */\nclass AWSDKDevicePairingDetails extends AWSDKEntity {\n  get pairingCode() {\n    return this.__data.pairingCode;\n  }\n\n  get applicationServerUrl() {\n    return this.__data.applicationServerUrl;\n  }\n}\nexport default AWSDKDevicePairingDetails;\n","/*!\n * American Well Consumer Web SDK\n *\n * Copyright (c) 2020 American Well.\n * All rights reserved.\n *\n * It is illegal to use, reproduce or distribute\n * any part of this Intellectual Property without\n * prior written authorization from American Well.\n */\nimport AWSDKResponse from './awsdk_response';\nimport GenericParser from '../../parser/generic_parser';\nimport AWSDKDevicePairingDetails from '../../../model/device_live_streaming/awsdk_device_pairing_details';\n\n/**\n * A class that represents the device pairing details response\n * @property {model.AWSDKDevicePairingDetails} devicePairingDetails contains pairing details for the device.\n * @since 2.6.0\n * @ignore\n * @extends model.AWSDKResponse\n */\nclass AWSDKDevicePairingDetailsResponse extends AWSDKResponse {\n  get devicePairingDetails() {\n    return GenericParser.parseObject(this.__data.deviceLiveStreamPairingResponse, AWSDKDevicePairingDetails);\n  }\n}\nexport default AWSDKDevicePairingDetailsResponse;\n","/*!\n * American Well Consumer Web SDK\n *\n * Copyright © 2020 American Well.\n * All rights reserved.\n *\n * It is illegal to use, reproduce or distribute\n * any part of this Intellectual Property without\n * prior written authorization from American Well.\n */\n\n/**\n * Enum for AWSDKDevicePairingStatusEnum.\n * @readonly\n * @enum {string}\n * @since 2.6.0\n */\nconst AWSDKDevicePairingStatusEnum = {\n  /**\n     * Indicating that the device is paired\n     */\n  PAIRED: 'PAIRED',\n  /**\n     * Indicating that the device is not paired\n     */\n  NOT_PAIRED: 'NOT_PAIRED',\n  /**\n     * Indicating that the device is already paired\n     */\n  PREVIOUSLY_PAIRED: 'PREVIOUSLY_PAIRED',\n};\nObject.freeze(AWSDKDevicePairingStatusEnum);\nexport default AWSDKDevicePairingStatusEnum;\n","/*!\n * American Well Consumer Web SDK\n *\n * Copyright (c) 2020 American Well.\n * All rights reserved.\n *\n * It is illegal to use, reproduce or distribute\n * any part of this Intellectual Property without\n * prior written authorization from American Well.\n */\nimport AWSDKEntity from '../awsdk_entity';\nimport GenericParser from '../../internal/parser/generic_parser';\nimport AWSDKDevicePairingStatusEnum from './awsdk_device_pairing_status_enum';\n\n/**\n * A class that represents the device pairing status response.\n * @property {model.AWSDKDevicePairingStatus} devicePairingStatus the device pairing status enum.\n * @property {boolean} isDeviceOnline true if the device is connected to an online network, such as WIFI or cellular.\n * @since 2.6.0\n * @extends model.AWSDKEntity\n */\nclass AWSDKDevicePairingStatus extends AWSDKEntity {\n  get devicePairingStatus() {\n    return GenericParser.parseEnum(this.__data.devicePairingStatus, AWSDKDevicePairingStatusEnum);\n  }\n  get isDeviceOnline() {\n    return GenericParser.parseBoolean(this.__data.isDeviceOnline);\n  }\n}\nexport default AWSDKDevicePairingStatus;\n","/*!\n * American Well Consumer Web SDK\n *\n * Copyright (c) 2020 American Well.\n * All rights reserved.\n *\n * It is illegal to use, reproduce or distribute\n * any part of this Intellectual Property without\n * prior written authorization from American Well.\n */\nimport AWSDKResponse from './awsdk_response';\nimport GenericParser from '../../parser/generic_parser';\nimport AWSDKDevicePairingStatus from '../../../model/device_live_streaming/awsdk_device_pairing_status';\n\n/**\n * A class that represents the device pairing status response.\n * @property {model.AWSDKDevicePairingStatus} pairingStatus contains the device pairing status.\n * @since 2.6.0\n * @ignore\n * @extends model.AWSDKResponse\n */\nclass AWSDKDevicePairingStatusResponse extends AWSDKResponse {\n  get devicePairingStatus() {\n    return GenericParser.parseObject(this.__data.deviceLiveStreamPairingResponse, AWSDKDevicePairingStatus);\n  }\n}\nexport default AWSDKDevicePairingStatusResponse;\n","/*!\n * American Well Consumer Web SDK\n *\n * Copyright © 2020 American Well.\n * All rights reserved.\n *\n * It is illegal to use, reproduce or distribute\n * any part of this Intellectual Property without\n * prior written authorization from American Well.\n */\n\n/**\n * Enum for AWSDKDeviceLiveStreamType to distinguish between different live streams.\n * @readonly\n * @enum {string}\n * @since 2.6.0\n */\nconst AWSDKDeviceLiveStreamType = {\n  /**\n     * Tyto Device\n     */\n  TYTO_LIVESTREAM: 'TYTO_LIVESTREAM',\n};\nObject.freeze(AWSDKDeviceLiveStreamType);\nexport default AWSDKDeviceLiveStreamType;\n","/*!\n * American Well Consumer Web SDK\n *\n * Copyright © 2020 American Well.\n * All rights reserved.\n *\n * It is illegal to use, reproduce or distribute\n * any part of this Intellectual Property without\n * prior written authorization from American Well.\n */\nimport QRCode from 'qrcode';\nimport deprecated from 'awcoresdk/lib/util/deprecated';\nimport Service from './service';\nimport AWSDKConsumer from '../model/consumer/awsdk_consumer';\nimport AWSDKError from '../error/awsdk_error';\nimport Validator from '../internal/validator/validator';\nimport AWSDKDevicePairingDetailsResponse from '../internal/model/response/awsdk_device_livestream_pairing_details_response';\nimport AWSDKDevicePairingStatusResponse from '../internal/model/response/awsdk_device_livestream_pairing_status_response';\nimport AWSDKDeviceLiveStreamType from '../model/device_live_streaming/awsdk_device_live_stream_type';\n/**\n * This service handles everything related to device live streaming integration\n *\n * @since 2.6.0\n * @hideconstructor\n */\nclass DeviceLiveStreamService extends Service {\n  constructor(props) {\n    super(props);\n    this.__systemConfiguration = props.systemConfiguration;\n  }\n\n  /**\n   * This method returns the device pairing status, as well as if the device is connected to an online network such as WIFI or cellular.<br>\n   *\n   * @param {AWSDKConsumer} consumer  {@link model.AWSDKConsumer|AWSDKConsumer} to retrieve the device pairing status for.\n   * @param {AWSDKDeviceLiveStreamType} type device type.\n   * @returns {Promise<model.AWSDKDevicePairingStatus|error.AWSDKError>} a promise that resolves to a {@link model.AWSDKDevicePairingStatus|AWSDKDevicePairingStatus} or is rejected with a {@link error.AWSDKError|AWSDKError}\n   * <p><br>Potential Error Codes<br>\n   * <table summary=\"ErrorCodes\" border=\"1\">\n   * <thead>\n   * <tr><th>Error Code</th><th>reason</th></tr>\n   * </thead>\n   * <tbody>\n   * <tr><td>{@link error.AWSDKErrorCode.AWSDKInvalidEnum|AWSDKErrorCode.AWSDKInvalidEnum}</td><td>The value of a provided enum is invalid</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.consumerNotAuthenticated|AWSDKErrorCode.consumerNotAuthenticated}</td><td>Consumer is not authenticated.</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.illegalArgument|AWSDKErrorCode.illegalArgument}</td><td>A parameter is not the correct type.</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.internalError|AWSDKErrorCode.internalError}</td><td>The AWSDK could not complete the request.</td></tr>\n   * </tbody>\n   * </table>\n   * @since 2.6.0\n   */\n  getDevicePairingStatus(consumer, type) {\n    const currentFunction = 'DeviceLiveStreamService.getDevicePairingStatus';\n    this.__logger.debug(currentFunction, 'Started', consumer);\n    if (!(consumer instanceof AWSDKConsumer)) {\n      const error = AWSDKError.AWSDKIllegalArgument('consumer argument is not of type AWSDKConsumer');\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    if (!Validator.isValidEnumValue(type, AWSDKDeviceLiveStreamType)) {\n      const error = AWSDKError.AWSDKInvalidEnum();\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    const link = this.findNamedLink(consumer.links, 'deviceLiveStreamPairingStatus');\n    if (!Validator.isValidLink(link)) {\n      const error = AWSDKError.AWSDKInternalError('consumer does not have a valid \"deviceLiveStreamStatusPairing\" link entry');\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n\n    const options = this.generateOptions('GET', link.url, false);\n    options.auth = this.getUserAuth(consumer);\n    if (options.auth == null) {\n      const error = AWSDKError.AWSDKConsumerNotAuthenticated();\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    return this.executeRequest(options, AWSDKDevicePairingStatusResponse)\n      .then((response) => {\n        this.__logger.debug(currentFunction, 'Got response', response);\n        this.updateUserAuthEntry(consumer, response.authToken);\n        return response.devicePairingStatus;\n      })\n      .catch((error) => {\n        this.__logger.error(currentFunction, 'Error', error);\n        return Promise.reject(error);\n      });\n  }\n\n  /**\n   * Build the QR Code string optionally based on the user's network SSID and SSID Password.\n   *\n   * @param {AWSDKConsumer} consumer the consumer to build the QR Code for\n   * @param {Object} options additional parameters for building the QR Code\n   * @param {AWSDKDeviceLiveStreamType} options.type the type of the device to generate the QR code for\n   * @param {String} [options.SSID] the SSID for the network the device is on\n   * @param {String} [options.SSIDPassword] the SSID Password for the network the device is on\n   * @returns {Promise<model.AWSDKDevicePairingStatus|error.AWSDKError>} a promise that resolves to a {@link model.AWSDKDevicePairingStatus|AWSDKDevicePairingStatus} or is rejected with a {@link error.AWSDKError|AWSDKError}\n   * <p><br>Potential Error Codes<br>\n   * <table summary=\"ErrorCodes\" border=\"1\">\n   * <thead>\n   * <tr><th>Error Code</th><th>reason</th></tr>\n   * </thead>\n   * <tbody>\n   * <tr><td>{@link error.AWSDKErrorCode.AWSDKInvalidEnum|AWSDKErrorCode.AWSDKInvalidEnum}</td><td>The value of a provided enum is invalid</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.consumerNotAuthenticated|AWSDKErrorCode.consumerNotAuthenticated}</td><td>Consumer is not authenticated.</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.illegalArgument|AWSDKErrorCode.illegalArgument}</td><td>A parameter is not the correct type.</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.internalError|AWSDKErrorCode.internalError}</td><td>The AWSDK could not complete the request.</td></tr>\n   * </tbody>\n   * </table>\n   * @since 2.8.0\n   */\n  buildQRCodeString(consumer, options = {}) {\n    const currentFunction = 'DeviceLiveStreamService.buildQRCodeString';\n    this.__logger.debug(currentFunction, 'Started');\n    if (!(consumer instanceof AWSDKConsumer)) {\n      const error = AWSDKError.AWSDKIllegalArgument('consumer is null or not an instance of AWSDKConsumer');\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    if (!Validator.isValidEnumValue(options.type, AWSDKDeviceLiveStreamType)) {\n      const error = AWSDKError.AWSDKInvalidEnum();\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    const link = this.findNamedLink(consumer.links, 'deviceLiveStreamPairingRequest');\n    if (!Validator.isValidLink(link)) {\n      const error = AWSDKError.AWSDKInternalError('service does not have a \"deviceLiveStreamPairing\" link entry');\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n\n    const requestOptions = this.generateOptions('POST', link.url, false);\n    requestOptions.auth = this.getUserAuth(consumer);\n    if (requestOptions.auth == null) {\n      const error = AWSDKError.AWSDKConsumerNotAuthenticated();\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n\n    requestOptions.headers['Content-Type'] = 'application/json';\n    requestOptions.body = JSON.stringify({\n      id: consumer.id.encryptedId,\n    });\n    return this.executeRequest(requestOptions, AWSDKDevicePairingDetailsResponse)\n      .then((response) => {\n        this.__logger.debug(currentFunction, 'Got response', response);\n        this.updateUserAuthEntry(consumer, response.authToken);\n        const pairingDetailsObj = {\n          pairingCode: response.devicePairingDetails.pairingCode,\n          applicationServerUrl: response.devicePairingDetails.applicationServerUrl,\n        };\n        const pairingDetailsJson = JSON.stringify(pairingDetailsObj);\n        const sanitizedSSIdPwd = options.SSIDPassword || '';\n        const sanitizedSSId = options.SSID || '';\n        const sanitizedSSIdLength = sanitizedSSId.length === 0 ? '' : sanitizedSSId.length;\n        const sanitizedSSIdPwdLength = sanitizedSSIdPwd.length === 0 ? '' : sanitizedSSIdPwd.length;\n        const unixTime = Math.round(+new Date() / 1000);\n        const UTCTime = unixTime.toString();\n        const encodedSSID = btoa(sanitizedSSId);\n        const encodedSSIDLength = encodedSSID.length === 0 ? '': encodedSSID.length;\n        return `:V4:${sanitizedSSIdPwdLength}::0:,,,${sanitizedSSIdLength},${sanitizedSSId}${sanitizedSSIdPwd},${UTCTime},${encodedSSIDLength},${encodedSSID},${pairingDetailsJson},vExternal`;\n      })\n      .catch((error) => {\n        this.__logger.error(currentFunction, 'Error', error);\n        return Promise.reject(error);\n      });\n  }\n\n\n  /**\n   * A convenience function that generates and appends a QR Code to a provided HTMLElement.\n   *\n   * @param {AWSDKConsumer} consumer {@link model.AWSDKConsumer|AWSDKConsumer} the QR code will be associated with.\n   * @param {Object} options additional parameters for building the QR Code\n   * @param {AWSDKDeviceLiveStreamType} options.type the type of the device to generate the QR code for\n   * @param {String} [options.SSID] the SSID for the network the device is on\n   * @param {String} [options.SSIDPassword] the SSID Password for the network the device is on\n   * @param {HTMLElement} options.container the HTML Element to append the generated QRCode to\n   * @returns {Promise<String|error.AWSDKError>} a promise that resolves to a {String} or is rejected with a {@link error.AWSDKError|AWSDKError}\n   * <p><br>Potential Error Codes<br>\n   * <table summary=\"ErrorCodes\" border=\"1\">\n   * <thead>\n   * <tr><th>Error Code</th><th>reason</th></tr>\n   * </thead>\n   * <tbody>\n   * <tr><td>{@link error.AWSDKErrorCode.AWSDKInvalidEnum|AWSDKErrorCode.AWSDKInvalidEnum}</td><td>The value of a provided enum is invalid</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.consumerNotAuthenticated|AWSDKErrorCode.consumerNotAuthenticated}</td><td>Consumer is not authenticated.</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.illegalArgument|AWSDKErrorCode.illegalArgument}</td><td>A parameter is not the correct type.</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.internalError|AWSDKErrorCode.internalError}</td><td>The AWSDK could not complete the request.</td></tr>\n   * </tbody>\n   * </table>\n   * @since 2.8.0\n   *\n   */\n  appendQRCode(consumer, options = {}) {\n    const currentFunction = 'DeviceLiveStreamService.appendQRCode';\n    this.__logger.debug(currentFunction, 'Started');\n    if (!(options.container instanceof HTMLElement)) {\n      const error = AWSDKError.AWSDKIllegalArgument('options.container is not of type HTMLElement');\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    return this.buildQRCodeString(consumer, options).then((qrCodeString) => {\n      options.container.innerHTML = '';\n      QRCode.toCanvas(qrCodeString, { errorCorrectionLevel: 'H' }, (err, canvas) => {\n        if (err) throw err;\n        options.container.appendChild(canvas);\n      });\n      return true;\n    }).catch((error) => {\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    });\n  }\n\n  /**\n   * This is a helper method used to build the QR code to be scanned by the device.\n   *\n   * @param {AWSDKConsumer} consumer {@link model.AWSDKConsumer|AWSDKConsumer} the QR code will be associated with.\n   * @param {String} ssId SSID for the WiFi network.\n   * @param {String} ssIdPwd password for the WiFi network.\n   * @param {model.AWSDKDeviceLiveStreamType} type the device type.\n   * @returns {Promise<String|error.AWSDKError>} a promise that resolves to a {String} or is rejected with a {@link error.AWSDKError|AWSDKError}\n   * <p><br>Potential Error Codes<br>\n   * <table summary=\"ErrorCodes\" border=\"1\">\n   * <thead>\n   * <tr><th>Error Code</th><th>reason</th></tr>\n   * </thead>\n   * <tbody>\n   * <tr><td>{@link error.AWSDKErrorCode.illegalArgument|AWSDKErrorCode.illegalArgument}</td><td>A parameter is not the correct type.</td></tr>\n   * </tbody>\n   * </table>\n   * @since 2.6.0\n   * @deprecated please use {@link service.DeviceLiveStreamService#buildQRCodeString|buildQRCodeString} instead.\n   *\n   */\n  retrieveQRCode(consumer, ssId, ssIdPwd, type) {\n    deprecated('DeviceLiveStreamService.retrieveQRCode', 'Invoke the DeviceLiveStreamService.buildQRCodeString function instead', '3.X');\n    return this.buildQRCodeString(consumer, { SSID: ssId, SSIDPassword: ssIdPwd, type });\n  }\n\n  /**\n   * This is a helper method used to build the QR code inside the given DOM element that will be scanned by the device.\n   *\n   * @param {AWSDKConsumer} consumer the {@link model.AWSDKConsumer|AWSDKConsumer} the QR code will be associated with.\n   * @param {String} ssId SSID for the WiFi network.\n   * @param {String} ssIdPwd password for the WiFi network.\n   * @param {HTMLElement} qrCodeContainer the DOM element which the QR code should be populated.\n   * @param {model.AWSDKDeviceLiveStreamType} type the device type.\n   * @returns {Promise<boolean|error.AWSDKError>} a promise that resolves to a {boolean} or is rejected with a {@link error.AWSDKError|AWSDKError}\n   * <p><br>Potential Error Codes<br>\n   * <table summary=\"ErrorCodes\" border=\"1\">\n   * <thead>\n   * <tr><th>Error Code</th><th>reason</th></tr>\n   * </thead>\n   * <tbody>\n   * <tr><td>{@link error.AWSDKErrorCode.illegalArgument|AWSDKErrorCode.illegalArgument}</td><td>A parameter is not the correct type.</td></tr>\n   * </tbody>\n   * </table>\n   * @since 2.6.0\n   * @deprecated please use {@link service.DeviceLiveStreamService#buildQRCodeObject|buildQRCodeObject} instead.\n   */\n  buildQRCodeObject(consumer, ssId, ssIdPwd, qrCodeContainer, type) {\n    deprecated('DeviceLiveStreamService.buildQRCodeObject', 'Invoke the DeviceLiveStreamService.buildQRCodeString function instead', '3.X');\n    return this.appendQRCode(consumer, { SSID: ssId, SSIDPassword: ssIdPwd, container: qrCodeContainer, type });\n  }\n}\n\nexport default DeviceLiveStreamService;\n","/*!\r\n * American Well Consumer Web SDK\r\n *\r\n * Copyright © 2018 American Well.\r\n * All rights reserved.\r\n *\r\n * It is illegal to use, reproduce or distribute\r\n * any part of this Intellectual Property without\r\n * prior written authorization from American Well.\r\n */\r\n\r\n/**\r\n * Enum for AWSDKCheckInStatus.\r\n * @readonly\r\n * @enum {string}\r\n * @since 1.2.0\r\n */\r\nconst AWSDKCheckInStatus = {\r\n  /**\r\n   * On time for the appointment, within the window\r\n   */\r\n  ON_TIME: 'ON_TIME',\r\n  /**\r\n   * Early for the appointment, before the window\r\n   */\r\n  EARLY: 'EARLY',\r\n  /**\r\n   * Late for the appointment, after the window\r\n   */\r\n  LATE: 'LATE',\r\n  /**\r\n   * Provider not available for the appointment\r\n   */\r\n  NO_PROVIDER: 'NO_PROVIDER',\r\n};\r\nObject.freeze(AWSDKCheckInStatus);\r\nexport default AWSDKCheckInStatus;\r\n","/*!\r\n * American Well Consumer Web SDK\r\n *\r\n * Copyright (c) 2018 American Well.\r\n * All rights reserved.\r\n *\r\n * It is illegal to use, reproduce or distribute\r\n * any part of this Intellectual Property without\r\n * prior written authorization from American Well.\r\n */\r\n\r\nimport AWSDKEntity from '../awsdk_entity';\r\nimport AWSDKProvider from '../provider/awsdk_provider';\r\nimport AWSDKConsumer from '../consumer/awsdk_consumer';\r\nimport AWSDKVisitCost from '../visit/awsdk_visit_cost';\r\nimport AWSDKVisitSchedule from '../visit/awsdk_visit_schedule';\r\nimport AWSDKTopic from '../visit/awsdk_topic';\r\nimport GenericParser from '../../internal/parser/generic_parser';\r\nimport AWSDKDisposition from '../visit/awsdk_disposition';\r\nimport AWSDKCheckInStatus from './awsdk_check_in_status';\r\nimport AWSDKProviderType from '../provider/awsdk_provider_type';\r\nimport AWSDKModality from '../awsdk_modality';\r\n\r\n/**\r\n * This class contains all necessary information for representing an appointment.\r\n * @property {model.AWSDKProvider} assignedProvider the assigned provider\r\n * @property {model.AWSDKProvider} proxyProvider the proxy provider\r\n * @property {model.AWSDKConsumer} consumer the consumer\r\n * @property {model.AWSDKConsumer} consumerProxy the consumer proxy\r\n * @property {model.AWSDKVisitCost} cost the cost of the appointment\r\n * @property {model.AWSDKVisitSchedule} schedule the schedule for the appointment\r\n * @property {model.AWSDKCheckInStatus} checkInStatus the check in status for the appointment\r\n * @property {model.AWSDKTopic[]} topics an array of {@link model.AWSDKTopic} objects\r\n * @property {String} practiceName the practice name for the appointment\r\n * @property {model.AWSDKDisposition} disposition the disposition for the appointment\r\n * @property {model.AWSDKProviderType} specialty the provider's specialty\r\n * @property {String} noteToPatient the note to the patient for the appointment\r\n * @property {String} href the url to more details for this appointment.\r\n * @property {String} sourceId the sourceId related to this appointment.\r\n * @since 1.4.0\r\n * @property {String} initiatorOverridePhoneNumber the consumer's preferred phone number for this appointment\r\n * @since 1.4.0\r\n * @property {string} formattedInitiatorOverridePhoneNumber the consumer's preferred formatted phone number for this appointment\r\n * @since 1.4.0\r\n * @property {model.AWSDKModality} modality represents the modality for this appointment\r\n * @since 1.1.0\r\n * @extends model.AWSDKEntity\r\n */\r\nclass AWSDKAppointment extends AWSDKEntity {\r\n  get assignedProvider() {\r\n    return this.__data.assignedProvider ? GenericParser.parseObject(this.__data.assignedProvider, AWSDKProvider) : null;\r\n  }\r\n\r\n  get proxyProvider() {\r\n    return this.__data.proxyProvider ? GenericParser.parseObject(this.__data.proxyProvider, AWSDKProvider) : null;\r\n  }\r\n\r\n  get consumer() {\r\n    const consumer = GenericParser.parseObject(this.__data.member, AWSDKConsumer);\r\n    if ((consumer != null) && !(consumer.proxies.length > 0) && this.__data.memberProxy) {\r\n      consumer.parent = GenericParser.parseObject(this.__data.memberProxy, AWSDKConsumer);\r\n    }\r\n    return consumer;\r\n  }\r\n\r\n  get consumerProxy() {\r\n    return this.__data.memberProxy ? GenericParser.parseObject(this.__data.memberProxy, AWSDKConsumer) : null;\r\n  }\r\n\r\n  get cost() {\r\n    return this.__data.cost ? GenericParser.parseObject(this.__data.cost, AWSDKVisitCost) : null;\r\n  }\r\n\r\n  get schedule() {\r\n    return this.__data.schedule ? GenericParser.parseObject(this.__data.schedule, AWSDKVisitSchedule) : null;\r\n  }\r\n\r\n  get checkInStatus() {\r\n    return GenericParser.parseEnum(this.__data.checkInStatus, AWSDKCheckInStatus);\r\n  }\r\n\r\n  get topics() {\r\n    const topics = this.__data.topics;\r\n    if (!Array.isArray(topics) || topics.length === 0) {\r\n      return null;\r\n    }\r\n    return topics.map(item => GenericParser.parseObject(item, AWSDKTopic));\r\n  }\r\n\r\n  get practiceName() {\r\n    return this.__data.practiceName;\r\n  }\r\n\r\n  get disposition() {\r\n    return GenericParser.parseEnum(this.__data.disposition, AWSDKDisposition);\r\n  }\r\n\r\n  get specialty() {\r\n    return GenericParser.parseObject(this.__data.specialty, AWSDKProviderType);\r\n  }\r\n\r\n  get noteToPatient() {\r\n    return this.__data.noteToPatient;\r\n  }\r\n\r\n  get href() {\r\n    return this.__data.href;\r\n  }\r\n\r\n  /**\r\n   * @since 1.2.1\r\n   */\r\n  get sourceId() {\r\n    return this.__data.sourceId;\r\n  }\r\n\r\n  /**\r\n   * @since 1.3.1\r\n   */\r\n  set proxies(proxies) {\r\n    if (Array.isArray(proxies) && proxies.every(item => item instanceof AWSDKConsumer)) {\r\n      this.__proxies = proxies;\r\n    } else {\r\n      this.__proxies = null;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @since 1.4.0\r\n   */\r\n  get initiatorOverridePhoneNumber() {\r\n    return this.__data.initiatorEngagementOverridePhone;\r\n  }\r\n\r\n  /**\r\n   * @since 1.4.0\r\n   */\r\n  set initiatorOverridePhoneNumber(initiatorOverridePhoneNumber) {\r\n    this.__data.initiatorEngagementOverridePhone = initiatorOverridePhoneNumber;\r\n  }\r\n\r\n  /**\r\n   * @since 1.4.0\r\n   */\r\n  get formattedInitiatorOverridePhoneNumber() {\r\n    return this.__data.formattedInitiatorEngagementOverridePhone;\r\n  }\r\n\r\n  /**\r\n   * @since 1.4.0\r\n   */\r\n  get modality() {\r\n    return GenericParser.parseObject(this.__data.modality, AWSDKModality);\r\n  }\r\n}\r\n\r\nexport default AWSDKAppointment;\r\n","/*!\r\n * American Well Consumer Web SDK\r\n *\r\n * Copyright (c) 2018 American Well.\r\n * All rights reserved.\r\n *\r\n * It is illegal to use, reproduce or distribute\r\n * any part of this Intellectual Property without\r\n * prior written authorization from American Well.\r\n */\r\n\r\n/**\r\n * The AWSDKTransfer class represents a wrapper for the status of the transfer\r\n * as well as the visitContext and visit\r\n * @property {Boolean} isQuickTransfer returns true if is the visit is a quick transfer\r\n * @property {model.AWSDKVisitContext} visitContext the visitContext for the transfer\r\n * @property {model.AWSDKVisit} visit If the transfer was a quick transfer the visit will be created automatically\r\n */\r\nclass AWSDKTransfer {\r\n  constructor(visitContext, visit = null) {\r\n    this.__visitContext = visitContext;\r\n    this.__visit = visit;\r\n  }\r\n\r\n  get isQuickTransfer() {\r\n    return this.__visit != null;\r\n  }\r\n\r\n  get visitContext() {\r\n    return this.__visitContext;\r\n  }\r\n\r\n  get visit() {\r\n    return this.__visit;\r\n  }\r\n}\r\n\r\nexport default AWSDKTransfer;\r\n","/*!\r\n * American Well Consumer Web SDK\r\n *\r\n * Copyright (c) 2017 American Well.\r\n * All rights reserved.\r\n *\r\n * It is illegal to use, reproduce or distribute\r\n * any part of this Intellectual Property without\r\n * prior written authorization from American Well.\r\n */\r\nimport GenericParser from '../../internal/parser/generic_parser';\r\nimport AWSDKEntityId from '../../internal/model/awsdk_entity_id';\r\nimport AWSDKConsumer from '../consumer/awsdk_consumer';\r\nimport AWSDKConsumerFeedbackQuestion from './awsdk_consumer_feedback_question';\r\nimport AWSDKDisclaimer from '../awsdk_disclaimer';\r\nimport AWSDKPractice from '../practice/awsdk_practice';\r\nimport AWSDKTopic from './awsdk_topic';\r\nimport AWSDKTriageQuestion from './awsdk_triage_question';\r\nimport Validator from '../../internal/validator/validator';\r\nimport AWSDKError from '../../error/awsdk_error';\r\nimport AWSDKFirstAvailableData from './awsdk_first_available_data';\r\nimport AWSDKVisitModalityType from '../visit/awsdk_visit_modality_type';\r\nimport AWSDKDataObject from '../awsdk_dataobject';\r\n\r\n/**\r\n * AWSDKVisitContext class which represents the initial preparation for a visit.\r\n * @property {model.AWSDKConsumer} consumer the consumer to which this visit relates\r\n * @property {String} onDemandSpecialtyId the id of the onDemandSpecialty for this visit\r\n * @property {String} engagementId the id of the engagement for this visit\r\n * @property {Boolean} requireAddress boolean true if the address is required by provider, false otherwise.\r\n * @property {Boolean} canPrescribe boolean true if the provider can prescribe medication, false otherwise.\r\n * @property {Boolean} showTriageQuestions boolean true if the provider displays triage questions, false otherwise.\r\n * @property {Boolean} showConditionsQuestion boolean true if the provider shows conditions questions, false otherwise\r\n * @property {Boolean} showAllergiesQuestion boolean true if the provider shows allergies questions, false otherwise\r\n * @property {Boolean} showMedicationsQuestion boolean true if the provider shows medications questions, false otherwise\r\n * @property {Boolean} showVitalsQuestion boolean true if the provider shows vitals questions, false otherwise\r\n * @property {Boolean} hasHealthHistory boolean true if the provider has health history for the consumer, false otherwise\r\n * @property {model.AWSDKConsumerFeedbackQuestion} consumerFeedbackQuestion a question to ask the consumer at end of visit with possible answers\r\n * @property {model.AWSDKDisclaimer[]} disclaimers an array of {@link AWSDKDisclaimer} objects\r\n * @property {String[]} triageQuestionList array of {@link String} triage questions for the consumer\r\n * @property {model.AWSDKTopic[]} topics an array of {@link AWSDKTopic}\r\n * @property {model.AWSDKEntityId} intakeId a {@link AWSDEntityId} object with encrypted and persitent id fields\r\n * @property {model.AWSDKPractice} practice a {@link AWSDKPractice} practice object\r\n * @property {Boolean} requireResidencyCheck boolean true if the provider requires residency check\r\n * @property {String} providerId the provider's encryptedId\r\n * @property {Boolean} hasProvider boolean true if the providerId is exists and it's non-empty, false otherwise\r\n * @property {Boolean} hasOnDemandSpecialty boolean true ith the specialtyId exists and it's non-empty, false otherwise\r\n * @property {Boolean} shareHealthSummary a boolean true if the provider can share health summary pertaining to consumer, false otherwise\r\n * @property {model.AWSDKTriageQuestion[]} triageQuestions collection of {@link model.AWSDKTriageQuestion} derived from the triageQuestionList\r\n * @property {String} otherTopic an additional topic to be added to this visit\r\n * @property {Boolean} hasAppointment boolean true if an engagementId exists and it's non-empty, false otherwise\r\n * @property {String} callbackNumber a phone number where the Provider can reach the consumer\r\n * @property {String[]} triageQuestionAnswers a collection of the answers to triage questions\r\n * @property {Number} timeThisWasCreated the time in milliseconds when this visitContext was created\r\n * @property {Boolean} isMatchmakerVisit boolean true if this is a matchmaker visit\r\n * @property {Boolean} [isQuickConnect] boolean true if this is a quick connect visit\r\n * @property {String} [sourceId] the source id for the visit\r\n * @property {model.AWSDKConsumer} [consumerOverrideDetails] override the consumer for the visit\r\n * @since 1.4.0\r\n * @property {AWSDKVisitModalityType} modalityType represents the modality type for the visit\r\n * @property {model.AWSDKConsumer[]} proxies array of proxies to be used for the visit\r\n * @extends model.AWSDKDataObject\r\n */\r\nclass AWSDKVisitContext extends AWSDKDataObject {\r\n  constructor(data = {}) {\r\n    super(data);\r\n    this.__data.timeThisWasCreated = new Date().getTime();\r\n  }\r\n\r\n  get hasProvider() {\r\n    return Validator.isValidString(this.__data.providerId);\r\n  }\r\n\r\n  get requireResidencyCheck() {\r\n    return GenericParser.parseBoolean(this.__data.requireResidencyCheck);\r\n  }\r\n\r\n  get intakeId() {\r\n    return GenericParser.parseObject(this.__data.intakeId, AWSDKEntityId);\r\n  }\r\n\r\n  get consumer() {\r\n    const consumer = GenericParser.parseObject(this.__data.member, AWSDKConsumer);\r\n    if (this.__parent) {\r\n      consumer.parent = this.__parent;\r\n    }\r\n    if (this.proxies && this.proxies.length > 0) {\r\n      consumer.proxies = this.proxies;\r\n    }\r\n    return consumer;\r\n  }\r\n\r\n  get onDemandSpecialtyId() {\r\n    return this.__data.onDemandSpecialtyId;\r\n  }\r\n\r\n  get hasOnDemandSpecialty() {\r\n    return Validator.isValidString(this.__data.onDemandSpecialtyId);\r\n  }\r\n\r\n  get practice() {\r\n    return GenericParser.parseObject(this.__data.practice, AWSDKPractice);\r\n  }\r\n\r\n  get engagementId() {\r\n    return this.__data.engagementId;\r\n  }\r\n\r\n  get hasAppointment() {\r\n    return Validator.isValidString(this.__data.engagementId);\r\n  }\r\n\r\n  get requireAddress() {\r\n    return GenericParser.parseBoolean(this.__data.requireAddress);\r\n  }\r\n\r\n  get canPrescribe() {\r\n    return GenericParser.parseBoolean(this.__data.canPrescribe);\r\n  }\r\n\r\n  get showTriageQuestions() {\r\n    return GenericParser.parseBoolean(this.__data.showTriageQuestions);\r\n  }\r\n\r\n  get showConditionsQuestion() {\r\n    return GenericParser.parseBoolean(this.__data.showConditionsQuestion);\r\n  }\r\n\r\n  get showAllergiesQuestion() {\r\n    return GenericParser.parseBoolean(this.__data.showAllergiesQuestion);\r\n  }\r\n\r\n  get showMedicationsQuestion() {\r\n    return GenericParser.parseBoolean(this.__data.showMedicationsQuestion);\r\n  }\r\n\r\n  get showVitalsQuestion() {\r\n    return GenericParser.parseBoolean(this.__data.showVitalsQuestion);\r\n  }\r\n\r\n  get hasHealthHistory() {\r\n    return GenericParser.parseBoolean(this.__data.hasHealthHistory);\r\n  }\r\n\r\n  get topics() {\r\n    if (this.__topics === undefined) {\r\n      const topics = this.__data.topics;\r\n      if (topics != null && Array.isArray(topics) && topics.length > 0) {\r\n        this.__topics = topics.map(item => GenericParser.parseObject(item, AWSDKTopic));\r\n      } else {\r\n        this.__topics = null;\r\n      }\r\n    }\r\n    return this.__topics;\r\n  }\r\n\r\n  get shareHealthSummary() {\r\n    return GenericParser.parseBoolean(this.__data.shareHealthSummary);\r\n  }\r\n\r\n  get consumerFeedbackQuestion() {\r\n    return GenericParser.parseObject(this.__data.consumerFeedbackQuestion, AWSDKConsumerFeedbackQuestion);\r\n  }\r\n\r\n  get disclaimers() {\r\n    const disclaimers = this.__data.disclaimers;\r\n    if (disclaimers == null || !Array.isArray(disclaimers) || disclaimers.length === 0) {\r\n      return null;\r\n    }\r\n    return disclaimers.map(item => GenericParser.parseObject(item, AWSDKDisclaimer));\r\n  }\r\n\r\n  get triageQuestionList() {\r\n    return this.__data.triageQuestionList;\r\n  }\r\n\r\n  get providerId() {\r\n    return this.__data.providerId;\r\n  }\r\n\r\n  get triageQuestions() {\r\n    if (this.__data.triageQuestions == null) {\r\n      const triageQs = [];\r\n      const triageQL = this.triageQuestionList;\r\n      if (!Array.isArray(triageQL) || triageQL.length === 0) {\r\n        this.__data.triageQuestions = triageQs;\r\n        return this.__data.triageQuestions;\r\n      }\r\n      triageQL.forEach((item) => {\r\n        const triageQuestion = new AWSDKTriageQuestion();\r\n        triageQuestion.question = item;\r\n        triageQs.push(triageQuestion);\r\n      });\r\n      this.__data.triageQuestions = triageQs;\r\n    }\r\n    return this.__data.triageQuestions;\r\n  }\r\n\r\n  get otherTopic() {\r\n    return this.__data.otherTopic;\r\n  }\r\n\r\n  get callbackNumber() {\r\n    return this.__data.callbackNumber;\r\n  }\r\n\r\n  get triageQuestionAnswers() {\r\n    const answers = [];\r\n    const questions = this.triageQuestions;\r\n    if (questions != null) {\r\n      questions.forEach((item) => {\r\n        const answ = item.answer || '';\r\n        answers.push(answ);\r\n      });\r\n    }\r\n    return answers;\r\n  }\r\n\r\n  get timeThisWasCreated() {\r\n    return this.__data.timeThisWasCreated;\r\n  }\r\n\r\n  get isMatchmakerVisit() {\r\n    return GenericParser.parseBoolean(this.__data.isMatchmakerVisit);\r\n  }\r\n\r\n  get isQuickConnect() {\r\n    return GenericParser.parseBoolean(this.__data.isQuickConnect);\r\n  }\r\n\r\n  set isQuickConnect(isQuickConnect) {\r\n    this.__data.isQuickConnect = isQuickConnect;\r\n  }\r\n\r\n  get sourceId() {\r\n    return this.__data.sourceId;\r\n  }\r\n\r\n  set sourceId(sourceId) {\r\n    this.__data.sourceId = sourceId;\r\n  }\r\n\r\n  get consumerOverrideDetails() {\r\n    return this.__data.consumerOverrideDetails;\r\n  }\r\n\r\n  set consumerOverrideDetails(consumerOverrideDetails) {\r\n    this.__data.consumerOverrideDetails = consumerOverrideDetails;\r\n  }\r\n\r\n  get parent() {\r\n    return this.__parent ? this.__parent : null;\r\n  }\r\n\r\n  /**\r\n   *  @since 1.3.1\r\n   */\r\n\r\n  get proxies() {\r\n    return (Array.isArray(this.__data.proxies) && this.__data.proxies.map(element => GenericParser.parseObject(element, AWSDKConsumer))) || [];\r\n  }\r\n\r\n  set callbackNumber(callbackNumber) {\r\n    this.__data.callbackNumber = callbackNumber;\r\n  }\r\n\r\n  set shareHealthSummary(shareHealthSummary) {\r\n    this.__data.shareHealthSummary = shareHealthSummary;\r\n  }\r\n\r\n  set otherTopic(otherTopic) {\r\n    this.__data.otherTopic = otherTopic;\r\n  }\r\n\r\n  set parent(parent) {\r\n    if (parent != null) {\r\n      if (parent instanceof AWSDKConsumer) {\r\n        this.__parent = parent;\r\n      } else {\r\n        throw AWSDKError.AWSDKIllegalArgument('parent is not instance of AWSDKConsumer');\r\n      }\r\n    } else {\r\n      this.__parent = null;\r\n    }\r\n  }\r\n\r\n  /**\r\n   *  @since 1.3.1\r\n   */\r\n  set proxies(proxies) {\r\n    if (Array.isArray(proxies) && proxies.every(item => item instanceof AWSDKConsumer)) {\r\n      this.__data.proxies = proxies.map(item => item.__data);\r\n    } else {\r\n      this.__data.proxies = null;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @since 1.4.0\r\n   */\r\n  get modalityType() {\r\n    return this.__data.modality ? GenericParser.parseEnum(this.__data.modality, AWSDKVisitModalityType) : null;\r\n  }\r\n\r\n  /**\r\n   * @since 1.4.0\r\n   */\r\n  set modalityType(modalityType) {\r\n    let modalityValue;\r\n    try {\r\n      modalityValue = GenericParser.parseAndConvertEnumValue(modalityType);\r\n    } catch (error) {\r\n      modalityValue = null;\r\n    }\r\n    this.__data.modality = modalityValue;\r\n  }\r\n\r\n  /**\r\n   * Get transferFromVisitId\r\n   * @private\r\n   * @type {String}\r\n   */\r\n  get transferFromVisitId() {\r\n    return this.__data.transferFromVisitId;\r\n  }\r\n  /**\r\n   * Get proposed coupon code used to apply a coupon during transfers\r\n   * @private\r\n   * @type {String}\r\n   */\r\n  get proposedCouponCode() {\r\n    return this.__data.proposedCouponCode;\r\n  }\r\n\r\n  /**\r\n   * Get the first-available information related to this visit, if any\r\n   * @private\r\n   * @type {model.AWSDKFirstAvailableData}\r\n   */\r\n  get firstAvailableData() {\r\n    return this.__data.firstAvailableData ? GenericParser.parseObject(this.__data.firstAvailableData, AWSDKFirstAvailableData) : null;\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  set firstAvailableData(firstAvailableData) {\r\n    this.__data.firstAvailableData = firstAvailableData;\r\n  }\r\n\r\n  /**\r\n   * This method will copy data from the visit being transferred from.\r\n   * @private\r\n   */\r\n  setupTransfer(visit) {\r\n    this.__data.transferFromVisitId = visit.id.encryptedId;\r\n    if (visit.cost && visit.cost.proposedCouponCode) {\r\n      this.__data.proposedCouponCode = visit.cost.proposedCouponCode;\r\n    }\r\n    if (visit.modality) {\r\n      this.__data.modality = visit.modality.name;\r\n    }\r\n    this.isQuickConnect = visit.isProviderForTransferEligibleForQuickTransfer;\r\n  }\r\n}\r\nexport default AWSDKVisitContext;\r\n","/*!\r\n * American Well Consumer Web SDK\r\n *\r\n * Copyright (c) 2017 American Well.\r\n * All rights reserved.\r\n *\r\n * It is illegal to use, reproduce or distribute\r\n * any part of this Intellectual Property without\r\n * prior written authorization from American Well.\r\n */\r\n\r\nimport AWSDKEntity from '../awsdk_entity';\r\nimport GenericParser from '../../internal/parser/generic_parser';\r\n\r\n/**\r\n * This class represents any restrictions that could be applicable with the ability to prescribe for a given {@link model.AWSDKProvider|AWSDKProvider} within the state of actual residency of the {@link model.AWSDKConsumer|AWSDKConsumer}.\r\n * @property {Boolean} isStateFormularyActive boolean true if state formulary is active, false otherwise.\r\n * @property {Boolean} isRestrictedToOtc boolean true if the state formulary is restricted to otc (over-the-counter), false otherwise.\r\n * @extends model.AWSDKEntity\r\n */\r\nclass AWSDKStateFormularyRestriction extends AWSDKEntity {\r\n  get isStateFormularyActive() {\r\n    return GenericParser.parseBoolean(this.__data.isStateFormularyActive);\r\n  }\r\n\r\n  get isRestrictedToOtc() {\r\n    return GenericParser.parseBoolean(this.__data.isRestrictedToOtc);\r\n  }\r\n}\r\nexport default AWSDKStateFormularyRestriction;\r\n","/*!\r\n * American Well Consumer Web SDK\r\n *\r\n * Copyright (c) 2017 American Well.\r\n * All rights reserved.\r\n *\r\n * It is illegal to use, reproduce or distribute\r\n * any part of this Intellectual Property without\r\n * prior written authorization from American Well.\r\n */\r\n\r\nimport GenericParser from '../../internal/parser/generic_parser';\r\nimport AWSDKEntity from '../awsdk_entity';\r\nimport AWSDKConsumer from '../consumer/awsdk_consumer';\r\nimport AWSDKProviderDetails from '../provider/awsdk_provider_details';\r\nimport AWSDKAddress from '../awsdk_address';\r\nimport AWSDKConsumerFeedbackQuestion from '../visit/awsdk_consumer_feedback_question';\r\nimport AWSDKStateFormularyRestriction from '../visit/awsdk_state_formulary_restriction';\r\nimport AWSDKVisitCost from '../visit/awsdk_visit_cost';\r\nimport AWSDKPharmacy from '../pharmacy/awsdk_pharmacy';\r\nimport AWSDKState from '../awsdk_state';\r\nimport AWSDKTriageQuestion from '../visit/awsdk_triage_question';\r\nimport AWSDKVisitSchedule from '../visit/awsdk_visit_schedule';\r\nimport AWSDKProviderEntries from '../visit/awsdk_provider_entries';\r\nimport AWSDKIntake from '../visit/awsdk_intake';\r\nimport AWSDKDisposition from './awsdk_disposition';\r\nimport AWSDKEndReason from './awsdk_end_reason';\r\nimport AWSDKModality from '../awsdk_modality';\r\n\r\n/**\r\n * The visit summary, that is the 'wrapUp'.\r\n * @property {model.AWSDKStateFormularyRestriction} formularyRestriction any restrictions the state might enforce over the prescription\r\n * @property {model.AWSDKConsumerFeedbackQuestion} consumerFeedbackQuestion the question to be presented to consumer for feedback\r\n * @property {model.AWSDKTriageQuestion[]} triageQuestions an array of {@link model.AWSDKTriageQuestion|AWSDKTriageQuestion} with Q&A presented to consumer during triage\r\n * @property {model.AWSDKProviderEntries} providerEntries represents information entered by provider during visit: notes, diagnoses, prescriptions, etc.\r\n * @property {model.AWSDKVisitCost} visitCost contains details about the Visit's cost\r\n * @property {model.AWSDKPharmacy} pharmacy the pharmacy to send prescriptions to.\r\n * @property {model.AWSDKAddress} shippingAddress the address to ship prescriptions to.\r\n * @property {model.AWSDKProviderDetails} assignedProvider the assigned {@link model.AWSDKProvider|AWSDKProvider} for the visit\r\n * @property {model.AWSDKProviderDetails} providerProxy represents an individual acting on the {@link model.AWSDKProvider|AWSDKProvider}'s behalf\r\n * @property {model.AWSDKConsumer} consumer represents the {@link model.AWSDKConsumer|AWSDKConsumer} who had the visit\r\n * @property {model.AWSDKConsumer} consumerProxy represents the {@link model.AWSDKConsumer|AWSDKConsumer}'s parent.\r\n * @property {model.AWSDKState} consumerLocation the {@link model.AWSDKConsumer|AWSDKConsumer}'s state location\r\n * @property {String} practiceName  the name of the practice for which the {@link model.AWSDKProvider|AWSDKConsumer} is affiliated with\r\n * @property {String[]} inviteEmails an array of emails for any guests who were invited via email\r\n * @property {model.AWSDKVisitSchedule} schedule contains schedule information about the visit\r\n * @property {String} hipaaNoticeText the HIPAA notice text which must be accepted in order to send visit summary via email\r\n * @property {String} additionalHipaaNoticeText additional HIPAA terms which must be accepted in order to send visit summary via email\r\n * @property {String} initiatorEngagementOverridePhone the consumer's preferred phone number for this visit\r\n * @property {string} formattedInitiatorEngagementOverridePhone the consumer's preferred formatted phone number for this visit\r\n * @since 1.3.0\r\n * @property {model.AWSDKDisposition} disposition  the disposition of the visit\r\n * @since 1.3.0\r\n * @property {model.AWSDKEndReason} endReason the reason for ending the visit\r\n * @since 1.4.0\r\n * @property {model.AWSDKModality} modality represents the modality for the visit\r\n * @since 3.0.0\r\n * @property {model.AWSDKIntake} intake the intake completed for the visit\r\n * @extends model.AWSDKEntity\r\n */\r\nclass AWSDKVisitSummary extends AWSDKEntity {\r\n  get formularyRestriction() {\r\n    return GenericParser.parseObject(this.__data.formularyRestriction, AWSDKStateFormularyRestriction);\r\n  }\r\n\r\n  get providerEntries() {\r\n    return this.__data.providerEntries ? GenericParser.parseObject(this.__data.providerEntries, AWSDKProviderEntries) : null;\r\n  }\r\n\r\n  get visitCost() {\r\n    return GenericParser.parseObject(this.__data.cost, AWSDKVisitCost);\r\n  }\r\n\r\n  get pharmacy() {\r\n    return GenericParser.parseObject(this.__data.pharmacy, AWSDKPharmacy);\r\n  }\r\n\r\n  get shippingAddress() {\r\n    return this.__data.shippingAddress ? GenericParser(this.__data.shippingAddress, AWSDKAddress) : null;\r\n  }\r\n\r\n  get assignedProvider() {\r\n    return GenericParser.parseObject(this.__data.assignedProvider, AWSDKProviderDetails);\r\n  }\r\n\r\n  get providerProxy() {\r\n    return GenericParser.parseObject(this.__data.providerProxy, AWSDKProviderDetails);\r\n  }\r\n\r\n  get consumer() {\r\n    const consumer = GenericParser.parseObject(this.__data.member, AWSDKConsumer);\r\n    if ((consumer != null) && this.__data.memberProxy && this.__data.memberProxy.id && this.__data.memberProxy.id !== 'null') {\r\n      consumer.parent = GenericParser.parseObject(this.__data.memberProxy, AWSDKConsumer);\r\n    }\r\n    if (consumer) {\r\n      consumer.proxies = this.__proxies;\r\n    }\r\n    return consumer;\r\n  }\r\n\r\n  get consumerProxy() {\r\n    return GenericParser.parseObject(this.__data.memberProxy, AWSDKConsumer);\r\n  }\r\n\r\n  get consumerLocation() {\r\n    return GenericParser.parseObject(this.__data.memberLocation, AWSDKState);\r\n  }\r\n\r\n  get practiceName() {\r\n    return this.__data.practiceName;\r\n  }\r\n\r\n  get consumerFeedbackQuestion() {\r\n    return GenericParser.parseObject(this.__data.consumerFeedbackQuestion, AWSDKConsumerFeedbackQuestion);\r\n  }\r\n\r\n  get triageQuestions() {\r\n    if (this.__data.triageQA === undefined) {\r\n      let res = [];\r\n      const triageQuestions = this.__data.triageQuestions;\r\n      const triageAnswers = this.__data.triageAnswers;\r\n      if (triageQuestions && triageQuestions.length > 0) {\r\n        res = triageQuestions.map((item, index) => {\r\n          const temp = new AWSDKTriageQuestion();\r\n          temp.question = item;\r\n          if (triageAnswers && index < triageAnswers.length) {\r\n            temp.answer = triageAnswers[index];\r\n          }\r\n          return temp;\r\n        });\r\n      }\r\n      this.__data.triageQA = res;\r\n    }\r\n    return this.__data.triageQA;\r\n  }\r\n\r\n  get inviteEmails() {\r\n    return this.__data.videoInviteEmails;\r\n  }\r\n\r\n  get schedule() {\r\n    return this.__data.schedule ? GenericParser.parseObject(this.__data.schedule, AWSDKVisitSchedule) : null;\r\n  }\r\n\r\n  get hipaaNoticeText() {\r\n    return this.__data.hipaaNoticeText;\r\n  }\r\n\r\n  get additionalHipaaNoticeText() {\r\n    return this.__data.additionalHipaaNoticeText;\r\n  }\r\n\r\n  get initiatorEngagementOverridePhone() {\r\n    return this.__data.initiatorEngagementOverridePhone;\r\n  }\r\n\r\n  get formattedInitiatorEngagementOverridePhone() {\r\n    return this.__data.formattedInitiatorEngagementOverridePhone;\r\n  }\r\n\r\n  get disposition() {\r\n    return GenericParser.parseEnum(this.__data.disposition, AWSDKDisposition);\r\n  }\r\n\r\n  get endReason() {\r\n    return GenericParser.parseEnum(this.__data.endReason, AWSDKEndReason);\r\n  }\r\n\r\n  /**\r\n   * @since 1.3.1\r\n   */\r\n  set proxies(proxies) {\r\n    if (Array.isArray(proxies) && proxies.every(item => item instanceof AWSDKConsumer)) {\r\n      this.__proxies = proxies;\r\n    } else {\r\n      this.__proxies = null;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @since 1.4.0\r\n   */\r\n  get modality() {\r\n    return GenericParser.parseObject(this.__data.modality, AWSDKModality);\r\n  }\r\n\r\n  /**\r\n   * @since 3.0.0\r\n   */\r\n  get intake() {\r\n    return this.__data.intake ? GenericParser.parseObject(this.__data.intake, AWSDKIntake) : null;\r\n  }\r\n}\r\nexport default AWSDKVisitSummary;\r\n","/*!\r\n * American Well Consumer Web SDK\r\n *\r\n * Copyright (c) 2017 American Well.\r\n * All rights reserved.\r\n *\r\n * It is illegal to use, reproduce or distribute\r\n * any part of this Intellectual Property without\r\n * prior written authorization from American Well.\r\n */\r\n\r\nimport AWSDKResponse from './awsdk_response';\r\nimport GenericParser from '../../parser/generic_parser';\r\nimport AWSDKVisitCost from '../../../model/visit/awsdk_visit_cost';\r\n\r\n/**\r\n * Represents a response object wrapper to a single {@link AWSDKVisitCost} object type\r\n * @property {model.AWSDKVisitCost} visitCost the estimated cost of a visit\r\n * @extends model.AWSDKResponse\r\n */\r\nclass AWSDKVisitCostResponse extends AWSDKResponse {\r\n  get cost() {\r\n    return GenericParser.parseObject(this.__data.cost, AWSDKVisitCost);\r\n  }\r\n}\r\nexport default AWSDKVisitCostResponse;\r\n","/*!\r\n * American Well Consumer Web SDK\r\n *\r\n * Copyright (c) 2018 American Well.\r\n * All rights reserved.\r\n *\r\n * It is illegal to use, reproduce or distribute\r\n * any part of this Intellectual Property without\r\n * prior written authorization from American Well.\r\n */\r\n\r\nimport AWSDKEntity from '../../../model/awsdk_entity';\r\nimport Util from '../../../internal/util/util';\r\nimport GenericParser from '../../../internal/parser/generic_parser';\r\n\r\n/**\r\n * The AWSDKVisitRequestBody class represents the JSON payload that is expected on call to {@link service.VisitService#createVisit|VisitService.createVisit} method <br>\r\n *\r\n * For an appointment the data that will be sent is\r\n *      engagementId + user input data\r\n * For a visit with a specific provider\r\n *      memberId + providerId + user input data\r\n * For a visit with the first available provider\r\n *      memberId + onDemandSpecialtyId + user input data\r\n * For a transfer visit\r\n *      memberId + providerId + transferFromVisitId + optional first available data if the transfer used a first available search to find the provider\r\n *\r\n * The following is a list of user input data\r\n *      shareHealthSummary\r\n *      otherTopic\r\n *      topics\r\n *      callbackNumber\r\n *      triageIntakeId\r\n *      triageIntakeAnswerList\r\n *      disclaimers\r\n *      isQuickConnect\r\n *      sourceId\r\n *      consumerOverrideDetails\r\n *      modalityType\r\n *\r\n */\r\nclass AWSDKVisitRequestBody {\r\n  constructor(visitContext, ignorePropagation = false) {\r\n    this.visitContext = visitContext;\r\n    this.ignorePropagation = ignorePropagation;\r\n  }\r\n\r\n  /**\r\n   * This method is a convenience method for presenting this object as a JSON string\r\n   * @returns {String} a json string representation of this object suitable to be used as payload for request that creates a visit\r\n   */\r\n  getAsJSONString(systemConfiguration) {\r\n    const res = { connectionType: 'WebSDK' };\r\n    const firstAvailableData = this.visitContext.firstAvailableData;\r\n\r\n    const networkType = Util.getNetworkType();\r\n    if (networkType) {\r\n      res.networkType = networkType;\r\n    }\r\n\r\n    if (this.visitContext.engagementId != null) {\r\n      res.engagementId = this.visitContext.engagementId;\r\n    } else {\r\n      res.memberId = this.visitContext.consumer != null ? this.visitContext.consumer.id.encryptedId : null;\r\n      if (this.visitContext.onDemandSpecialtyId != null && firstAvailableData == null) { // new-style, first-available search has yet to be done\r\n        res.onDemandSpecialtyId = this.visitContext.onDemandSpecialtyId;\r\n      } else if (this.visitContext.onDemandSpecialtyId != null && firstAvailableData != null) { // old-style, first available search was performed using this context\r\n        res.providerId = firstAvailableData.provider.id.encryptedId;\r\n        res.firstAvailableSearchStartTime = firstAvailableData.getFormattedStartTime();\r\n        res.firstAvailableSearchEndTime = firstAvailableData.getFormattedEndTime();\r\n        if (firstAvailableData.firstAvailableSearchProviderAskCount != null) {\r\n          res.firstAvailableProviderAskCount = firstAvailableData.firstAvailableSearchProviderAskCount;\r\n        }\r\n      } else { // normal visit flow\r\n        res.providerId = this.visitContext.providerId;\r\n      }\r\n      if (this.visitContext.transferFromVisitId != null) {\r\n        res.transferFromEngagementId = this.visitContext.transferFromVisitId;\r\n      }\r\n    }\r\n    // if it is an engagement or if not doing a transfer\r\n    // fill in the rest of the data\r\n    if (this.visitContext.engagementId != null || !this.visitContext.transferFromVisitId) {\r\n      res.shareHealthSummary = this.visitContext.shareHealthSummary;\r\n      res.otherTopic = this.visitContext.otherTopic;\r\n      res.topicIds = this.arrayOfIds(this.visitContext.topics ? this.visitContext.topics.filter(topic => topic.selected) : []);\r\n      res.disclaimerIds = this.arrayOfIds(this.visitContext.disclaimers);\r\n      res.callback = this.visitContext.callbackNumber;\r\n      res.triageIntakeId = this.visitContext.intakeId ? this.visitContext.intakeId.encryptedId : null;\r\n      res.triageIntakeAnswerList = this.visitContext.triageQuestionAnswers;\r\n    }\r\n\r\n    if (this.visitContext.isQuickConnect) {\r\n      res.isQuickConnect = this.visitContext.isQuickConnect;\r\n    }\r\n\r\n    if (this.visitContext.sourceId) {\r\n      res.sourceId = this.visitContext.sourceId;\r\n    }\r\n\r\n    if (this.visitContext.consumerOverrideDetails) {\r\n      res.consumerOverrideDetails = this.visitContext.consumerOverrideDetails.__getAsRequestBody(systemConfiguration);\r\n    }\r\n    res.ignorePropagation = this.ignorePropagation;\r\n\r\n    if (this.visitContext.modalityType) {\r\n      res.modality = GenericParser.parseAndConvertEnumValue(this.visitContext.modalityType);\r\n    }\r\n\r\n    return JSON.stringify(res);\r\n  }\r\n\r\n  /**\r\n   * Convenience method that takes an takes an array of {@link AWSDKEntity} objects and returns an array of its encrypted ids <br>\r\n   * @param {model.AWSDKEntity[]} array the array of objects whose encrypted Ids we want to extract\r\n   * @returns {String[]} an array of encrypted Ids\r\n   * @internal\r\n   */\r\n  arrayOfIds(array) {\r\n    if (!Array.isArray(array) || array.length === 0) {\r\n      return [];\r\n    }\r\n    const res = [];\r\n    array.forEach((item) => {\r\n      if (item instanceof AWSDKEntity) {\r\n        const id = item.id.encryptedId;\r\n        if (id) {\r\n          res.push(id);\r\n        }\r\n      }\r\n    });\r\n    return res;\r\n  }\r\n}\r\n\r\nexport default AWSDKVisitRequestBody;\r\n","/*!\r\n * American Well Consumer Web SDK\r\n *\r\n * Copyright (c) 2017 American Well.\r\n * All rights reserved.\r\n *\r\n * It is illegal to use, reproduce or distribute\r\n * any part of this Intellectual Property without\r\n * prior written authorization from American Well.\r\n */\r\n\r\nimport AWSDKResponse from './awsdk_response';\r\nimport GenericParser from '../../parser/generic_parser';\r\nimport AWSDKVisit from '../../../model/visit/awsdk_visit';\r\n\r\n/**\r\n * Represents a response object wrapper to a single {@link AWSDKVisit} object type\r\n * @property {model.AWSDKVisit} visit the visit object representing information about the visit\r\n */\r\nclass AWSDKVisitResponse extends AWSDKResponse {\r\n  get visit() {\r\n    return GenericParser.parseObject(this.__data.visit, AWSDKVisit);\r\n  }\r\n}\r\nexport default AWSDKVisitResponse;\r\n","/*!\n * American Well Consumer Web SDK\n *\n * Copyright (c) 2017 American Well.\n * All rights reserved.\n *\n * It is illegal to use, reproduce or distribute\n * any part of this Intellectual Property without\n * prior written authorization from American Well.\n */\nimport AWSDKResponse from './awsdk_response';\nimport AWSDKVisitContext from '../../../model/visit/awsdk_visit_context';\nimport GenericParser from '../../parser/generic_parser';\n\n\n/**\n * Represents a response object wrapper to a single {@link AWSDKVisitContext} object type\n * @property {model.AWSDKVisitContext} visitContext the visit context in preparation for a visit\n * @extends model.AWSDKResponse\n */\nclass AWSDKVisitContextResponse extends AWSDKResponse {\n  get visitContext() {\n    return GenericParser.parseObject(this.__data.visitConfigurations, AWSDKVisitContext);\n  }\n}\n\nexport default AWSDKVisitContextResponse;\n","/*!\r\n * American Well Consumer Web SDK\r\n *\r\n * Copyright (c) 2017 American Well.\r\n * All rights reserved.\r\n *\r\n * It is illegal to use, reproduce or distribute\r\n * any part of this Intellectual Property without\r\n * prior written authorization from American Well.\r\n */\r\n\r\nimport AWSDKResponse from './awsdk_response';\r\nimport GenericParser from '../../parser/generic_parser';\r\nimport AWSDKVisitSummary from '../../../model/visit/awsdk_visit_summary';\r\n\r\nclass AWSDKVisitSummaryResponse extends AWSDKResponse {\r\n  get visitSummary() {\r\n    return GenericParser.parseObject(this.__data.wrapUp, AWSDKVisitSummary);\r\n  }\r\n}\r\nexport default AWSDKVisitSummaryResponse;\r\n","/*!\n * American Well Consumer Web SDK\n *\n * Copyright (c) 2017 American Well.\n * All rights reserved.\n *\n * It is illegal to use, reproduce or distribute\n * any part of this Intellectual Property without\n * prior written authorization from American Well.\n */\n\n/*\n * See https://github.com/ismailhabib/custom-protocol-detection\n */\nclass CustomProtocolHandler {\n  constructor(timeout) {\n    this.__timeout = timeout || 10000;\n  }\n  _registerEvent(target, eventType, cb) {\n    if (target.addEventListener) {\n      target.addEventListener(eventType, cb);\n      return {\n        remove: () => {\n          target.removeEventListener(eventType, cb);\n        },\n      };\n    }\n    target.attachEvent(eventType, cb);\n    return {\n      remove: () => {\n        target.detachEvent(eventType, cb);\n      },\n    };\n  }\n\n  _createHiddenIframe(target, uri) {\n    const iframe = document.createElement('iframe');\n    iframe.src = uri;\n    iframe.id = 'hiddenIframe';\n    iframe.style.display = 'none';\n    target.appendChild(iframe);\n\n    return iframe;\n  }\n\n  openUriWithHiddenFrame(uri, failCb, successCb) {\n    let timeout = null;\n\n    let iframe = document.querySelector('#hiddenIframe');\n    if (!iframe) {\n      iframe = this._createHiddenIframe(document.body, 'about:blank');\n    }\n    iframe.focus();\n    const handler = this._registerEvent(window, 'blur', () => {\n      clearTimeout(timeout);\n      handler.remove();\n      successCb();\n    });\n\n    timeout = setTimeout(() => {\n      failCb();\n      handler.remove();\n    }, this.__timeout);\n\n    iframe.contentWindow.location.href = uri;\n  }\n\n  openUriWithTimeoutHack(uri, failCb, successCb) {\n    let timeout = null;\n    // window must have focus for blur to work\n    window.focus();\n    // handle page running in an iframe (blur must be registered with top level window)\n    let target = window;\n    while (target !== target.parent) {\n      target = target.parent;\n    }\n    const handler = this._registerEvent(target, 'blur', () => {\n      clearTimeout(timeout);\n      handler.remove();\n      successCb();\n    });\n\n    timeout = setTimeout(() => {\n      failCb();\n      handler.remove();\n    }, this.__timeout);\n\n\n    window.location = uri;\n  }\n\n  openUriUsingFirefox(uri, failCb, successCb) {\n    let iframe = document.querySelector('#hiddenIframe');\n\n    if (!iframe) {\n      iframe = this._createHiddenIframe(document.body, 'about:blank');\n    }\n\n    try {\n      iframe.contentWindow.location.href = uri;\n      successCb();\n    } catch (e) {\n      if (e.name === 'NS_ERROR_UNKNOWN_PROTOCOL') {\n        failCb();\n      }\n    }\n  }\n\n  openUriUsingIEInOlderWindows(uri, failCb, successCb) {\n    const ieVersion = this.getInternetExplorerVersion();\n    if (ieVersion === 10) {\n      this.openUriUsingIE10InWindows7(uri, failCb, successCb);\n    } else if (ieVersion === 9) {\n      this.openUriWithHiddenFrame(uri, failCb, successCb);\n    } else {\n      this.openUriInNewWindowHack(uri, failCb, successCb);\n    }\n  }\n\n  openUriUsingIE10InWindows7(uri, failCb, successCb) {\n    const timeout = setTimeout(failCb, this.__timeout);\n    window.addEventListener('blur', () => {\n      clearTimeout(timeout);\n      successCb();\n    });\n\n    let iframe = document.querySelector('#hiddenIframe');\n    if (!iframe) {\n      iframe = this._createHiddenIframe(document.body, 'about:blank');\n    }\n    try {\n      iframe.contentWindow.location.href = uri;\n    } catch (e) {\n      failCb();\n      clearTimeout(timeout);\n    }\n  }\n\n  openUriInNewWindowHack(uri, failCb, successCb) {\n    const myWindow = window.open('', '', 'width=0,height=0');\n\n    myWindow.document.write(`<iframe src='${uri}'></iframe>`);\n\n    setTimeout(() => {\n      try {\n        myWindow.location.href; /* eslint no-unused-expressions: 'off' */\n        myWindow.setTimeout('window.close()', this.__timeout);\n        successCb();\n      } catch (e) {\n        myWindow.close();\n        failCb();\n      }\n    }, this.__timeout);\n  }\n\n  checkBrowser() {\n    const isOpera = !!window.opera || navigator.userAgent.indexOf(' OPR/') >= 0;\n    return {\n      isOpera,\n      isFirefox: typeof InstallTrigger !== 'undefined',\n      isSafari: /^((?!chrome|android).)*safari/i.test(navigator.userAgent),\n      isChrome: !!window.chrome && !isOpera,\n      isIE: false || !!document.documentMode, // At least IE6\n    };\n  }\n\n  getInternetExplorerVersion() {\n    let rv = -1;\n    if (navigator.appName === 'Microsoft Internet Explorer') {\n      const ua = navigator.userAgent;\n      const re = new RegExp('MSIE ([0-9]{1,}[.0-9]{0,})');\n      if (re.exec(ua) != null) {\n        rv = parseFloat(RegExp.$1);\n      }\n    } else if (navigator.appName === 'Netscape') {\n      const ua = navigator.userAgent;\n      const re = new RegExp('Trident/.*rv:([0-9]{1,}[.0-9]{0,})');\n      if (re.exec(ua) != null) {\n        rv = parseFloat(RegExp.$1);\n      }\n    }\n    return rv;\n  }\n\n  launchUri(uri, failCb, successCb) {\n    const failCallback = () => {\n      if (failCb) {\n        failCb();\n      }\n    };\n\n    const successCallback = () => {\n      if (successCb) {\n        successCb();\n      }\n    };\n\n    if (navigator.msLaunchUri) { // for IE and Edge in Win 8 and Win 10\n      navigator.msLaunchUri(uri, successCb, failCb);\n    } else {\n      const browser = this.checkBrowser();\n      if (browser.isFirefox) {\n        this.openUriUsingFirefox(uri, failCallback, successCallback);\n      } else if (browser.isChrome || browser.isSafari) {\n        this.openUriWithTimeoutHack(uri, failCallback, successCallback);\n      } else if (browser.isIE) {\n        this.openUriUsingIEInOlderWindows(uri, failCallback, successCallback);\n      } else {\n        failCallback();\n      }\n    }\n  }\n}\n\nexport default CustomProtocolHandler;\n","/*!\r\n * American Well Consumer Web SDK\r\n *\r\n * Copyright (c) 2018 American Well.\r\n * All rights reserved.\r\n *\r\n * It is illegal to use, reproduce or distribute\r\n * any part of this Intellectual Property without\r\n * prior written authorization from American Well.\r\n */\r\nimport AWSDKResponse from './awsdk_response';\r\nimport GerericParser from '../../parser/generic_parser';\r\nimport AWSDKChatReport from '../../../model/chat/awsdk_chat_report';\r\n\r\n/**\r\n * This class represents a response object obtained from a call to {@link service.VisitService#addChatMessage}\r\n * @property {model.AWSDKChatReport} chatReport represents a report of chat messages between consumer and provider\r\n * @extends model.AWSDKResponse\r\n */\r\nclass AWSDKChatReportResponse extends AWSDKResponse {\r\n  get chatReport() {\r\n    return GerericParser.parseObject(this.__data.chatReport, AWSDKChatReport);\r\n  }\r\n}\r\nexport default AWSDKChatReportResponse;\r\n","/*!\r\n * American Well Consumer Web SDK\r\n *\r\n * Copyright (c) 2018 American Well.\r\n * All rights reserved.\r\n *\r\n * It is illegal to use, reproduce or distribute\r\n * any part of this Intellectual Property without\r\n * prior written authorization from American Well.\r\n */\r\n\r\nimport AWSDKLanguage from '../../../model/awsdk_language';\r\nimport GenericParser from '../../parser/generic_parser';\r\nimport AWSDKError from '../../../error/awsdk_error';\r\n\r\n/**\r\n * Internal data object used to initiate a first-available search on behalf of a consumer\r\n * @property {String} specialtyId the id of the {@link model.AWSDKOnDemandSpecialty} in which to search\r\n * @property {model.AWSDKLanguage=} languageSpoken the language to filter the search by, if any\r\n * @property {String} [practiceId] the encrypted practice id of the {@link model.AWSDKPractice} in which to search. When practice id is provided, the practice associated to the id will be used instead of the practice associated to the specialty\r\n * @property {String[]} [providerTypes] an array of provider types to include in the search. When the list of provider types is provided, the list of provider types will be combined with the list of provider types associated to the specialty\r\n */\r\nclass AWSDKFirstAvailableRequest {\r\n  constructor(onDemandSpecialtyId, languageSpoken, practiceId, providerTypes) {\r\n    this.__specialtyId = onDemandSpecialtyId;\r\n    if (languageSpoken != null) {\r\n      if (!(languageSpoken instanceof AWSDKLanguage)) {\r\n        throw AWSDKError.AWSDKIllegalArgument('languageSpoken must be of type AWSDKLanguage');\r\n      }\r\n      this.__languageSpoken = languageSpoken;\r\n      this.__practiceId = practiceId;\r\n      this.__providerTypes = providerTypes;\r\n    }\r\n  }\r\n\r\n  get specialtyId() {\r\n    return this.__specialtyId;\r\n  }\r\n\r\n  get languageSpoken() {\r\n    return this.__languageSpoken ? GenericParser.parseObject(this.__languageSpoken, AWSDKLanguage) : null;\r\n  }\r\n\r\n  get practiceId() {\r\n    return this.__practiceId;\r\n  }\r\n\r\n  get providerTypes() {\r\n    return this.__providerTypes;\r\n  }\r\n\r\n  getAsJSONString() {\r\n    const content = {\r\n      specialtyId: this.specialtyId,\r\n      practiceId: this.practiceId,\r\n      providerTypes: this.providerTypes && this.providerTypes.map(pt => pt.resourceKey),\r\n    };\r\n    if (this.languageSpoken) {\r\n      content.languageSpoken = this.languageSpoken.value;\r\n    }\r\n    return JSON.stringify(content);\r\n  }\r\n}\r\nexport default AWSDKFirstAvailableRequest;\r\n","/*!\r\n * American Well Consumer Web SDK\r\n *\r\n * Copyright (c) 2018 American Well.\r\n * All rights reserved.\r\n *\r\n * It is illegal to use, reproduce or distribute\r\n * any part of this Intellectual Property without\r\n * prior written authorization from American Well.\r\n */\r\n\r\nimport AWSDKResponse from './awsdk_response';\r\nimport GenericParser from '../../parser/generic_parser';\r\nimport AWSDKFirstAvailableData from '../../../model/visit/awsdk_first_available_data';\r\n\r\n/**\r\n * Wrapper around an {@link model.AWSDKFirstAvailableData}\r\n * @property {model.AWSDKFirstAvailableData} firstAvailableData the {@link model.AWSDKFirstAvailableData}\r\n * @since 1.1.0\r\n * @extends model.AWSDKResponse\r\n */\r\nclass AWSDKFirstAvailableResponse extends AWSDKResponse {\r\n  get firstAvailableData() {\r\n    return this.__data.status ? GenericParser.parseObject(this.__data.status, AWSDKFirstAvailableData) : null;\r\n  }\r\n}\r\n\r\nexport default AWSDKFirstAvailableResponse;\r\n","/*!\r\n * American Well Consumer Web SDK\r\n *\r\n * Copyright (c) 2018 American Well.\r\n * All rights reserved.\r\n *\r\n * It is illegal to use, reproduce or distribute\r\n * any part of this Intellectual Property without\r\n * prior written authorization from American Well.\r\n */\r\n\r\nimport AWSDKDataObject from '../awsdk_dataobject';\r\nimport GenericParser from '../../internal/parser/generic_parser';\r\nimport AWSDKUserType from '../../awsdk_user_type';\r\n\r\n/**\r\n * Describes the recipient of a video invitation and the type of user that issued the invitation\r\n * @property {String} email the email of the person invited\r\n * @property {model.AWSDKUserType} inviter the {@link model.AWSDKUserType|AWSDKUserType} of the user that issued the invitation\r\n\r\n * @since 1.1.0\r\n * @extends model.AWSDKDataObject\r\n */\r\nclass AWSDKVideoInvitation extends AWSDKDataObject {\r\n  get email() {\r\n    return this.__data.email;\r\n  }\r\n\r\n  get inviter() {\r\n    return GenericParser.parseEnum(this.__data.inviter, AWSDKUserType);\r\n  }\r\n}\r\nexport default AWSDKVideoInvitation;\r\n","/*!\r\n * American Well Consumer Web SDK\r\n *\r\n * Copyright (c) 2018 American Well.\r\n * All rights reserved.\r\n *\r\n * It is illegal to use, reproduce or distribute\r\n * any part of this Intellectual Property without\r\n * prior written authorization from American Well.\r\n */\r\nimport AWSDKResponse from './awsdk_response';\r\nimport AWSDKVideoInvitation from '../../../model/visit/awsdk_video_invitation';\r\nimport GenericParser from '../../parser/generic_parser';\r\n\r\n/**\r\n * Simple response wrapper around a single instance of {@link model.AWSDKVideoInvitation}\r\n * @property {model.AWSDKVideoInvitation} videoInvitation the {@link model.AWSDKVideoInvitation}\r\n * @extends model.AWSDKResponse\r\n * @since 1.1.0\r\n */\r\nclass AWSDKVideoInvitationResponse extends AWSDKResponse {\r\n  get videoInvitation() {\r\n    return this.__data.videoInvitation ? GenericParser.parseObject(this.__data.videoInvitation, AWSDKVideoInvitation) : null;\r\n  }\r\n}\r\nexport default AWSDKVideoInvitationResponse;\r\n","/*!\r\n * American Well Consumer Web SDK\r\n *\r\n * Copyright © 2018 American Well.\r\n * All rights reserved.\r\n *\r\n * It is illegal to use, reproduce or distribute\r\n * any part of this Intellectual Property without\r\n * prior written authorization from American Well.\r\n */\r\n\r\n/**\r\n * Enum for AWSDKConferenceStatus.\r\n * @readonly\r\n * @enum {string}\r\n * @since 1.2.0\r\n */\r\nconst AWSDKConferenceStatus = {\r\n  /**\r\n   * Waiting.\r\n   */\r\n  Waiting: 'Waiting',\r\n  /**\r\n   * Started.\r\n   */\r\n  Started: 'Started',\r\n  /**\r\n   * Ended.\r\n   */\r\n  Ended: 'Ended',\r\n  /**\r\n   * Cancelled.\r\n   */\r\n  Cancelled: 'Cancelled',\r\n  /**\r\n   * Disabled.\r\n   */\r\n  Disabled: 'Disabled',\r\n};\r\nObject.freeze(AWSDKConferenceStatus);\r\nexport default AWSDKConferenceStatus;\r\n","/*!\r\n * American Well Consumer Web SDK\r\n *\r\n * Copyright (c) 2018 American Well.\r\n * All rights reserved.\r\n *\r\n * It is illegal to use, reproduce or distribute\r\n * any part of this Intellectual Property without\r\n * prior written authorization from American Well.\r\n */\r\n\r\nimport AWCoreSDKVideoParticipantType from 'awcoresdk/lib/awcoresdk_video_participant_type';\r\nimport AWSDKEntity from '../awsdk_entity';\r\nimport GenericParser from '../../internal/parser/generic_parser';\r\nimport AWSDKConferenceStatus from './awsdk_conference_status';\r\nimport AWSDKConferenceDetails from '../../internal/model/conference/awsdk_conference_details';\r\nimport AWSDKConferenceRole from '../../internal/model/conference/awsdk_conference_role';\r\n\r\n/**\r\n * Data encapsulating a guest's video visit\r\n * @property {Number} remainingMins the number of minutes remaining in the video visit\r\n * @property {model.AWSDKConferenceStatus} conferenceStatus the current status of the visit\r\n * @property {Boolean} telehealthVideoStarted whether or not the visit has started\r\n * @property {Boolean} finished whether or not the visit can be considered complete\r\n * @property {Boolean} isUsingWebRTC TRUE if the visit the participant is invited to is using webRTC\r\n * @property {String} [displayName] The optional display name entered by the guest when joining the visit\r\n * @since 1.1.0\r\n * @extends model.AWSDKEntity\r\n */\r\nclass AWSDKVideoParticipant extends AWSDKEntity {\r\n  get remainingMins() {\r\n    return this.__data.remainingMins;\r\n  }\r\n  get conferenceStatus() {\r\n    return GenericParser.parseEnum(this.__data.conferenceStatus, AWSDKConferenceStatus);\r\n  }\r\n  /**\r\n   * @since 2.0.0\r\n   */\r\n  get finished() {\r\n    return this.conferenceStatus === AWSDKConferenceStatus.Ended || this.conferenceStatus === AWSDKConferenceStatus.Cancelled || this.conferenceStatus === AWSDKConferenceStatus.Disabled;\r\n  }\r\n\r\n  // @internal\r\n  get href() {\r\n    return this.__data.href;\r\n  }\r\n  // @internal\r\n  get conferenceId() {\r\n    return this.__data.conferenceId;\r\n  }\r\n  // @internal\r\n  get memberEntityId() {\r\n    return this.__data.memberEntityId;\r\n  }\r\n  // @internal\r\n  get providerEntityId() {\r\n    return this.__data.providerEntityId;\r\n  }\r\n\r\n  /**\r\n   * TRUE if the visit the participant is invited to is using webRTC\r\n   * @since 2.0.0\r\n   * @type {boolean}\r\n   */\r\n  get isUsingWebRTC() {\r\n    return this.__data.conference && this.__data.conference.selectedModalityType.includes('RTC');\r\n  }\r\n\r\n  /**\r\n   * The optional display name entered by the guest when joining the visit\r\n   * @since 2.0.0\r\n   * @type {string}\r\n   */\r\n  get displayName() {\r\n    return this.__data.displayName;\r\n  }\r\n\r\n  /**\r\n   * The visit's underlying conference details\r\n   * @private\r\n   * @since 2.0.0\r\n   */\r\n  get conferenceDetails() {\r\n    return this.__data.conference ? GenericParser.parseObject(this.__data.conference, AWSDKConferenceDetails) : undefined;\r\n  }\r\n\r\n  /**\r\n   * Used for WebRTC visits to find the visit's representation of a participant based on the UUID provided by the client-side WebRTC library.\r\n   *\r\n   * @param {string} uuid The unique identifier for this participant in the conference.\r\n   * @private\r\n   * @internal\r\n   * @since 2.0.0\r\n   * @returns {Object} The user associated with the uuid (Provider or Consumer). undefined if the participant cannot be found.\r\n   */\r\n  participantById(uuid) {\r\n    if (this.conferenceDetails) {\r\n      const foundParticipant = this.conferenceDetails.participants.find(participant => participant.vendorId === uuid);\r\n      if (foundParticipant) {\r\n        if (foundParticipant.role === AWSDKConferenceRole.PROVIDER) {\r\n          return { type: AWCoreSDKVideoParticipantType.PROVIDER };\r\n        }\r\n        return { type: AWCoreSDKVideoParticipantType.CONSUMER };\r\n      }\r\n    }\r\n    return undefined;\r\n  }\r\n}\r\nexport default AWSDKVideoParticipant;\r\n","/*!\r\n * American Well Consumer Web SDK\r\n *\r\n * Copyright (c) 2018 American Well.\r\n * All rights reserved.\r\n *\r\n * It is illegal to use, reproduce or distribute\r\n * any part of this Intellectual Property without\r\n * prior written authorization from American Well.\r\n */\r\nimport AWSDKResponse from './awsdk_response';\r\nimport AWSDKVideoParticipant from '../../../model/visit/awsdk_video_participant';\r\nimport GenericParser from '../../parser/generic_parser';\r\n\r\n/**\r\n * Simple response wrapper around a single instance of {@link model.AWSDKVideoParticipant}\r\n * @property {model.AWSDKVideoParticipant} videoParticipant the {@link model.AWSDKVideoParticipant}\r\n * @extends model.AWSDKResponse\r\n */\r\nclass AWSDKVideoInvitationResponse extends AWSDKResponse {\r\n  get videoParticipant() {\r\n    return this.__data.videoParticipant ? GenericParser.parseObject(this.__data.videoParticipant, AWSDKVideoParticipant) : null;\r\n  }\r\n}\r\nexport default AWSDKVideoInvitationResponse;\r\n","/*!\r\n * American Well Consumer Web SDK\r\n *\r\n * Copyright (c) 2018 American Well.\r\n * All rights reserved.\r\n *\r\n * It is illegal to use, reproduce or distribute\r\n * any part of this Intellectual Property without\r\n * prior written authorization from American Well.\r\n */\r\n\r\nimport AWSDKVisit from './awsdk_visit';\r\n\r\n/**\r\n * The AWSDKSpeedPass class represents a speed pass eligible visit.\r\n * For a description of the available properties see the JSDoc for {@link model.AWSDKVisit|AWSDKVisit}\r\n * @since 1.2.0\r\n * @extends model.AWSDKVisit\r\n */\r\nclass AWSDKSpeedPass extends AWSDKVisit {\r\n  /**\r\n  * @private\r\n  */\r\n  buildVisitRequestJson() {\r\n    const request = {};\r\n    request.memberId = this.consumer.id.encryptedId;\r\n    request.accountKey = this.consumerProxy ? this.consumerProxy.id.persistentId : this.consumer.id.persistentId;\r\n    request.previousEngagementIdForSpeedPass = this.id.encryptedId;\r\n    if (this.onDemandSpecialtyId) {\r\n      request.onDemandSpecialtyId = this.onDemandSpecialtyId;\r\n    } else if (this.assignedProvider) {\r\n      request.providerId = this.assignedProvider.id.encryptedId;\r\n    }\r\n    return JSON.stringify(request);\r\n  }\r\n}\r\nexport default AWSDKSpeedPass;\r\n","/*!\r\n * American Well Consumer Web SDK\r\n *\r\n * Copyright (c) 2018 American Well.\r\n * All rights reserved.\r\n *\r\n * It is illegal to use, reproduce or distribute\r\n * any part of this Intellectual Property without\r\n * prior written authorization from American Well.\r\n */\r\n\r\nimport AWSDKResponse from './awsdk_response';\r\nimport GenericParser from '../../parser/generic_parser';\r\nimport AWSDKSpeedPass from '../../../model/visit/awsdk_speed_pass';\r\n\r\n/**\r\n * Represents a response object wrapper to a single {@link model.AWSDKSpeedPass} object type\r\n * @property {model.AWSDKSpeedPass} speedPass the speedPass object representing information about the speedPass eligible visit\r\n * @extends model.AWSDKResponse\r\n */\r\nclass AWSDKSpeedPassResponse extends AWSDKResponse {\r\n  get speedPass() {\r\n    return GenericParser.parseObject(this.__data.speedPassEligibility, AWSDKSpeedPass);\r\n  }\r\n}\r\nexport default AWSDKSpeedPassResponse;\r\n","/*!\r\n * American Well Consumer Web SDK\r\n *\r\n * Copyright (c) 2018 American Well.\r\n * All rights reserved.\r\n *\r\n * It is illegal to use, reproduce or distribute\r\n * any part of this Intellectual Property without\r\n * prior written authorization from American Well.\r\n */\r\n\r\n\r\n/**\r\n * Represents the components that are required to have a WebRTC video visit.\r\n *\r\n * @property {function} successCallback Function to execute when the video visit has ended successfully\r\n * @property {function} errorCallback Function to execute when the video visit has encountered an unrecoverable error\r\n * @property {object} messages The localized strings to be used during the visit\r\n * @property {HTMLElement} [consoleWrapperAttachPoints] the DOM nodes that are specific to this Consumer Web SDK\r\n * @property {HTMLElement} videoConsoleContainer the DOM node where the video console will be rendered\r\n * @since 1.2.1\r\n */\r\nclass AWSDKVideoContext {\r\n  constructor(args) {\r\n    this.__config = args;\r\n  }\r\n  get successCallback() {\r\n    return this.__config.successCallback;\r\n  }\r\n  get errorCallback() {\r\n    return this.__config.errorCallback;\r\n  }\r\n  get consoleWrapperAttachPoints() {\r\n    return this.__config.consoleWrapperAttachPoints;\r\n  }\r\n  get messages() {\r\n    return this.__config.messages;\r\n  }\r\n  /**\r\n   * The video console container\r\n   * @type {HTMLElement}\r\n   * @since 2.0.0\r\n   */\r\n  get videoConsoleContainer() {\r\n    return this.__config.videoConsoleContainer;\r\n  }\r\n\r\n  /**\r\n   * The callback that gets invoked on an updated visit\r\n   * @type {Function}\r\n   * @since 2.0.0\r\n   */\r\n  get updatedCallback() {\r\n    return this.__config.updatedCallback;\r\n  }\r\n}\r\nexport default AWSDKVideoContext;\r\n","/*!\n * American Well Consumer Web SDK\n *\n * Copyright (c) 2018 American Well.\n * All rights reserved.\n *\n * It is illegal to use, reproduce or distribute\n * any part of this Intellectual Property without\n * prior written authorization from American Well.\n */\nimport AWSDKDataObject from '../awsdk_dataobject';\n\n/**\n * Note made by an {@link model.AWSDKProvider|AWSDKProvider} during an {@link model.AWSDKVisit|AWSDKVisit}\n * @property {String} message the contents of the note\n * @since 1.2.1\n * @extends model.AWSDKDataObject\n */\nclass AWSDKProviderNote extends AWSDKDataObject {\n  get message() {\n    return this.__data.message;\n  }\n}\nexport default AWSDKProviderNote;\n","/*!\n * American Well Consumer Web SDK\n *\n * Copyright © 2018 American Well.\n * All rights reserved.\n *\n * It is illegal to use, reproduce or distribute\n * any part of this Intellectual Property without\n * prior written authorization from American Well.\n */\nimport AWSDKResponse from './awsdk_response';\nimport GenericParser from '../../parser/generic_parser';\nimport AWSDKProviderNote from '../../../model/visit/awsdk_provider_note';\n\n\n/**\n * Simple wrapper for a collection of {@link model.AWSDKProviderNote|AWSDKProviderNote}\n * @extends model.AWSDKResponse\n */\nclass AWSDKProviderNotesResponse extends AWSDKResponse {\n  get notes() {\n    return this.__data.notes.map(item => GenericParser.parseObject(item, AWSDKProviderNote));\n  }\n}\n\nexport default AWSDKProviderNotesResponse;\n","/*!\n * American Well Consumer Web SDK\n *\n * Copyright (c) 2018 American Well.\n * All rights reserved.\n *\n * It is illegal to use, reproduce or distribute\n * any part of this Intellectual Property without\n * prior written authorization from American Well.\n */\n\nimport Service from '../../service/service';\nimport AWSDKResponse from '../model/response/awsdk_response';\n\n/**\n * Logs messages remotely to the configured installation\n *\n * @private\n * @extends service.Service\n */\nclass ServerLogger extends Service {\n  /**\n   * @private\n   */\n  logToServer(level, message, visitLoggingDataObject) {\n    const link = this.findNamedLink(this.__links, 'logMessage');\n    const options = this.generateOptions('POST', link.url, false);\n    options.headers['Content-Type'] = 'application/json';\n    options.auth = this.getSdkAuth();\n    options.body = this.__buildMessageBody(message, level, visitLoggingDataObject);\n    return this.executeRequest(options, AWSDKResponse)\n      .catch((error) => {\n        this.__logger.error('Failed to log message to server', error);\n      });\n  }\n\n  setLinks(links) {\n    this.__links = links;\n  }\n\n  setConfig(config) {\n    this.__config = config;\n  }\n\n  __buildMessageBody(message, level, visitLoggingDataObject) {\n    // the server expects a list of objects with TYPE and ENCRYPTEDID for member, provider, engagement\n    const params = visitLoggingDataObject ? this.__buildParams(visitLoggingDataObject) : [];\n\n    // the message MUST be a string\n    const stringifiedMessage = typeof message !== 'string' ? JSON.stringify(message) : message;\n\n    // adding the string param {0} as the server doesn't do it automatically\n    const preparedMessage = this.__addParameterPlaceholdersToMessage(stringifiedMessage, params.length);\n\n    return JSON.stringify({ level, message: preparedMessage, params });\n  }\n\n  // adds the appropriate placeholders from {0} to {n} where n = the number of params passed in if and only if they don't already exist in the string\n  __addParameterPlaceholdersToMessage(message, numOfParams) {\n    let modifiedMessage = message;\n\n    for (let i = 0; i < numOfParams; i += 1) {\n      if (!message.includes(`{${i}}`)) {\n        modifiedMessage = `${modifiedMessage} {${i}}`;\n      }\n    }\n    return modifiedMessage;\n  }\n\n  // only adds the param if the id exists\n  __buildParams(visitLoggingDataObject) {\n    const params = [];\n    if (visitLoggingDataObject.visitId) {\n      params.push({ type: 'engagement', encryptedId: visitLoggingDataObject.visitId });\n    }\n    if (visitLoggingDataObject.consumerId) {\n      params.push({ type: 'member', encryptedId: visitLoggingDataObject.consumerId });\n    }\n    if (visitLoggingDataObject.providerId) {\n      params.push({ type: 'provider', encryptedId: visitLoggingDataObject.providerId });\n    }\n    return params;\n  }\n}\n\nexport default ServerLogger;\n","/*!\n * American Well Consumer Web SDK\n *\n * Copyright (c) 2018 American Well.\n * All rights reserved.\n *\n * It is illegal to use, reproduce or distribute\n * any part of this Intellectual Property without\n * prior written authorization from American Well.\n */\n\n\n/**\n * Logs messages to a local logger and to a remote logger as well.\n *\n * @private\n */\nclass CombinedLogger {\n  constructor(localLog, remoteLog) {\n    this.__log = localLog;\n    this.__remoteLog = remoteLog;\n    this.info = this.info.bind(this);\n    this.error = this.error.bind(this);\n    this.fatal = this.fatal.bind(this);\n    this.warn = this.warn.bind(this);\n    this.debug = this.debug.bind(this);\n    this.trace = this.trace.bind(this);\n  }\n\n  /**\n   * @private\n   */\n  fatal(visitLoggingDataObject, ...messages) {\n    const logMessage = `AWSDK ${messages}`;\n    this.__log.fatal(logMessage);\n    // no such thing as 'fatal' for loglevel library\n    this.__logToRemote(this.__log.levels.ERROR, logMessage, visitLoggingDataObject);\n  }\n\n  /**\n   * @private\n   */\n  error(visitLoggingDataObject, ...messages) {\n    const logMessage = `AWSDK ${messages}`;\n    this.__log.error(logMessage);\n    this.__logToRemote(this.__log.levels.ERROR, logMessage, visitLoggingDataObject);\n  }\n  /**\n   * @private\n   */\n  warn(visitLoggingDataObject, ...messages) {\n    const logMessage = `AWSDK ${messages}`;\n    this.__log.warn(logMessage);\n    this.__logToRemote(this.__log.levels.WARN, logMessage, visitLoggingDataObject);\n  }\n  /**\n   * @private\n   */\n  info(visitLoggingDataObject, ...messages) {\n    const logMessage = `AWSDK ${messages}`;\n    this.__log.info(logMessage);\n    this.__logToRemote(this.__log.levels.INFO, logMessage, visitLoggingDataObject);\n  }\n  /**\n   * @private\n   */\n  debug(visitLoggingDataObject, ...messages) {\n    const logMessage = `AWSDK ${messages}`;\n    this.__log.debug(logMessage);\n    this.__logToRemote(this.__log.levels.DEBUG, logMessage, visitLoggingDataObject);\n  }\n  /**\n   * @private\n   */\n  trace(visitLoggingDataObject, ...messages) {\n    const logMessage = `AWSDK ${messages}`;\n    this.__log.trace(logMessage);\n    this.__logToRemote(this.__log.levels.TRACE, logMessage, visitLoggingDataObject);\n  }\n\n  /**\n   * @private\n   */\n  __logToRemote(level, message, visitLoggingDataObject) {\n    if (this.__remoteLog && this.__log.getLevel() <= level) {\n      this.__remoteLog.logToServer(this.getLevelString(level), message, visitLoggingDataObject);\n    }\n  }\n\n  getLevelString(level) {\n    switch (level) {\n      case this.__log.levels.TRACE: return 'trace';\n      case this.__log.levels.DEBUG: return 'debug';\n      case this.__log.levels.INFO: return 'info';\n      case this.__log.levels.WARN: return 'warn';\n      case this.__log.levels.ERROR: return 'error';\n      default: return undefined;\n    }\n  }\n}\n\nexport default CombinedLogger;\n","import AWCoreSDKVisitLoggingDataObject from 'awcoresdk/lib/visit_logging_data_object';\n\n\n/**\n * Data object used to pass visit information into the common sdk for logging purposes.\n *\n * @private\n * @extends AWCoreSDKVisitLoggingDataObject\n */\nclass AWSDKVisitLoggingDataObject extends AWCoreSDKVisitLoggingDataObject {\n  /**\n   * Constructor for AWSDKVisitLoggingDataObject\n   *\n   * @param {string} sdkVersion Current version of the provider or consumer SDK.\n   * @param {string} language The accept-language used in the header..\n   * @param {model.AWSDKVisit} visit The visit.\n   * @private\n   */\n  constructor(sdkVersion, language, visit) {\n    super();\n    this._language = language;\n    this._sdkVersion = sdkVersion;\n    this._visit = visit;\n  }\n\n  get language() {\n    return this._language;\n  }\n\n  get disposition() {\n    return this._visit.disposition.toString();\n  }\n\n  get consumerId() {\n    return this._visit.consumer.id.encryptedId;\n  }\n\n  get providerId() {\n    return this._visit.assignedProvider.id.encryptedId;\n  }\n\n  get visitId() {\n    return this._visit.id.encryptedId;\n  }\n\n  get sdkVersion() {\n    return this._sdkVersion;\n  }\n}\n\nexport default AWSDKVisitLoggingDataObject;\n","/*!\r\n * American Well Consumer Web SDK\r\n *\r\n * Copyright (c) 2018 American Well.\r\n * All rights reserved.\r\n *\r\n * It is illegal to use, reproduce or distribute\r\n * any part of this Intellectual Property without\r\n * prior written authorization from American Well.\r\n */\r\n\r\n\r\nimport AWSDKError from '../../error/awsdk_error';\r\nimport Validator from '../../internal/validator/validator';\r\nimport AWSDKDisposition from './awsdk_disposition';\r\n\r\n/**\r\n * This class represents the search criteria for finding a visit.\r\n * Get an instance of this via {@link service.VisitService#getNewVisitSearchCriteria()|VisitService.getNewVisitSearchCriteria}\r\n * @property {Date} [startDate] the start date of the visit to filter by\r\n * @property {Date} [endDate] the end date of the visit to filter by\r\n * @property {String} [sourceId] the source id of the visit to filter by\r\n * @property {model.AWSDKDisposition[]} [dispositions] the list of dispositions to filter by\r\n * @property {Number} [maxResults] the max results to return\r\n * @since 1.4.0\r\n *\r\n */\r\nclass AWSDKVisitSearchCriteria {\r\n  constructor(criteria = {}) {\r\n    this.__startDate = criteria.startDate;\r\n    this.__endDate = criteria.endDate;\r\n    this.__sourceId = criteria.sourceId;\r\n    this.__dispositions = criteria.dispositions;\r\n    this.__maxResults = criteria.maxResults;\r\n  }\r\n\r\n  set startDate(startDate) {\r\n    if (!(startDate instanceof Date)) {\r\n      throw AWSDKError.AWSDKIllegalArgument('startDate must be of type Date');\r\n    }\r\n    this.__startDate = startDate;\r\n  }\r\n\r\n  get startDate() {\r\n    return this.__startDate;\r\n  }\r\n\r\n  set endDate(endDate) {\r\n    if (!(endDate instanceof Date)) {\r\n      throw AWSDKError.AWSDKIllegalArgument('endDate must be of type Date');\r\n    }\r\n    this.__endDate = endDate;\r\n  }\r\n\r\n  get endDate() {\r\n    return this.__endDate;\r\n  }\r\n\r\n  get sourceId() {\r\n    return this.__sourceId;\r\n  }\r\n\r\n  set sourceId(sourceId) {\r\n    this.__sourceId = sourceId;\r\n  }\r\n\r\n  set dispositions(dispositions) {\r\n    if (!Array.isArray(dispositions) || !dispositions.every(d => AWSDKDisposition.__dispositions.includes(d))) {\r\n      throw AWSDKError.AWSDKIllegalArgument('dispositions must be of type AWSDKDisposition[]');\r\n    }\r\n    this.__dispositions = dispositions;\r\n  }\r\n\r\n  get dispositions() {\r\n    return this.__dispositions;\r\n  }\r\n\r\n  set maxResults(maxResults) {\r\n    if (!(Validator.isInt(maxResults))) {\r\n      throw AWSDKError.AWSDKIllegalArgument('maxResults must be of type int');\r\n    }\r\n    this.__maxResults = maxResults;\r\n  }\r\n\r\n  get maxResults() {\r\n    return this.__maxResults;\r\n  }\r\n}\r\nexport default AWSDKVisitSearchCriteria;\r\n","/*!\r\n * American Well Consumer Web SDK\r\n *\r\n * Copyright (c) 2018 American Well.\r\n * All rights reserved.\r\n *\r\n * It is illegal to use, reproduce or distribute\r\n * any part of this Intellectual Property without\r\n * prior written authorization from American Well.\r\n */\r\n\r\nimport AWSDKResponse from './awsdk_response';\r\nimport GenericParser from '../../parser/generic_parser';\r\nimport AWSDKVisit from '../../../model/visit/awsdk_visit';\r\n\r\n/**\r\n * Represents a response object wrapper around an array of {@link AWSDKVisit} object types\r\n * @property {model.AWSDKVisit[]} visits the array of visit objects\r\n * @extends model.AWSDKResponse\r\n */\r\nclass AWSDKVisitsResponse extends AWSDKResponse {\r\n  get visits() {\r\n    return Array.isArray(this.__data.list) ?\r\n      this.__data.list.map(item => GenericParser.parseObject(item, AWSDKVisit)) : [];\r\n  }\r\n}\r\nexport default AWSDKVisitsResponse;\r\n","import AWCoreSDKVisitLoggingDataObject from 'awcoresdk/lib/visit_logging_data_object';\n\n\n/**\n * Data object used to pass visit information into the common sdk for logging purposes.\n *\n * @private\n */\nclass AWSDKGuestLoggingDataObject extends AWCoreSDKVisitLoggingDataObject {\n  /**\n   * Constructor for AWSDKGuestLoggingDataObject\n   *\n   * @param {string} sdkVersion Current version of the provider or consumer SDK.\n   * @param {string} language The accept-language used in the header..\n   * @param {model.AWSDKVideoParticipant} participant The guest participant.\n   * @private\n   */\n  constructor(sdkVersion, language, participant) {\n    super();\n    this._language = language;\n    this._sdkVersion = sdkVersion;\n    this._participant = participant;\n  }\n\n  get language() {\n    return this._language;\n  }\n\n  get disposition() {\n    return undefined;\n  }\n\n  get consumerId() {\n    return this._participant.memberEntityId;\n  }\n\n  get providerId() {\n    return this._participant.providerEntityId;\n  }\n\n  get visitId() {\n    return undefined;\n  }\n\n  get sdkVersion() {\n    return this._sdkVersion;\n  }\n}\n\nexport default AWSDKGuestLoggingDataObject;\n","/*!\r\n * American Well Consumer Web SDK\r\n *\r\n * Copyright (c) 2019 American Well.\r\n * All rights reserved.\r\n *\r\n * It is illegal to use, reproduce or distribute\r\n * any part of this Intellectual Property without\r\n * prior written authorization from American Well.\r\n */\r\nimport AWSDKResponse from './awsdk_response';\r\nimport AWSDKVideoInvitation from '../../../model/visit/awsdk_video_invitation';\r\nimport GenericParser from '../../parser/generic_parser';\r\n\r\n/**\r\n * Simple response wrapper around an array of {@link model.AWSDKVideoInvitation}\r\n * @property {model.AWSDKVideoInvitation[]} videoInvitations an array of {@link model.AWSDKVideoInvitation} objects\r\n * @extends model.AWSDKResponse\r\n * @since 2.0.0\r\n */\r\nclass AWSDKVideoInvitationListResponse extends AWSDKResponse {\r\n  get videoInvitations() {\r\n    return (Array.isArray(this.__data.videoInvitations) && this.__data.videoInvitations.map(item => GenericParser.parseObject(item, AWSDKVideoInvitation))) || [];\r\n  }\r\n}\r\nexport default AWSDKVideoInvitationListResponse;\r\n","/*!\n * American Well Consumer Web SDK\n *\n * Copyright © 2017 American Well.\n * All rights reserved.\n *\n * It is illegal to use, reproduce or distribute\n * any part of this Intellectual Property without\n * prior written authorization from American Well.\n */\nimport deprecated from 'awcoresdk/lib/util/deprecated';\nimport defaultMessages from 'awcoresdk/lib/i18n';\nimport AWCoreSDKVideoConsole from 'awcoresdk/lib/external_video_console';\nimport AWCoreSDKVideoMetrics from 'awcoresdk/lib/video_metrics';\nimport AWCoreSDKVideoParticipant from 'awcoresdk/lib/participant';\nimport AWCoreSDKVideoParticipantType from 'awcoresdk/lib/awcoresdk_video_participant_type';\nimport AWCoreSDKVisitConfiguration from 'awcoresdk/lib/visit_configuration';\nimport AWCoreSDKVideoConfiguration from 'awcoresdk/lib/video_configuration';\nimport AWCoreSDKVendor from 'awcoresdk/lib/awcoresdk_vendor';\nimport AWCoreSDKBaseEventHandler from 'awcoresdk/lib/awcoresdk_base_event_handler';\nimport version from '../version';\nimport Service from './service';\nimport AWSDKError from './../error/awsdk_error';\nimport AWSDKErrorCode from './../error/awsdk_error_code';\nimport AWSDKResponse from '../internal/model/response/awsdk_response';\nimport AWSDKConsumer from './../model/consumer/awsdk_consumer';\nimport AWSDKProvider from './../model/provider/awsdk_provider';\nimport AWSDKAppointment from './../model/appointment/awsdk_appointment';\nimport Validator from '../internal/validator/validator';\nimport AWSDKTransfer from '../model/visit/awsdk_transfer';\nimport AWSDKVisit from '../model/visit/awsdk_visit';\nimport AWSDKVisitContext from '../model/visit/awsdk_visit_context';\nimport AWSDKVisitSummary from '../model/visit/awsdk_visit_summary';\nimport AWSDKVisitCostResponse from '../internal/model/response/awsdk_visit_cost_response';\nimport AWSDKVisitRequestBody from '../internal/model/request/awsdk_visit_request_body';\nimport AWSDKVisitResponse from '../internal/model/response/awsdk_visit_response';\nimport AWSDKVisitContextResponse from '../internal/model/response/awsdk_visit_context_response';\nimport AWSDKVisitSummaryResponse from '../internal/model/response/awsdk_visit_summary_response';\nimport CustomProtocolHandler from '../internal/util/custom_protocol_handler';\nimport AWSDKChatReportResponse from '../internal/model/response/awsdk_chat_report_response';\nimport AWSDKOnDemandSpecialty from '../model/practice/awsdk_on_demand_specialty';\nimport AWSDKFirstAvailableRequest from '../internal/model/request/awsdk_first_available_request';\nimport AWSDKFirstAvailableResponse from '../internal/model/response/awsdk_first_available_response';\nimport AWSDKLanguage from '../model/awsdk_language';\nimport AWSDKVideoInvitationResponse from '../internal/model/response/awsdk_video_invitation_response';\nimport AWSDKVideoParticipant from '../model/visit/awsdk_video_participant';\nimport AWSDKVideoParticipantResponse from '../internal/model/response/awsdk_video_participant_response';\nimport AWSDKFirstAvailableStatus from '../model/visit/awsdk_first_available_status';\nimport AWSDKDisposition from '../model/visit/awsdk_disposition';\nimport AWSDKEndReason from '../model/visit/awsdk_end_reason';\nimport AWSDKConferenceStatus from '../model/visit/awsdk_conference_status';\nimport AWSDKSpeedPassResponse from '../internal/model/response/awsdk_speed_pass_response';\nimport AWSDKSpeedPass from '../model/visit/awsdk_speed_pass';\nimport AWSDKVideoContext from '../model/visit/awsdk_video_context';\nimport AWSDKProviderNotesResponse from '../internal/model/response/awsdk_notes_response';\nimport ServerLogger from '../internal/logger/server_logger';\nimport CombinedLogger from '../internal/logger/combined_logger';\nimport AWSDKUserType from '../awsdk_user_type';\nimport AWSDKVisitLoggingDataObject from '../internal/model/awsdk_visit_logging_data_object';\nimport AWSDKPractice from '../model/practice/awsdk_practice';\nimport AWSDKVisitSearchCriteria from '../model/visit/awsdk_visit_search_criteria';\nimport AWSDKVisitsResponse from '../internal/model/response/awsdk_visits_response';\nimport Util from '../internal/util/util';\nimport GenericParser from '../internal/parser/generic_parser';\nimport AWSDKProviderType from '../model/provider/awsdk_provider_type';\nimport AWSDKVisitModalityType from '../model/visit/awsdk_visit_modality_type';\nimport AWSDKConsumerOverrideDetails from '../model/consumer/awsdk_consumer_override_details';\nimport AWSDKConsumerMiddleNameHandling from '../model/consumer/awsdk_consumer_middle_name_handling';\nimport AWSDKGuestLoggingDataObject from '../internal/model/awsdk_guest_logging_data_object';\nimport AWSDKVideoInvitationListResponse from '../internal/model/response/awsdk_video_invitation_list_response';\n\n/**\n * The VisitService class handles all the aspects of a visit.\n * <br/><br/>\n * The basic sequence for a consumer visit should be\n * <ul>\n * <li>Start by calling {@link service.VisitService#getVisitContext|getVisitContext}</li>\n * <li>Update the visit context with data provided by the consumer</li>\n * <li>Call {@link service.VisitService#createVisit|createVisit} passing the visitContext</li>\n * <p>Once the visit is created, the process of calculating the cost of the visit will begin. The cost calculation can take some time to complete.</p>\n * <li>Call {@link service.VisitService#waitForVisitCostCalculationToFinish|waitForVisitCostCalculationToFinish}</li>\n * <li>At this point, if the visit is not free, the payment method can be checked by calling {@link service.ConsumerService#getPaymentMethod|getPaymentMethod}</li>\n * <li>If needed, the consumer credit card can be updated by calling {@link service.ConsumerService#updatePaymentMethod|updatePaymentMethod}</li>\n * <li>A coupon can be applied by calling {@link service.VisitService#applyCouponCode|applyCouponCode}</li>\n * <li>Call {@link service.VisitService#startVisit|startVisit}</li>\n * <p>The consumer is now in the provider's waiting room and the provider has been notified</p>\n * </ul>\n * <br/>\n * <br/>\n * For visits using <b>The Telehealth Video Client</b>:\n * <br/>\n * <br/>\n * <li>Call {@link service.VisitService#launchTelehealthVideo|launchTelehealthVideo}</li>\n * <p>This will indicate if the consumer has successfully launched the telehealth video.\n * If telehealth video failed to launch the consumer does not have the telehealth video installed.\n * The consumer will need to download and install the Telehealth Video from the {@link service.VisitService#telehealthVideoInstallUrl|telehealthVideoInstallUrl}</li>\n * Once the Telehealth Video is installed it can be re-launched by calling {@link service.VisitService#launchTelehealthVideo|launchTelehealthVideo}</p>\n * <li>Call {@link service.VisitService#waitForTelehealthVideoToStart|waitForTelehealthVideoToStart}</li>\n * <p>The Teleahealth video will now have successfully started</p>\n * <li>Call {@link service.VisitService#waitForProviderToJoinVisit|waitForProviderToJoinVisit}</li>\n * <p>The provider has now joined and the visit can proceed</p>\n * <li>Call {@link service.VisitService#createVideoContext|createVideoContext} passing the configuration object</li>\n * <li>Call {@link service.VisitService#startWebRTCVisit|startWebRTCVisit} passing the videoConfiguration created in the step above</li>\n * <li>Call {@link service.VisitService#getVisitSummary|getVisitSummary}</li>\n * <br/>\n * <br/>\n * For visits using <b>The WebRTC Video Experience</b>:.\n * <br/>\n * <br/>\n * The WebRTC video console handles updating the connection status and waiting for the visit to finish so the workflow\n * after calling {@link service.VisitService#startVisit|startVisit} would be:\n * <br/>\n * <br/>\n * <li>Call {@link service.VisitService#waitForProviderToJoinVisit|waitForProviderToJoinVisit}</li>\n * <li>Call {@link service.VisitService#createVideoContext|createVideoContext}</li>\n * <p>Among other things, this function expects callback handlers to be specified for when the visit is updated, finished, or encounters an error.</p>\n * <li>Call {@link service.VisitService#startWebRTCVisit|startWebRTCVisit}</li>\n * <li>Call {@link service.VisitService#getVisitSummary|getVisitSummary}</li>\n * <p>Once the visit is finished (the provided successCallback on {@link model.AWSDKVideoContext} is invoked), getVisitSummary can be called.</p>\n * </ul>\n * @property {String} telehealthVideoInstallUrl the TelehealthVideo install url\n * @extends service.Service\n */\nclass VisitService extends Service {\n  constructor(props) {\n    super(props);\n    // eslint-disable-nextline no-unused-vars\n    if (this.__config.visitPollingInterval == null) {\n      this.__config.visitPollingInterval = 3000;\n    }\n    if (this.__config.visitCostPollingInterval == null) {\n      this.__config.visitCostPollingInterval = 3000;\n    }\n    if (this.__config.visitCostPollingTimeout == null) {\n      this.__config.visitCostPollingTimeout = 60000;\n    }\n    if (this.__config.firstAvailablePollingInterval == null) {\n      this.__config.firstAvailablePollingInterval = 3000;\n    }\n    if (this.__config.firstAvailablePollingTimeout == null) {\n      this.__config.firstAvailablePollingTimeout = 60000;\n    }\n    this.__systemConfiguration = props.systemConfiguration;\n    this.__customProtocolHandler = new CustomProtocolHandler(this.__config.launchTelehealthVideoClientTimeout);\n  }\n\n  /** --------------------- Delegate Methods ------------------*/\n\n  /**\n   * @private\n   */\n  __pollForVisit(videoContext, visit) {\n    const currentFunction = 'VisitService.__pollForVisit';\n    this.__logger.info(currentFunction, 'Started', visit);\n    return this.getVisit(visit, true).then((result) => {\n      this.__visit = result;\n      this.__logger.debug(currentFunction, 'Returning with result', result);\n      if (!this.__visit.finished && videoContext.consoleWrapperAttachPoints) {\n        this.__updateConsoleWrapper(videoContext.consoleWrapperAttachPoints, this.__visit);\n      }\n      return result;\n    }).catch((error) => {\n      this.__logger.error(currentFunction, 'Encountered an error when polling for visit', error);\n      return Promise.reject(error);\n    });\n  }\n\n  /**\n   * @private\n   */\n  __pollForVisitWithTimeout(videoContext, visit, timeout) {\n    const currentFunction = 'VisitService.__pollForVisitWithTimeout';\n    this.__logger.info(currentFunction, 'Started', visit);\n\n    // race between a timeout and the getVisit\n    return Promise.race([this.__pollForVisit(videoContext, visit),\n      new Promise((_, reject) => setTimeout(() => reject(new Error('Request timeout')), timeout))]);\n  }\n\n  /**\n   * @private\n   */\n  __pollForGuestParticipant(participant) {\n    const currentFunction = 'VisitService.__pollForGuestParticipant';\n    this.__logger.info(currentFunction, 'Started', participant);\n    return this.getVideoParticipant(participant);\n  }\n\n  /**\n   * <p><br>Supported Visit Dispositions:</br>\n   * <ul>\n   * <li>{@link model.AWSDKDisposition.InProgress|InProgress}</li>\n   * <li>{@link model.AWSDKDisposition.PreVisitScreening|PreVisitScreening}</li>\n   * </ul>\n   * </p>\n   * @private\n   */\n  __updateMetrics(visit, metrics) {\n    const currentFunction = 'VisitService.__updateMetrics';\n    this.__logger.debug(currentFunction, 'Started', visit, metrics);\n    if (!(visit instanceof AWSDKVisit)) {\n      const error = AWSDKError.AWSDKIllegalArgument('Visit argument is not of type AWSDKVisit');\n      this.__logger.error(currentFunction, error);\n      return Promise.reject(error);\n    }\n    if (!(metrics instanceof AWCoreSDKVideoMetrics)) {\n      const error = AWSDKError.AWSDKIllegalArgument('Metrics argument is not of type AWCoreSDKVideoMetrics');\n      this.__logger.error(currentFunction, error);\n      return Promise.reject(error);\n    }\n    const link = this.findNamedLink(visit.links, 'videoMetricsMember');\n    if (!Validator.isValidLink(link)) {\n      const error = AWSDKError.AWSDKInternalError('visit does not have a \"videoMetricsMember\" link entry');\n      this.__logger.error(currentFunction, 'error', error);\n      return Promise.reject(error);\n    }\n    const options = this.generateOptions('PUT', link.url);\n    options.auth = this.getUserAuth(visit.consumer);\n    if (options.auth == null) {\n      const error = AWSDKError.AWSDKConsumerNotAuthenticated();\n      this.__logger.error(currentFunction, 'error', error);\n      return Promise.reject(error);\n    }\n\n    options.form.set('isJoined', metrics.isJoined);\n    options.form.set('isSignedIn', metrics.isSignedIn);\n    options.form.set('isEndRequested', metrics.isEndRequested);\n    options.form.set('videoFailureReason', metrics.videoFailureReason);\n    options.form.set('manualRetryCount', metrics.manualRetryCount);\n    options.form.set('autoRetryCount', metrics.autoRetryCount);\n    options.form.set('videoPlatform', 'WEBRTC');\n    options.form.set('clientVersion', version.sdkVersion);\n    return this.executeRequest(options, AWSDKResponse)\n      .then((response) => {\n        this.updateUserAuthEntry(visit.consumer, response.authToken);\n        this.__logger.debug(currentFunction, 'Got response', response);\n        return response;\n      })\n      .catch((error) => {\n        this.__logger.error(currentFunction, 'error', error);\n        throw error;\n      });\n  }\n\n  /**\n   * @private\n   */\n  __onVisitEnd(successCallback, consoleWrapperAttachPoints, visit, visitEndDetails) {\n    const currentFunction = 'VisitService.__onVisitEnd';\n    this.__logger.info(currentFunction, 'Started', successCallback, visit, visitEndDetails);\n\n    if (consoleWrapperAttachPoints) {\n      this.__cleanUpAppendedContent(consoleWrapperAttachPoints);\n    }\n    if (successCallback) {\n      successCallback(visit, visitEndDetails);\n    }\n  }\n\n  /**\n   * @private\n   */\n  __onVisitUpdated(updatedCallback, visit) {\n    const currentFunction = 'VisitService.__onVisitUpdated';\n    this.__logger.info(currentFunction, 'Started', updatedCallback, visit);\n    if (updatedCallback) {\n      updatedCallback(visit);\n    }\n  }\n  /**\n   * @private\n   */\n  __onVisitError(errorCallback, visit, endReason, error) {\n    const currentFunction = 'VisitService.__onVisitError';\n    this.__logger.error(currentFunction, 'Started', errorCallback, visit, endReason, error);\n    if (errorCallback) {\n      errorCallback(visit, endReason, error);\n    }\n  }\n\n  /**\n   * @private\n   */\n  __onExitVisitRequested(visit) {\n    const currentFunction = 'VisitService.__onExitVisitRequested';\n    this.__logger.debug(currentFunction, 'Started');\n    return (visit.disposition === AWSDKDisposition.InProgress) ? this.endVisit(visit) : this.cancelVisit(visit);\n  }\n\n  /**\n   * @private\n   */\n  __onGuestExitVisitRequested(visit) {\n    const currentFunction = 'VisitService.__onGuestExitVisitRequested';\n    this.__logger.debug(currentFunction, 'Started');\n    return Promise.resolve(visit);\n  }\n\n  /**\n   * @private\n   */\n  __onCallMeSelected(visit) {\n    const currentFunction = 'VisitService.__onCallMeSelected';\n    this.__logger.debug(currentFunction, 'Started');\n    return this.addPhoneToVisit(visit);\n  }\n\n  /**\n   * @private\n   */\n  __setClickableEvents(consoleWrapperAttachPoints, messages) {\n    if (consoleWrapperAttachPoints) {\n      const currentFunction = 'VisitService.__setClickableEvents';\n      this.__logger.info(currentFunction, 'started', consoleWrapperAttachPoints);\n      const providerNotesDOMNode = consoleWrapperAttachPoints.providerNotesDOMNode;\n      const chatDOMNode = consoleWrapperAttachPoints.chatDOMNode;\n      const inviteGuestDOMNode = consoleWrapperAttachPoints.inviteGuestDOMNode;\n      const menuDetailsWrapperDOMNode = consoleWrapperAttachPoints.menuDetailsWrapperDOMNode;\n      const notesDetailsDOMNode = consoleWrapperAttachPoints.noteDetailsDOMNode;\n      const chatDetailsDOMNode = consoleWrapperAttachPoints.chatDetailsDOMNode;\n      const chatMsgAreaDOMNode = consoleWrapperAttachPoints.chatDetailsMessageAreaDOMNode;\n      const inviteGuestDetailsDOMNode = consoleWrapperAttachPoints.inviteGuestDetailsDOMNode;\n      const chatDetailsInputButtonDOMNode = consoleWrapperAttachPoints.chatDetailsInputButtonDOMNode;\n      const chatDetailsInputDOMNode = consoleWrapperAttachPoints.chatDetailsInputDOMNode;\n      const inviteGuestButtonDOMNode = consoleWrapperAttachPoints.inviteGuestButtonDOMNode;\n      const inviteGuestInputDOMNode = consoleWrapperAttachPoints.inviteGuestInputDOMNode;\n      const closeMenuDOMNode = consoleWrapperAttachPoints.closeMenuDOMNode;\n      this.__cleanUpAppendedContent(consoleWrapperAttachPoints);\n      providerNotesDOMNode.onclick = (e) => {\n        e.preventDefault();\n        this.__removeClass(menuDetailsWrapperDOMNode, 'awsdk-hidden');\n        this.__removeClass(notesDetailsDOMNode, 'awsdk-hidden');\n        this.__addClass(providerNotesDOMNode, 'awsdk-expanded');\n        this.__removeClass(providerNotesDOMNode, 'awsdk-newContent');\n        // prevents multiple tabs open at same time\n        this.__addClass(chatDetailsDOMNode, 'awsdk-hidden');\n        this.__addClass(inviteGuestDetailsDOMNode, 'awsdk-hidden');\n        // resets their background\n        this.__removeClass(chatDOMNode, 'awsdk-expanded');\n        this.__removeClass(inviteGuestDOMNode, 'awsdk-expanded');\n      };\n      chatDOMNode.onclick = (e) => {\n        e.preventDefault();\n        this.__removeClass(menuDetailsWrapperDOMNode, 'awsdk-hidden');\n        this.__removeClass(chatDetailsDOMNode, 'awsdk-hidden');\n        this.__removeClass(chatDOMNode, 'awsdk-newContent');\n        this.__addClass(chatDOMNode, 'awsdk-expanded');\n        // prevents multiple tabs open at same time\n        this.__addClass(notesDetailsDOMNode, 'awsdk-hidden');\n        this.__addClass(inviteGuestDetailsDOMNode, 'awsdk-hidden');\n        // resets their background\n        this.__removeClass(providerNotesDOMNode, 'awsdk-expanded');\n        this.__removeClass(inviteGuestDOMNode, 'awsdk-expanded');\n        chatMsgAreaDOMNode.scrollTop = chatMsgAreaDOMNode.scrollHeight;\n      };\n      inviteGuestDOMNode.onclick = (e) => {\n        e.preventDefault();\n        this.__removeClass(menuDetailsWrapperDOMNode, 'awsdk-hidden');\n        this.__removeClass(inviteGuestDetailsDOMNode, 'awsdk-hidden');\n        this.__removeClass(inviteGuestDOMNode, 'awsdk-newContent');\n        this.__addClass(inviteGuestDOMNode, 'awsdk-expanded');\n        // prevents multiple tabs open at same time\n        this.__addClass(chatDetailsDOMNode, 'awsdk-hidden');\n        this.__addClass(notesDetailsDOMNode, 'awsdk-hidden');\n        // resets their background\n        this.__removeClass(chatDOMNode, 'awsdk-expanded');\n        this.__removeClass(providerNotesDOMNode, 'awsdk-expanded');\n      };\n      chatDetailsInputButtonDOMNode.onclick = (e) => {\n        e.preventDefault();\n        const message = chatDetailsInputDOMNode.value;\n        chatDetailsInputDOMNode.value = '';\n        this.addChatMessage(this.__visit, message, this.__lastOrdinal).then((chatReport) => {\n          this.__processChatMessages(consoleWrapperAttachPoints, chatReport);\n        });\n      };\n      chatDetailsInputDOMNode.onkeydown = (e) => {\n        if (e.which === 13 || e.keyCode === 13) { // allow enter.\n          e.preventDefault();\n          chatDetailsInputButtonDOMNode.click();\n        }\n      };\n      inviteGuestButtonDOMNode.onclick = (e) => {\n        e.preventDefault();\n        const email = inviteGuestInputDOMNode.value;\n        const validationResult = this.__validateGuestInvites(email, messages);\n        if (!validationResult.errorMessage) {\n          this.inviteGuestToVisit(this.__visit, email).then(() => {\n            this.__processSendGuestInvite(consoleWrapperAttachPoints, this.__visit);\n            inviteGuestInputDOMNode.value = ''; // clear the value\n          }).catch((error) => {\n            if (error.errorCode === AWSDKErrorCode.guestEmailAlreadyInvited) {\n              consoleWrapperAttachPoints.inviteGuestErrorTextDOMNode.innerHTML = messages.invite_guests_already_invited;\n              consoleWrapperAttachPoints.inviteGuestErrorTextDOMNode.classList.remove('awsdk-hidden');\n            }\n          });\n        } else {\n          consoleWrapperAttachPoints.inviteGuestErrorTextDOMNode.innerHTML = validationResult.errorMessage;\n          consoleWrapperAttachPoints.inviteGuestErrorTextDOMNode.classList.remove('awsdk-hidden');\n        }\n      };\n      closeMenuDOMNode.onclick = (e) => {\n        e.preventDefault();\n        menuDetailsWrapperDOMNode.classList.add('awsdk-hidden');\n        providerNotesDOMNode.classList.remove('awsdk-expanded');\n        chatDOMNode.classList.remove('awsdk-expanded');\n        inviteGuestDOMNode.classList.remove('awsdk-expanded');\n      };\n    }\n  }\n\n  /**\n   * @private\n   */\n  __cleanUpAppendedContent(consoleWrapperAttachPoints) {\n    if (consoleWrapperAttachPoints) {\n      this.__cleanUpChildren(consoleWrapperAttachPoints.chatDetailsMessageAreaDOMNode);\n      this.__cleanUpChildren(consoleWrapperAttachPoints.providerNotesContentDOMNode);\n      this.__cleanUpChildren(consoleWrapperAttachPoints.inviteGuestDetailsInvitedDOMNode);\n      this.__lastNoteMessage = null;\n    }\n  }\n\n  /**\n   * @private\n   */\n  __cleanUpChildren(DOMNode) {\n    while (DOMNode.firstChild) {\n      DOMNode.removeChild(DOMNode.firstChild);\n    }\n  }\n\n  /**\n   * @private\n   */\n  __updateConsoleWrapper(attachPoints, visit) {\n    if (attachPoints) {\n      this.__updateRemainingTime(attachPoints, visit);\n      this.__processProviderNotes(attachPoints, visit);\n      if (this.__visit.allowsChatWithProvider) {\n        this.__processChatMessages(attachPoints, visit.chatReport);\n      }\n      this.__refreshInvitedGuestsEmailList(attachPoints, visit);\n    }\n  }\n\n  /**\n   * @private\n   */\n  __updateRemainingTime(attachPoints, visit) {\n    if (attachPoints) {\n      const timeRemainingNode = attachPoints.timerDOMNode;\n      const existingMessages = timeRemainingNode.innerHTML.split(' ');\n      let remainingMessage;\n      const timeRemainingFromServerInMillis = visit.timeRemainingMilliseconds;\n      const timeLeft = new Date(timeRemainingFromServerInMillis);\n      const formattedTime = `${timeLeft.getMinutes()}:${timeLeft.getSeconds().toString().padStart(2, '0')}`;\n      if (existingMessages.length === 2) {\n        remainingMessage = `${formattedTime} ${existingMessages[1]}`;\n      } else { // for initial message with no time\n        remainingMessage = `${formattedTime} ${existingMessages[0]}`;\n      }\n      timeRemainingNode.innerHTML = remainingMessage;\n      this.__lastPolledTime = this.__currentPolledTime;\n      timeRemainingNode.classList.remove('awsdk-hidden');\n    }\n  }\n\n  /**\n   * @private\n   */\n  __processChatMessages(attachPoints, chatReport) {\n    if (attachPoints && chatReport && chatReport.chatItems) {\n      const chatIcon = attachPoints.chatDOMNode;\n      const chatMessageArea = attachPoints.chatDetailsMessageAreaDOMNode;\n      chatReport.chatItems.filter(item => item.ordinal > this.__lastOrdinal).forEach((item) => {\n        const chatDiv = document.createElement('div');\n        // container\n        chatDiv.setAttribute('id', `awsdk-chat${item.ordinal}`);\n        chatDiv.setAttribute('class', 'awsdk-chatMessage');\n\n        // content wrapper\n        const chatContentDiv = document.createElement('div');\n        chatContentDiv.setAttribute('class', 'awsdk-chatMessageContent');\n        chatDiv.appendChild(chatContentDiv);\n\n        // grab message\n        const msgSpan = document.createElement('span');\n        const msgText = document.createTextNode(item.message);\n\n        // if it's a consumer or provider message then put it in a bubble and show name, otherwise it's a system message\n        if (item.userType !== AWSDKUserType.ADMIN && item.userType !== AWSDKUserType.SDK) {\n          // name of sender\n          const name = document.createElement('span');\n          name.setAttribute('class', 'awsdk-chatItemTitle');\n          name.innerHTML = item.fullName;\n          chatContentDiv.appendChild(name);\n\n          // message text\n          msgSpan.setAttribute('class', 'awsdk-bubble');\n          if (item.isSelf) {\n            chatDiv.classList.add('awsdk-mine');\n          }\n        } else {\n          chatDiv.classList.add('awsdk-systemMessage');\n        }\n\n        msgSpan.appendChild(msgText);\n        chatContentDiv.appendChild(msgSpan);\n        chatMessageArea.appendChild(chatDiv);\n\n        // scroll to bottom if we added a new message\n        chatMessageArea.scrollTop = chatMessageArea.scrollHeight;\n      });\n\n      if (this.__lastOrdinal < chatReport.lastOrdinal && !chatIcon.classList.contains('awsdk-expanded')) {\n        chatIcon.classList.add('awsdk-newContent');\n      }\n\n      // the last ordinal from a chat report coming from polling can be behind that of one that came as a response from\n      // adding a chat message so to avoid double messages we keep track of whichever is highest\n      this.__lastOrdinal = Math.max(chatReport.lastOrdinal, this.__lastOrdinal);\n    }\n  }\n\n  /**\n   * @private\n   */\n  __processSendGuestInvite(attachPoints, visit) {\n    const currentFunction = 'VisitService.__processSendGuestInvite';\n    this.__logger.debug(currentFunction, 'Started', visit);\n    this.getVisit(visit, true).then((result) => {\n      this.__visit = result;\n      this.__logger.trace(currentFunction, 'Returning with result', result);\n      this.__refreshInvitedGuestsEmailList(attachPoints, this.__visit);\n    }).catch((error) => {\n      this.__logger.error(currentFunction, 'Encountered an error when getting a visit', error);\n    });\n    this.__logger.debug(currentFunction, 'Finished');\n  }\n\n  /**\n   * @private\n   */\n  __processProviderNotes(attachPoints, visit) {\n    if (attachPoints) {\n      const providerNotesIcon = attachPoints.providerNotesDOMNode;\n      const providerNotesContent = attachPoints.providerNotesContentDOMNode;\n      // get the iframe element\n      let notesBodyElement = providerNotesContent.firstChild;\n      let newContent = false;\n      const providerEntries = visit.providerEntries;\n      const notes = providerEntries && providerEntries.notes;\n      this.__logger.debug('Found provider notes: ', notes);\n      if (notes) {\n        newContent = notes !== this.__lastNoteMessage;\n        if (!notesBodyElement) {\n          const notesDocumentFragment = document.createDocumentFragment();\n          // WS-2227: creating an iframe element here since the provider notes\n          // can be a full HTML page with it's own inline styling\n          // and can, thus, potentially overflow a div or any other container element\n          notesBodyElement = document.createElement('iframe');\n          notesBodyElement.setAttribute('id', 'awsdk-notesBody');\n          notesBodyElement.setAttribute('src', 'about:blank');\n          notesBodyElement.classList.add('awsdk-notesBody');\n          // for FF\n          notesBodyElement.addEventListener('load', () => {\n            notesBodyElement.contentWindow.document.body.innerHTML = notes;\n          }, false);\n          notesDocumentFragment.appendChild(notesBodyElement);\n          providerNotesContent.appendChild(notesDocumentFragment);\n        }\n        if (newContent) {\n          this.__lastNoteMessage = notes;\n          notesBodyElement.contentWindow.document.body.innerHTML = notes;\n        }\n      }\n\n      // if we have new content and we're not already looking at the notes section add the newContent class\n      if (newContent && !providerNotesIcon.classList.contains('awsdk-expanded')) {\n        providerNotesIcon.classList.add('awsdk-newContent');\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  __refreshInvitedGuestsEmailList(attachPoints, visit) {\n    const currentFunction = 'VisitService.__refreshInvitedGuestsEmailList';\n    this.__logger.debug(currentFunction, 'Started', visit);\n    if (attachPoints && visit) {\n      const inviteGuestDetailsInvitedDOMNode = attachPoints.inviteGuestDetailsInvitedDOMNode;\n      const maxInviteeDOMNode = attachPoints.maxInviteeDOMNode;\n      const inviteGuestInputWrapperDOMNode = attachPoints.inviteGuestInputWrapperDOMNode;\n      const hasInvitedGuestNodes = (inviteGuestDetailsInvitedDOMNode && maxInviteeDOMNode && inviteGuestInputWrapperDOMNode);\n      if (hasInvitedGuestNodes) {\n        while (inviteGuestDetailsInvitedDOMNode.firstChild) {\n          inviteGuestDetailsInvitedDOMNode.removeChild(inviteGuestDetailsInvitedDOMNode.firstChild);\n        }\n        const invitedGuestsEmailCount = visit.invitedGuestEmails.length;\n        if (invitedGuestsEmailCount > 0) {\n          inviteGuestDetailsInvitedDOMNode.classList.remove('awsdk-hidden');\n          const guestEmailsDocumentFragment = document.createDocumentFragment();\n          visit.invitedGuestEmails.forEach((guestEmailAddress) => {\n            const guestEmailAddressNode = document.createElement('span');\n            guestEmailAddressNode.setAttribute('class', 'awsdk-invitees');\n            guestEmailAddressNode.innerHTML = guestEmailAddress;\n            guestEmailsDocumentFragment.appendChild(guestEmailAddressNode);\n          });\n          inviteGuestDetailsInvitedDOMNode.appendChild(guestEmailsDocumentFragment);\n          if (invitedGuestsEmailCount >= this.__systemConfiguration.maxVideoInvites) {\n            inviteGuestInputWrapperDOMNode.classList.add('awsdk-hidden');\n            maxInviteeDOMNode.classList.remove('awsdk-hidden');\n          }\n        }\n        this.__logger.info('Successfully refreshed invited guests email list');\n      }\n    }\n    this.__logger.debug(currentFunction, 'Finished');\n  }\n\n  /**\n   * @private\n   */\n  __validateGuestInvites(emailAddress, messages) {\n    const currentFunction = 'VisitService.__validateGuestInvites';\n    this.__logger.debug(currentFunction, 'Validating', emailAddress);\n    const validationResult = { errorMessage: null };\n    if (!Validator.isEmailValid(emailAddress)) {\n      validationResult.errorMessage = messages.validation_email_invalid;\n    }\n    return validationResult;\n  }\n\n  /**\n   * @private\n   */\n  __initializeDisplayContainers(attachPoints, messages) {\n    const currentFunction = 'VisitService#__initializeDisplayContainers';\n    if (attachPoints == null || (typeof attachPoints) !== 'object') {\n      const error = AWSDKError.AWSDKIllegalArgument('videoContext.consoleWrapperAttachPoints must be an object');\n      this.__logger.error(currentFunction, error);\n      throw error;\n    }\n    // check if we should show chat\n    if (!this.__systemConfiguration.alwaysHideChatTabEnabled && this.__visit.allowsChatWithProvider) {\n      attachPoints.chatDetailsTitleDOMNode.innerHTML = messages.chat_window_title;\n      attachPoints.chatDetailsIntroTextDOMNode.innerHTML = messages.chat_visit_begun;\n      attachPoints.chatDetailsInputDOMNode.setAttribute('placeholder', messages.chat_input_placeholder_text);\n      attachPoints.chatTabTitleDOMNode.innerHTML = messages.tab_chat;\n    } else {\n      attachPoints.chatDOMNode.classList.add('awsdk-hidden');\n    }\n    // check if we should show provider notes\n    if (!this.__systemConfiguration.alwaysHideNotesTabEnabled) {\n      attachPoints.providerNotesDetailTitleDOMNode.innerHTML = messages.visit_notes_title;\n      attachPoints.notesTabTitleDOMNode.innerHTML = messages.tab_notes;\n    } else {\n      attachPoints.providerNotesDOMNode.classList.add('awsdk-hidden');\n    }\n    attachPoints.timerDOMNode.innerHTML = messages.time_remaining;\n\n    // hide guest tab if disabled, otherwise initialize dom elements related to inviting guest\n    if (!this.__systemConfiguration.multipleVideoParticipantsEnabled) {\n      attachPoints.inviteGuestDOMNode.classList.add('awsdk-hidden');\n    } else {\n      attachPoints.inviteGuestDetailsTitleDOMNode.innerHTML = messages.invite_guests_title;\n      attachPoints.inviteGuestLabelDOMNode.innerHTML = messages.invite_guests_small_title;\n      attachPoints.inviteGuestErrorTextDOMNode.classList.add('awsdk-hidden');\n      attachPoints.inviteGuestInputWrapperDOMNode.classList.remove('awsdk-hidden');\n      attachPoints.inviteGuestInputDOMNode.setAttribute('placeholder', messages.invite_guests_email_placeholder);\n      attachPoints.inviteGuestInputDOMNode.oninput = () => {\n        if (!attachPoints.inviteGuestErrorTextDOMNode.classList.contains('awsdk-hidden')) {\n          attachPoints.inviteGuestErrorTextDOMNode.innerHTML = '';\n          attachPoints.inviteGuestErrorTextDOMNode.classList.add('awsdk-hidden');\n        }\n      };\n      attachPoints.inviteGuestButtonDOMNode.innerHTML = messages.invite_guests_send_invite;\n      attachPoints.inviteGuestIntroTextDOMNode.innerHTML = messages.invite_guests_prompt;\n      attachPoints.maxInviteeDOMNode.classList.add('awsdk-hidden');\n      attachPoints.maxInviteeDOMNode.innerHTML = messages.invite_guests_max_guests_prompt;\n      attachPoints.inviteTabTitleDOMNode.innerHTML = messages.tab_invite;\n    }\n  }\n\n  /**\n   * @private\n   */\n  __removeClass(node, klass) {\n    node.classList.remove(klass);\n  }\n\n  /**\n   * @private\n   */\n  __addClass(node, klass) {\n    node.classList.add(klass);\n  }\n\n  /** --------------------- CoreSDK Constructor Wrappers ------------------*/\n\n  /**\n   * Creates a video participant of the given type.\n   *\n   * @param {String} name the name of the participant as it should appear in the video console\n   * @param {Object} videoDOMNode a reference to the <video> DOM node that will render the participant's self-view\n   * @param {Object} nameDOMNode a reference to the DOM node that will render the participant's name\n   * @param {AWCoreSDKVideoParticipantType} participantType the type of the participant: 'Consumer', 'Provider' or 'Guest'\n   * @returns {AWCoreSDKVideoParticipant} a fully constructed instance of AWCoreSDKVideoParticipant\n   * @since 2.0.0\n   */\n  createWebRTCVideoParticipant(name, videoDOMNode, nameDOMNode, participantType) {\n    const currentFunction = 'VisitService#createWebRTCVideoParticipant';\n    this.__logger.debug(currentFunction, 'Started');\n    if (!Validator.isValidString(name)) {\n      const error = AWSDKError.AWSDKIllegalArgument('name argument is not of type String');\n      this.__logger.error(currentFunction, 'error', error);\n      throw error;\n    }\n    if (!videoDOMNode) {\n      const error = AWSDKError.AWSDKIllegalArgument('videoDOMNode argument is required');\n      this.__logger.error(currentFunction, 'error', error);\n      throw error;\n    }\n    if (!nameDOMNode) {\n      const error = AWSDKError.AWSDKIllegalArgument('nameDOMNode argument is required');\n      this.__logger.error(currentFunction, 'error', error);\n      throw error;\n    }\n    const validParticipantTypes = Object.keys(AWCoreSDKVideoParticipantType).map(k => AWCoreSDKVideoParticipantType[k]);\n    if (!participantType || !validParticipantTypes.includes(participantType)) {\n      const error = AWSDKError.AWSDKIllegalArgument('participantType argument is not one of Consumer, Provider or Guest');\n      this.__logger.error(currentFunction, 'error', error);\n      throw error;\n    }\n    return new AWCoreSDKVideoParticipant({\n      name,\n      participantType,\n      videoDOMNode,\n      nameDOMNode,\n    });\n  }\n\n  /**\n   * The enumeration for the valid types of video participants.\n   *\n   * @type {AWCoreSDKVideoParticipantType}\n   * @since 2.0.0\n   */\n  get videoParticipantType() {\n    return AWCoreSDKVideoParticipantType;\n  }\n\n  /**\n   * A nested object whose keys represent all the language/locale supported in the video console.\n   * The value of each key is an object that represents all the possible key/value message resource for that language/locale.\n   * Clients of the sdk are free to override the value of each key with translations of their own.\n   *\n   * @type {Object}\n   * @since 2.0.0\n   */\n  getDefaultMessages() {\n    return defaultMessages;\n  }\n\n  /**\n   * Creates an {@link model.AWSDKVideoContext} from the given argument.<br>\n   *\n   * Note: In order to use WebRTC, the appropriate server configurations need to be made on the AmWell platform to enable WebRTC and to use the latest supported video platform.\n   *\n   * @param {Object} config an object that aggregates the following context properties\n   * @param {function} config.successCallback Function to execute when the video visit has ended successfully\n   * @param {function} config.errorCallback Function to execute when the video visit has encountered an unrecoverable error\n   * @param {function} config.updatedCallback Function to execute when the video visit has been updated\n   * @param {HTMLElement} config.videoConsoleContainer The DOM node where the video visit console should be hooked to\n   * @param {Object} [context.messages] A flattened key/value bundle of localized strings to use in the video console. Takes precedence over `context.locale`. To get all the possible overridable messages use the {@link VisitService#getDefaultMessages|VisitService.getDefaultMessages()} function.\n   * @param {string} [context.locale] A locale identifier used to lookup built-in localized strings. Defaults to `en-US`. `context.messages` overrides any defaults read by passing a `locale`.\n   * @param {model.AWCoreSDKVideoAttachPoints} [config.attachPoints] the various nodes in the DOM where the video will be rendered. <em>This parameter is used by the Consumer Web SDK sample app to support a cohesive user experience </em>\n   * @returns {model.AWSDKVideoContext} a fully-composed instance of {@link model.AWSDKVideoContext}\n   * @since 2.0.0\n   */\n  createVideoContext(config) {\n    return new AWSDKVideoContext(config);\n  }\n\n  /**\n   * Connects the consumer of the given {@link model.AWSDKVisit|AWSDKVisit} to a video call where their visit with the\n   * assigned {@link model.AWSDKProvider|AWSDKProvider} will occur. Requires that {@link VisitService#startVisit} has already been called successfully.\n   * Once started, the video call will progress through its phases of waiting for the provider to join and then having the actual visit,\n   * fully rendered in the various DOM attach points specified as arguments.\n   * Should an unrecoverable error occur at any point after the call has been initiated, the errorCallback will be called.\n   * Otherwise, should the visit complete successfully, the successCallback will be called.\n   *\n   * For a description of how to customize the video console see the [How To Override The Video Console UI Elements]{@tutorial HOWTO}<br>\n   *\n   * Note: In order to use WebRTC, the appropriate server configurations need to be made on the AmWell platform to enable WebRTC and to use the latest supported video platform.\n   *\n   * The screen sharing function requires WebRTC to be enabled, as well as screen sharing in the platform configuration. Both participants must have a supported browser and\n   * version on web or mobile, which are:\n   *  o Google Chrome v79 or higher\n   *  o Mozilla Firefox v70 or higher\n   *\n   * @param {model.AWSDKVisit} visit The visit for which to establish a video call\n   * @param {model.AWSDKVideoContext} videoContext the context in which this visit will appear\n   * @returns {Promise<AWCoreSDKVideoConsole|error.AWSDKError>} a promise that will resolve to a {@link AWCoreSDKVideoConsole|AWCoreSDKVideoConsole} or rejected with an {@link error.AWSDKError|AWSDKError}\n   * if visit is not a valid instance of {@link model.AWSDKVisit|AWSDKVisit} or if the\n   * videoContext is not a valid instance of {@link model.AWSDKVideoContext|AWSDKVideoContext}.\n   * @since 2.0.0\n   */\n  startWebRTCVisit(visit, videoContext) {\n    const currentFunction = 'VisitService#startWebRTCVisit';\n    this.__logger.info(currentFunction, 'Starting webrtc visit for ', visit, videoContext);\n    if (!(visit instanceof AWSDKVisit)) {\n      const error = AWSDKError.AWSDKIllegalArgument('visit must be of type AWSDKVisit');\n      this.__logger.error(currentFunction, error);\n      return Promise.reject(error);\n    }\n    if (!(visit.conferenceDetails)) {\n      const error = AWSDKError.AWSDKUnsupportedVideoPlatform();\n      this.__logger.error(currentFunction, error);\n      return Promise.reject(error);\n    }\n    if (!(videoContext instanceof AWSDKVideoContext)) {\n      const error = AWSDKError.AWSDKIllegalArgument('videoContext must be of type AWSDKVideoContext');\n      this.__logger.error(currentFunction, error);\n      return Promise.reject(error);\n    }\n    const consoleWrapperAttachPoints = (videoContext.consoleWrapperAttachPoints &&\n      videoContext.consoleWrapperAttachPoints !== {} &&\n        videoContext.consoleWrapperAttachPoints) || null;\n    const videoConsoleContainer = videoContext.videoConsoleContainer;\n    if (videoConsoleContainer == null || !(videoConsoleContainer instanceof HTMLElement)) {\n      const error = AWSDKError.AWSDKIllegalArgument('videoContext.videoConsoleContainer must be an HTMLElement');\n      this.__logger.error(currentFunction, error);\n      return Promise.reject(error);\n    }\n    this.__visit = visit;\n    this.__lastOrdinal = 0;\n    const messages = videoContext.messages;\n    if (consoleWrapperAttachPoints) {\n      this.__initializeDisplayContainers(consoleWrapperAttachPoints, messages);\n      this.__setClickableEvents(consoleWrapperAttachPoints, messages);\n    }\n    const delegate = {\n      pollForVisitLowTimeout: this.__pollForVisitWithTimeout.bind(this, videoContext),\n      pollForVisit: this.__pollForVisit.bind(this, videoContext),\n      updateMetrics: this.__updateMetrics.bind(this),\n      onVisitEnd: this.__onVisitEnd.bind(this, videoContext.successCallback, consoleWrapperAttachPoints),\n      onVisitError: this.__onVisitError.bind(this, videoContext.errorCallback),\n      onCallMeSelected: this.__onCallMeSelected.bind(this),\n      updateConnectionStatus: this.__updateConnectionStatus.bind(this),\n      onExitVisitRequested: this.__onExitVisitRequested.bind(this),\n      onVisitUpdated: this.__onVisitUpdated.bind(this, videoContext.updatedCallback),\n      onIVRCallback: this.__initiateIVRCallback.bind(this),\n    };\n    const requiredHandlers = [\n      new AWCoreSDKBaseEventHandler({ type: 'localParticipantJoinedEvent', handler: e => this.__logger.info('ConsumerWebSDK is handling event', e) }),\n      new AWCoreSDKBaseEventHandler({ type: 'localParticipantLeftEvent', handler: e => this.__logger.info('ConsumerWebSDK is handling event', e) }),\n      new AWCoreSDKBaseEventHandler({ type: 'remoteParticipantLeftEvent', handler: e => this.__logger.info('ConsumerWebSDK is handling event', e) }),\n      new AWCoreSDKBaseEventHandler({ type: 'sdkDefaultVideoEvent', handler: e => this.__logger.info('ConsumerWebSDK is handling event', e) }),\n    ];\n    const visitConfig = new AWCoreSDKVisitConfiguration({ visit, visitPollingDelegate: delegate });\n    const remoteLogger = new ServerLogger({ config: this.__config, authKeys: this.__authKeys, links: this.__links, logger: this.__logger });\n    const combinedLogger = new CombinedLogger(this.__logger, remoteLogger);\n    const videoConfig = new AWCoreSDKVideoConfiguration({\n      requiredHandlers,\n      vendor: AWCoreSDKVendor.PEXIP,\n      visitConfig,\n      messages,\n      logger: combinedLogger,\n      encoded: 0,\n      roomPin: '', // TODO: might be established by caretalks in the future\n      visitLoggingData: new AWSDKVisitLoggingDataObject(version.sdkVersion, this.__localeToAcceptLanguage(this.__config.locale), visit),\n      participantType: this.videoParticipantType.CONSUMER,\n      videoConsoleContainer: videoContext.videoConsoleContainer,\n      systemConfiguration: this.__systemConfiguration,\n      turnServerConfiguration: this.__systemConfiguration.turnServerConfiguration,\n      isIVRCallbackEnabled: this.__config.isIVRCallbackEnabled,\n      locale: this.__config.locale,\n    });\n    return this.__startWebRTCConsole(videoConfig);\n  }\n\n  /**\n   * Connects the given {@link model.AWSDKVideoParticipant} guest to an ongoing webRTC video visit.\n   * Should an unrecoverable error occur at any point after the call has been initiated, the errorCallback will be called.\n   * Otherwise, should the visit complete successfully, the successCallback will be called.<br>\n   *\n   * Note: In order to use WebRTC, the appropriate server configurations need to be made on the AmWell platform to enable WebRTC and to use the latest supported video platform.\n   *\n   * @param {model.AWSDKVideoParticipant} videoParticipant The guest participant joining the visit\n   * @param {model.AWSDKVideoContext} videoContext the context in which this visit will appear\n   * @returns {Promise<AWCoreSDKVideoConsole|error.AWSDKError>} a promise that will resolve to a {@link AWCoreSDKVideoConsole|AWCoreSDKVideoConsole} or rejected with an {@link error.AWSDKError|AWSDKError}\n   * @throws {error.AWSDKError} with an {@link error.AWSDKErrorCode.illegalArgument|AWSDKErrorCode.illegalArgument}\n   * if videoParticipant is not a valid instance of {@link model.AWSDKVideoParticipant|AWSDKVideoParticipant} or if the\n   * videoContext is not a valid instance of {@link model.AWSDKVideoContext|AWSDKVideoContext}.\n   * @since 2.0.0\n   */\n  startWebRTCVisitForGuest(videoParticipant, videoContext) {\n    const currentFunction = 'VisitService#startWebRTCVisitForGuest';\n    this.__logger.info(currentFunction, 'Starting guest WebRTC visit for ', videoParticipant, videoContext);\n    if (!(videoParticipant instanceof AWSDKVideoParticipant)) {\n      const error = AWSDKError.AWSDKIllegalArgument('videoParticipant must be of type AWSDKVideoParticipant');\n      this.__logger.error(currentFunction, error);\n      return Promise.reject(error);\n    }\n    if (!(videoParticipant.conferenceDetails)) {\n      const error = AWSDKError.AWSDKUnsupportedVideoPlatform();\n      this.__logger.error(currentFunction, error);\n      return Promise.reject(error);\n    }\n    if (!(videoContext instanceof AWSDKVideoContext)) {\n      const error = AWSDKError.AWSDKIllegalArgument('videoContext must be of type AWSDKVideoContext');\n      this.__logger.error(currentFunction, error);\n      Promise.reject(error);\n    }\n    const videoConsoleContainer = videoContext.videoConsoleContainer;\n    if (videoConsoleContainer == null || !(videoConsoleContainer instanceof HTMLElement)) {\n      const error = AWSDKError.AWSDKIllegalArgument('videoContext.videoConsoleContainer must be an HTMLElement');\n      this.__logger.error(currentFunction, error);\n      return Promise.reject(error);\n    }\n    this.__videoParticipant = videoParticipant;\n    const messages = videoContext.messages;\n    // TODO make verbiage more general or come up with separate flow for clarity\n    // this code overloads all the visit specific handlers with 'guest' logic\n    // what this essentially means is from this point forward (down into the core sdk itself)\n    // any place the 'visit' exists is actually a participant obj.\n    const delegate = {\n      pollForVisitLowTimeout: this.__pollForGuestParticipant.bind(this),\n      pollForVisit: this.__pollForGuestParticipant.bind(this),\n      updateMetrics: () => {\n        this.__logger.debug('Ignoring call to update video metrics for guest');\n        return Promise.resolve();\n      },\n      onVisitEnd: this.__onVisitEnd.bind(this, videoContext.successCallback, videoContext.consoleWrapperAttachPoints),\n      onVisitError: this.__onVisitError.bind(this, videoContext.errorCallback),\n      onCallMeSelected: this.__onCallMeSelected.bind(this),\n      updateConnectionStatus: this.updateVideoParticipantConnectionStatus.bind(this, this.__videoParticipant),\n      onExitVisitRequested: this.__onGuestExitVisitRequested.bind(this),\n      onVisitUpdated: this.__onVisitUpdated.bind(this, videoContext.updatedCallback),\n    };\n    const requiredHandlers = [\n      new AWCoreSDKBaseEventHandler({ type: 'localParticipantJoinedEvent', handler: e => this.__logger.info('ConsumerWebSDK is handling event', e) }),\n      new AWCoreSDKBaseEventHandler({ type: 'localParticipantLeftEvent', handler: e => this.__logger.info('ConsumerWebSDK is handling event', e) }),\n      new AWCoreSDKBaseEventHandler({ type: 'remoteParticipantLeftEvent', handler: e => this.__logger.info('ConsumerWebSDK is handling event', e) }),\n      new AWCoreSDKBaseEventHandler({ type: 'sdkDefaultVideoEvent', handler: e => this.__logger.info('ConsumerWebSDK is handling event', e) }),\n    ];\n    const visitConfig = new AWCoreSDKVisitConfiguration({ visit: this.__videoParticipant, visitPollingDelegate: delegate });\n    const remoteLogger = new ServerLogger({ config: this.__config, authKeys: this.__authKeys, links: this.__links, logger: this.__logger });\n    const combinedLogger = new CombinedLogger(this.__logger, remoteLogger);\n    const videoConfig = new AWCoreSDKVideoConfiguration({\n      requiredHandlers,\n      vendor: AWCoreSDKVendor.PEXIP,\n      visitConfig,\n      displayNameOverride: this.__videoParticipant.displayName,\n      messages,\n      logger: combinedLogger,\n      encoded: 0,\n      visitLoggingData: new AWSDKGuestLoggingDataObject(version.sdkVersion, this.__localeToAcceptLanguage(this.__config.locale), this.__videoParticipant),\n      participantType: this.videoParticipantType.GUEST,\n      videoConsoleContainer: videoContext.videoConsoleContainer,\n      systemConfiguration: this.__systemConfiguration,\n      turnServerConfiguration: this.__systemConfiguration.turnServerConfiguration,\n      locale: this.__config.locale,\n    });\n    return this.__startWebRTCConsole(videoConfig);\n  }\n\n  /**\n   * @private\n   */\n  __startWebRTCConsole(videoConfig) {\n    const currentFunction = 'VisitService.__startWebRTCConsole';\n    this.__logger.info(currentFunction, 'Instantiating video console with video config: ', videoConfig);\n    this.console = new AWCoreSDKVideoConsole(videoConfig);\n    return this.console.start();\n  }\n\n  /**\n   * Get an instance of {@link model.AWSDKConsumerOverrideDetails|AWSDKConsumerOverrideDetails} to use when providing consumer data during cart-based visits. <br>\n   * The {@link model.AWSDKConsumerOverrideDetails|AWSDKConsumerOverrideDetails} object obtained here can be validated by an (optional) call to the {@link service.VisitService#validateConsumerOverrideDetails(model.AWSDKConsumerOverrideDetails)|validateConsumerOverrideDetails(AWSDKConsumerOverrideDetails)} <br>\n   * @returns {model.AWSDKConsumerOverrideDetails} returns an instance of a {@link model.AWSDKConsumerOverrideDetails|AWSDKConsumerOverrideDetails} object\n   * @since 1.4.0\n   */\n  newConsumerOverrideDetails() {\n    return new AWSDKConsumerOverrideDetails();\n  }\n\n  /**\n   * Get an instance of {@link model.AWSDKVisitSearchCriteria|AWSDKVisitSearchCriteria} to use for finding a list of visits\n   * @returns {model.AWSDKVisitSearchCriteria} returns an instance of a {@link model.AWSDKVisitSearchCriteria|AWSDKVisitSearchCriteria} object\n   * @since 1.4.0\n   */\n  getNewVisitSearchCriteria(criteria) {\n    return new AWSDKVisitSearchCriteria(criteria);\n  }\n\n  /**\n   * Retrieve a {@link model.AWSDKVisitContext|AWSDKVisitContext} object for the given {@link model.AWSDKConsumer|AWSDKConsumer}\n   * for a visit with the specified {@link model.AWSDKProvider|AWSDKProvider} or within the specified {@link model.AWSDKOnDemandSpecialty}<br>\n   * This is the first (required) step when initiating a visit <br>\n   * @param {model.AWSDKConsumer} consumer REQUIRED the consumer for whom the visit is being scheduled\n   * @param {model.AWSDKProvider|model.AWSDKOnDemandSpecialty} providerOrOnDemandSpecialty REQUIRED either the {@link model.AWSDKProvider} or {@link model.AWSDKOnDemandSpecialty} for which to retrieve the context\n   * @returns {Promise<model.AWSDKVisitContext|error.AWSDKError>} Returns a promise that will be resolved to an {@link model.AWSDKVisitContext|AWSDKVisitContext} or will\n   * be rejected with an {@link error.AWSDKError|AWSDKError}.\n   * <p><br>Potential Error Codes<br>\n   * <table summary=\"ErrorCodes\" border=\"1\">\n   * <tr><th>Error Code</th><th>reason</th>\n   * <tr><td>{@link error.AWSDKErrorCode.internalError|AWSDKErrorCode.internalError}</td><td>The AWSDK could not complete the request.</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.illegalArgument|AWSDKErrorCode.illegalArgument}</td><td>A parameter is not the correct type.</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.consumerNotAuthenticated|AWSDKErrorCode.consumerNotAuthenticated}</td><td>Consumer is not authenticated.</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.consumerNotFound|AWSDKErrorCode.consumerNotFound}</td><td>Consumer not found</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.providerNotFound|AWSDKErrorCode.providerNotFound}</td><td>Provider not found</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.providerVideoNotEnabled|AWSDKErrorCode.providerVideoNotEnabled}</td><td>Provider does not have enhanced video enabled</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.privacyPolicyDisclaimerMissing|AWSDKErrorCode.privacyPolicyDisclaimerMissing}</td><td>Server is missing a consumer privacy policy disclaimer</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.providerNotAvailable|AWSDKErrorCode.providerNotAvailable}</td><td>This can occur for a variety of reasons, including when the provider is offline for an on-demand visit or the provider's waiting room is closed to incoming consumers.</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.waitingRoomAccessDenied|AWSDKErrorCode.waitingRoomAccessDenied}</td><td>Provider does not accept waiting room requests from consumer</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.providerNotLicensedForConsumerLocation|AWSDKErrorCode.providerNotLicensedForConsumerLocation}</td><td>Provider is not licensed for consumer's location</td></tr>\n   * </table>\n   * @since 1.0.0\n   */\n  getVisitContext(consumer, providerOrOnDemandSpecialty) {\n    const currentFunction = 'VisitService.getVisitContext';\n    this.__logger.debug(currentFunction, 'Started', consumer, providerOrOnDemandSpecialty);\n    if (consumer == null) {\n      const error = AWSDKError.AWSDKIllegalArgument('consumer argument is null');\n      this.__logger.error(currentFunction, 'error', error);\n      return Promise.reject(error);\n    }\n    if (!(consumer instanceof AWSDKConsumer)) {\n      const error = AWSDKError.AWSDKIllegalArgument('consumer argument is not of type AWSDKConsumer');\n      this.__logger.error(currentFunction, 'error', error);\n      return Promise.reject(error);\n    }\n    if (providerOrOnDemandSpecialty == null) {\n      const error = AWSDKError.AWSDKIllegalArgument('providerOrOnDemandSpecialty argument is null');\n      this.__logger.error(currentFunction, 'error', error);\n      return Promise.reject(error);\n    }\n    const consumerEncryptedId = consumer.id.encryptedId;\n    let providerEncryptedId = null;\n    let onDemandSpecialtyEncryptedId = null;\n    if (providerOrOnDemandSpecialty instanceof AWSDKProvider) {\n      providerEncryptedId = providerOrOnDemandSpecialty.id.encryptedId;\n    } else if (providerOrOnDemandSpecialty instanceof AWSDKOnDemandSpecialty) {\n      onDemandSpecialtyEncryptedId = providerOrOnDemandSpecialty.id.encryptedId;\n    } else {\n      const error = AWSDKError.AWSDKIllegalArgument('providerOrOnDemandSpecialty argument is neither an AWSDKProvider nor an AWSDKOnDemandSpecialty');\n      this.__logger.error(currentFunction, 'error', error);\n      return Promise.reject(error);\n    }\n    const link = this.findNamedLink(this.__links, 'visitConfiguration');\n    if (!Validator.isValidLink(link)) {\n      const error = AWSDKError.AWSDKInternalError('service does not have a \"visitConfiguration\" link entry');\n      this.__logger.error(currentFunction, 'error', error);\n      return Promise.reject(error);\n    }\n    const options = this.generateOptions('GET', link.url);\n    options.auth = this.getUserAuth(consumer);\n    if (options.auth == null) {\n      const error = AWSDKError.AWSDKConsumerNotAuthenticated();\n      this.__logger.error(currentFunction, 'error', error);\n      return Promise.reject(error);\n    }\n    options.form.set('memberId', consumerEncryptedId);\n    options.form.set('providerId', providerEncryptedId);\n    options.form.set('onDemandSpecialtyId', onDemandSpecialtyEncryptedId);\n    options.form.set('ignorePropagation', !!this.__config.ignorePropagation);\n    return this.executeRequest(options, AWSDKVisitContextResponse)\n      .then((visitContextResponse) => {\n        this.updateUserAuthEntry(consumer, visitContextResponse.authToken);\n        this.__logger.debug(currentFunction, 'Got response', visitContextResponse);\n        const visitContext = visitContextResponse.visitContext;\n        visitContext.parent = consumer.parent;\n        visitContext.proxies = consumer.proxies;\n        return visitContext;\n      })\n      .catch((error) => {\n        this.__logger.error(currentFunction, 'error', error);\n        throw error;\n      });\n  }\n\n  /**\n   * Retrieve a {@link model.AWSDKSpeedPass|AWSDKSpeedPass} object for the specified {@link model.AWSDKConsumer|AWSDKConsumer} and {@link model.AWSDKOnDemandSpecialty|AWSDKOnDemandSpecialty} or {@link. model.AWSDKProvider|AWSDKProvider}<br>\n   * The system needs to be configured with {@link model.AWSDKSystemConfiguration#speedPassActive|AWSDKSystemConfiguration.speedPassActive} set to TRUE\n   * @param {model.AWSDKConsumer} consumer the consumer to get the speed pass for\n   * @param {model.AWSDKProvider|model.AWSDKOnDemandSpecialty} providerOrOnDemandSpecialty REQUIRED either the {@link model.AWSDKProvider} or {@link model.AWSDKOnDemandSpecialty} for which to retrieve the speedPass\n   * @returns {Promise<model.AWSDKSpeedPass|error.AWSDKError>} Returns a promise that will be resolved to an {@link model.AWSDKSpeedPass|AWSDKSpeedPass} or will\n   * be rejected with an {@link error.AWSDKError|AWSDKError}.\n   * <p><br>Potential Error Codes<br>\n   * <table summary=\"ErrorCodes\" border=\"1\">\n   * <tr><th>Error Code</th><th>reason</th>\n   * <tr><td>{@link error.AWSDKErrorCode.speedPassDisabled|AWSDKErrorCode.speedPassDisabled}</td><td>SpeedPass is not enabled on this system</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.consumerNotEligibleForSpeedPass|AWSDKErrorCode.consumerNotEligibleForSpeedPass}</td><td>SpeedPass is currently not available for this consumer.</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.illegalArgument|AWSDKErrorCode.illegalArgument}</td><td>A parameter is not the correct type.</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.internalError|AWSDKErrorCode.internalError}</td><td>The AWSDK could not complete the request.</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.consumerNotAuthenticated|AWSDKErrorCode.consumerNotAuthenticated}</td><td>Consumer is not authenticated.</td></tr>\n   * </table>\n   * @since 1.2.0\n   */\n  getSpeedPass(consumer, providerOrOnDemandSpecialty) {\n    const currentFunction = 'VisitService.getSpeedPass';\n    this.__logger.debug(currentFunction, 'Started', consumer, providerOrOnDemandSpecialty);\n    if (!this.__systemConfiguration.speedPassActive) {\n      const error = AWSDKError.AWSDKSpeedPassDisabled();\n      this.__logger.error(currentFunction, 'error', error);\n      return Promise.reject(error);\n    }\n    if (!(consumer instanceof AWSDKConsumer)) {\n      const error = AWSDKError.AWSDKIllegalArgument('consumer argument is not of type AWSDKConsumer');\n      this.__logger.error(currentFunction, 'error', error);\n      return Promise.reject(error);\n    }\n    if (providerOrOnDemandSpecialty == null) {\n      const error = AWSDKError.AWSDKIllegalArgument('providerOrOnDemandSpecialty argument is null');\n      this.__logger.error(currentFunction, 'error', error);\n      return Promise.reject(error);\n    }\n    let providerEncryptedId;\n    let onDemandSpecialtyEncryptedId;\n    if (providerOrOnDemandSpecialty instanceof AWSDKProvider) {\n      providerEncryptedId = providerOrOnDemandSpecialty.id.encryptedId;\n    } else if (providerOrOnDemandSpecialty instanceof AWSDKOnDemandSpecialty) {\n      onDemandSpecialtyEncryptedId = providerOrOnDemandSpecialty.id.encryptedId;\n    } else {\n      const error = AWSDKError.AWSDKIllegalArgument('providerOrOnDemandSpecialty argument is neither an AWSDKProvider nor an AWSDKOnDemandSpecialty');\n      this.__logger.error(currentFunction, 'error', error);\n      return Promise.reject(error);\n    }\n    const link = this.findNamedLink(consumer.links, 'speedPassEligibility');\n    if (!Validator.isValidLink(link)) {\n      const error = AWSDKError.AWSDKInternalError('consumer does not have a \"speedPassEligibility\" link entry');\n      this.__logger.error(currentFunction, 'error', error);\n      return Promise.reject(error);\n    }\n    const options = this.generateOptions('GET', link.url);\n    options.auth = this.getUserAuth(consumer);\n    if (options.auth == null) {\n      const error = AWSDKError.AWSDKConsumerNotAuthenticated();\n      this.__logger.error(currentFunction, 'error', error);\n      return Promise.reject(error);\n    }\n    options.form.set('providerId', providerEncryptedId);\n    options.form.set('onDemandSpecialtyId', onDemandSpecialtyEncryptedId);\n    return this.executeRequest(options, AWSDKSpeedPassResponse)\n      .then((speedPassResponse) => {\n        this.updateUserAuthEntry(consumer, speedPassResponse.authToken);\n        this.__logger.debug(currentFunction, 'Got response', speedPassResponse);\n        const speedPass = speedPassResponse.speedPass;\n        if (onDemandSpecialtyEncryptedId) {\n          speedPass.onDemandSpecialtyId = onDemandSpecialtyEncryptedId;\n        }\n        if (providerEncryptedId) {\n          speedPass.assignedProvider = providerOrOnDemandSpecialty;\n          this.__logger.debug(currentFunction, 'Specific provider requested, overwriting assigned provider with', providerOrOnDemandSpecialty, speedPassResponse.speedPass);\n        }\n        return speedPass;\n      })\n      .catch((error) => {\n        this.__logger.error(currentFunction, 'error', error);\n        throw error;\n      });\n  }\n\n  /**\n   * Retrieve a {@link model.AWSDKVisitContext|AWSDKVisitContext} object for the specified {@link model.AWSDKAppointment|AWSDKAppointment} <br>\n   * This is the first (required) step when initiating a visit <br>\n   * @param {model.AWSDKAppointment} appointment REQUIRED the appointment the visit is being scheduled\n   * @returns {Promise<model.AWSDKVisitContext|error.AWSDKError>} Returns a promise that will be resolved to an {@link model.AWSDKVisitContext|AWSDKVisitContext} or will\n   * be rejected with an {@link error.AWSDKError|AWSDKError}.\n   * <p><br>Potential Error Codes<br>\n   * <table summary=\"ErrorCodes\" border=\"1\">\n   * <tr><th>Error Code</th><th>reason</th>\n   * <tr><td>{@link error.AWSDKErrorCode.internalError|AWSDKErrorCode.internalError}</td><td>The AWSDK could not complete the request.</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.illegalArgument|AWSDKErrorCode.illegalArgument}</td><td>A parameter is not the correct type.</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.consumerNotAuthenticated|AWSDKErrorCode.consumerNotAuthenticated}</td><td>Consumer is not authenticated.</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.consumerNotFound|AWSDKErrorCode.consumerNotFound}</td><td>Consumer not found</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.providerNotFound|AWSDKErrorCode.providerNotFound}</td><td>Provider not found</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.appointmentNotFound|AWSDKErrorCode.appointmentNotFound}</td><td>Appointment not found</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.providerVideoNotEnabled|AWSDKErrorCode.providerVideoNotEnabled}</td><td>Provider does not have enhanced video enabled</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.privacyPolicyDisclaimerMissing|AWSDKErrorCode.privacyPolicyDisclaimerMissing}</td><td>Server is missing a consumer privacy policy disclaimer</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.providerNotAvailable|AWSDKErrorCode.providerNotAvailable}</td><td>This can occur for a variety of reasons, including when the provider is offline for an on-demand visit or the provider's waiting room is closed to incoming consumers.</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.waitingRoomAccessDenied|AWSDKErrorCode.waitingRoomAccessDenied}</td><td>Provider does not accept waiting room requests from consumer</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.providerNotLicensedForConsumerLocation|AWSDKErrorCode.providerNotLicensedForConsumerLocation}</td><td>Provider is not licensed for consumer's location</td></tr>\n   * </table>\n   * @since 1.1.0\n   */\n  getVisitContextForAppointment(appointment) {\n    const currentFunction = 'VisitService.getVisitContextForAppointment';\n    this.__logger.debug(currentFunction, 'Started', appointment);\n    if (appointment == null) {\n      const error = AWSDKError.AWSDKIllegalArgument('appointment argument is null');\n      this.__logger.error(currentFunction, 'error', error);\n      return Promise.reject(error);\n    }\n    if (!(appointment instanceof AWSDKAppointment)) {\n      const error = AWSDKError.AWSDKIllegalArgument('appointment argument is not of type AWSDKAppointment');\n      this.__logger.error(currentFunction, 'error', error);\n      return Promise.reject(error);\n    }\n    const consumer = appointment.consumer;\n    const engagementEncryptedId = appointment.id.encryptedId;\n    const link = this.findNamedLink(this.__links, 'visitConfiguration');\n    if (!Validator.isValidLink(link)) {\n      const error = AWSDKError.AWSDKInternalError('service does not have a \"visitConfiguration\" link entry');\n      this.__logger.error(currentFunction, 'error', error);\n      return Promise.reject(error);\n    }\n    const options = this.generateOptions('GET', link.url);\n    options.auth = this.getUserAuth(consumer);\n    if (options.auth == null) {\n      const error = AWSDKError.AWSDKConsumerNotAuthenticated();\n      this.__logger.error(currentFunction, 'error', error);\n      return Promise.reject(error);\n    }\n    options.form.set('engagementId', engagementEncryptedId);\n    return this.executeRequest(options, AWSDKVisitContextResponse)\n      .then((visitContextResponse) => {\n        this.updateUserAuthEntry(consumer, visitContextResponse.authToken);\n        this.__logger.debug(currentFunction, 'Got response', visitContextResponse);\n        const visitContext = visitContextResponse.visitContext;\n        visitContext.parent = consumer.parent;\n        visitContext.proxies = consumer.proxies;\n        return visitContext;\n      })\n      .catch((error) => {\n        this.__logger.error(currentFunction, 'error', error);\n        throw error;\n      });\n  }\n\n  /**\n   * Create or update a visit given a {@link model.AWSDKVisitContext|AWSDKVisitContext}<br>\n   * The visitContext should be obtained by a call to {@link service.VisitService#getVisitContext|getVisitContext}\n   * This method will create or update a *NEW* visit and start to calculate the visit cost.  Update will be called for\n   * visits with appointments.\n   * @param {model.AWSDKVisitContext} visitContext is the context of the visit that was created by a call to getVisitContext.\n   * @returns {Promise<model.AWSDKVisit|error.AWSDKError>} Returns a promise that will be resolved to an {@link model.AWSDKVisit|AWSDKVisit} or will\n   * be rejected with an {@link error.AWSDKError|AWSDKError}.\n   * <p><br>Potential Error Codes<br>\n   * <table summary=\"ErrorCodes\" border=\"1\">\n   * <tr><th>Error Code</th><th>reason</th></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.illegalArgument|AWSDKErrorCode.illegalArgument}</td><td>A parameter is not the correct type.</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.internalError|AWSDKErrorCode.uninitialized}</td><td>The AWSDK could not complete the request.</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.consumerNotAuthenticated|AWSDKErrorCode.consumerNotAuthenticated}</td><td>Consumer is not authenticated.</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.consumerNotFound|AWSDKErrorCode.consumerNotFound}</td><td>Consumer not found</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.providerNotFound|AWSDKErrorCode.providerNotFound}</td><td>Provider not found</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.appointmentNotFound|AWSDKErrorCode.appointmentNotFound}</td><td>Appointment not found</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.providerVideoNotEnabled|AWSDKErrorCode.providerVideoNotEnabled}</td><td>Provider does not have enhanced video enabled</td></tr>\n   * </table>\n   * @since 1.1.0\n   */\n  createOrUpdateVisit(visitContext) {\n    const currentFunction = 'VisitService.createVisit';\n    this.__logger.debug(currentFunction, 'Started', visitContext);\n    if (visitContext == null) {\n      const error = AWSDKError.AWSDKIllegalArgument('visitContext argument is null');\n      this.__logger.error(currentFunction, 'error', error);\n      return Promise.reject(error);\n    }\n    if (!(visitContext instanceof AWSDKVisitContext)) {\n      const error = AWSDKError.AWSDKIllegalArgument('visitContext argument is not of type AWSDKVisitContext');\n      this.__logger.error(currentFunction, 'error', error);\n      return Promise.reject(error);\n    }\n\n    if (visitContext.hasAppointment) {\n      return this.updateVisit(visitContext);\n    }\n\n    return this.createVisit(visitContext);\n  }\n\n  /**\n   * Create an On Demand visit given a {@link model.AWSDKVisitContext|AWSDKVisitContext}<br>\n   * The visitContext should be obtained by a call to {@link service.VisitService#getVisitContext|getVisitContext}\n   * This method will create a *NEW* On Demand visit and start to calculate the visit cost.\n   * @param {model.AWSDKVisitContext} visitContext is the context of the visit that was created by a call to getVisitContext.\n   * @returns {Promise<model.AWSDKVisit|error.AWSDKError>} Returns a promise that will be resolved to an {@link model.AWSDKVisit|AWSDKVisit} or will\n   * be rejected with an {@link error.AWSDKError|AWSDKError}.\n   * <p><br>Potential Error Codes<br>\n   * <table summary=\"ErrorCodes\" border=\"1\">\n   * <tr><th>Error Code</th><th>reason</th></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.illegalArgument|AWSDKErrorCode.illegalArgument}</td><td>A parameter is not the correct type.</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.internalError|AWSDKErrorCode.uninitialized}</td><td>The AWSDK could not complete the request.</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.consumerNotAuthenticated|AWSDKErrorCode.consumerNotAuthenticated}</td><td>Consumer is not authenticated.</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.validationErrors|AWSDKErrorCode.validationErrors}</td><td>If the consumerOverrideDetails are provided and contains validation errors.</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.consumerNotFound|AWSDKErrorCode.consumerNotFound}</td><td>Consumer not found</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.providerNotFound|AWSDKErrorCode.providerNotFound}</td><td>Provider not found</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.providerVideoNotEnabled|AWSDKErrorCode.providerVideoNotEnabled}</td><td>Provider does not have enhanced video enabled</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.consumerAlreadyInVisit|AWSDKErrorCode.consumerAlreadyInVisit}</td><td>The consumer is already in the visit</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.validationIncompleteAddress|AWSDKErrorCode.validationIncompleteAddress}</td><td>The address provided on the consumerOverrideDetails is incomplete</td></tr>\n   * </table>\n   * @since 1.0.0\n   */\n  createVisit(visitContext) {\n    const currentFunction = 'VisitService.createVisit';\n    this.__logger.debug(currentFunction, 'Started', visitContext);\n    if (visitContext == null) {\n      const error = AWSDKError.AWSDKIllegalArgument('visitContext argument is null');\n      this.__logger.error(currentFunction, 'error', error);\n      return Promise.reject(error);\n    }\n    if (!(visitContext instanceof AWSDKVisitContext)) {\n      const error = AWSDKError.AWSDKIllegalArgument('visitContext argument is not of type AWSDKVisitContext');\n      this.__logger.error(currentFunction, 'error', error);\n      return Promise.reject(error);\n    }\n    const consumer = visitContext.consumer;\n    if (consumer == null) {\n      const error = AWSDKError.AWSDKInternalError('visitContext.consumer is null');\n      this.__logger.error(currentFunction, 'error', error);\n      return Promise.reject(error);\n    }\n    if (!Validator.isValidString(visitContext.providerId) && !visitContext.hasOnDemandSpecialty) {\n      const error = AWSDKError.AWSDKIllegalArgument('visitContext must contain either a provider or an on-demand specialty');\n      this.__logger.error(currentFunction, 'error', error);\n      return Promise.reject(error);\n    }\n    if (!Validator.isValidEnumValue(visitContext.modalityType, AWSDKVisitModalityType)) {\n      const error = AWSDKError.AWSDKIllegalArgument('visitContext.modalityType must be a valid AWSDKVisitModalityType value', 'modalityType');\n      this.__logger.error(currentFunction, 'error', error);\n      return Promise.reject(error);\n    }\n    if (visitContext.consumerOverrideDetails) {\n      if (!(visitContext.consumerOverrideDetails instanceof AWSDKConsumerOverrideDetails)) {\n        const error = AWSDKError.AWSDKIllegalArgument('visitContext.consumerOverrideDetails must be a valid AWSDKConsumerOverrideDetails value', 'consumerOverrideDetails');\n        this.__logger.error(currentFunction, 'error', error);\n        return Promise.reject(error);\n      }\n      const errors = this.validateConsumerOverrideDetails(visitContext.consumerOverrideDetails);\n      if (errors.length > 0) {\n        const error = AWSDKError.AWSDKValidationErrors(errors);\n        this.__logger.error(currentFunction, 'Error', error);\n        return Promise.reject(error);\n      }\n      // we need all these fields to either be supplied together or not at all - we can't do partial addresses\n      const requiredAddressFields = [\n        visitContext.consumerOverrideDetails.address1,\n        visitContext.consumerOverrideDetails.city,\n        visitContext.consumerOverrideDetails.zipCode,\n        visitContext.consumerOverrideDetails.state,\n      ];\n\n      // checks if every field is present or not by comparing the boolean coerced value to the first value in the array\n      // true if all present or all not present\n      if (!requiredAddressFields.every((f, i, arr) => !!f === !!arr[0])) {\n        const error = AWSDKError.AWSDKValidationIncompleteAddress('AWSDKConsumerOverrideDetails', visitContext.consumerOverrideDetails);\n        this.__logger.error(currentFunction, 'error', error);\n        return Promise.reject(error);\n      }\n    }\n    const link = this.findNamedLink(this.__links, 'buildVisit');\n    if (!Validator.isValidLink(link)) {\n      const error = AWSDKError.AWSDKInternalError('service does not have a valid \"buildVisit\" link entry');\n      this.__logger.error(currentFunction, 'error', error);\n      return Promise.reject(error);\n    }\n    const options = this.generateOptions('POST', link.url, false);\n    options.auth = this.getUserAuth(consumer);\n    if (options.auth == null) {\n      const error = AWSDKError.AWSDKConsumerNotAuthenticated();\n      this.__logger.error(currentFunction, 'error', error);\n      return Promise.reject(error);\n    }\n    options.headers['Content-Type'] = 'application/json';\n    const visitRequestBody = new AWSDKVisitRequestBody(visitContext, !!this.__config.ignorePropagation);\n    options.body = visitRequestBody.getAsJSONString(this.__systemConfiguration);\n    return this.executeRequest(options, AWSDKVisitResponse)\n      .then((visitResponse) => {\n        this.__logger.debug(currentFunction, 'Got response', visitResponse);\n        this.updateUserAuthEntry(consumer, visitResponse.authToken);\n        const visit = visitResponse.visit;\n        if (visitContext.firstAvailableData == null) {\n          visit.onDemandSpecialtyId = visitContext.onDemandSpecialtyId;\n        } else {\n          visit.isMatchmaking = true; // first-available search has already been performed; allow the visit to acquire a WR ticket\n        }\n        this.__logger.info(currentFunction, 'Completed');\n        return visit;\n      })\n      .catch((error) => {\n        this.__logger.error(currentFunction, 'error', error);\n        throw error;\n      });\n  }\n\n  /**\n   * Search for visits for a given consumer. The {@link model.AWSDKVisitSearchCriteria|AWSDKVisitSearchCriteria} can be obtained from {@link service.VisitService#getNewVisitSearchCriteria|getNewVisitSearchCriteria}.\n   * @param {model.AWSDKConsumer} consumer the consumer to get the visits for.\n   * @param {model.AWSDKVisitSearchCriteria} visitSearchCriteria the criteria to filter the result by.\n   * @returns {Promise<model.AWSDKVisit[]|error.AWSDKError>} Returns a promise that will be resolved to an array of {@link model.AWSDKVisit|AWSDKVisit} or will\n   * be rejected with an {@link error.AWSDKError|AWSDKError}.\n   * <p><br>Potential Error Codes<br>\n   * <table summary=\"ErrorCodes\" border=\"1\">\n   * <tr><th>Error Code</th><th>reason</th></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.illegalArgument|AWSDKErrorCode.illegalArgument}</td><td>A parameter is not the correct type.</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.validationError|AWSDKErrorCode.validationError}</td><td>A parameter is not the correct type.</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.internalError|AWSDKErrorCode.uninitialized}</td><td>The AWSDK could not complete the request.</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.consumerNotAuthenticated|AWSDKErrorCode.consumerNotAuthenticated}</td><td>Consumer is not authenticated.</td></tr>\n   * </table>\n   * @since 1.4.0\n   */\n  searchVisits(consumer, visitSearchCriteria) {\n    const currentFunction = 'VisitService.searchVisits';\n    this.__logger.debug(currentFunction, 'Started', consumer, visitSearchCriteria);\n    if (!(consumer instanceof AWSDKConsumer)) {\n      const error = AWSDKError.AWSDKIllegalArgument('consumer argument is not of type AWSDKConsumer');\n      this.__logger.error(currentFunction, 'error', error);\n      return Promise.reject(error);\n    }\n\n    const link = this.findNamedLink(consumer.links, 'visitSearch');\n    if (!Validator.isValidLink(link)) {\n      const error = AWSDKError.AWSDKInternalError('consumer does not have a valid \"visitSearch\" link entry');\n      this.__logger.error(currentFunction, 'error', error);\n      return Promise.reject(error);\n    }\n    const options = this.generateOptions('GET', link.url, true);\n\n    if (visitSearchCriteria) {\n      if (!(visitSearchCriteria instanceof AWSDKVisitSearchCriteria)) {\n        const error = AWSDKError.AWSDKIllegalArgument('visitSearchCriteria argument is not of type AWSDKVisitSearchCriteria');\n        this.__logger.error(currentFunction, 'error', error);\n        return Promise.reject(error);\n      }\n\n      if (visitSearchCriteria.startDate && !(visitSearchCriteria.startDate instanceof Date)) {\n        const error = AWSDKError.AWSDKValidationError('startDate');\n        this.__logger.error(currentFunction, 'error', error);\n        return Promise.reject(error);\n      }\n\n      if (visitSearchCriteria.endDate && !(visitSearchCriteria.endDate instanceof Date)) {\n        const error = AWSDKError.AWSDKValidationError('endDate');\n        this.__logger.error(currentFunction, 'error', error);\n        return Promise.reject(error);\n      }\n\n      if (visitSearchCriteria.maxResults && visitSearchCriteria.maxResults < 0) {\n        const error = AWSDKError.AWSDKValidationError('maxResults');\n        this.__logger.error(currentFunction, 'error', error);\n        return Promise.reject(error);\n      }\n\n      if (visitSearchCriteria.sourceId && !Validator.isStringType(visitSearchCriteria.sourceId)) {\n        const error = AWSDKError.AWSDKValidationError('sourceId');\n        this.__logger.error(currentFunction, 'error', error);\n        return Promise.reject(error);\n      }\n\n      let stringDispositions = null;\n      if (visitSearchCriteria.dispositions) {\n        try {\n          stringDispositions = visitSearchCriteria.dispositions.map(s => GenericParser.parseAndConvertEnumValue(s));\n        } catch (ignored) {\n          const error = AWSDKError.AWSDKValidationError('dispositions');\n          this.__logger.error(currentFunction, 'error', error);\n          return Promise.reject(error);\n        }\n      }\n\n      if (visitSearchCriteria.maxResults) options.form.set('pageSize', visitSearchCriteria.maxResults);\n      if (visitSearchCriteria.startDate) options.form.set('startDate', Util.formatISODateTime(visitSearchCriteria.startDate));\n      if (visitSearchCriteria.endDate) options.form.set('endDate', Util.formatISODateTime(visitSearchCriteria.endDate));\n      if (visitSearchCriteria.sourceId) options.form.set('sourceId', visitSearchCriteria.sourceId);\n      if (stringDispositions) {\n        stringDispositions.forEach((s) => {\n          options.form.append('disposition', s);\n        });\n      }\n    }\n\n    options.auth = this.getUserAuth(consumer);\n    if (options.auth == null) {\n      const error = AWSDKError.AWSDKConsumerNotAuthenticated();\n      this.__logger.error(currentFunction, 'error', error);\n      return Promise.reject(error);\n    }\n    return this.executeRequest(options, AWSDKVisitsResponse)\n      .then((visitsResponse) => {\n        this.__logger.debug(currentFunction, 'Got response', visitsResponse);\n        this.updateUserAuthEntry(consumer, visitsResponse.authToken);\n        return visitsResponse.visits;\n      })\n      .catch((error) => {\n        this.__logger.error(currentFunction, 'error', error);\n        throw error;\n      });\n  }\n\n  /**\n   * Create a visit given a {@link model.AWSDKSpeedPass|AWSDKSpeedPass}<br>\n   * This method will create a *NEW* visit from a {@link model.AWSDKSpeedPass|AWSDKSpeedPass}.\n   * @param {model.AWSDKSpeedPass} AWSDKSpeedPass is the {@link model.AWSDKSpeedPass|AWSDKSpeedPass} acquired from {@link service.VisitService#getSpeedPass|getSpeedPass}.\n   * @returns {Promise<model.AWSDKVisit|error.AWSDKError>} Returns a promise that will be resolved to an {@link model.AWSDKVisit|AWSDKVisit} or will\n   * be rejected with an {@link error.AWSDKError|AWSDKError}.\n   * <p><br>Potential Error Codes<br>\n   * <table summary=\"ErrorCodes\" border=\"1\">\n   * <tr><th>Error Code</th><th>reason</th></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.illegalArgument|AWSDKErrorCode.illegalArgument}</td><td>A parameter is not the correct type.</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.internalError|AWSDKErrorCode.internalError}</td><td>The AWSDK could not complete the request.</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.consumerNotAuthenticated|AWSDKErrorCode.consumerNotAuthenticated}</td><td>Consumer is not authenticated.</td></tr>\n   * </table>\n   * @since 1.2.0\n   */\n  createVisitFromSpeedPass(speedPass) {\n    const currentFunction = 'VisitService.createVisitFromSpeedPass';\n    this.__logger.debug(currentFunction, 'Started', speedPass);\n    if (!(speedPass instanceof AWSDKSpeedPass)) {\n      const error = AWSDKError.AWSDKIllegalArgument('speedPass argument is not of type AWSDKSpeedPass');\n      this.__logger.error(currentFunction, 'error', error);\n      return Promise.reject(error);\n    }\n    const link = this.findNamedLink(this.__links, 'buildVisit');\n    if (!Validator.isValidLink(link)) {\n      const error = AWSDKError.AWSDKInternalError('service does not have a valid \"buildVisit\" link entry');\n      this.__logger.error(currentFunction, 'error', error);\n      return Promise.reject(error);\n    }\n    const consumer = speedPass.consumer;\n    const options = this.generateOptions('POST', link.url, false);\n    options.auth = this.getUserAuth(consumer);\n    if (options.auth == null) {\n      const error = AWSDKError.AWSDKConsumerNotAuthenticated();\n      this.__logger.error(currentFunction, 'error', error);\n      return Promise.reject(error);\n    }\n    options.headers['Content-Type'] = 'application/json';\n    options.body = speedPass.buildVisitRequestJson();\n    return this.executeRequest(options, AWSDKVisitResponse)\n      .then((visitResponse) => {\n        this.__logger.debug(currentFunction, 'Got response', visitResponse);\n        this.updateUserAuthEntry(consumer, visitResponse.authToken);\n        this.__logger.info(currentFunction, 'Completed');\n        const visit = visitResponse.visit;\n        if (speedPass.onDemandSpecialtyId) {\n          visit.onDemandSpecialtyId = speedPass.onDemandSpecialtyId;\n        }\n        return visitResponse.visit;\n      })\n      .catch((error) => {\n        this.__logger.error(currentFunction, 'error', error);\n        throw error;\n      });\n  }\n\n  /**\n   * Update a visit given a {@link model.AWSDKVisitContext|AWSDKVisitContext}<br>\n   * The visitContext should be obtained by a call to {@link service.VisitService#getVisitContext|getVisitContext}\n   * This method will update a visit and calculate the visit cost.\n   * @param {model.AWSDKVisitContext} visitContext is the context of the visit that was created by a call to getVisitContext.\n   * @returns {Promise<model.AWSDKVisit|error.AWSDKError>} Returns a promise that will be resolved to an {@link model.AWSDKVisit|AWSDKVisit} or will\n   * be rejected with an {@link error.AWSDKError|AWSDKError}.\n   * <p><br>Potential Error Codes<br>\n   * <table summary=\"ErrorCodes\" border=\"1\">\n   * <tr><th>Error Code</th><th>reason</th></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.illegalArgument|AWSDKErrorCode.illegalArgument}</td><td>A parameter is not the correct type.</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.internalError|AWSDKErrorCode.uninitialized}</td><td>The AWSDK could not complete the request.</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.consumerNotAuthenticated|AWSDKErrorCode.consumerNotAuthenticated}</td><td>Consumer is not authenticated.</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.consumerNotFound|AWSDKErrorCode.consumerNotFound}</td><td>Consumer not found</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.providerNotFound|AWSDKErrorCode.providerNotFound}</td><td>Provider not found</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.appointmentNotFound|AWSDKErrorCode.appointmentNotFound}</td><td>Appointment not found</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.providerVideoNotEnabled|AWSDKErrorCode.providerVideoNotEnabled}</td><td>Provider does not have enhanced video enabled</td></tr>\n   * </table>\n   * @since 1.1.0\n   */\n  updateVisit(visitContext) {\n    const currentFunction = 'VisitService.updateVisit';\n    this.__logger.debug(currentFunction, 'Started', visitContext);\n    if (visitContext == null) {\n      const error = AWSDKError.AWSDKIllegalArgument('visitContext argument is null');\n      this.__logger.error(currentFunction, 'error', error);\n      return Promise.reject(error);\n    }\n    if (!(visitContext instanceof AWSDKVisitContext)) {\n      const error = AWSDKError.AWSDKIllegalArgument('visitContext argument is not of type AWSDKVisitContext');\n      this.__logger.error(currentFunction, 'error', error);\n      return Promise.reject(error);\n    }\n    const consumer = visitContext.consumer;\n    const engagementEncryptedId = visitContext.engagementId;\n    if (consumer == null) {\n      const error = AWSDKError.AWSDKInternalError('visitContext.consumer is null');\n      this.__logger.error(currentFunction, 'error', error);\n      return Promise.reject(error);\n    }\n    if (!Validator.isValidString(engagementEncryptedId)) {\n      const error = AWSDKError.AWSDKInternalError('visitContext.engagementId is not valid');\n      this.__logger.error(currentFunction, 'error', error);\n      return Promise.reject(error);\n    }\n    if (!Validator.isValidEnumValue(visitContext.modalityType, AWSDKVisitModalityType)) {\n      const error = AWSDKError.AWSDKIllegalArgument('visitContext.modalityType must be a valid AWSDKVisitModalityType value');\n      this.__logger.error(currentFunction, 'error', error);\n      return Promise.reject(error);\n    }\n    const link = this.findNamedLink(this.__links, 'buildVisit');\n    if (!Validator.isValidLink(link)) {\n      const error = AWSDKError.AWSDKInternalError('service does not have a valid \"buildVisit\" link entry');\n      this.__logger.error(currentFunction, 'error', error);\n      return Promise.reject(error);\n    }\n    const options = this.generateOptions('PUT', link.url, false);\n    options.auth = this.getUserAuth(consumer);\n    if (options.auth == null) {\n      const error = AWSDKError.AWSDKConsumerNotAuthenticated();\n      this.__logger.error(currentFunction, 'error', error);\n      return Promise.reject(error);\n    }\n    options.headers['Content-Type'] = 'application/json';\n    const visitRequestBody = new AWSDKVisitRequestBody(visitContext);\n    options.body = visitRequestBody.getAsJSONString(this.__systemConfiguration);\n    return this.executeRequest(options, AWSDKVisitResponse)\n      .then((visitResponse) => {\n        this.updateUserAuthEntry(consumer, visitResponse.authToken);\n        this.__logger.debug(currentFunction, 'Got response', visitResponse);\n        this.__logger.info(currentFunction, 'Completed');\n        return visitResponse.visit;\n      })\n      .catch((error) => {\n        this.__logger.error(currentFunction, 'error', error);\n        throw error;\n      });\n  }\n\n  /**\n   * <p><br>Supported Visit Dispositions:</br>\n   * <ul>\n   * <li>{@link model.AWSDKDisposition.Unpublished|Unpublished}</li>\n   * <li>{@link model.AWSDKDisposition.Unscheduled|Unscheduled}</li>\n   * <li>{@link model.AWSDKDisposition.Scheduled|Scheduled}</li>\n   * <li>{@link model.AWSDKDisposition.Parked|Parked}</li>\n   * <li>{@link model.AWSDKDisposition.PreVisitScreening|PreVisitScreening}</li>\n   * </ul>\n   * </p>\n   * @private\n   */\n  getVisitCost(visit) {\n    const currentFunction = 'VisitService.getVisitCost';\n    this.__logger.debug(currentFunction, 'Started', visit);\n    if (visit == null) {\n      const error = AWSDKError.AWSDKIllegalArgument('visit is null');\n      this.__logger.error(currentFunction, 'error', error);\n      return Promise.reject(error);\n    }\n    if (!(visit instanceof AWSDKVisit)) {\n      const error = AWSDKError.AWSDKIllegalArgument('visit is not instance of AWSDKVisit');\n      this.__logger.error(currentFunction, 'error', error);\n      return Promise.reject(error);\n    }\n    const consumer = visit.consumer;\n    const costLink = this.findNamedLink(visit.links, 'cost');\n    if (!Validator.isValidLink(costLink)) {\n      const error = AWSDKError.AWSDKInternalError('visit does not have \"cost\" link entry');\n      this.__logger.error(currentFunction, 'error', error);\n      return Promise.reject(error);\n    }\n    const options = this.generateOptions('GET', costLink.url);\n    options.auth = this.getUserAuth(consumer);\n    if (options.auth == null) {\n      const error = AWSDKError.AWSDKConsumerNotAuthenticated();\n      this.__logger.error(currentFunction, 'error', error);\n      return Promise.reject(error);\n    }\n    return this.executeRequest(options, AWSDKVisitCostResponse)\n      .then((visitCostResponse) => {\n        this.__logger.debug(currentFunction, 'Got response', visitCostResponse);\n        this.updateUserAuthEntry(consumer, visitCostResponse.authToken);\n        return visitCostResponse.cost;\n      })\n      .catch((error) => {\n        this.__logger.error(currentFunction, 'error', error);\n        this.__serverLogger.logToServer('error',\n          'Consumer {0} has failed to get a visit cost using Consumer Web SDK',\n          [\n            visit.getServerLogParam(),\n          ]);\n        throw error;\n      });\n  }\n\n  /**\n   * This method will wait for the cost calculation to finish processing.<br>\n   * @param {model.AWSDKVisit} visit is the object that was created by a call to createVisit.\n   * @returns {Promise<model.AWSDKVisit|error.AWSDKError>} Returns a promise that will be resolved to an {@link model.AWSDKVisit|AWSDKVisit} or will\n   * be rejected with an {@link error.AWSDKError|AWSDKError}.\n   * <p><br>Potential Error Codes<br>\n   * <table summary=\"ErrorCodes\" border=\"1\">\n   * <tr><th>Error Code</th><th>reason</th>\n   * <tr><td>{@link error.AWSDKErrorCode.illegalArgument|AWSDKErrorCode.illegalArgument}</td><td>A parameter is not the correct type.</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.consumerNotAuthenticated|AWSDKErrorCode.consumerNotAuthenticated}</td><td>Consumer is not authenticated.</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.pollingTimeout|AWSDKErrorCode.pollingTimeout}</td><td>The cost calculation exceeded its allotted polling time</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.visitInvalid|AWSDKErrorCode.visitInvalid}</td><td>The visit has an invalid disposition</td></tr>\n   * </table>\n   * <p><br>Supported Visit Dispositions:</br>\n   * <ul>\n   * <li>{@link model.AWSDKDisposition.Unpublished|Unpublished}</li>\n   * <li>{@link model.AWSDKDisposition.Unscheduled|Unscheduled}</li>\n   * <li>{@link model.AWSDKDisposition.Scheduled|Scheduled}</li>\n   * <li>{@link model.AWSDKDisposition.Parked|Parked}</li>\n   * <li>{@link model.AWSDKDisposition.PreVisitScreening|PreVisitScreening}</li>\n   * </ul>\n   * </p>\n   * @since 1.0.0\n   */\n  waitForVisitCostCalculationToFinish(visit) {\n    const currentFunction = 'VisitService.waitForVisitCostCalculationToFinish';\n    this.__logger.debug(currentFunction, 'Started', visit);\n    if (visit == null) {\n      const error = AWSDKError.AWSDKIllegalArgument('visit is null');\n      this.__logger.error(currentFunction, 'error', error);\n      return Promise.reject(error);\n    }\n    if (!(visit instanceof AWSDKVisit)) {\n      const error = AWSDKError.AWSDKIllegalArgument('visit is not instance of AWSDKVisit');\n      this.__logger.error(currentFunction, 'error', error);\n      return Promise.reject(error);\n    }\n    const interval = this.__config.visitCostPollingInterval;\n    const endTime = Number(new Date()) + (this.__config.visitCostPollingTimeout);\n    let errorCount = 0;\n    const errorLimit = 3;\n    const checkCondition = (resolve, reject) => {\n      this.getVisitCost(visit)\n        .then((visitCost) => {\n          this.__logger.debug(currentFunction, 'Got response', visitCost);\n          if (visitCost && visitCost.costCalculationStatus !== 'PROCESSING') {\n            const updatedVisit = visit;\n            updatedVisit.cost = visitCost;\n            this.__logger.info(currentFunction, 'Completed');\n            resolve(updatedVisit);\n          } else if (Number(new Date()) < endTime) {\n            setTimeout(checkCondition, interval, resolve, reject);\n          } else {\n            errorCount += 3;\n            const error = AWSDKError.AWSDKPollingTimeout();\n            this.__logger.error(currentFunction, 'Polling request timed out', error);\n            reject(error);\n          }\n        })\n        .catch((error) => {\n          errorCount += 1;\n          this.__logger.warn(currentFunction, 'error during polling', errorCount, error);\n          if (errorCount >= errorLimit) {\n            this.__logger.error(currentFunction, 'error', error);\n            reject(error);\n          } else {\n            setTimeout(checkCondition, interval, resolve, reject);\n          }\n        });\n    };\n    return new Promise(checkCondition);\n  }\n\n  /**\n   * This method will put the consumer into the provider's waiting room.<br>\n   * @param {model.AWSDKVisit} visit is the object that was created by a call to createVisit\n   * @returns {Promise<model.AWSDKVisit|error.AWSDKError>} Returns a promise that will be resolved to an {@link model.AWSDKVisit|AWSDKVisit} or will\n   * be rejected with an {@link error.AWSDKError|AWSDKError}.\n   * <p><br>Potential Error Codes<br>\n   * <table summary=\"ErrorCodes\" border=\"1\">\n   * <tr><th>Error Code</th><th>reason</th>\n   * <tr><td>{@link error.AWSDKErrorCode.consumerAlreadyInVisit}</td><td>The consumer is already in a visit</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.consumerBusy}</td><td>The consumer is busy</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.consumerNotAuthenticated|AWSDKErrorCode.consumerNotAuthenticated}</td><td>Consumer is not authenticated.</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.internalError|AWSDKErrorCode.internalError}</td><td>The AWSDK could not complete the request.</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.creditCardDeclinedError}</td><td>Credit card used as payment method has been declined</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.creditCardInvalidCVV}</td><td>Invalid CVV code for credit card used as payment method</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.creditCardInvalidZipCode}</td><td>Invalid zip code for credit card used as payment method</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.creditCardValidationError}</td><td>Credit card used as payment method validation has failed</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.providerBusy}</td><td>The provider is busy and no longer available</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.providerNotAvailable|AWSDKErrorCode.providerNotAvailable}</td><td>This can occur for a variety of reasons, including when the provider is offline for an on-demand visit or the provider's waiting room is closed to incoming consumers.</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.providerNotLicensedForConsumerLocation}</td><td>The provider is not licensed for the consumer's legal residence</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.startVisitFailed}</td><td>Unable to start the visit.</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.visitConsumerCallbackInvalid}</td><td>The visit has an invalid consumer callback number.</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.visitExpired}</td><td>The visit has already ended.</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.visitInvalid}</td><td>The visit is no longer valid.</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.waitingRoomAccessDenied}</td><td>The consumer was denied access to the provider's waiting room, possibly due to provider's configuration.</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.illegalUsage}</td><td>The visit specified an on-demand specialty but did not contain the required first-available data</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.illegalUsage}</td><td>The visit specified a null cost or the cost object did not have a status value of finished</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.illegalUsage}</td><td>The visit specified guest invitation emails but the system is not configured for multiple video guests</td></tr>\n   * </table>\n   * @since 1.0.0\n   */\n  startVisit(visit) {\n    const currentFunction = 'VisitService.startVisit';\n    this.__logger.debug(currentFunction, 'Started', visit);\n    if (visit == null) {\n      const error = AWSDKError.AWSDKIllegalArgument('visit argument is null');\n      this.__logger.error(currentFunction, 'error', error);\n      return Promise.reject(error);\n    }\n    if (!(visit instanceof AWSDKVisit)) {\n      const error = AWSDKError.AWSDKIllegalArgument('visit argument is not of type AWSDKVisit');\n      this.__logger.error(currentFunction, 'error', error);\n      return Promise.reject(error);\n    }\n    if (visit.onDemandSpecialtyId != null && visit.firstAvailableData == null) {\n      const desc = 'An AWSDKOnDemandSpecialty was specified without requisite first-available data';\n      const corrected = 'Obtain first-available data for the AWSDKOnDemandSpecialty prior to starting the visit';\n      const error = AWSDKError.AWSDKIllegalUsage(desc, corrected);\n      this.__logger.error(currentFunction, 'error', error);\n      return Promise.reject(error);\n    }\n    if (visit.onDemandSpecialtyId == null && visit.firstAvailableData != null) {\n      const desc = 'First-available data was specified without a requisite AWSDKOnDemandSpecialty';\n      const corrected = 'Use an AWSDKOnDemandSpecialty to get first-available data for a visit';\n      const error = AWSDKError.AWSDKIllegalUsage(desc, corrected);\n      this.__logger.error(currentFunction, 'error', error);\n      return Promise.reject(error);\n    }\n    if (visit.cost == null) {\n      const desc = 'The visit cost is null';\n      const corrected = 'Ensure that you call the VisitService#waitForVisitCostCalculationToFinish() before calling this method';\n      const error = AWSDKError.AWSDKIllegalUsage(desc, corrected);\n      this.__logger.error(currentFunction, 'error', error);\n      return Promise.reject(error);\n    }\n    if (visit.cost.costCalculationStatus !== 'FINISHED') {\n      const desc = 'The visit cost calculation has not finished';\n      const corrected = 'Ensure that you call the VisitService#waitForVisitCostCalculationToFinish() before calling this method';\n      const error = AWSDKError.AWSDKIllegalUsage(desc, corrected);\n      this.__logger.error(currentFunction, 'error', error);\n      return Promise.reject(error);\n    }\n    if (visit.guestInvitationEmails != null && visit.guestInvitationEmails.length !== 0 && !this.__systemConfiguration.multipleVideoParticipantsEnabled) {\n      const desc = 'The system is not configured to allow multiple guests to join a video visit';\n      const corrected = 'Configure the system to allow multiple guests to join a video visit';\n      const error = AWSDKError.AWSDKIllegalUsage(desc, corrected);\n      this.__logger.error(currentFunction, 'error', error);\n      return Promise.reject(error);\n    }\n    const link = this.findNamedLink(visit.links, 'startVisit');\n    if (!Validator.isValidLink(link)) {\n      const error = AWSDKError.AWSDKInternalError('visit argument does not have a valid \"startVisit\" link entry');\n      this.__logger.error(currentFunction, 'error', error);\n      return Promise.reject(error);\n    }\n    const options = this.generateOptions('PUT', link.url);\n    options.auth = this.getUserAuth(visit.consumer);\n    if (options.auth == null) {\n      const error = AWSDKError.AWSDKConsumerNotAuthenticated();\n      this.__logger.error(currentFunction, 'error', error);\n      return Promise.reject(error);\n    }\n    options.form.set('engagementId', visit.id.encryptedId);\n    options.form.set('connectionType', 'Web');\n    options.form.set('isMatchmakingVisit', visit.isMatchmaking);\n    options.form.set('preferredVendor', AWCoreSDKVendor.PEXIP);\n    const firstAvailableData = visit.firstAvailableData;\n    if (visit.onDemandSpecialtyId != null && firstAvailableData != null) {\n      const prov = firstAvailableData.provider;\n      options.form.set('providerId', prov.id.encryptedId);\n      options.form.set('firstAvailableSearchStartTime', firstAvailableData.getFormattedStartTime());\n      options.form.set('firstAvailableSearchEndTime', firstAvailableData.getFormattedEndTime());\n      options.form.set('firstAvailableProviderAskCount', firstAvailableData.firstAvailableProviderAskCount);\n    }\n    if (visit.guestInvitationEmails != null) {\n      visit.guestInvitationEmails.forEach((email) => {\n        options.form.append('inviteEmails', email);\n      });\n    }\n    return this.executeRequest(options)\n      .then((response) => {\n        this.__logger.debug(currentFunction, 'Got response', response);\n        this.__logger.info(currentFunction, 'Completed');\n        const updatedVisit = this.getVisit(visit);\n        this.__serverLogger.logToServer('info',\n          'Consumer {0} has successfully started a visit using Consumer Web SDK',\n          [\n            visit.getServerLogParam(),\n          ]);\n        return updatedVisit;\n      })\n      .catch((error) => {\n        this.__logger.error(currentFunction, 'error', error);\n        this.__serverLogger.logToServer('info',\n          'Consumer {0} has failed to start a visit using Consumer Web SDK',\n          [\n            visit.getServerLogParam(),\n          ]);\n        throw error;\n      });\n  }\n\n  /**\n   * This method will wait for the telehealth video to start by getting an updated {@link model.AWSDKVisit|AWSDKVisit} and checking the telehealthVideoStarted property.\n   * The call will also return if the visit has finished.<br>\n   * @param {model.AWSDKVisit} visit is the object that was created by a call to createVisit.\n   * @returns {Promise<model.AWSDKVisit|error.AWSDKError>} Returns a promise that will be resolved to an {@link model.AWSDKVisit|AWSDKVisit} or will\n   * be rejected with an {@link error.AWSDKError|AWSDKError}.\n   * <p><br>Potential Error Codes<br>\n   * <table summary=\"ErrorCodes\" border=\"1\">\n   * <tr><th>Error Code</th><th>reason</th>\n   * <tr><td>{@link error.AWSDKErrorCode.illegalArgument|AWSDKErrorCode.illegalArgument}</td><td>A parameter is not the correct type.</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.consumerNotAuthenticated|AWSDKErrorCode.consumerNotAuthenticated}</td><td>Consumer is not authenticated.</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.videoConnectionFailure|AWSDKErrorCode.videoConnectionFailure}</td><td>Connection to the Video server failed.</td></tr>\n   * </table>\n   * @since 1.0.0\n   */\n  waitForTelehealthVideoToStart(visit) {\n    const currentFunction = 'VisitService.waitForTelehealthVideoToStart';\n    this.__logger.debug(currentFunction, 'Started', visit);\n    if (visit == null) {\n      const error = AWSDKError.AWSDKIllegalArgument('visit argument is null');\n      this.__logger.error(currentFunction, 'error', error);\n      return Promise.reject(error);\n    }\n    if (!(visit instanceof AWSDKVisit)) {\n      const error = AWSDKError.AWSDKIllegalArgument('visit argument is not of type AWSDKVisit');\n      this.__logger.error(currentFunction, 'error', error);\n      return Promise.reject(error);\n    }\n    if (visit.telehealthVideoStarted) {\n      this.__logger.warn(currentFunction, 'Completed - telehealthVideo already started');\n      return Promise.resolve(visit);\n    }\n    if (visit.finished) {\n      this.__logger.warn(currentFunction, 'Completed - visit already finished');\n      return Promise.resolve(visit);\n    }\n    const interval = this.__config.visitPollingInterval;\n    let errorCount = 0;\n    const errorLimit = 3;\n    const checkCondition = (resolve, reject) => {\n      this.getVisit(visit)\n        .then((updatedVisit) => {\n          if (updatedVisit.telehealthVideoStarted) {\n            this.__logger.info(currentFunction, 'Completed - telehealthVideo started');\n            resolve(updatedVisit);\n          } else if (updatedVisit.finished) {\n            this.__logger.info(currentFunction, 'Completed - visit finished');\n            resolve(updatedVisit);\n          } else {\n            setTimeout(checkCondition, interval, resolve, reject);\n          }\n        })\n        .catch((error) => {\n          errorCount += 1;\n          this.__logger.warn(currentFunction, 'error during polling', errorCount, error);\n          if (errorCount >= errorLimit) {\n            this.__logger.error(currentFunction, 'error', error);\n            reject(error);\n          } else {\n            setTimeout(checkCondition, interval, resolve, reject);\n          }\n        });\n    };\n    return new Promise(checkCondition);\n  }\n\n  /**\n   * This method will wait for the provider to join the visit.<br>\n   * @param {model.AWSDKVisit} visit is the object that was created by a call to {@link service.VisitService#createVisit|createVisit}.\n   * @param {function} [callback] the callback to be called on before visit starts\n   * @returns {Promise<model.AWSDKVisit|error.AWSDKError>} Returns a promise that will be resolved to an {@link model.AWSDKVisit|AWSDKVisit} or will\n   * be rejected with an {@link error.AWSDKError|AWSDKError}.\n   * <p><br>Potential Error Codes<br>\n   * <table summary=\"ErrorCodes\" border=\"1\">\n   * <tr><th>Error Code</th><th>reason</th>\n   * <tr><td>{@link error.AWSDKErrorCode.illegalArgument|AWSDKErrorCode.illegalArgument}</td><td>A parameter is not the correct type.</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.consumerNotAuthenticated|AWSDKErrorCode.consumerNotAuthenticated}</td><td>Consumer is not authenticated.</td></tr>\n   * </table>\n   * @since 1.0.0\n   */\n  waitForProviderToJoinVisit(visit, callback) {\n    const currentFunction = 'VisitService.waitForProviderToJoinVisit';\n    this.__logger.debug(currentFunction, 'Started', visit);\n    if (visit == null) {\n      const error = AWSDKError.AWSDKIllegalArgument('visit argument is null');\n      this.__logger.error(currentFunction, 'error', error);\n      return Promise.reject(error);\n    }\n    if (!(visit instanceof AWSDKVisit)) {\n      const error = AWSDKError.AWSDKIllegalArgument('visit argument is not of type AWSDKVisit');\n      this.__logger.error(currentFunction, 'error', error);\n      return Promise.reject(error);\n    }\n    if (callback != null && !(callback instanceof Function)) {\n      const error = AWSDKError.AWSDKIllegalArgument('callback argument is not a function');\n      this.__logger.error(currentFunction, 'error', error);\n      return Promise.reject(error);\n    }\n    if (visit.providerConnected) {\n      this.__logger.warn(currentFunction, 'Completed - provider already connected');\n      return Promise.resolve(visit);\n    }\n    if (visit.finished) {\n      this.__logger.warn(currentFunction, 'Completed - visit already finished');\n      return Promise.resolve(visit);\n    }\n    const interval = this.__config.visitPollingInterval;\n    let errorCount = 0;\n    const errorLimit = 3;\n    const checkCondition = (resolve, reject) => {\n      this.getVisit(visit)\n        .then((updatedVisit) => {\n          if (updatedVisit.providerConnected) {\n            this.__logger.info(currentFunction, 'Completed - provider connected');\n            resolve(updatedVisit);\n          } else if (updatedVisit.finished) {\n            this.__logger.info(currentFunction, 'Completed - visit finished');\n            resolve(updatedVisit);\n          } else {\n            if (callback != null) {\n              try {\n                callback(updatedVisit);\n              } catch (error) {\n                this.__logger.error(currentFunction, 'error', error);\n              }\n            }\n            setTimeout(checkCondition, interval, resolve, reject);\n          }\n        })\n        .catch((error) => {\n          errorCount += 1;\n          this.__logger.warn(currentFunction, 'error during polling', errorCount, error);\n          if (errorCount >= errorLimit) {\n            this.__logger.error(currentFunction, 'error', error);\n            reject(error);\n          } else {\n            setTimeout(checkCondition, interval, resolve, reject);\n          }\n        });\n    };\n    return new Promise(checkCondition);\n  }\n\n  /**\n   * This method will wait for the visit to finish.\n   * @param {model.AWSDKVisit} visit is the object that was created by a call to {@link service.VisitService#createVisit|createVisit}.\n   * @param {function} [callback] the callback to be called on while the visit is in progress\n   * @returns {Promise<model.AWSDKVisit|error.AWSDKError>} Returns a promise that will be resolved to an {@link model.AWSDKVisit|AWSDKVisit} or will\n   * be rejected with an {@link error.AWSDKError|AWSDKError}.\n   * <p><br>Potential Error Codes<br>\n   * <table summary=\"ErrorCodes\" border=\"1\">\n   * <tr><th>Error Code</th><th>reason</th>\n   * <tr><td>{@link error.AWSDKErrorCode.illegalArgument|AWSDKErrorCode.illegalArgument}</td><td>A parameter is not the correct type.</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.consumerNotAuthenticated|AWSDKErrorCode.consumerNotAuthenticated}</td><td>Consumer is not authenticated.</td></tr>\n   * </table>\n   * @since 1.0.0\n   */\n  waitForVisitToFinish(visit, callback) {\n    const currentFunction = 'VisitService.waitForVisitToFinish';\n    this.__logger.debug(currentFunction, 'Started', visit);\n    if (!(visit instanceof AWSDKVisit)) {\n      const error = AWSDKError.AWSDKIllegalArgument('visit argument is not of type AWSDKVisit');\n      this.__logger.error(currentFunction, 'error', error);\n      return Promise.reject(error);\n    }\n    if (callback != null && !(callback instanceof Function)) {\n      const error = AWSDKError.AWSDKIllegalArgument('callback argument is not a function');\n      this.__logger.error(currentFunction, 'error', error);\n      return Promise.reject(error);\n    }\n    if (visit.finished) {\n      this.__logger.warn(currentFunction, 'Completed - visit already finished');\n      return Promise.resolve(visit);\n    }\n    const interval = this.__config.visitPollingInterval;\n    let errorCount = 0;\n    const errorLimit = 3;\n    const checkCondition = (resolve, reject) => {\n      this.getVisit(visit)\n        .then((updatedVisit) => {\n          if (updatedVisit.finished) {\n            this.__logger.info(currentFunction, 'Completed');\n            resolve(updatedVisit);\n          } else {\n            if (callback != null) {\n              try {\n                callback(updatedVisit);\n              } catch (error) {\n                this.__logger.error(currentFunction, 'error', error);\n              }\n            }\n            setTimeout(checkCondition, interval, resolve, reject);\n          }\n        })\n        .catch((error) => {\n          errorCount += 1;\n          this.__logger.warn(currentFunction, 'error during polling', errorCount, error);\n          if (errorCount >= errorLimit) {\n            this.__logger.error(currentFunction, 'error', error);\n            reject(error);\n          } else {\n            setTimeout(checkCondition, interval, resolve, reject);\n          }\n        });\n    };\n    return new Promise(checkCondition);\n  }\n\n  /**\n   * This method will get an updated Visit\n   * @param {model.AWSDKVisit} visit is the object that was created by a call to {@link service.VisitService#createVisit|createVisit}.\n   * @param {boolean} [alwaysRetrieveChatMessages] TRUE if the visit response should contain the full chat report, including any messages added by the provider, even if an assistant has not initiated the chat.\n   * @returns {Promise<model.AWSDKVisit|error.AWSDKError>} Returns a promise that will be resolved to an {@link model.AWSDKVisit|AWSDKVisit} or will\n   * be rejected with an {@link error.AWSDKError|AWSDKError}.\n   * <p><br>Potential Error Codes<br>\n   * <table summary=\"ErrorCodes\" border=\"1\">\n   * <tr><th>Error Code</th><th>reason</th>\n   * <tr><td>{@link error.AWSDKErrorCode.illegalArgument|AWSDKErrorCode.illegalArgument}</td><td>A parameter is not the correct type.</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.consumerNotAuthenticated|AWSDKErrorCode.consumerNotAuthenticated}</td><td>Consumer is not authenticated.</td></tr>\n   * </table>\n   * @since 1.0.0\n   */\n  getVisit(visit, alwaysRetrieveChatMessages = false) {\n    const currentFunction = 'VisitService.getVisit';\n    this.__logger.debug(currentFunction, 'Started', visit);\n    if (visit == null) {\n      const error = AWSDKError.AWSDKIllegalArgument('visit argument is null');\n      this.__logger.error(currentFunction, 'error', error);\n      return Promise.reject(error);\n    }\n    if (!(visit instanceof AWSDKVisit)) {\n      const error = AWSDKError.AWSDKIllegalArgument('visit argument is not of type AWSDKVisit');\n      this.__logger.error(currentFunction, 'error', error);\n      return Promise.reject(error);\n    }\n    if (typeof (alwaysRetrieveChatMessages) !== 'boolean') {\n      const error = AWSDKError.AWSDKIllegalArgument('alwaysRetrieveChatMessages argument is not of type boolean');\n      this.__logger.error(currentFunction, 'error', error);\n      return Promise.reject(error);\n    }\n    const options = this.generateOptions('GET', visit.href, true);\n    options.auth = this.getUserAuth(visit.consumer);\n    if (options.auth == null) {\n      const error = AWSDKError.AWSDKConsumerNotAuthenticated();\n      this.__logger.error(currentFunction, 'error', error);\n      return Promise.reject(error);\n    }\n    options.form.set('alwaysRetrieveChatMessages', alwaysRetrieveChatMessages);\n    const visitCost = visit.cost;\n    return this.executeRequest(options, AWSDKVisitResponse)\n      .then((visitResponse) => {\n        this.updateUserAuthEntry(visit.consumer, visitResponse.authToken);\n        this.__logger.debug(currentFunction, 'Got response', visitResponse);\n        const updatedVisit = visitResponse.visit;\n        updatedVisit.cost = visitCost;\n        return updatedVisit;\n      })\n      .catch((error) => {\n        this.__logger.error(currentFunction, 'error', error);\n        this.__serverLogger.logToServer('error',\n          'Consumer {0} has failed to get a visit using Consumer Web SDK',\n          [\n            visit.getServerLogParam(),\n          ]);\n        throw error;\n      });\n  }\n\n  /**\n   * This method will indicate the member has connected to the Visit<br>\n   * @param {model.AWSDKVisit} visit is the object that was created by a call to {@link service.VisitService#createVisit|createVisit}.\n   * @returns {Promise<model.AWSDKVisit|error.AWSDKError>} Returns a promise that will be resolved to an {@link model.AWSDKVisit|AWSDKVisit} or will\n   * be rejected with an {@link error.AWSDKError|AWSDKError}.\n   * <p><br>Potential Error Codes<br>\n   * <table summary=\"ErrorCodes\" border=\"1\">\n   * <tr><th>Error Code</th><th>reason</th>\n   * <tr><td>{@link error.AWSDKErrorCode.illegalArgument|AWSDKErrorCode.illegalArgument}</td><td>A parameter is not the correct type.</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.consumerNotAuthenticated|AWSDKErrorCode.consumerNotAuthenticated}</td><td>Consumer is not authenticated.</td></tr>\n   * </table>\n   * @since 1.0.0\n   * @deprecated this functionality is no longer necessary for webrtc visits\n   */\n  updateConnectionStatus(visit) {\n    deprecated('VisitService.updateConnectionStatus', 'This function will be removed.', '3.X');\n    return this.__updateConnectionStatus(visit, null);\n  }\n\n  /**\n   * @private\n   */\n  __updateConnectionStatus(visit, vendorId) {\n    const currentFunction = 'VisitService.updateConnectionStatus';\n    this.__logger.debug(currentFunction, 'Started', visit);\n    if (visit == null) {\n      const error = AWSDKError.AWSDKIllegalArgument('visit argument is null');\n      this.__logger.error(currentFunction, 'error', error);\n      return Promise.reject(error);\n    }\n    if (!(visit instanceof AWSDKVisit)) {\n      const error = AWSDKError.AWSDKIllegalArgument('visit argument is not of type AWSDKVisit');\n      this.__logger.error(currentFunction, 'error', error);\n      return Promise.reject(error);\n    }\n    const options = this.generateOptions('PUT', visit.href, true);\n    options.auth = this.getUserAuth(visit.consumer);\n    if (options.auth == null) {\n      const error = AWSDKError.AWSDKConsumerNotAuthenticated();\n      this.__logger.error(currentFunction, 'error', error);\n      return Promise.reject(error);\n    }\n    options.form.set('accountId', visit.consumer.id.encryptedId);\n    options.form.set('connected', 'true');\n    options.form.set('vendorId', vendorId);\n    const visitCost = visit.cost;\n    return this.executeRequest(options, AWSDKVisitResponse)\n      .then((visitResponse) => {\n        this.__logger.debug(currentFunction, 'Got response', visitResponse);\n        this.updateUserAuthEntry(visit.consumer, visitResponse.authToken);\n        const updatedVisit = visitResponse.visit;\n        updatedVisit.cost = visitCost;\n        this.__logger.info(currentFunction, 'Completed');\n        return updatedVisit;\n      })\n      .catch((error) => {\n        this.__logger.error(currentFunction, 'error', error);\n        this.__serverLogger.logToServer('error',\n          'Consumer {0} has failed to update his connection status for the visit using Consumer Web SDK',\n          [\n            visit.getServerLogParam(),\n          ]);\n        throw error;\n      });\n  }\n\n  /**\n   * This method will cancel the Visit that has not started.<br>\n   * @param {model.AWSDKVisit} visit is the object that was created by a call to {@link service.VisitService#createVisit|createVisit}.\n   * @returns {Promise<model.AWSDKVisit|error.AWSDKError>} Returns a promise that will be resolved to an {@link model.AWSDKVisit|AWSDKVisit} or will\n   * be rejected with an {@link error.AWSDKError|AWSDKError}.\n   * <p><br>Potential Error Codes<br>\n   * <table summary=\"ErrorCodes\" border=\"1\">\n   * <tr><th>Error Code</th><th>reason</th>\n   * <tr><td>{@link error.AWSDKErrorCode.illegalArgument|AWSDKErrorCode.illegalArgument}</td><td>A parameter is not the correct type.</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.consumerNotAuthenticated|AWSDKErrorCode.consumerNotAuthenticated}</td><td>Consumer is not authenticated.</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.internalError|AWSDKErrorCode.internalError}</td><td>The AWSDK could not complete the request.</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.visitInvalid|AWSDKErrorCode.visitInvalid}</td><td>The visit has an invalid disposition</td></tr>\n   * </table>\n   * <p><br>Supported Visit Dispositions:</br>\n   * <ul>\n   * <li>{@link model.AWSDKDisposition.Unpublished|Unpublished}</li>\n   * <li>{@link model.AWSDKDisposition.Unscheduled|Unscheduled}</li>\n   * <li>{@link model.AWSDKDisposition.Scheduled|Scheduled}</li>\n   * <li>{@link model.AWSDKDisposition.Parked|Parked}</li>\n   * <li>{@link model.AWSDKDisposition.PreVisitScreening|PreVisitScreening}</li>\n   * </ul>\n   * </p>\n   * @since 1.0.0\n   */\n  cancelVisit(visit) {\n    const currentFunction = 'VisitService.cancelVisit';\n    this.__logger.debug(currentFunction, 'Started', visit);\n    if (visit == null) {\n      const error = AWSDKError.AWSDKIllegalArgument('visit argument is null');\n      this.__logger.error(currentFunction, 'error', error);\n      return Promise.reject(error);\n    }\n    if (!(visit instanceof AWSDKVisit)) {\n      const error = AWSDKError.AWSDKIllegalArgument('visit argument is not of type AWSDKVisit');\n      this.__logger.error(currentFunction, 'error', error);\n      return Promise.reject(error);\n    }\n    const link = this.findNamedLink(visit.links, 'cancelVisit');\n    if (!Validator.isValidLink(link)) {\n      const error = AWSDKError.AWSDKInternalError('visit argument does not have a valid \"cancelVisit\" link');\n      this.__logger.error(currentFunction, 'error', error);\n      return Promise.reject(error);\n    }\n    const options = this.generateOptions('PUT', link.url, false);\n    options.auth = this.getUserAuth(visit.consumer);\n    if (options.auth == null) {\n      const error = AWSDKError.AWSDKConsumerNotAuthenticated();\n      this.__logger.error(currentFunction, 'error', error);\n      return Promise.reject(error);\n    }\n    return this.executeRequest(options)\n      .then((response) => {\n        this.__logger.debug(currentFunction, 'Got response', response);\n        const updatedVisit = this.getVisit(visit);\n        if (updatedVisit) {\n          this.__serverLogger.logToServer('info',\n            'Consumer {0} has successfully canceled a visit using Consumer Web SDK',\n            [\n              visit.getServerLogParam(),\n            ]);\n        }\n        this.__logger.info(currentFunction, 'Completed');\n        return updatedVisit;\n      })\n      .catch((error) => {\n        this.__logger.error(currentFunction, 'error', error);\n        this.__serverLogger.logToServer('error',\n          'Consumer {0} has failed to cancel the visit using Consumer Web SDK',\n          [\n            visit.getServerLogParam(),\n          ]);\n        throw error;\n      });\n  }\n\n  /**\n   * Ends an in progress visit.\n   * @param {model.AWSDKVisit} visit The visit that is in progress\n   * @returns {Promise<model.AWSDKVisit|error.AWSDKError>} Returns a promise that will be resolved to an updated {@link model.AWSDKVisit|AWSDKVisit} or will\n   * be rejected with an {@link error.AWSDKError|AWSDKError}.\n   * <p><br>Potential Error Codes<br>\n   * <table summary=\"ErrorCodes\" border=\"1\">\n   * <tr><th>Error Code</th><th>reason</th>\n   * <tr><td>{@link error.AWSDKErrorCode.illegalArgument|AWSDKErrorCode.illegalArgument}</td><td>A parameter is not the correct type.</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.consumerNotAuthenticated|AWSDKErrorCode.consumerNotAuthenticated}</td><td>Consumer is not authenticated.</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.internalError|AWSDKErrorCode.internalError}</td><td>The AWSDK could not complete the request.</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.visitInvalid|AWSDKErrorCode.visitInvalid}</td><td>The visit has an invalid disposition</td></tr>\n   * </table>\n   * <p><br>Supported Visit Dispositions:</br>\n   * <ul>\n   * <li>{@link model.AWSDKDisposition.InProgress|InProgress}</li>\n   * </ul>\n   * </p>\n   * @since 1.2.0\n   */\n  endVisit(visit) {\n    const currentFunction = 'VisitService.endVisit';\n    this.__logger.debug(currentFunction, 'Started', visit);\n    if (!(visit instanceof AWSDKVisit)) {\n      const error = AWSDKError.AWSDKIllegalArgument('visit argument is not of type AWSDKVisit');\n      this.__logger.error(currentFunction, 'error', error);\n      return Promise.reject(error);\n    }\n    const link = this.findNamedLink(visit.links, 'endVisit');\n    if (!Validator.isValidLink(link)) {\n      const error = AWSDKError.AWSDKInternalError('visit argument does not have a valid \"endVisit\" link');\n      this.__logger.error(currentFunction, 'error', error);\n      return Promise.reject(error);\n    }\n    const options = this.generateOptions('PUT', link.url, false);\n    options.auth = this.getUserAuth(visit.consumer);\n    if (options.auth == null) {\n      const error = AWSDKError.AWSDKConsumerNotAuthenticated();\n      this.__logger.error(currentFunction, 'error', error);\n      return Promise.reject(error);\n    }\n    return this.executeRequest(options)\n      .then((response) => {\n        this.__logger.debug(currentFunction, 'Got response', response);\n        const updatedVisit = this.getVisit(visit);\n        if (updatedVisit) {\n          this.__serverLogger.logToServer('info',\n            'Consumer {0} has successfully ended a visit using Consumer Web SDK',\n            [\n              visit.getServerLogParam(),\n            ]);\n        }\n        this.__logger.info(currentFunction, 'Completed');\n        if (this.console) {\n          this.console.leaveVisit(true);\n        }\n        return updatedVisit;\n      })\n      .catch((error) => {\n        this.__logger.error(currentFunction, 'error', error);\n        this.__serverLogger.logToServer('error',\n          'Consumer {0} has failed to end a visit using Consumer Web SDK',\n          [\n            visit.getServerLogParam(),\n          ]);\n        throw error;\n      });\n  }\n\n  /**\n   * launchTelehealthVideo<br>\n   * This method will launch the telehealth video.\n   * <p>\n   * NOTE: <em><b>The telehealth client is only supported on Windows.</b></em>\n   * To successfully initiate a visit, please switch to a WebRTC implementation as described in {@link service.VisitService#startWebRTCVisit()|VisitService.startWebRTCVisit()}.\n   * </p>\n   * @param {model.AWSDKVisit} visit is the object returned by a call to {@link service.VisitService#startVisit|startVisit}.\n   * @returns {Promise<boolean|error.AWSDKError>} Returns a promise that will be resolved to an {@link boolean} indicating if the\n   * telehealth video has launched successfully or will be rejected with an {@link error.AWSDKError|AWSDKError} if the input is incorrect.\n   * <p><br>Potential Error Codes<br>\n   * <table summary=\"ErrorCodes\" border=\"1\">\n   * <tr><th>Error Code</th><th>reason</th>\n   * <tr><td>{@link error.AWSDKErrorCode.unsupportedVideoPlatform|AWSDKErrorCode.unsupportedVideoPlatform}</td><td>The system is configured with an unsupported video platform.</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.illegalArgument|AWSDKErrorCode.illegalArgument}</td><td>A parameter is not the correct type.</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.internalError|AWSDKErrorCode.internalError}</td><td>The AWSDK could not complete the request.</td></tr>\n   * </table>\n   * @since 1.0.0\n   */\n  launchTelehealthVideo(visit) {\n    const currentFunction = 'VisitService.launchTelehealthVideo';\n    this.__logger.debug(currentFunction, 'Started', visit);\n    if (!(visit instanceof AWSDKVisit)) {\n      const error = AWSDKError.AWSDKIllegalArgument('visit argument is not of type AWSDKVisit');\n      this.__logger.error(currentFunction, 'error', error);\n      return Promise.reject(error);\n    }\n    if (!this.__systemConfiguration.webRTCEnabled) {\n      const error = AWSDKError.AWSDKUnsupportedVideoPlatform();\n      this.__logger.error(currentFunction, 'error', error);\n      return Promise.reject(error);\n    }\n    const link = this.findNamedLink(visit.links, 'startElectronVisitURL');\n    if (!Validator.isValidLink(link)) {\n      const error = AWSDKError.AWSDKInternalError(\"visit argument does not have a valid 'startElectronVisitURL' link entry\");\n      this.__logger.error(currentFunction, 'error', error);\n      return Promise.reject(error);\n    }\n\n    return new Promise((resolve, reject) => {\n      this.__customProtocolHandler.launchUri(link.url, reject, resolve);\n    })\n      .then(() => {\n        this.__logger.info(currentFunction, 'Completed - launched ok returned true');\n        return true;\n      })\n      .catch(() => {\n        this.__logger.info(currentFunction, 'Completed - not launched returned false');\n        return false;\n      });\n  }\n\n  /**\n   * After completing a visit via the Video Visit console activity, this method will return the\n   * {@link model.AWSDKVisitSummary|AWSDKVisitSummary} with the final details from the provider\n   * @param {model.AWSDKVisit} visit is the object returned by a call to startVisit.\n   * @returns {Promise<model.AWSDKVisitSummary|error.AWSDKError>} Returns a promise that will be resolved to an {@link model.AWSDKVisitSummary|AWSDKVisitSummary}\n   * or will be rejected with an {@link error.AWSDKError|AWSDKError}.\n   * <p><br>Potential Error Codes<br>\n   * <table summary=\"ErrorCodes\" border=\"1\">\n   * <tr><th>Error Code</th><th>reason</th>\n   * <tr><td>{@link error.AWSDKErrorCode.illegalArgument|AWSDKErrorCode.illegalArgument}</td><td>A parameter is not the correct type.</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.consumerNotAuthenticated|AWSDKErrorCode.consumerNotAuthenticated}</td><td>Consumer is not authenticated.</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.internalError|AWSDKErrorCode.internalError}</td><td>The AWSDK could not complete the request.</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.visitInvalid|AWSDKErrorCode.visitInvalid}</td><td>The visit has an invalid disposition</td></tr>\n   * </table>\n   * <p><br>Supported Visit Dispositions:</br>\n   * <ul>\n   * <li>{@link model.AWSDKDisposition.ProviderWrapup|ProviderWrapup}</li>\n   * <li>{@link model.AWSDKDisposition.Completed|Completed}</li>\n   * <li>{@link model.AWSDKDisposition.Expired|Expired}</li>\n   * </ul>\n   * </p>\n   * @since 1.0.0\n   */\n  getVisitSummary(visit) {\n    const currentFunction = 'VisitService.getVisitSummary';\n    this.__logger.debug(currentFunction, 'Started', visit);\n    if (visit == null) {\n      const error = AWSDKError.AWSDKIllegalArgument('visit argument is null');\n      this.__logger.error(currentFunction, 'error', error);\n      return Promise.reject(error);\n    }\n    if (!(visit instanceof AWSDKVisit)) {\n      const error = AWSDKError.AWSDKIllegalArgument('visit argument is not of type AWSDKVisit');\n      this.__logger.error(currentFunction, 'error', error);\n      return Promise.reject(error);\n    }\n    const consumer = visit.consumer;\n    const link = this.findNamedLink(visit.links, 'wrapUp');\n    if (!Validator.isValidLink(link)) {\n      const error = AWSDKError.AWSDKInternalError('visit argument does not have a valid \"wrapUp\" link entry');\n      this.__logger.error(currentFunction, 'error', error);\n      return Promise.reject(error);\n    }\n    const options = this.generateOptions('GET', link.url);\n    options.auth = this.getUserAuth(consumer);\n    if (options.auth == null) {\n      const error = AWSDKError.AWSDKConsumerNotAuthenticated();\n      this.__logger.error(currentFunction, 'error', error);\n      return Promise.reject(error);\n    }\n    return this.executeRequest(options, AWSDKVisitSummaryResponse)\n      .then((visitSummaryResponse) => {\n        this.__logger.debug(currentFunction, 'Got response', visitSummaryResponse);\n        this.updateUserAuthEntry(consumer, visitSummaryResponse.authToken);\n        return visitSummaryResponse.visitSummary;\n      })\n      .catch((error) => {\n        this.__logger.error(currentFunction, 'error', error);\n        throw error;\n      });\n  }\n\n  get telehealthVideoInstallUrl() {\n    if (this.__systemConfiguration.webRTCEnabled) {\n      return this.__systemConfiguration.electronDownloadUrl;\n    }\n\n    return (navigator.platform.toUpperCase().indexOf('MAC') >= 0) ?\n      this.__systemConfiguration.telehealthVideoInstallUrlForMac :\n      this.__systemConfiguration.telehealthVideoInstallUrlForWindows;\n  }\n\n  /**\n   * This method will apply a coupon code to the visit\n   * @param {model.AWSDKVisit} visit is the object returned by a call to {@link service.VisitService#startVisit|startVisit}.\n   * @param {String} couponCode is the string of the coupon code\n   * @returns {Promise<model.AWSDKVisitCost|error.AWSDKError>} Returns a promise that will be resolved to an {@link model.AWSDKVisitCost|AWSDKVisitCost} or will\n   * be rejected with an {@link error.AWSDKError|AWSDKError}.\n   * <p><br>Potential Error Codes<br>\n   * <table summary=\"ErrorCodes\" border=\"1\">\n   * <tr><th>Error Code</th><th>reason</th>\n   * <tr><td>{@link error.AWSDKErrorCode.illegalArgument|AWSDKErrorCode.illegalArgument}</td><td>A parameter is not the correct type.</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.consumerNotAuthenticated|AWSDKErrorCode.consumerNotAuthenticated}</td><td>Consumer is not authenticated.</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.internalError|AWSDKErrorCode.internalError}</td><td>The AWSDK could not complete the request.</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.validationError|AWSDKErrorCode.validationError}</td><td>A parameter is not the correct type.</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.costCalculationNotFinishedError|AWSDKErrorCode.costCalculationNotFinishedError}</td><td>Cost calculation has not finished.</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.invalidCouponError|AWSDKErrorCode.invalidCouponError}</td><td>Coupon code is invalid.</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.visitInvalid|AWSDKErrorCode.visitInvalid}</td><td>The visit has an invalid disposition</td></tr>\n   * </table>\n   * <p><br>Supported Visit Dispositions:</br>\n   * <ul>\n   * <li>{@link model.AWSDKDisposition.Unpublished|Unpublished}</li>\n   * <li>{@link model.AWSDKDisposition.Unscheduled|Unscheduled}</li>\n   * <li>{@link model.AWSDKDisposition.Scheduled|Scheduled}</li>\n   * <li>{@link model.AWSDKDisposition.Parked|Parked}</li>\n   * <li>{@link model.AWSDKDisposition.PreVisitScreening|PreVisitScreening}</li>\n   * </ul>\n   * </p>\n   * @since 1.0.0\n   */\n  applyCouponCode(visit, couponCode) {\n    const currentFunction = 'VisitService.applyCouponCode';\n    this.__logger.debug(currentFunction, 'Started', visit, couponCode);\n    if (visit == null) {\n      const error = AWSDKError.AWSDKIllegalArgument('visit argument is null');\n      this.__logger.error(currentFunction, 'error', error);\n      return Promise.reject(error);\n    }\n    if (couponCode == null) {\n      const error = AWSDKError.AWSDKIllegalArgument('couponCode argument is null');\n      this.__logger.error(currentFunction, 'error', error);\n      return Promise.reject(error);\n    }\n    if (!(visit instanceof AWSDKVisit)) {\n      const error = AWSDKError.AWSDKIllegalArgument('visit argument is not of type AWSDKVisit');\n      this.__logger.error(currentFunction, 'error', error);\n      return Promise.reject(error);\n    }\n    if (!Validator.isValidString(couponCode)) {\n      const error = AWSDKError.AWSDKValidationError('couponCode');\n      this.__logger.error(currentFunction, 'error', error);\n      return Promise.reject(error);\n    }\n    const link = this.findNamedLink(visit.links, 'cost');\n    if (!Validator.isValidLink(link)) {\n      const error = AWSDKError.AWSDKInternalError('visit argument does not have a valid \"cost\" link entry');\n      this.__logger.error(currentFunction, 'error', error);\n      return Promise.reject(error);\n    }\n    if (visit.cost == null || visit.cost.costCalculationStatus !== 'FINISHED') {\n      const error = AWSDKError.AWSDKCostCalculationNotFinishedError();\n      this.__logger.error(currentFunction, 'error', error);\n      return Promise.reject(error);\n    }\n    const consumer = visit.consumer;\n    const options = this.generateOptions('PUT', link.url);\n    options.auth = this.getUserAuth(consumer);\n    if (options.auth == null) {\n      const error = AWSDKError.AWSDKConsumerNotAuthenticated();\n      this.__logger.error(currentFunction, 'error', error);\n      return Promise.reject(error);\n    }\n    options.form.set('couponCode', couponCode);\n    return this.executeRequest(options, AWSDKVisitCostResponse)\n      .then((visitCostResponse) => {\n        this.updateUserAuthEntry(consumer, visitCostResponse.authToken);\n        this.__logger.debug(currentFunction, 'Got response', visitCostResponse);\n        this.__logger.info(currentFunction, 'Completed');\n        return visitCostResponse.cost;\n      })\n      .catch((error) => {\n        this.__logger.error(currentFunction, 'error', error);\n        if (error.httpResponseCode === 400) {\n          return Promise.reject(AWSDKError.AWSDKInvalidCouponError('invalid coupon'));\n        }\n        return Promise.reject(error);\n      });\n  }\n\n  /**\n   * This method will send the visit summary to an array of email addresses, fax numbers, or both. Either must be provided.\n   * @param {model.AWSDKVisitSummary} visitSummary is the object returned by a call to method {@link service.VisitService#getVisitSummary|getVisitSummary}.\n   * @param {boolean} hipaaNoticeAccepted is whether or not the HIPAA notice was accepted.\n   * @param {String[]} [emailAddresses] the email addresses to share the visit summary with\n   * @param {String[]} [faxNumbers] the fax numbers to share the visit summary with\n   * @returns {Promise<model.AWSDKVisitSummary|error.AWSDKError>} Returns a promise that will be resolved to an {@link model.AWSDKVisitSumary|AWSDKVisitSummary} or will\n   * be rejected with an {@link error.AWSDKError|AWSDKError}.\n   * <p><br>Potential Error Codes<br>\n   * <table summary=\"ErrorCodes\" border=\"1\">\n   * <tr><th>Error Code</th><th>reason</th>\n   * <tr><td>{@link error.AWSDKErrorCode.illegalArgument|AWSDKErrorCode.illegalArgument}</td><td>A parameter is not the correct type.</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.consumerNotAuthenticated|AWSDKErrorCode.consumerNotAuthenticated}</td><td>Consumer is not authenticated.</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.internalError|AWSDKErrorCode.internalError}</td><td>The AWSDK could not complete the request.</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.validationErrors|AWSDKErrorCode.validationErrors}</td><td>Parameters emailAddresses or faxNumbers contain invalid values.</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.visitSummaryNotSentError|AWSDKErrorCode.visitSummaryNotSentError}</td><td>Visit Summary couldn't be sent.</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.visitInvalid|AWSDKErrorCode.visitInvalid}</td><td>The visit has an invalid disposition</td></tr>\n   * </table>\n   * <p><br>Supported Visit Dispositions:</br>\n   * <ul>\n   * <li>{@link model.AWSDKDisposition.ProviderWrapup|ProviderWrapup}</li>\n   * <li>{@link model.AWSDKDisposition.Completed|Completed}</li>\n   * <li>{@link model.AWSDKDisposition.Expired|Expired}</li>\n   * </ul>\n   * </p>\n   * @since 1.1.0\n   */\n  sendVisitSummary(visitSummary, hipaaNoticeAccepted, emailAddresses, faxNumbers) {\n    const currentFunction = 'VisitSummary.sendVisitSummary';\n    this.__logger.debug(currentFunction, 'Started', visitSummary, hipaaNoticeAccepted, emailAddresses, faxNumbers);\n    if (!(visitSummary instanceof AWSDKVisitSummary)) {\n      const error = AWSDKError.AWSDKIllegalArgument('visitSummary is not of type AWSDKVisitSummary');\n      this.__logger.error(currentFunction, 'error', error);\n      return Promise.reject(error);\n    }\n    if (typeof (hipaaNoticeAccepted) !== 'boolean') {\n      const error = AWSDKError.AWSDKIllegalArgument('hipaaNoticeAccepted argument is not of type boolean');\n      this.__logger.error(currentFunction, 'error', error);\n      return Promise.reject(error);\n    }\n    if (emailAddresses && !Array.isArray(emailAddresses)) {\n      const error = AWSDKError.AWSDKIllegalArgument('emailAddresses must be of type Array');\n      this.__logger.error(currentFunction, 'error', error);\n      return Promise.reject(error);\n    }\n    if (faxNumbers && !Array.isArray(faxNumbers)) {\n      const error = AWSDKError.AWSDKIllegalArgument('faxNumbers must be of type Array');\n      this.__logger.error(currentFunction, 'error', error);\n      return Promise.reject(error);\n    }\n    if ((!emailAddresses || emailAddresses.length === 0) && (!faxNumbers || faxNumbers.length === 0)) {\n      const error = AWSDKError.AWSDKIllegalArgument('emailAddresses or faxNumbers must be provided');\n      this.__logger.error(currentFunction, 'error', error);\n      return Promise.reject(error);\n    }\n    const validationErrors = [];\n    if (emailAddresses) {\n      emailAddresses.forEach((emailAddress) => {\n        if (!Validator.isEmailValid(emailAddress)) {\n          validationErrors.push(AWSDKError.AWSDKValidationError('emailAddresses', emailAddress));\n        }\n      });\n    }\n    if (faxNumbers) {\n      faxNumbers.forEach((faxNumber) => {\n        if (!Validator.isPhoneNumberValid(faxNumber)) {\n          validationErrors.push(AWSDKError.AWSDKValidationError('faxNumbers', faxNumber));\n        }\n      });\n    }\n    if (validationErrors.length > 0) {\n      const error = AWSDKError.AWSDKValidationErrors(validationErrors);\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    const link = this.findNamedLink(visitSummary.links, 'sendReport');\n    if (!Validator.isValidLink(link)) {\n      const error = AWSDKError.AWSDKInternalError('visitSummary argument does not have a valid \"sendReport\" link entry');\n      this.__logger.error(currentFunction, 'error', error);\n      return Promise.reject(error);\n    }\n    const consumer = visitSummary.consumer;\n    const options = this.generateOptions('PUT', link.url);\n    options.auth = this.getUserAuth(consumer);\n    if (options.auth == null) {\n      const error = AWSDKError.AWSDKConsumerNotAuthenticated();\n      this.__logger.error(currentFunction, 'error', error);\n      return Promise.reject(error);\n    }\n\n    options.form.set('hipaaNoticeAccepted', hipaaNoticeAccepted);\n\n    if (emailAddresses) emailAddresses.forEach(item => options.form.append('emails', item));\n    if (faxNumbers) faxNumbers.forEach(item => options.form.append('faxNumbers', item));\n\n    return this.executeRequest(options, AWSDKResponse)\n      .then((response) => {\n        this.__logger.debug(currentFunction, 'Got response', response);\n        this.updateUserAuthEntry(consumer, response.authToken);\n        this.__logger.info(currentFunction, 'Completed');\n        return visitSummary;\n      })\n      .catch((error) => {\n        this.__logger.error(currentFunction, 'error', error);\n        if (error.httpResponseCode === 400) {\n          return Promise.reject(AWSDKError.AWSDKVisitSummaryNotSentError());\n        }\n        return Promise.reject(error);\n      });\n  }\n\n  /**\n   * This method will submit the consumer's response to a visit feedback question\n   * @param {(model.AWSDKVisitSummary|model.AWSDKVisit)} visitOrVisitSummary either the visit or visit summary to add feedback for.\n   * @param {String} question is the string representing the question that the consumer was asked.\n   * @param {String} answer is the string representing the answer that the consumer provided for the question asked.\n   * @returns {Promise<boolean|error.AWSDKError>} a promise that will resolve to a boolean indicating success, or rejected with an {@link error.AWSDKError|AWSDKError}\n   * be rejected with an {@link error.AWSDKError|AWSDKError}.\n   * <p><br>Potential Error Codes<br>\n   * <table summary=\"ErrorCodes\" border=\"1\">\n   * <tr><th>Error Code</th><th>reason</th>\n   * <tr><td>{@link error.AWSDKErrorCode.illegalArgument|AWSDKErrorCode.illegalArgument}</td><td>A parameter is not the correct type.</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.consumerNotAuthenticated|AWSDKErrorCode.consumerNotAuthenticated}</td><td>Consumer is not authenticated.</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.internalError|AWSDKErrorCode.internalError}</td><td>The AWSDK could not complete the request.</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.validationError|AWSDKErrorCode.validationError}</td><td>A parameter is not the correct type.</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.feedbackNotSubmittedError|AWSDKErrorCode.feedbackNotSubmittedError}</td><td>Feedback could not be added.</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.visitInvalid|AWSDKErrorCode.visitInvalid}</td><td>The visit has an invalid disposition</td></tr>\n   * </table>\n   * <p><br>Supported Visit Dispositions:</br>\n   * <ul>\n   * <li>All dispositions supported</li>\n   * </ul>\n   * </p>\n   * @since 1.0.0\n   */\n  addFeedback(visitOrVisitSummary, question, answer) {\n    const currentFunction = 'VisitService.addFeedback';\n    this.__logger.debug(currentFunction, 'Started', visitOrVisitSummary, question, answer);\n    if (!(visitOrVisitSummary instanceof AWSDKVisitSummary) && !(visitOrVisitSummary instanceof AWSDKVisit)) {\n      const error = AWSDKError.AWSDKIllegalArgument('visitSummary argument is not of type AWSDKVisitSummary or AWSDKVisit');\n      this.__logger.error(currentFunction, 'error', error);\n      return Promise.reject(error);\n    }\n    if (question == null) {\n      const error = AWSDKError.AWSDKIllegalArgument('question argument is null');\n      this.__logger.error(currentFunction, 'error', error);\n      return Promise.reject(error);\n    }\n    if (!Validator.isValidString(question)) {\n      const error = AWSDKError.AWSDKValidationError('question');\n      this.__logger.error(currentFunction, 'error', error);\n      return Promise.reject(error);\n    }\n    if (answer == null) {\n      const error = AWSDKError.AWSDKIllegalArgument('answer argument is null');\n      this.__logger.error(currentFunction, 'error', error);\n      return Promise.reject(error);\n    }\n    if (!Validator.isValidString(answer)) {\n      const error = AWSDKError.AWSDKValidationError('answer');\n      this.__logger.error(currentFunction, 'error', error);\n      return Promise.reject(error);\n    }\n    const link = this.findNamedLink(visitOrVisitSummary.links, 'feedback');\n    if (!Validator.isValidLink(link)) {\n      const error = AWSDKError.AWSDKInternalError('visitSummary argument does not have a valid \"feedback\" link entry');\n      this.__logger.error(currentFunction, 'error', error);\n      return Promise.reject(error);\n    }\n    const consumer = visitOrVisitSummary.consumer;\n    const options = this.generateOptions('PUT', link.url);\n    options.auth = this.getUserAuth(consumer);\n    if (options.auth == null) {\n      const error = AWSDKError.AWSDKConsumerNotAuthenticated();\n      this.__logger.error(currentFunction, 'error', error);\n      return Promise.reject(error);\n    }\n    options.form.set('feedbackQuestion', question);\n    options.form.set('feedbackAnswer', answer);\n    return this.executeRequest(options, AWSDKResponse)\n      .then((response) => {\n        this.__logger.debug(currentFunction, 'Got response', response);\n        this.updateUserAuthEntry(consumer, response.authToken);\n        this.__logger.info(currentFunction, 'Completed');\n        return true;\n      })\n      .catch((error) => {\n        this.__logger.error(currentFunction, 'error', error);\n        if (error.httpResponseCode === 400) {\n          return Promise.reject(AWSDKError.AWSDKFeedbackNotSubmittedError());\n        }\n        return Promise.reject(error);\n      });\n  }\n\n  /**\n   * This method allows the consumer to submit a star rating for the visit just concluded and/or the provider to whom he/she just had a visit with. <br>\n   * The rating is based on a zero to five star rating system, where a zero represents the lowest/worst experience and a five the highest/best experience.\n   * @param {model.AWSDKVisitSummary} visitSummary is the object that was created by a call to {@link service.VisitService#getVisitSummary|getVisitSummary}.\n   * @param {Integer} providerRating is the number of stars attributed to the provider as rating\n   * @param {Integer} visitRating is the number of stars attributed to the visit as rating\n   * @returns {Promise<model.AWSDKVisitSummary|error.AWSDKError>} Returns a promise that will be resolved to an {@link model.AWSDKVisitSummary|AWSDKVisitSummary} or will\n   * be rejected with an {@link error.AWSDKError|AWSDKError}.\n   * <p><br>Potential Error Codes<br>\n   * <table summary=\"ErrorCodes\" border=\"1\">\n   * <tr><th>Error Code</th><th>reason</th>\n   * <tr><td>{@link error.AWSDKErrorCode.illegalArgument|AWSDKErrorCode.illegalArgument}</td><td>A parameter is not the correct type.</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.consumerNotAuthenticated|AWSDKErrorCode.consumerNotAuthenticated}</td><td>Consumer is not authenticated.</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.internalError|AWSDKErrorCode.internalError}</td><td>The AWSDK could not complete the request.</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.validationError|AWSDKErrorCode.validationError}</td><td>A parameter is not the correct type.</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.ratingNotSubmittedError|AWSDKErrorCode.ratingNotSubmittedError}</td><td>Rating couldn't be added.</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.visitInvalid|AWSDKErrorCode.visitInvalid}</td><td>The visit has an invalid disposition</td></tr>\n   * </table>\n   * <p><br>Supported Visit Dispositions:</br>\n   * <ul>\n   * <li>All dispositions supported</li>\n   * </ul>\n   * </p>\n   * @since 1.0.0\n   */\n  addRating(visitSummary, providerRating, visitRating) {\n    const currentFunction = 'VisitService.addRating';\n    this.__logger.debug(currentFunction, 'Started', visitSummary, providerRating, visitRating);\n    if (visitSummary == null) {\n      const error = AWSDKError.AWSDKIllegalArgument('visitSummary argument is null');\n      this.__logger.error(currentFunction, 'error', error);\n      return Promise.reject(error);\n    }\n    if (!(visitSummary instanceof AWSDKVisitSummary)) {\n      const error = AWSDKError.AWSDKIllegalArgument('visitSummary argument is not of type AWSDKVisitSummary');\n      this.__logger.error(currentFunction, 'error', error);\n      return Promise.reject(error);\n    }\n    if (providerRating == null) {\n      const error = AWSDKError.AWSDKIllegalArgument('providerRating argument is null');\n      this.__logger.error(currentFunction, 'error', error);\n      return Promise.reject(error);\n    }\n    if (providerRating !== parseInt(providerRating, 10)) {\n      const error = AWSDKError.AWSDKValidationError('providerRating');\n      this.__logger.error(currentFunction, 'error', error);\n      return Promise.reject(error);\n    }\n    if (visitRating == null) {\n      const error = AWSDKError.AWSDKIllegalArgument('visitRating argument is null');\n      this.__logger.error(currentFunction, 'error', error);\n      return Promise.reject(error);\n    }\n    if (visitRating !== parseInt(visitRating, 10)) {\n      const error = AWSDKError.AWSDKValidationError('visitRating');\n      this.__logger.error(currentFunction, 'error', error);\n      return Promise.reject(error);\n    }\n    const link = this.findNamedLink(visitSummary.links, 'ratings');\n    if (!Validator.isValidLink(link)) {\n      const error = AWSDKError.AWSDKInternalError('visitSummary argument does not have a valid \"ratings\" link entry');\n      this.__logger.error(currentFunction, 'error', error);\n      return Promise.reject(error);\n    }\n    const consumer = visitSummary.consumer;\n    const options = this.generateOptions('PUT', link.url);\n    options.auth = this.getUserAuth(consumer);\n    if (options.auth == null) {\n      const error = AWSDKError.AWSDKConsumerNotAuthenticated();\n      this.__logger.error(currentFunction, 'error', error);\n      return Promise.reject(error);\n    }\n    options.form.set('providerRating', providerRating);\n    options.form.set('engagementRating', visitRating);\n    return this.executeRequest(options, AWSDKResponse)\n      .then((response) => {\n        this.__logger.debug(currentFunction, 'Got response', response);\n        this.updateUserAuthEntry(consumer, response.authToken);\n        this.__logger.info(currentFunction, 'Completed');\n        return visitSummary;\n      })\n      .catch((error) => {\n        this.__logger.error(currentFunction, 'error', error);\n        if (error.httpResponseCode === 400) {\n          return Promise.reject(AWSDKError.AWSDKRatingNotSubmittedError());\n        }\n        return Promise.reject(error);\n      });\n  }\n\n  /**\n   * This method adds a chat message to an existing chat session. This happens when a staff communicates with a consumer during the waiting room while the provider hasn't joined.\n   * @param {model.AWSDKVisit} visit the visit associated with this chat message\n   * @param {String} message the new chat message content\n   * @param {Number} lastPolledChatOrdinal the ordinal for the last reported chat message\n   * @returns {Promise<model.AWSDKChatReport|error.AWSDKError>} a promise that will resolve to a {@link model.AWSDKChatReport|AWSDKChatReport} or rejected with an {@link error.AWSDKError|AWSDKError}\n   * <p><br>Potential Error Codes<br>\n   * <table summary=\"ErrorCodes\" border=\"1\">\n   * <tr><th>Error Code</th><th>reason</th>\n   * <tr><td>{@link error.AWSDKErrorCode.illegalArgument|AWSDKErrorCode.illegalArgument}</td><td>A parameter is not the correct type.</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.consumerNotAuthenticated|AWSDKErrorCode.consumerNotAuthenticated}</td><td>Consumer is not authenticated.</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.internalError|AWSDKErrorCode.internalError}</td><td>The AWSDK could not complete the request.</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.validationError|AWSDKErrorCode.validationError}</td><td>A parameter is not the correct type.</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.visitInvalid|AWSDKErrorCode.visitInvalid}</td><td>The visit has an invalid disposition</td></tr>\n   * </table>\n   * <p><br>Supported Visit Dispositions:</br>\n   * <ul>\n   * <li>{@link model.AWSDKDisposition.InProgress|InProgress}</li>\n   * <li>{@link model.AWSDKDisposition.PostVisitConversation|PostVisitConversation}</li>\n   * <li>{@link model.AWSDKDisposition.PreVisitScreening|PreVisitScreening}</li>\n   * </ul>\n   * </p>\n   * @since 1.1.0\n   */\n  addChatMessage(visit, message, lastPolledChatOrdinal) {\n    const currentFunction = 'VisitService.addChatMessage';\n    this.__logger.debug(currentFunction, 'Started', visit, message, lastPolledChatOrdinal);\n    if (!(visit instanceof AWSDKVisit)) {\n      const error = AWSDKError.AWSDKIllegalArgument('visit argument is not of type AWSDKVisit');\n      this.__logger.error(currentFunction, 'error', error);\n      return Promise.reject(error);\n    }\n    if (!Validator.isStringType(message)) {\n      const error = AWSDKError.AWSDKIllegalArgument('message argument is not of type string');\n      this.__logger.error(currentFunction, 'error', error);\n      return Promise.reject(error);\n    }\n    if (!Validator.isValidString(message)) {\n      const error = AWSDKError.AWSDKValidationError('message');\n      this.__logger.error(currentFunction, 'error', error);\n      return Promise.reject(error);\n    }\n    if ((typeof lastPolledChatOrdinal !== 'number' || lastPolledChatOrdinal !== parseInt(lastPolledChatOrdinal, 10))) {\n      const error = AWSDKError.AWSDKIllegalArgument('lastPolledChatOrdinal argument is not a number');\n      this.__logger.error(currentFunction, 'error', error);\n      return Promise.reject(error);\n    }\n    const link = this.findNamedLink(visit.links, 'addChatMessage');\n    if (!Validator.isValidLink(link)) {\n      const error = AWSDKError.AWSDKInternalError('visit argument does not have a valid \"addChatMessage\" link entry');\n      this.__logger.error(currentFunction, 'error', error);\n      return Promise.reject(error);\n    }\n    const options = this.generateOptions('PUT', link.url);\n    options.auth = this.getUserAuth(visit.consumer);\n    if (options.auth == null) {\n      const error = AWSDKError.AWSDKConsumerNotAuthenticated();\n      this.__logger.error(currentFunction, 'error', error);\n      return Promise.reject(error);\n    }\n    options.form.set('message', message);\n    options.form.set('ordinal', lastPolledChatOrdinal);\n    return this.executeRequest(options, AWSDKChatReportResponse)\n      .then((chatReportResponse) => {\n        this.__logger.debug(currentFunction, 'Got response', chatReportResponse);\n        this.__logger.info(currentFunction, 'Complete');\n        this.updateUserAuthEntry(visit.consumer, chatReportResponse.authToken);\n        return chatReportResponse.chatReport;\n      })\n      .catch((error) => {\n        this.__logger.error(currentFunction, 'error', error);\n        throw error;\n      });\n  }\n\n  /**\n   * Setup alerts via Text messages when the provider is ready or this {@link model.AWSDKVisit|AWSDKVisit} goes up in the waiting list\n   * @param {model.AWSDKVisit} visit the visit to set up alerts for\n   * @param {String} phoneNumber the phoneNumber to text\n   * @param {Boolean} [providerReadyAlert] whether or not to be alerted when provider is ready\n   * @param {Boolean} [movedUpInQueueAlert] whether or not to be alerted when moved up in the queue\n   * @returns {Promise<boolean|error.AWSDKError>} a promise that will resolve to a boolean indicating success, or rejected with an {@link error.AWSDKError|AWSDKError}\n   * <p><br>Potential Error Codes<br>\n   * <table summary=\"ErrorCodes\" border=\"1\">\n   * <tr><th>Error Code</th><th>reason</th>\n   * <tr><td>{@link error.AWSDKErrorCode.illegalArgument|AWSDKErrorCode.illegalArgument}</td><td>A parameter is not the correct type.</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.consumerNotAuthenticated|AWSDKErrorCode.consumerNotAuthenticated}</td><td>Consumer is not authenticated.</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.internalError|AWSDKErrorCode.internalError}</td><td>The AWSDK could not complete the request.</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.validationError|AWSDKErrorCode.validationError}</td><td>The provided phone number is not the correct format.</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.validationRequiredParameterMissing|AWSDKErrorCode.validationRequiredParameterMissing}</td><td>The provided phone number is missing.</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.visitNotFound|AWSDKErrorCode.visitNotFound}</td><td>The provided visit cannot be found.</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.visitInvalid|AWSDKErrorCode.visitInvalid}</td><td>The visit has an invalid disposition</td></tr>\n   * </table>\n   * <p><br>Supported Visit Dispositions:</br>\n   * <ul>\n   * <li>{@link model.AWSDKDisposition.PreVisitScreening|PreVisitScreening}</li>\n   * </ul>\n   * </p>\n   * @since 1.1.0\n   */\n  setupWaitingRoomAlerts(visit, phoneNumber, providerReadyAlert = false, movedUpInQueueAlert = false) {\n    const currentFunction = 'VisitService.setupWaitingRoomAlerts';\n    this.__logger.debug(currentFunction, 'Started', visit, phoneNumber, providerReadyAlert, movedUpInQueueAlert);\n    if (!(visit instanceof AWSDKVisit)) {\n      const error = AWSDKError.AWSDKIllegalArgument('visit argument is null or not of type AWSDKVisit');\n      this.__logger.error(currentFunction, 'error', error);\n      return Promise.reject(error);\n    }\n    if (phoneNumber == null) {\n      const error = AWSDKError.AWSDKIllegalArgument('phoneNumber argument is null');\n      this.__logger.error(currentFunction, 'error', error);\n      return Promise.reject(error);\n    }\n    if (!Validator.isPhoneNumberValid(phoneNumber)) {\n      const error = AWSDKError.AWSDKValidationError('phoneNumber');\n      this.__logger.error(currentFunction, 'error', error);\n      return Promise.reject(error);\n    }\n    const link = this.findNamedLink(visit.links, 'alerts');\n    if (!Validator.isValidLink(link)) {\n      const error = AWSDKError.AWSDKInternalError('visit argument does not have a valid \"alerts\" link entry');\n      this.__logger.error(currentFunction, 'error', error);\n      return Promise.reject(error);\n    }\n    const options = this.generateOptions('PUT', link.url);\n    options.auth = this.getUserAuth(visit.consumer);\n    if (options.auth == null) {\n      const error = AWSDKError.AWSDKConsumerNotAuthenticated();\n      this.__logger.error(currentFunction, 'error', error);\n      return Promise.reject(error);\n    }\n    options.form.set('phoneNumber', phoneNumber);\n    options.form.set('providerReadyAlert', providerReadyAlert);\n    options.form.set('movedUpInQueueAlert', movedUpInQueueAlert);\n    return this.executeRequest(options, AWSDKResponse)\n      .then((response) => {\n        this.__logger.debug(currentFunction, 'Got response', response);\n        this.updateUserAuthEntry(visit.consumer, response.authToken);\n        this.__logger.info(currentFunction, 'Complete');\n        return true;\n      })\n      .catch((error) => {\n        this.__logger.error(currentFunction, 'error', error);\n        throw error;\n      });\n  }\n\n  /**\n   * This method accepts a suggested transfer. If the suggested provider is still available the visit will be cancelled.\n   * Once the visit has cancelled call handleTransfer to create a new visit that will copy details from this visit.\n   * If the suggested provider is no longer available an error will be returned. If a new suggested provider is available it will be set on the visit.\n   * @param {model.AWSDKVisit} visit the visit with a suggested transfer\n   * @returns {Promise<boolean|error.AWSDKError>} a promise that will resolve to boolean indicating if the transfer was accepted successfully or rejected with an {@link error.AWSDKError|AWSDKError}\n   * <p><br>Potential Error Codes<br>\n   * <table summary=\"ErrorCodes\" border=\"1\">\n   * <tr><th>Error Code</th><th>reason</th>\n   * <tr><td>{@link error.AWSDKErrorCode.illegalArgument|AWSDKErrorCode.illegalArgument}</td><td>A parameter is not the correct type.</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.consumerNotAuthenticated|AWSDKErrorCode.consumerNotAuthenticated}</td><td>Consumer is not authenticated.</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.internalError|AWSDKErrorCode.internalError}</td><td>The AWSDK could not complete the request.</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.providerNotAvailable|AWSDKErrorCode.providerNotAvailable}</td><td>This can occur for a variety of reasons, including when the provider is offline for an on-demand visit or the provider's waiting room is closed to incoming consumers.</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.visitInvalid|AWSDKErrorCode.visitInvalid}</td><td>The visit has an invalid disposition</td></tr>\n   * </table>\n   * <p><br>Supported Visit Dispositions:</br>\n   * <ul>\n   * <li>{@link model.AWSDKDisposition.PreVisitScreening|PreVisitScreening}</li>\n   * </ul>\n   * </p>\n   * @since 1.1.0\n   */\n  acceptSuggestedTransfer(visit) {\n    const currentFunction = 'VisitService.acceptSuggestedTransfer';\n    this.__logger.debug(currentFunction, 'Started', visit);\n    if (!(visit instanceof AWSDKVisit)) {\n      const error = AWSDKError.AWSDKIllegalArgument('visit argument is not of type AWSDKVisit');\n      this.__logger.error(currentFunction, 'error', error);\n      return Promise.reject(error);\n    }\n    if (visit.disposition !== AWSDKDisposition.PreVisitScreening) {\n      const error = AWSDKError.AWSDKInternalError(`visit is not set up for suggested transfer, visit is ${String(visit.disposition)} suggestedProvider=${visit.suggestedProviderForTransfer}`);\n      this.__logger.error(currentFunction, 'error', error);\n      return Promise.reject(error);\n    }\n    if (visit.suggestedProviderForTransfer == null) {\n      const error = AWSDKError.AWSDKInternalError('visit is not set up for suggested transfer, visit suggestedProviderForTransfer is null');\n      this.__logger.error(currentFunction, 'error', error);\n      return Promise.reject(error);\n    }\n    const link = this.findNamedLink(visit.links, 'acceptTransferVisitSuggestion');\n    if (!Validator.isValidLink(link)) {\n      const error = AWSDKError.AWSDKInternalError('visit argument does not have a valid \"acceptTransferVisitSuggestion\" link entry');\n      this.__logger.error(currentFunction, 'error', error);\n      return Promise.reject(error);\n    }\n    const options = this.generateOptions('PUT', link.url);\n    options.auth = this.getUserAuth(visit.consumer);\n    if (options.auth == null) {\n      const error = AWSDKError.AWSDKConsumerNotAuthenticated();\n      this.__logger.error(currentFunction, 'error', error);\n      return Promise.reject(error);\n    }\n    return this.executeRequest(options, AWSDKResponse)\n      .then((response) => {\n        this.__logger.debug(currentFunction, 'Got response', response);\n        this.updateUserAuthEntry(visit.consumer, response.authToken);\n        this.__logger.info(currentFunction, 'Complete');\n        return true;\n      })\n      .catch((error) => {\n        this.__logger.error(currentFunction, 'error', error);\n        if (error.errorCode === AWSDKErrorCode.responseError && error.httpResponseCode === 409) {\n          throw AWSDKError.AWSDKProviderNotAvailable();\n        }\n        throw error;\n      });\n  }\n\n  /**\n   * This method accepts the option of transferring to a Find First Available provider and begins the process of finding a provider to transfer to.\n   * @param {model.AWSDKVisit} visit the visit that is currently being waited on\n   * @returns {Promise<AWSDKVisit|error.AWSDKError>} a promise that will resolve to an {@link model.AWSDKVisit|AWSDKVisit} or rejected with an {@link error.AWSDKError|AWSDKError}\n   * <p><br>Potential Error Codes<br>\n   * <table summary=\"ErrorCodes\" border=\"1\">\n   * <tr><th>Error Code</th><th>reason</th>\n   * <tr><td>{@link error.AWSDKErrorCode.illegalArgument|AWSDKErrorCode.illegalArgument}</td><td>A parameter is not the correct type.</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.consumerNotAuthenticated|AWSDKErrorCode.consumerNotAuthenticated}</td><td>Consumer is not authenticated.</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.internalError|AWSDKErrorCode.internalError}</td><td>The AWSDK could not complete the request.</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.visitInvalid|AWSDKErrorCode.visitInvalid}</td><td>The visit has an invalid disposition</td></tr>\n   * </table>\n   * <p><br>Supported Visit Dispositions:</br>\n   * <ul>\n   * <li>{@link model.AWSDKDisposition.PreVisitScreening|PreVisitScreening}</li>\n   * </ul>\n   * </p>\n   * @since 1.1.0\n   */\n  acceptFindFirstAvailableTransferVisitSuggestion(visit) {\n    const currentFunction = 'VisitService.acceptAskMeTransferVisitSuggestion';\n    this.__logger.debug(currentFunction, 'Started', visit);\n    if (!(visit instanceof AWSDKVisit)) {\n      const error = AWSDKError.AWSDKIllegalArgument('visit argument is not of type AWSDKVisit');\n      this.__logger.error(currentFunction, 'error', error);\n      return Promise.reject(error);\n    }\n    if (visit.disposition !== AWSDKDisposition.PreVisitScreening) {\n      const error = AWSDKError.AWSDKInternalError(`visit is not set up for suggested transfer, visit is ${String(visit.disposition)} suggestedProvider=${visit.suggestedProviderForTransfer}`);\n      this.__logger.error(currentFunction, 'error', error);\n      return Promise.reject(error);\n    }\n    if (!visit.optionForFindFirstAvailableTransferAvailable) {\n      const error = AWSDKError.AWSDKInternalError('suggestion to search ask me network for provider has not been made');\n      this.__logger.error(currentFunction, 'error', error);\n      return Promise.reject(error);\n    }\n    const link = this.findNamedLink(visit.links, 'acceptAskMeTransferVisitSuggestion');\n    if (!Validator.isValidLink(link)) {\n      const error = AWSDKError.AWSDKInternalError('visit argument does not have a valid \"acceptAskMeTransferVisitSuggestion\" link entry');\n      this.__logger.error(currentFunction, 'error', error);\n      return Promise.reject(error);\n    }\n    const options = this.generateOptions('PUT', link.url);\n    options.auth = this.getUserAuth(visit.consumer);\n    if (options.auth == null) {\n      const error = AWSDKError.AWSDKConsumerNotAuthenticated();\n      this.__logger.error(currentFunction, 'error', error);\n      return Promise.reject(error);\n    }\n    return this.executeRequest(options, AWSDKResponse)\n      .then((response) => {\n        this.__logger.debug(currentFunction, 'Got response', response);\n        this.updateUserAuthEntry(visit.consumer, response.authToken);\n        this.__logger.info(currentFunction, 'Complete');\n        return visit;\n      })\n      .catch((error) => {\n        this.__logger.error(currentFunction, 'error', error);\n        throw error;\n      });\n  }\n\n  /**\n   * This method declines a suggested transfer. If the dontSuggestTransferAgain is set to true no other transfers will be suggested for this visit.\n   * @param {model.AWSDKVisit} visit the visit with a suggested transfer\n   * @param {Boolean} dontSuggestTransferAgain set to true to stop other suggested transfers for this visit.\n   * @returns {Promise<AWSDKVisit|error.AWSDKError>} a promise that will resolve to an {@link model.AWSDKVisit|AWSDKVisit} or rejected with an {@link error.AWSDKError|AWSDKError}\n   * <p><br>Potential Error Codes<br>\n   * <table summary=\"ErrorCodes\" border=\"1\">\n   * <tr><th>Error Code</th><th>reason</th>\n   * <tr><td>{@link error.AWSDKErrorCode.illegalArgument|AWSDKErrorCode.illegalArgument}</td><td>A parameter is not the correct type.</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.consumerNotAuthenticated|AWSDKErrorCode.consumerNotAuthenticated}</td><td>Consumer is not authenticated.</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.internalError|AWSDKErrorCode.internalError}</td><td>The AWSDK could not complete the request.</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.visitInvalid|AWSDKErrorCode.visitInvalid}</td><td>The visit has an invalid disposition</td></tr>\n   * </table>\n   * <p><br>Supported Visit Dispositions:</br>\n   * <ul>\n   * <li>{@link model.AWSDKDisposition.PreVisitScreening|PreVisitScreening}</li>\n   * </ul>\n   * </p>\n   * @since 1.1.0\n   */\n  declineSuggestedTransfer(visit, dontSuggestTransferAgain) {\n    const currentFunction = 'VisitService.declineSuggestedTransfer';\n    this.__logger.debug(currentFunction, 'Started', visit, dontSuggestTransferAgain);\n    if (!(visit instanceof AWSDKVisit)) {\n      const error = AWSDKError.AWSDKIllegalArgument('visit argument is not of type AWSDKVisit');\n      this.__logger.error(currentFunction, 'error', error);\n      return Promise.reject(error);\n    }\n    if (dontSuggestTransferAgain == null) {\n      const error = AWSDKError.AWSDKIllegalArgument('dontSuggestTransferAgain argument is null');\n      this.__logger.error(currentFunction, 'error', error);\n      return Promise.reject(error);\n    }\n    if (typeof (dontSuggestTransferAgain) !== 'boolean') {\n      const error = AWSDKError.AWSDKIllegalArgument('dontSuggestTransferAgain argument is not of type boolean');\n      this.__logger.error(currentFunction, 'error', error);\n      return Promise.reject(error);\n    }\n    if (visit.disposition !== AWSDKDisposition.PreVisitScreening) {\n      const error = AWSDKError.AWSDKIllegalArgument(`visit is not set up for suggested transfer, visit is ${String(visit.disposition)} suggestedProvider=${visit.suggestedProviderForTransfer}`);\n      this.__logger.error(currentFunction, 'error', error);\n      return Promise.reject(error);\n    }\n    if (!visit.optionForFindFirstAvailableTransferAvailable && visit.suggestedProviderForTransfer == null) {\n      const error = AWSDKError.AWSDKIllegalArgument('visit is not set up for suggested transfer, visit suggestedProviderForTransfer is null');\n      this.__logger.error(currentFunction, 'error', error);\n      return Promise.reject(error);\n    }\n    const link = this.findNamedLink(visit.links, 'declineTransferVisitSuggestion');\n    if (!Validator.isValidLink(link)) {\n      const error = AWSDKError.AWSDKInternalError('visit argument does not have a valid \"declineTransferVisitSuggestion\" link entry');\n      this.__logger.error(currentFunction, 'error', error);\n      return Promise.reject(error);\n    }\n    const options = this.generateOptions('PUT', link.url);\n    options.auth = this.getUserAuth(visit.consumer);\n    if (options.auth == null) {\n      const error = AWSDKError.AWSDKConsumerNotAuthenticated();\n      this.__logger.error(currentFunction, 'error', error);\n      return Promise.reject(error);\n    }\n    options.form.set('dontSuggestTransferAgain', dontSuggestTransferAgain);\n    return this.executeRequest(options, AWSDKResponse)\n      .then((response) => {\n        this.__logger.debug(currentFunction, 'Got response', response);\n        this.updateUserAuthEntry(visit.consumer, response.authToken);\n        this.__logger.info(currentFunction, 'Complete');\n        return visit;\n      })\n      .catch((error) => {\n        this.__logger.error(currentFunction, 'error', error);\n        if (error.errorCode === AWSDKErrorCode.responseError && error.httpResponseCode === 409) {\n          throw AWSDKError.AWSDKProviderNotAvailable();\n        }\n        throw error;\n      });\n  }\n\n  /**\n   * This method handles either returning a visitContext or a visit if the transfer is eligible for quick transfer.\n   * @param {model.AWSDKVisit} visit the visit with a suggested transfer\n   * @returns {Promise<AWSDKTransfer|error.AWSDKError>} a promise that will resolve to an {@link model.AWSDKTransfer|AWSDKTransfer} or rejected with an {@link error.AWSDKError|AWSDKError}\n   * <p><br>Potential Error Codes<br>\n   * <table summary=\"ErrorCodes\" border=\"1\">\n   * <tr><th>Error Code</th><th>reason</th>\n   * <tr><td>{@link error.AWSDKErrorCode.illegalArgument|AWSDKErrorCode.illegalArgument}</td><td>A parameter is not the correct type.</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.consumerNotAuthenticated|AWSDKErrorCode.consumerNotAuthenticated}</td><td>Consumer is not authenticated.</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.internalError|AWSDKErrorCode.internalError}</td><td>The AWSDK could not complete the request.</td></tr>\n   * </table>\n   * @since 1.1.0\n   */\n  handleTransfer(visit) {\n    const currentFunction = 'VisitService.handleTransfer';\n    this.__logger.debug(currentFunction, 'Started', visit);\n    if (!(visit instanceof AWSDKVisit)) {\n      const error = AWSDKError.AWSDKIllegalArgument('visit argument is not of type AWSDKVisit');\n      this.__logger.error(currentFunction, 'error', error);\n      return Promise.reject(error);\n    }\n    if (![AWSDKDisposition.Declined, AWSDKDisposition.ConsumerCanceled, AWSDKDisposition.Completed, AWSDKDisposition.ProviderWrapup].includes(visit.disposition)) {\n      const error = AWSDKError.AWSDKInternalError(`visit is not set up for transfer, visit is ${String(visit.disposition)}`);\n      this.__logger.error(currentFunction, 'error', error);\n      return Promise.reject(error);\n    }\n    if (visit.disposition === AWSDKDisposition.Declined && visit.endReason !== AWSDKEndReason.PROVIDER_DECLINE_AND_TRANSFER && visit.endReason !== AWSDKEndReason.ASSISTANT_DECLINE_AND_TRANSFER) {\n      const error = AWSDKError.AWSDKInternalError(`visit is not set up for transfer, visit is declined with endReason=${String(visit.endReason)}`);\n      this.__logger.error(currentFunction, 'error', error);\n      return Promise.reject(error);\n    }\n    if (visit.disposition === AWSDKDisposition.ConsumerCanceled && visit.endReason !== AWSDKEndReason.CONSUMER_TRANSFER) {\n      const error = AWSDKError.AWSDKInternalError(`visit is not set up for transfer, visit is ConsumerCanceled with endReason=${String(visit.endReason)}`);\n      this.__logger.error(currentFunction, 'error', error);\n      return Promise.reject(error);\n    }\n    if (visit.providerForTransfer == null) {\n      const error = AWSDKError.AWSDKInternalError('visit is not set up for transfer, visit providerForTransfer is null');\n      this.__logger.error(currentFunction, 'error', error);\n      return Promise.reject(error);\n    }\n    return this.getVisitContext(visit.consumer, visit.providerForTransfer)\n      .then((visitContext) => {\n        visitContext.setupTransfer(visit);\n        if (visit.isProviderForTransferEligibleForQuickTransfer) {\n          this.__logger.info(currentFunction, 'Eligible for Quick Transfer checking cost');\n          let createdVisit = null;\n          return this.createVisit(visitContext)\n            .then((newVisit) => {\n              createdVisit = newVisit;\n              return this.waitForVisitCostCalculationToFinish(newVisit);\n            })\n            .then((newVisitWithCost) => {\n              if (visitContext.proposedCouponCode != null && newVisitWithCost.cost.canApplyCouponCode) {\n                this.__logger.info(currentFunction, 'Eligible for Quick Transfer checking cost. Applying coupon');\n                return this.applyCouponCode(newVisitWithCost, visitContext.proposedCouponCode)\n                  .then((visitCost) => {\n                    newVisitWithCost.cost = visitCost;\n                    return newVisitWithCost;\n                  })\n                  // if cannot apply coupon ignore error and continue\n                  .catch(() => newVisitWithCost);\n              }\n              return newVisitWithCost;\n            })\n            .then((updatedVisit) => {\n              if (updatedVisit.cost.hasCostChangedWithVisitTransfer) {\n                this.__logger.info(currentFunction, 'Eligible for Quick Transfer checking cost. Applying coupon');\n                createdVisit = null;\n                return this.cancelVisit(updatedVisit)\n                  .then(() => new AWSDKTransfer(visitContext))\n                  // return with visitContext even if cancel fails\n                  .catch(() => new AWSDKTransfer(visitContext));\n              }\n              updatedVisit.isMatchmaking = visit.optionForFindFirstAvailableTransferAvailable;\n              return new AWSDKTransfer(visitContext, updatedVisit);\n            })\n            // if cannot create visit or calculate cost ignore error and just return the visitContext\n            .catch(() => {\n              this.__logger.info(currentFunction, 'Error during Quick Transfer logic returning normal transfer');\n              if (createdVisit != null) {\n                this.__logger.info(currentFunction, 'Error during Quick Transfer logic cleaning up visit');\n                return this.cancelVisit(createdVisit)\n                  .then(() => new AWSDKTransfer(visitContext))\n                  // return with visitContext even if cancel fails\n                  .catch(() => new AWSDKTransfer(visitContext));\n              }\n              return new AWSDKTransfer(visitContext);\n            });\n        }\n        return new AWSDKTransfer(visitContext);\n      });\n  }\n\n  /**\n   * This internal api is used to allow the consumer to initiate an IVR callback in the case of something like network connectivity issues.\n   *\n   * @param {model.AWSDKVisit} visit the visit to do initiate an ivr callback for\n   * @param {boolean} isRetry TRUE if this call is not the first IVR callback attempt\n   * @returns {Promise<boolean|error.AWSDKError>} a promise that will resolve to a boolean value of true or rejected with an instance of {@link error.AWSDKError|AWSDKError}\n   * <p><br>Supported Visit Dispositions:</br>\n   * <ul>\n   * <li>{@link model.AWSDKDisposition.InProgress|InProgress}</li>\n   * <li>{@link model.AWSDKDisposition.PostVisitConversation|PostVisitConversation}</li>\n   * <li>{@link model.AWSDKDisposition.ProviderWrapup|ProviderWrapup}</li>\n   * <li>{@link model.AWSDKDisposition.Completed|Completed}</li>\n   * <li>{@link model.AWSDKDisposition.Expired|Expired}</li>\n   * </ul>\n   * </p>\n   * @since 2.0.0\n   * @internal\n   */\n  __initiateIVRCallback(visit, isRetry) {\n    const currentFunction = 'VisitService.__initiateIVRCallback';\n    this.__logger.debug(currentFunction, 'Started', visit);\n    if (!(visit instanceof AWSDKVisit)) {\n      const error = AWSDKError.AWSDKIllegalArgument('visit argument is not of type AWSDKVisit');\n      this.__logger.error(currentFunction, 'error', error);\n      return Promise.reject(error);\n    }\n    if (typeof (isRetry) !== 'boolean') {\n      const error = AWSDKError.AWSDKIllegalArgument('isRetry argument is not of type boolean');\n      this.__logger.error(currentFunction, 'error', error);\n      return Promise.reject(error);\n    }\n    const link = this.findNamedLink(visit.links, 'callback');\n    if (!Validator.isValidLink(link)) {\n      const error = AWSDKError.AWSDKInternalError('visit argument does not have a valid \"callback\" link entry');\n      this.__logger.error(currentFunction, 'error', error);\n      return Promise.reject(error);\n    }\n    const options = this.generateOptions('POST', link.url);\n    options.auth = this.getUserAuth(visit.consumer);\n    if (options.auth == null) {\n      const error = AWSDKError.AWSDKConsumerNotAuthenticated();\n      this.__logger.error(currentFunction, 'error', error);\n      return Promise.reject(error);\n    }\n    options.form.set('isProvider', false);\n    options.form.set('isRetry', isRetry);\n    return this.executeRequest(options, AWSDKResponse)\n      .then((response) => {\n        this.__logger.debug(currentFunction, 'Got response', response);\n        this.updateUserAuthEntry(visit.consumer, response.authToken);\n        this.__logger.info(currentFunction, 'Complete');\n        return true;\n      })\n      .catch((error) => {\n        this.__logger.error(currentFunction, 'error', error);\n        throw error;\n      });\n  }\n\n  /**\n   * This method allows the addition of a phone conversation while the visit is already in progress. This allows providers and consumers to stay in a conversation\n   * when there are network issues that are impacting video visits. The phone number used for the visit is the one the consumer provided during intake or the one\n   * on file for this particular consumer.\n   * @param {model.AWSDKVisit} visit the visit that we want to add a phone conversation to\n   * @returns {Promise<boolean|error.AWSDKError>} a promise that will resolve to a boolean value of true or rejected with an instance of {@link error.AWSDKError|AWSDKError}\n   * <p><br>Potential Error Codes<br>\n   * <table summary=\"ErrorCodes\" border=\"1\">\n   * <tr><th>Error Code</th><th>reason</th>\n   * <tr><td>{@link error.AWSDKErrorCode.illegalArgument|AWSDKErrorCode.illegalArgument}</td><td>A parameter is not the correct type.</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.consumerNotAuthenticated|AWSDKErrorCode.consumerNotAuthenticated}</td><td>Consumer is not authenticated.</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.AWSDKIllegalUsage|AWSDKErrorCode.AWSDKIllegalUsage}</td><td>The allowsVisitAddPhone field is not true.</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.internalError|AWSDKErrorCode.internalError}</td><td>The AWSDK could not complete the request.</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.visitInvalid|AWSDKErrorCode.visitInvalid}</td><td>The visit has an invalid disposition</td></tr>\n   * </table>\n   * <p><br>Supported Visit Dispositions:</br>\n   * <ul>\n   * <li>{@link model.AWSDKDisposition.InProgress|InProgress}</li>\n   * </ul>\n   * </p>\n   * @since 2.0.0\n   */\n  addPhoneToVisit(visit) {\n    const currentFunction = 'VisitService.addPhoneToVisit';\n    this.__logger.debug(currentFunction, 'Started', visit);\n    if (!(visit instanceof AWSDKVisit)) {\n      const error = AWSDKError.AWSDKIllegalArgument('visit argument is not of type AWSDKVisit');\n      this.__logger.error(currentFunction, 'error', error);\n      return Promise.reject(error);\n    }\n    const consumer = visit.consumer;\n    if (!(consumer instanceof AWSDKConsumer)) {\n      const error = AWSDKError.AWSDKInternalError('visit.consumer must be of type AWSDKConsumer');\n      this.__logger.error(currentFunction, 'error', error);\n      return Promise.reject(error);\n    }\n    if (!visit.allowsVisitAddPhone) {\n      const error = AWSDKError.AWSDKIllegalUsage('visit.allowsVisitAddPhone must be true');\n      this.__logger.error(currentFunction, 'error', error);\n      return Promise.reject(error);\n    }\n    const link = this.findNamedLink(visit.links, 'addPhoneToExistingVisit');\n    if (!Validator.isValidLink(link)) {\n      const error = AWSDKError.AWSDKInternalError('visit argument does not have a valid \"addPhoneToExistingVisit\" link entry');\n      this.__logger.error(currentFunction, 'error', error);\n      return Promise.reject(error);\n    }\n    const options = this.generateOptions('POST', link.url);\n    options.auth = this.getUserAuth(visit.consumer);\n    if (options.auth == null) {\n      const error = AWSDKError.AWSDKConsumerNotAuthenticated();\n      this.__logger.error(currentFunction, 'error', error);\n      return Promise.reject(error);\n    }\n    return this.executeRequest(options, AWSDKResponse)\n      .then((response) => {\n        this.__logger.debug(currentFunction, 'Got response', response);\n        this.updateUserAuthEntry(visit.consumer, response.authToken);\n        this.__logger.info(currentFunction, 'Complete');\n        return true;\n      })\n      .catch((error) => {\n        this.__logger.error(currentFunction, 'error', error);\n        throw error;\n      });\n  }\n\n  /**\n   * Internal use only\n   * @private\n   */\n  __checkFirstAvailableSearchStatus(visitInfo, languageSpoken) {\n    const currentFunction = 'VisitService.__checkFirstAvailableSearchStatus';\n    this.__logger.debug(currentFunction, 'Started', visitInfo, languageSpoken);\n    if (!(visitInfo instanceof AWSDKVisitContext) && !(visitInfo instanceof AWSDKVisit)) {\n      const error = AWSDKError.AWSDKIllegalArgument('visitInfo argument is not of type AWSDKVisitContext or AWSDKVisit');\n      this.__logger.error(currentFunction, 'error', error);\n      return Promise.reject(error);\n    }\n    const consumer = visitInfo.consumer;\n    if (!(consumer instanceof AWSDKConsumer)) {\n      const error = AWSDKError.AWSDKIllegalArgument('visitContext.consumer is not of type AWSDKConsumer');\n      this.__logger.error(currentFunction, 'error', error);\n      return Promise.reject(error);\n    }\n    if (languageSpoken != null && !(languageSpoken instanceof AWSDKLanguage)) {\n      const error = AWSDKError.AWSDKIllegalArgument('languageSpoken optional argument is not of type AWSDKLanguage');\n      this.__logger.error(currentFunction, 'error', error);\n      return Promise.reject(error);\n    }\n    const link = this.findNamedLink(consumer.links, 'matchmaker');\n    if (!Validator.isValidLink(link)) {\n      const error = AWSDKError.AWSDKInternalError('consumer argument does not have a valid \"matchmaker\" link entry');\n      this.__logger.error(currentFunction, 'error', error);\n      return Promise.reject(error);\n    }\n    const auth = this.getUserAuth(visitInfo.consumer);\n    if (!auth) {\n      const error = AWSDKError.AWSDKConsumerNotAuthenticated();\n      this.__logger.error(currentFunction, 'error', error);\n      return Promise.reject(error);\n    }\n    const options = this.generateOptions('GET', link.url, true);\n    options.auth = auth;\n    options.headers.Accept = 'application/vnd.amwell-v3+json, application/json';\n    options.form.set('onDemandSpecialtyId', visitInfo.onDemandSpecialtyId);\n    if (languageSpoken) {\n      options.form.set('languageSpoken', languageSpoken.value);\n    }\n    return this.executeRequest(options, AWSDKFirstAvailableResponse)\n      .then((firstAvailableSearchStatusResponse) => {\n        this.__logger.debug(currentFunction, 'Got response', firstAvailableSearchStatusResponse);\n        this.updateUserAuthEntry(visitInfo.consumer, firstAvailableSearchStatusResponse.authToken);\n        return firstAvailableSearchStatusResponse;\n      }).catch((error) => {\n        this.__logger.error(currentFunction, 'error', error);\n        throw error;\n      });\n  }\n\n  /**\n   * Internal use only\n   * @private\n   */\n  __pollForFirstAvailableSearchStatus(visitInfo, languageSpoken) {\n    const currentFunction = 'VisitService.__pollForFirstAvailableSearchStatus';\n    this.__logger.debug(currentFunction, 'Started', visitInfo, languageSpoken);\n    const interval = this.__config.firstAvailablePollingInterval;\n    const endTime = Number(new Date()) + (this.__config.firstAvailablePollingTimeout);\n    let errorCount = 0;\n    const errorLimit = 3;\n    const checkCondition = (resolve, reject) => {\n      this.__checkFirstAvailableSearchStatus(visitInfo, languageSpoken)\n        .then((firstAvailableSearchStatusResponse) => {\n          const firstAvailableData = firstAvailableSearchStatusResponse.firstAvailableData;\n          const firstAvailableProviderFound = firstAvailableData && firstAvailableData.provider !== null && (!firstAvailableData.status || AWSDKFirstAvailableStatus.PROVIDER_ACCEPTED === firstAvailableData.status);\n\n          if (firstAvailableProviderFound) {\n            this.__logger.info(currentFunction, 'Completed');\n            // positive case, resolve\n            resolve(firstAvailableData);\n          } else if (firstAvailableData.status === AWSDKFirstAvailableStatus.PROVIDER_LIST_EXHAUSTED) {\n            // negative case, exhausted\n            const error = AWSDKError.AWSDKNoProvidersAvailable();\n            errorCount += 3;\n            this.__logger.error(currentFunction, 'Error', error);\n            reject(error);\n          } else if (Number(new Date()) < endTime) {\n            // ambiguous case, poll again\n            setTimeout(checkCondition, interval, resolve, reject);\n          } else {\n            // negative case, timeout\n            const error = AWSDKError.AWSDKPollingTimeout();\n            errorCount += 3;\n            this.__logger.error(currentFunction, 'Polling request timed out', error);\n            reject(error);\n          }\n        })\n        .catch((error) => {\n          errorCount += 1;\n          this.__logger.warn(currentFunction, 'error during polling', errorCount, error);\n          if (errorCount >= errorLimit) {\n            this.__logger.error(currentFunction, 'Error', error);\n            reject(error);\n          } else {\n            setTimeout(checkCondition, interval, resolve, reject);\n          }\n        });\n    };\n    return new Promise(checkCondition);\n  }\n\n  /**\n   * Finds the First Available {@link model.AWSDKProvider|AWSDKProvider} to accept the given visit, either an {@link model.AWSDKVisit|AWSDKVisit} or an {@link model.AWSDKVisitContext|AWSDKVisitContext}.\n   * @param {model.AWSDKVisit|model.AWSDKVisitContext} visitInfo a {@link model.AWSDKVisit|AWSDKVisit} or {@link model.AWSDKVisitContext|AWSDKVisitContext} for which to perform the search\n   * @param {model.AWSDKLanguage} [languageSpoken] the language by which to filter search results\n   * @param {String} [practice] the {@link model.AWSDKPractice} in which to search. When practice is provided, the practice associated to the id will be used instead of the practice associated to the specialty\n   * @param {model.AWSDKProviderType[]} [providerTypes] the array of provider types to include in the search. When the list of provider types is provided, the list of provider types will be combined with the list of provider types associated to the specialty\n   * @returns {Promise<model.AWSDKVisit|model.AWSDKVisitContext|error.AWSDKError>} Returns a promise that will be resolved to a visit of the type passed, either {@link model.AWSDKVisit|AWSDKVisit}\n   * or {@link model.AWSDKVisitContext|AWSDKVisitContext}, or will be rejected with an {@link error.AWSDKError|AWSDKError}.\n   * <p><br>Potential Error Codes<br>\n   * <table summary=\"ErrorCodes\" border=\"1\">\n   * <tr><th>Error Code</th><th>reason</th>\n   * <tr><td>{@link error.AWSDKErrorCode.illegalArgument|AWSDKErrorCode.illegalArgument}</td><td>A parameter is not the correct type.</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.consumerNotAuthenticated|AWSDKErrorCode.consumerNotAuthenticated}</td><td>Consumer is not authenticated.</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.internalError|AWSDKErrorCode.internalError}</td><td>The AWSDK could not complete the request.</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.noProvidersAvailable|AWSDKErrorCode.noProvidersAvailable}</td><td>The search concluded and no providers were available</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.pollingTimeout|AWSDKErrorCode.pollingTimeout}</td><td>The search exceeded its allotted polling time</td></tr>\n   * </table>\n   * @since 1.1.0\n   */\n  findFirstAvailable(visitInfo, languageSpoken, practice, providerTypes) {\n    const currentFunction = 'VisitService.findFirstAvailable';\n    this.__logger.debug(currentFunction, 'Started', visitInfo, languageSpoken, practice, providerTypes);\n    if (!(visitInfo instanceof AWSDKVisitContext) && !(visitInfo instanceof AWSDKVisit)) {\n      const error = AWSDKError.AWSDKIllegalArgument('visitInfo argument is not of type AWSDKVisitContext or AWSDKVisit');\n      this.__logger.error(currentFunction, 'error', error);\n      return Promise.reject(error);\n    }\n    if (visitInfo.onDemandSpecialtyId == null) {\n      const error = AWSDKError.AWSDKIllegalArgument('visitInfo must have a specified AWSDKOnDemandSpecialty id');\n      this.__logger.error(currentFunction, 'error', error);\n      return Promise.reject(error);\n    }\n    const consumer = visitInfo.consumer;\n    if (!(consumer instanceof AWSDKConsumer)) {\n      const error = AWSDKError.AWSDKIllegalArgument('visitInfo.consumer is not of type AWSDKConsumer');\n      this.__logger.error(currentFunction, 'error', error);\n      return Promise.reject(error);\n    }\n    if (languageSpoken && !(languageSpoken instanceof AWSDKLanguage)) {\n      const error = AWSDKError.AWSDKIllegalArgument('languageSpoken optional argument is not of type AWSDKLanguage');\n      this.__logger.error(currentFunction, 'error', error);\n      return Promise.reject(error);\n    }\n    if (practice && !(practice instanceof AWSDKPractice)) {\n      const error = AWSDKError.AWSDKIllegalArgument('practice optional argument is not of type AWSDKPractice');\n      this.__logger.error(currentFunction, 'error', error);\n      return Promise.reject(error);\n    }\n    if (providerTypes && (!Array.isArray(providerTypes) || providerTypes.find(pt => !(pt instanceof AWSDKProviderType)))) {\n      const error = AWSDKError.AWSDKIllegalArgument('providerTypes optional argument is not an array AWSDKProviderType');\n      this.__logger.error(currentFunction, 'error', error);\n      return Promise.reject(error);\n    }\n    const link = this.findNamedLink(consumer.links, 'matchmaker');\n    if (!Validator.isValidLink(link)) {\n      const error = AWSDKError.AWSDKInternalError('consumer argument does not have a valid \"matchmaker\" link entry');\n      this.__logger.error(currentFunction, 'error', error);\n      return Promise.reject(error);\n    }\n    const options = this.generateOptions('POST', link.url, false);\n    options.auth = this.getUserAuth(consumer);\n    if (options.auth == null) {\n      const error = AWSDKError.AWSDKConsumerNotAuthenticated();\n      this.__logger.error(currentFunction, 'error', error);\n      return Promise.reject(error);\n    }\n    options.headers['Content-Type'] = 'application/json';\n    options.headers.Accept = 'application/vnd.amwell-v3+json, application/json';\n    const practiceId = (practice && practice.id.encryptedId) || null;\n    const request = new AWSDKFirstAvailableRequest(visitInfo.onDemandSpecialtyId, languageSpoken, practiceId, providerTypes);\n    options.body = request.getAsJSONString();\n    const firstAvailableSearchStartTime = new Date();\n    return this.executeRequest(options, AWSDKFirstAvailableResponse)\n      .then((firstAvailableSearchResponse) => {\n        this.__logger.debug(currentFunction, 'Got response', firstAvailableSearchResponse);\n        this.updateUserAuthEntry(consumer, firstAvailableSearchResponse.authToken);\n        const firstAvailableData = firstAvailableSearchResponse.firstAvailableData;\n        if (firstAvailableData && firstAvailableData.provider != null) {\n          // we've immediately been matched with a provider\n          this.__logger.info(currentFunction, 'Complete, provider found');\n          return firstAvailableSearchResponse.firstAvailableData;\n        }\n        this.__logger.info(currentFunction, 'Complete, starting to poll');\n        // we've started matchmaking and should start polling\n        return this.__pollForFirstAvailableSearchStatus(visitInfo, languageSpoken);\n      }).then((firstAvailableData) => {\n        const data = firstAvailableData;\n        data.firstAvailableSearchStartTime = firstAvailableSearchStartTime;\n        data.firstAvailableSearchEndTime = new Date();\n        visitInfo.firstAvailableData = data;\n        return visitInfo;\n      })\n      .catch((error) => {\n        this.__logger.error(currentFunction, 'error', error);\n        throw error;\n      });\n  }\n\n  /**\n   * Invites a guest via email to participate in the existing visit using multi-way video.\n   * Multi-way video must be enabled on the system.\n   * @param {model.AWSDKVisit} visit the visit to invite the guest to\n   * @param {String} guestEmail the email address where the invitation will be sent\n   * @returns {Promise<AWSDKVideoInvitation|error.AWSDKError>} a promise that will resolve to an {@link model.AWSDKVideoInvitation|AWSDKVideoInvitation} or rejected with an {@link error.AWSDKError|AWSDKError}\n   * <p><br>Potential Error Codes<br>\n   * <table summary=\"ErrorCodes\" border=\"1\">\n   * <tr><th>Error Code</th><th>reason</th>\n   * <tr><td>{@link error.AWSDKErrorCode.illegalArgument|AWSDKErrorCode.illegalArgument}</td><td>A parameter is not the correct type.</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.consumerNotAuthenticated|AWSDKErrorCode.consumerNotAuthenticated}</td><td>Consumer is not authenticated.</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.internalError|AWSDKErrorCode.internalError}</td><td>The AWSDK could not complete the request.</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.validationError|AWSDKErrorCode.validationError}</td><td>The supplied email address was invalid.</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.illegalUsage}</td><td>The system is not configured for multiple video guests</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.guestEmailAlreadyInvited|AWSDKErrorCode.guestEmailAlreadyInvited}</td><td>The guest has already been invited</td></tr>\n   * </table>\n   * @since 1.1.0\n   * @deprecated please use {@link service.VisitService#inviteGuestsToVisit} this will be removed in version 3.x\n   */\n  inviteGuestToVisit(visit, guestEmail) {\n    const currentFunction = 'VisitService.inviteGuestToVisit';\n    deprecated(currentFunction, 'Please use VisitService.inviteGuestsToVisit instead.', '3.X');\n    this.__logger.debug(currentFunction, 'Started', visit, guestEmail);\n    if (!this.__systemConfiguration.multipleVideoParticipantsEnabled) {\n      const desc = 'The system is not configured to allow multiple guests to join a video visit';\n      const corrected = 'Configure the system to allow multiple guests to join a video visit';\n      const error = AWSDKError.AWSDKIllegalUsage(desc, corrected);\n      this.__logger.error(currentFunction, 'error', error);\n      return Promise.reject(error);\n    }\n    if (!(visit instanceof AWSDKVisit)) {\n      const error = AWSDKError.AWSDKIllegalArgument('visit argument is not of type AWSDKVisit');\n      this.__logger.error(currentFunction, 'error', error);\n      return Promise.reject(error);\n    }\n    if (!Validator.isEmailValid(guestEmail)) {\n      const error = AWSDKError.AWSDKValidationError('email');\n      this.__logger.error(currentFunction, 'error', error);\n      return Promise.reject(error);\n    }\n    const link = this.findNamedLink(visit.links, 'inviteGuest');\n    if (!Validator.isValidLink(link)) {\n      const error = AWSDKError.AWSDKInternalError('visit argument does not have a valid \"inviteGuest\" link entry');\n      this.__logger.error(currentFunction, 'error', error);\n      return Promise.reject(error);\n    }\n    const options = this.generateOptions('POST', link.url, true);\n    options.auth = this.getUserAuth(visit.consumer);\n    if (!options.auth) {\n      const error = AWSDKError.AWSDKConsumerNotAuthenticated();\n      this.__logger.error(currentFunction, 'error', error);\n      return Promise.reject(error);\n    }\n    options.form.set('email', guestEmail);\n    return this.executeRequest(options, AWSDKVideoInvitationResponse).then((response) => {\n      this.__logger.info(currentFunction, 'Got response', response);\n      this.updateUserAuthEntry(visit.consumer, response.authToken);\n      return response.videoInvitation;\n    }).catch((error) => {\n      this.__logger.error(currentFunction, 'error', error);\n      throw error;\n    });\n  }\n\n  /**\n   * Invites a list of guests via email to participate in the existing visit using multi-way video.\n   * Multi-way video must be enabled on the system.\n   * @param {model.AWSDKVisit} visit the visit to invite the guest to\n   * @param {String[]} guestEmails the email addresses where the invitation will be sent\n   * @returns {Promise<model.AWSDKVideoInvitation[]|error.AWSDKError>} Returns a promise that will be resolved to an array of {@link model.AWSDKVideoInvitation|AWSDKVideoInvitation}s or will\n   * be rejected with an {@link error.AWSDKError|AWSDKError}.\n   * <p><br>Potential Error Codes<br>\n   * <table summary=\"ErrorCodes\" border=\"1\">\n   * <tr><th>Error Code</th><th>reason</th>\n   * <tr><td>{@link error.AWSDKErrorCode.illegalArgument|AWSDKErrorCode.illegalArgument}</td><td>A parameter is not the correct type.</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.consumerNotAuthenticated|AWSDKErrorCode.consumerNotAuthenticated}</td><td>Consumer is not authenticated.</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.internalError|AWSDKErrorCode.internalError}</td><td>The AWSDK could not complete the request.</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.validationError|AWSDKErrorCode.validationError}</td><td>The supplied email addresses were invalid.</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.illegalUsage}</td><td>The system is not configured for multiple video guests</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.guestEmailAlreadyInvited|AWSDKErrorCode.guestEmailAlreadyInvited}</td><td>The guest has already been invited</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.visitInvalid|AWSDKErrorCode.visitInvalid}</td><td>The visit has an invalid disposition</td></tr>\n   * </table>\n   * <p><br>Supported Visit Dispositions:</br>\n   * <ul>\n   * <li>All dispositions supported</li>\n   * </ul>\n   * </p>\n   * @since 2.0.0\n   */\n  inviteGuestsToVisit(visit, guestEmails) {\n    const currentFunction = 'VisitService.inviteGuestsToVisit';\n    this.__logger.debug(currentFunction, 'Started', visit, guestEmails);\n    if (!this.__systemConfiguration.multipleVideoParticipantsEnabled) {\n      const desc = 'The system is not configured to allow multiple guests to join a video visit';\n      const corrected = 'Configure the system to allow multiple guests to join a video visit';\n      const error = AWSDKError.AWSDKIllegalUsage(desc, corrected);\n      this.__logger.error(currentFunction, 'error', error);\n      return Promise.reject(error);\n    }\n    if (!(visit instanceof AWSDKVisit)) {\n      const error = AWSDKError.AWSDKIllegalArgument('visit argument is not of type AWSDKVisit');\n      this.__logger.error(currentFunction, 'error', error);\n      return Promise.reject(error);\n    }\n    if (!guestEmails || !Array.isArray(guestEmails)) {\n      const error = AWSDKError.AWSDKIllegalArgument('guestEmails must be an array of valid string email addresses');\n      this.__logger.error(currentFunction, 'error', error);\n      return Promise.reject(error);\n    }\n    if (guestEmails.length === 0) {\n      const error = AWSDKError.AWSDKValidationError('guestEmails', guestEmails);\n      this.__logger.error(currentFunction, 'error', error);\n      return Promise.reject(error);\n    }\n    const invalidEmail = guestEmails.find(guestEmail => !Validator.isEmailValid(guestEmail));\n    if (invalidEmail) {\n      const error = AWSDKError.AWSDKValidationError('guestEmails', invalidEmail);\n      this.__logger.error(currentFunction, 'error', error);\n      return Promise.reject(error);\n    }\n    const link = this.findNamedLink(visit.links, 'inviteGuests');\n    if (!Validator.isValidLink(link)) {\n      const error = AWSDKError.AWSDKInternalError('visit argument does not have a valid \"inviteGuests\" link entry');\n      this.__logger.error(currentFunction, 'error', error);\n      return Promise.reject(error);\n    }\n    const options = this.generateOptions('POST', link.url);\n    options.auth = this.getUserAuth(visit.consumer);\n    if (!options.auth) {\n      const error = AWSDKError.AWSDKConsumerNotAuthenticated();\n      this.__logger.error(currentFunction, 'error', error);\n      return Promise.reject(error);\n    }\n\n    guestEmails.forEach(guestEmail => options.form.append('emails', guestEmail));\n\n    return this.executeRequest(options, AWSDKVideoInvitationListResponse).then((response) => {\n      this.__logger.info(currentFunction, 'Got response', response);\n      this.updateUserAuthEntry(visit.consumer, response.authToken);\n      return response.videoInvitations;\n    }).catch((error) => {\n      this.__logger.error(currentFunction, 'error', error);\n      throw error;\n    });\n  }\n\n  /**\n   * This method cancels any ongoing first-available search being performed on behalf of the {@link model.AWSDKConsumer|AWSDKConsumer}.\n   * @param {model.AWSDKConsumer} consumer the consumer for whom to cancel the search\n   * @returns {Promise<boolean|error.AWSDKError>} a promise that will resolve to a boolean indicating success, or rejected with an {@link error.AWSDKError|AWSDKError}\n   * <p><br>Potential Error Codes<br>\n   * <table summary=\"ErrorCodes\" border=\"1\">\n   * <tr><th>Error Code</th><th>reason</th>\n   * <tr><td>{@link error.AWSDKErrorCode.illegalArgument|AWSDKErrorCode.illegalArgument}</td><td>A parameter is not the correct type.</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.consumerNotAuthenticated|AWSDKErrorCode.consumerNotAuthenticated}</td><td>Consumer is not authenticated.</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.internalError|AWSDKErrorCode.internalError}</td><td>The AWSDK could not complete the request.</td></tr>\n   * </table>\n   * @since 1.1.0\n   */\n  cancelFirstAvailableSearch(consumer) {\n    const currentFunction = 'VisitService.cancelFirstAvailableSearch';\n    this.__logger.debug(currentFunction, 'Started', consumer);\n    if (!(consumer instanceof AWSDKConsumer)) {\n      const error = AWSDKError.AWSDKIllegalArgument('consumer argument is not of type AWSDKConsumer');\n      this.__logger.error(currentFunction, 'error', error);\n      return Promise.reject(error);\n    }\n    const link = this.findNamedLink(consumer.links, 'matchmaker');\n    if (!Validator.isValidLink(link)) {\n      const error = AWSDKError.AWSDKInternalError('consumer argument does not have a valid \"matchmaker\" link entry');\n      this.__logger.error(currentFunction, 'error', error);\n      return Promise.reject(error);\n    }\n    const options = this.generateOptions('DELETE', link.url, false);\n    options.auth = this.getUserAuth(consumer);\n    if (options.auth == null) {\n      const error = AWSDKError.AWSDKConsumerNotAuthenticated();\n      this.__logger.error(currentFunction, 'error', error);\n      return Promise.reject(error);\n    }\n    return this.executeRequest(options, AWSDKResponse)\n      .then(() => {\n        this.__logger.info(currentFunction, 'Completed.');\n        return true;\n      }).catch((error) => {\n        this.__logger.error(currentFunction, 'error', error);\n        throw error;\n      });\n  }\n\n  /**\n   * Validates the given {@link model.AWSDKVisitInvitation} by id. Invitations must be validated before the guest can\n   * enter a video visit.\n   * Multi-way video must be enabled on the system.\n   * @param {String} visitInviteId the id of the {@link model.AWSDKVisitInvitation} to validated\n   * @param {String} email the email address associated with the invitation\n   * @param {String} name the name of the guest joining the visit\n   * @returns {Promise<AWSDKVideoParticipant|error.AWSDKError>} a promise that will resolve to an {@link model.AWSDKVideoParticipant|AWSDKVideoParticipant} or rejected with an {@link error.AWSDKError|AWSDKError}\n   * <p><br>Potential Error Codes<br>\n   * <table summary=\"ErrorCodes\" border=\"1\">\n   * <tr><th>Error Code</th><th>reason</th>\n   * <tr><td>{@link error.AWSDKErrorCode.illegalArgument|AWSDKErrorCode.illegalArgument}</td><td>A parameter is not the correct type.</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.internalError|AWSDKErrorCode.internalError}</td><td>The AWSDK could not complete the request.</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.emailAddressNotFound|AWSDKErrorCode.emailAddressNotFound}</td><td>The given email is not associated with an existing visit invitation</td></tr>\n   * </table>\n   * @since 1.1.0\n   */\n  validateGuestInvitation(videoInviteId, email, name) {\n    const currentFunction = 'VisitService.validateGuestInvitation';\n    this.__logger.debug(currentFunction, 'Started', videoInviteId, email, name);\n    if (!Validator.isValidString(videoInviteId)) {\n      const error = AWSDKError.AWSDKIllegalArgument('videoInviteId argument must be a valid string');\n      this.__logger.error(currentFunction, 'error', error);\n      return Promise.reject(error);\n    }\n    if (!Validator.isEmailValid(email)) {\n      const error = AWSDKError.AWSDKIllegalArgument('email argument must be a valid email address');\n      this.__logger.error(currentFunction, 'error', error);\n      return Promise.reject(error);\n    }\n    if (!Validator.isValidString(name)) {\n      const error = AWSDKError.AWSDKIllegalArgument('name argument must be a valid string');\n      this.__logger.error(currentFunction, 'error', error);\n      return Promise.reject(error);\n    }\n    const link = this.findNamedLink(this.__links, 'videoParticipant');\n    if (!Validator.isValidLink(link)) {\n      const error = AWSDKError.AWSDKInternalError('visit argument does not have a valid \"videoParticipant\" link entry');\n      this.__logger.error(currentFunction, 'error', error);\n      return Promise.reject(error);\n    }\n    const options = this.generateOptions('POST', link.url, true);\n    options.auth = this.getSdkAuth();\n\n    options.form.set('id', videoInviteId);\n    options.form.set('email', email);\n    options.form.set('name', name);\n    return this.executeRequest(options, AWSDKVideoParticipantResponse).then((response) => {\n      this.__logger.info(currentFunction, 'Got response', response);\n      return response.videoParticipant;\n    }).catch((error) => {\n      this.__logger.error(currentFunction, 'error', error);\n      throw error;\n    });\n  }\n\n  /**\n   * Gets an up-to-date instance of the given {@link model.AWSDKVideoParticipant}\n   * @param {AWSDKVideoParticipant} participant the {@link model.AWSDKVideoParticipant|AWSDKVideoParticipant} to get updates for\n   * @returns {Promise<AWSDKVideoParticipant|error.AWSDKError>} a promise that will resolve to an {@link model.AWSDKVideoParticipant|AWSDKVideoParticipant} or rejected with an {@link error.AWSDKError|AWSDKError}\n   * <p><br>Potential Error Codes<br>\n   * <table summary=\"ErrorCodes\" border=\"1\">\n   * <tr><th>Error Code</th><th>reason</th>\n   * <tr><td>{@link error.AWSDKErrorCode.illegalArgument|AWSDKErrorCode.illegalArgument}</td><td>The argument is not of type AWSDKVideoParticipant.</td></tr>\n   * </table>\n   * @since 1.1.0\n   */\n  getVideoParticipant(participant) {\n    const currentFunction = 'VisitService.getVideoParticipant';\n    this.__logger.debug(currentFunction, 'Started', participant);\n    if (!(participant instanceof AWSDKVideoParticipant)) {\n      const error = AWSDKError.AWSDKIllegalArgument('participant argument is not of type AWSDKVideoParticipant');\n      this.__logger.error(currentFunction, 'error', error);\n      return Promise.reject(error);\n    }\n    const options = this.generateOptions('GET', participant.href);\n    options.auth = this.getSdkAuth();\n    return this.executeRequest(options, AWSDKVideoParticipantResponse).then((response) => {\n      this.__logger.info(currentFunction, 'Got response', response);\n      return response.videoParticipant;\n    }).catch((error) => {\n      this.__logger.error(currentFunction, 'error', error);\n      throw error;\n    });\n  }\n\n  /**\n   * Indicate that the given {@link model.AWSDKVideoParticipant} intends to connect and is ready to launch the telehealth video.<br>\n   * @param {AWSDKVideoParticipant} participant the {@link model.AWSDKVideoParticipant|AWSDKVideoParticipant} to connect\n   * @returns {Promise<AWSDKVideoParticipant|error.AWSDKError>} a promise that will resolve to an {@link model.AWSDKVideoParticipant|AWSDKVideoParticipant} or rejected with an {@link error.AWSDKError|AWSDKError}\n   * <p><br>Potential Error Codes<br>\n   * <table summary=\"ErrorCodes\" border=\"1\">\n   * <tr><th>Error Code</th><th>reason</th>\n   * <tr><td>{@link error.AWSDKErrorCode.illegalArgument|AWSDKErrorCode.illegalArgument}</td><td>The argument is not of type AWSDKVideoParticipant.</td></tr>\n   * </table>\n   * @since 1.1.0\n   */\n  updateVideoParticipantConnectionStatus(participant) {\n    const currentFunction = 'VisitService.updateVideoParticipantConnectionStatus';\n    this.__logger.debug(currentFunction, 'Started', participant);\n    if (!(participant instanceof AWSDKVideoParticipant)) {\n      const error = AWSDKError.AWSDKIllegalArgument('participant argument is not of type AWSDKVideoParticipant');\n      this.__logger.error(currentFunction, 'error', error);\n      return Promise.reject(error);\n    }\n    const options = this.generateOptions('PUT', participant.href, true);\n    options.auth = this.getSdkAuth();\n    options.form.set('connected', true);\n    return this.executeRequest(options, AWSDKVideoParticipantResponse).then((response) => {\n      this.__logger.info(currentFunction, 'Got response', response);\n      return response.videoParticipant;\n    }).catch((error) => {\n      this.__logger.error(currentFunction, 'error', error);\n      throw error;\n    });\n  }\n\n  /**\n   * Waits for the visit associated with this {@link model.AWSDKVideoParticipant|AWSDKVideoParticipant} to start.\n   * Must be preceded by {@link service.VisitService#updateVideoParticipantConnectionStatus|updateVideoParticipantConnectionStatus}.<br>\n   * @param {AWSDKVideoParticipant} participant the {@link model.AWSDKVideoParticipant|AWSDKVideoParticipant} that is waiting\n   * @returns {Promise<model.AWSDKVideoParticipant|error.AWSDKError>} Returns a promise that will be resolved to an {@link model.AWSDKVideoParticipant|AWSDKVideoParticipant} or will\n   * be rejected with an {@link error.AWSDKError|AWSDKError}.\n   * <p><br>Potential Error Codes<br>\n   * <table summary=\"ErrorCodes\" border=\"1\">\n   * <tr><th>Error Code</th><th>reason</th>\n   * <tr><td>{@link error.AWSDKErrorCode.illegalArgument|AWSDKErrorCode.illegalArgument}</td><td>A parameter is not the correct type.</td></tr>\n   * </table>\n   * @since 1.1.0\n   */\n  waitForVideoParticipantVisitToStart(participant) {\n    const currentFunction = 'VisitService.waitForVideoParticipantVisitToStart';\n    this.__logger.debug(currentFunction, 'Started', participant);\n    if (!(participant instanceof AWSDKVideoParticipant)) {\n      const error = AWSDKError.AWSDKIllegalArgument('participant argument is not of type AWSDKVideoParticipant');\n      this.__logger.error(currentFunction, 'error', error);\n      return Promise.reject(error);\n    }\n\n    if (participant.conferenceStatus !== AWSDKConferenceStatus.Waiting) {\n      this.__logger.info(currentFunction, `Visit has already resolved with status: ${String(participant.conferenceStatus)}`);\n      return Promise.resolve(participant);\n    }\n    const interval = this.__config.visitPollingInterval;\n    let errorCount = 0;\n    const errorLimit = 3;\n    const waitCondition = (resolve, reject) => {\n      this.getVideoParticipant(participant)\n        .then((result) => {\n          if (result.conferenceStatus !== AWSDKConferenceStatus.Waiting && result.conferenceStatus !== AWSDKConferenceStatus.Disabled) {\n            this.__logger.info(currentFunction, `Visit has resolved with status: ${String(result.conferenceStatus)}`);\n            resolve(result);\n          } else {\n            setTimeout(waitCondition, interval, resolve, reject);\n          }\n        })\n        .catch((error) => {\n          errorCount += 1;\n          this.__logger.warn(currentFunction, 'error during polling', errorCount, error);\n          if (errorCount >= errorLimit) {\n            this.__logger.error(currentFunction, 'error', error);\n            reject(error);\n          } else {\n            setTimeout(waitCondition, interval, resolve, reject);\n          }\n        });\n    };\n    return new Promise(waitCondition);\n  }\n\n  /**\n   * Waits for the visit associated with this {@link model.AWSDKVideoParticipant|AWSDKVideoParticipant} to end.\n   * @param {AWSDKVideoParticipant} participant the {@link model.AWSDKVideoParticipant|AWSDKVideoParticipant} in the visit\n   * @returns {Promise<model.AWSDKVideoParticipant|error.AWSDKError>} Returns a promise that will be resolved to an {@link model.AWSDKVideoParticipant|AWSDKVideoParticipant} or will\n   * be rejected with an {@link error.AWSDKError|AWSDKError}.\n   * <p><br>Potential Error Codes<br>\n   * <table summary=\"ErrorCodes\" border=\"1\">\n   * <tr><th>Error Code</th><th>reason</th>\n   * <tr><td>{@link error.AWSDKErrorCode.illegalArgument|AWSDKErrorCode.illegalArgument}</td><td>A parameter is not the correct type.</td></tr>\n   * </table>\n   * @since 1.1.0\n   */\n  waitForVideoParticipantVisitToEnd(participant) {\n    const currentFunction = 'VisitService.waitForVideoParticipantVisitToEnd';\n    this.__logger.debug(currentFunction, 'Started', participant);\n    if (!(participant instanceof AWSDKVideoParticipant)) {\n      const error = AWSDKError.AWSDKIllegalArgument('participant argument is not of type AWSDKVideoParticipant');\n      this.__logger.error(currentFunction, 'error', error);\n      return Promise.reject(error);\n    }\n    const conferenceHasEnded = result => result.conferenceStatus === AWSDKConferenceStatus.Ended || result.conferenceStatus === AWSDKConferenceStatus.Cancelled || result.conferenceStatus === AWSDKConferenceStatus.Disabled;\n    if (conferenceHasEnded(participant)) {\n      this.__logger.info(currentFunction, 'Visit has already ended');\n      return Promise.resolve(participant);\n    }\n    const interval = this.__config.visitPollingInterval;\n    let errorCount = 0;\n    const errorLimit = 3;\n    const waitCondition = (resolve, reject) => {\n      this.getVideoParticipant(participant)\n        .then((result) => {\n          if (conferenceHasEnded(result)) {\n            this.__logger.info(currentFunction, 'Visit has ended');\n            resolve(result);\n          } else {\n            setTimeout(waitCondition, interval, resolve, reject);\n          }\n        })\n        .catch((error) => {\n          errorCount += 1;\n          this.__logger.warn(currentFunction, 'error during polling', errorCount, error);\n          if (errorCount >= errorLimit) {\n            this.__logger.error(currentFunction, 'error', error);\n            reject(error);\n          } else {\n            setTimeout(waitCondition, interval, resolve, reject);\n          }\n        });\n    };\n    return new Promise(waitCondition);\n  }\n\n  /**\n   * Launches the telehealth video for this {@link model.AWSDKVideoParticipant}.<br />\n   * NOTE: <em><b>The telehealth client is only supported on Windows.</b></em>\n   * Must be preceded by {@link service.VisitService#waitForVideoParticipantVisitToStart|waitForVideoParticipantVisitToStart}.<br>\n   * @param {model.AWSDKVideoParticipant} participant the participant to launch the video for\n   * @returns {Promise<boolean|error.AWSDKError>} Returns a promise that will be resolved to a {@link boolean} indicating if the\n   * telehealth video has launched successfully or will be rejected with an {@link error.AWSDKError|AWSDKError} if the input is incorrect.\n   * <p><br>Potential Error Codes<br>\n   * <table summary=\"ErrorCodes\" border=\"1\">\n   * <tr><th>Error Code</th><th>reason</th>\n   * <tr><td>{@link error.AWSDKErrorCode.unsupportedVideoPlatform|AWSDKErrorCode.unsupportedVideoPlatform}</td><td>The system is configured with an unsupported video platform.</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.illegalArgument|AWSDKErrorCode.illegalArgument}</td><td>A parameter is not the correct type.</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.internalError|AWSDKErrorCode.internalError}</td><td>The AWSDK could not complete the request.</td></tr>\n   * </table>\n   * @since 1.1.0\n   */\n  launchVideoParticipantTelehealthVideo(participant) {\n    const currentFunction = 'VisitService.launchVideoParticipantTelehealthVideo';\n    this.__logger.debug(currentFunction, 'Started', participant);\n    if (!(participant instanceof AWSDKVideoParticipant)) {\n      const error = AWSDKError.AWSDKIllegalArgument('participant argument is not of type AWSDKVideoParticipant');\n      this.__logger.error(currentFunction, 'error', error);\n      return Promise.reject(error);\n    }\n    if (!this.__systemConfiguration.webRTCEnabled) {\n      const error = AWSDKError.AWSDKUnsupportedVideoPlatform();\n      this.__logger.error(currentFunction, 'error', error);\n      return Promise.reject(error);\n    }\n    const link = this.findNamedLink(participant.links, 'startElectronVisitURL');\n    if (!Validator.isValidLink(link)) {\n      const error = AWSDKError.AWSDKInternalError(\"participant argument does not have a valid 'startElectronVisitURL' link entry\");\n      this.__logger.error(currentFunction, 'error', error);\n      return Promise.reject(error);\n    }\n    return new Promise((resolve, reject) => {\n      this.__customProtocolHandler.launchUri(link.url, reject, resolve);\n    })\n      .then(() => {\n        this.__logger.info(currentFunction, 'Completed - launched ok returned true');\n        return true;\n      })\n      .catch(() => {\n        this.__logger.info(currentFunction, 'Completed - not launched returned false');\n        return false;\n      });\n  }\n\n  /**\n   * Returns any notes made by the {@link model.AWSDKProvider|AWSDKProvider} during the ongoing {@link model.AWSDKVisit|AWSDKVisit}.\n   * @param {model.AWSDKVisit} visit the visit to get notes for\n   * @returns {Promise<model.AWSDKProviderNote[]|error.AWSDKError>} Returns a promise that will be resolved to an array of {@link model.AWSDKProviderNote|AWSDKProviderNote}s or will\n   * be rejected with an {@link error.AWSDKError|AWSDKError}.\n   * <p><br>Potential Error Codes<br>\n   * <table summary=\"ErrorCodes\" border=\"1\">\n   * <tr><th>Error Code</th><th>reason</th>\n   * <tr><td>{@link error.AWSDKErrorCode.consumerNotAuthenticated|AWSDKErrorCode.consumerNotAuthenticated}</td><td>The consumer is not authenticated.</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.illegalArgument|AWSDKErrorCode.illegalArgument}</td><td>Missing argument or argument is not the correct type.</td>\n   * <tr><td>{@link error.AWSDKErrorCode.internalError|AWSDKErrorCode.internalError}</td><td>The AWSDK could not complete the request.</td></tr>\n   * </table>\n   * @since 1.2.1\n   */\n  getProviderNotes(visit) {\n    const currentFunction = 'VisitService.getProviderNotes';\n    this.__logger.debug(currentFunction, 'Started', visit);\n    if (!(visit instanceof AWSDKVisit)) {\n      const error = AWSDKError.AWSDKIllegalArgument('visit is not an instance of AWSDKVisit');\n      this.__logger.error(currentFunction, 'error', error);\n      return Promise.reject(error);\n    }\n    const link = this.findNamedLink(visit.links, 'notes');\n    if (!Validator.isValidLink(link)) {\n      const error = AWSDKError.AWSDKInternalError('A \"notes\" link entry was not found');\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    const options = this.generateOptions('GET', link.url);\n    options.auth = this.getUserAuth(visit.consumer);\n    if (options.auth == null) {\n      const error = AWSDKError.AWSDKConsumerNotAuthenticated();\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    return this.executeRequest(options, AWSDKProviderNotesResponse).then((response) => {\n      this.__logger.debug(currentFunction, 'Got response', response);\n      this.updateUserAuthEntry(visit.consumer, response.authToken);\n      return response.notes;\n    }).catch((error) => {\n      this.__logger.error(currentFunction, 'Error', error);\n      throw error;\n    });\n  }\n\n  /**\n   * Accepts the offered paid extension for a visit.\n   * @param {model.AWSDKVisit} visit the visit to extend\n   * @param {Boolean} acceptExtension TRUE if the visit should be extended\n   * @returns {Promise<boolean|error.AWSDKError>} Returns a promise that will be resolved to an {@link boolean} indicating if the visit extension was successfully accepted otherwise will\n   * be rejected with an {@link error.AWSDKError|AWSDKError}.\n   * <p><br>Potential Error Codes<br>\n   * <table summary=\"ErrorCodes\" border=\"1\">\n   * <tr><th>Error Code</th><th>reason</th>\n   * <tr><td>{@link error.AWSDKErrorCode.consumerNotAuthenticated|AWSDKErrorCode.consumerNotAuthenticated}</td><td>The consumer is not authenticated.</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.validationError|AWSDKErrorCode.validationError}</td><td>The visit.paidExtensionOffered field must be true.</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.illegalArgument|AWSDKErrorCode.illegalArgument}</td><td>Missing argument or argument is not the correct type.</td>\n   * <tr><td>{@link error.AWSDKErrorCode.internalError|AWSDKErrorCode.internalError}</td><td>The AWSDK could not complete the request.</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.visitInvalid|AWSDKErrorCode.visitInvalid}</td><td>The visit has an invalid disposition</td></tr>\n   * </table>\n   * <p><br>Supported Visit Dispositions:</br>\n   * <ul>\n   * <li>{@link model.AWSDKDisposition.InProgress|InProgress}</li>\n   * </ul>\n   * </p>\n   * @since 1.4.0\n   */\n  acceptPaidVisitExtension(visit, acceptExtension) {\n    const currentFunction = 'VisitService.acceptPaidVisitExtension';\n    this.__logger.debug(currentFunction, 'Started', visit);\n    if (!(visit instanceof AWSDKVisit)) {\n      const error = AWSDKError.AWSDKIllegalArgument('visit is not an instance of AWSDKVisit');\n      this.__logger.error(currentFunction, 'error', error);\n      return Promise.reject(error);\n    }\n    if (typeof (acceptExtension) !== 'boolean') {\n      const error = AWSDKError.AWSDKIllegalArgument('acceptExtension argument is not of type boolean');\n      this.__logger.error(currentFunction, 'error', error);\n      return Promise.reject(error);\n    }\n    if (!(visit.paidExtensionOffered)) {\n      const error = AWSDKError.AWSDKValidationError('visit.paidExtensionOffered');\n      this.__logger.error(currentFunction, 'error', error);\n      return Promise.reject(error);\n    }\n    const link = this.findNamedLink(visit.links, 'extendVisit');\n    if (!Validator.isValidLink(link)) {\n      const error = AWSDKError.AWSDKInternalError('A \"extendVisit\" link entry was not found');\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    const options = this.generateOptions('PUT', link.url);\n    options.auth = this.getUserAuth(visit.consumer);\n    if (options.auth == null) {\n      const error = AWSDKError.AWSDKConsumerNotAuthenticated();\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    options.form.set('accepted', acceptExtension);\n    return this.executeRequest(options, AWSDKResponse).then((response) => {\n      this.__logger.debug(currentFunction, 'Got response', response);\n      this.updateUserAuthEntry(visit.consumer, response.authToken);\n      return true;\n    }).catch((error) => {\n      this.__logger.error(currentFunction, 'Error', error);\n      throw error;\n    });\n  }\n\n  /**\n   * Validate the {@link model.AWSDKConsumerOverrideDetails|AWSDKConsumerOverrideDetails} object<br>\n   * <br>Potential validation errors:<br>\n   * <table summary=\"validation\" border=\"1\">\n   * <tr>\n   * <th>Field</th>\n   * <th>Validation Reason</th>\n   * <th>Notes</th>\n   * </tr>\n   * <tr>\n   * <td>firstName</td>\n   * <td>field required</td>\n   * <td>set to non-empty field</td>\n   * </tr>\n   * <tr>\n   * <td>lastName</td>\n   * <td>field required</td>\n   * <td>set to non-empty field</td>\n   * </tr>\n   * <tr>\n   * <td>firstName</td>\n   * <td>invalid field format</td>\n   * <td>At least 1 char long</td>\n   * </tr>\n   * <tr>\n   * <td>middleNameOrInitial</td>\n   * <td>invalid field format</td>\n   * <td>If {@link model.AWSDKSystemConfiguration#consumerMiddleNameHandling|AWSDKSystemConfiguration.consumerMiddleNameHandling} is set to 'INITIAL'. Can be blank or at most 1 character long. </td>\n   * </tr>\n   * <tr>\n   * <td>middleNameOrInitial</td>\n   * <td>invalid field format</td>\n   * <td>If {@link model.AWSDKSystemConfiguration#consumerMiddleNameHandling|AWSDKSystemConfiguration.consumerMiddleNameHandling} is set to 'FULLNAME'. Can be blank or at most 100 characters long. </td>\n   * </tr>\n   * <tr>\n   * <td>lastName</td>\n   * <td>invalid field format</td>\n   * <td>At least 2 chars long</td>\n   * </tr>\n   * <tr>\n   * <td>dob</td>\n   * <td>invalid field format</td>\n   * <td>Must be valid date</td>\n   * </tr>\n   * <td>email</td>\n   * <td>invalid field format</td>\n   * <td>At least 5 chars long, and valid email pattern</td>\n   * </tr>\n   * <tr>\n   * <td>phone</td>\n   * <td>invalid field format</td>\n   * <td>Must have format '[\\\\+]?[0-9.-]+' </td>\n   * </tr>\n   * <tr>\n   * <td>address1</td>\n   * <td>invalid field format</td>\n   * <td>Must be at least 1 char long</td>\n   * </tr>\n   * <tr>\n   * <td>address2</td>\n   * <td>invalid field format</td>\n   * <td>Can be null, but if not, must be at least 1 char long</td>\n   * </tr>\n   * <tr>\n   * <td>city</td>\n   * <td>invalid field format</td>\n   * <td>At least 2 char long</td>\n   * </tr>\n   * <tr>\n   * <td>zipCode</td>\n   * <td>invalid field format</td>\n   * <td>Format must be: nnnnn or nnnnn-nnnn</td>\n   * </tr>\n   * <tr>\n   * <td>brandings</td>\n   * <td>invalid field format</td>\n   * <td>Must be an array of string</td>\n   * </tr>\n   * <tr>\n   * <td>genderIdentityKey</td>\n   * <td>invalid field format</td>\n   * <td>Must be null, empty or non-whitespace-only string</td>\n   * </tr>\n   * </table>\n   *\n   * @param {model.AWSDKConsumerOverrideDetails} AWSDKConsumerOverrideDetails object to validate\n   * @returns {error.AWSDKError[]} an array of {@link error.AWSDKError|AWSDKError} that detail any validation errors.\n   * @since 1.4.0\n   */\n  validateConsumerOverrideDetails(consumerOverrideDetails) {\n    const currentFunction = 'ConsumerService.validateConsumerOverrideDetails';\n    this.__logger.debug(currentFunction, 'Started', consumerOverrideDetails);\n    const errArrayResult = [];\n    this.__validateConsumerOverrideDetails(consumerOverrideDetails, errArrayResult);\n    this.__logger.trace(currentFunction, 'Finished', errArrayResult);\n    return errArrayResult;\n  }\n\n  /**\n   * Internal Use only!!\n   * @private\n   */\n  __validateConsumerOverrideDetails(consumerOverrideDetails, errors) {\n    const currentFunction = 'VisitService.__validateConsumerOverrideDetails';\n    this.__logger.trace(currentFunction, 'Started', consumerOverrideDetails, errors);\n    let fieldName;\n    let reason;\n    let recoverySuggestion;\n    if (Validator.isValidString(consumerOverrideDetails.firstName, false) && !Validator.isValidString(consumerOverrideDetails.lastName, false)) {\n      fieldName = 'lastName';\n      reason = 'field required';\n      recoverySuggestion = 'Set to non-empty value';\n      errors.push(AWSDKError.AWSDKFieldValidationError(AWSDKConsumerOverrideDetails, fieldName, reason, recoverySuggestion));\n    }\n    if (Validator.isValidString(consumerOverrideDetails.lastName, false) && !Validator.isValidString(consumerOverrideDetails.firstName, false)) {\n      fieldName = 'firstName';\n      reason = 'field required';\n      recoverySuggestion = 'Set to non-empty value';\n      errors.push(AWSDKError.AWSDKFieldValidationError(AWSDKConsumerOverrideDetails, fieldName, reason, recoverySuggestion));\n    }\n    if (Validator.isValidString(consumerOverrideDetails.firstName, false) && !Validator.isFirstNameValid(consumerOverrideDetails.firstName)) {\n      fieldName = 'firstName';\n      reason = 'invalid format';\n      recoverySuggestion = 'See valid format in docs';\n      errors.push(AWSDKError.AWSDKFieldValidationError(AWSDKConsumerOverrideDetails, fieldName, reason, recoverySuggestion));\n    }\n    // both middle initial and middle name can be empty even if the system is configured to accept them\n    if (this.__systemConfiguration.consumerMiddleNameHandling === AWSDKConsumerMiddleNameHandling.INITIAL && consumerOverrideDetails.middleNameOrInitial != null && !Validator.isMiddleInitialValid(consumerOverrideDetails.middleNameOrInitial)) {\n      fieldName = 'middleNameOrInitial';\n      reason = 'invalid format';\n      recoverySuggestion = 'See valid format in docs';\n      errors.push(AWSDKError.AWSDKFieldValidationError(AWSDKConsumerOverrideDetails, fieldName, reason, recoverySuggestion));\n    }\n    if (this.__systemConfiguration.consumerMiddleNameHandling === AWSDKConsumerMiddleNameHandling.FULLNAME && consumerOverrideDetails.middleNameOrInitial != null && !Validator.isMiddleNameValid(consumerOverrideDetails.middleNameOrInitial)) {\n      fieldName = 'middleNameOrInitial';\n      reason = 'invalid format';\n      recoverySuggestion = 'See valid format in docs';\n      errors.push(AWSDKError.AWSDKFieldValidationError(AWSDKConsumerOverrideDetails, fieldName, reason, recoverySuggestion));\n    }\n    if (Validator.isValidString(consumerOverrideDetails.lastName, false) && !Validator.isLastNameValid(consumerOverrideDetails.lastName)) {\n      fieldName = 'lastName';\n      reason = 'invalid format';\n      recoverySuggestion = 'See valid format in docs';\n      errors.push(AWSDKError.AWSDKFieldValidationError(AWSDKConsumerOverrideDetails, fieldName, reason, recoverySuggestion));\n    }\n    if (consumerOverrideDetails.dob != null && (consumerOverrideDetails.dob instanceof Date) && consumerOverrideDetails.dob.getTime() > Date.now()) {\n      fieldName = 'dob';\n      reason = 'invalid value';\n      recoverySuggestion = 'Set to valid value';\n      errors.push(AWSDKError.AWSDKFieldValidationError(AWSDKConsumerOverrideDetails, fieldName, reason, recoverySuggestion));\n    }\n    if (Validator.isValidString(consumerOverrideDetails.email) && !Validator.isEmailValid(consumerOverrideDetails.email)) {\n      fieldName = 'email';\n      reason = 'invalid format';\n      recoverySuggestion = 'See valid format in docs';\n      errors.push(AWSDKError.AWSDKFieldValidationError(AWSDKConsumerOverrideDetails, fieldName, reason, recoverySuggestion));\n    }\n    if (Validator.isValidString(consumerOverrideDetails.phone) && !Validator.isPhoneNumberValid(consumerOverrideDetails.phone)) {\n      fieldName = 'phone';\n      reason = 'invalid format';\n      recoverySuggestion = 'See valid format in docs';\n      errors.push(AWSDKError.AWSDKFieldValidationError(AWSDKConsumerOverrideDetails, fieldName, reason, recoverySuggestion));\n    }\n    if (Validator.isValidString(consumerOverrideDetails.address1) && !Validator.isAddressValid(consumerOverrideDetails.address1, true)) {\n      fieldName = 'address1';\n      reason = 'invalid format';\n      recoverySuggestion = 'see valid format in docs';\n      errors.push(AWSDKError.AWSDKFieldValidationError(AWSDKConsumerOverrideDetails, fieldName, reason, recoverySuggestion));\n    }\n    if (Validator.isValidString(consumerOverrideDetails.address2) && !Validator.isAddressValid(consumerOverrideDetails.address2, false)) {\n      fieldName = 'address2';\n      reason = 'invalid format';\n      recoverySuggestion = 'see valid format in docs';\n      errors.push(AWSDKError.AWSDKFieldValidationError(AWSDKConsumerOverrideDetails, fieldName, reason, recoverySuggestion));\n    }\n    if (Validator.isValidString(consumerOverrideDetails.city) && consumerOverrideDetails.city.length <= 1) {\n      fieldName = 'city';\n      reason = 'invalid format';\n      recoverySuggestion = 'see valid format in docs';\n      errors.push(AWSDKError.AWSDKFieldValidationError(AWSDKConsumerOverrideDetails, fieldName, reason, recoverySuggestion));\n    }\n    if (Validator.isValidString(consumerOverrideDetails.zipCode) && !Validator.isZipCodeValid(consumerOverrideDetails.zipCode)) {\n      fieldName = 'zipCode';\n      reason = 'invalid format';\n      recoverySuggestion = 'see valid format in docs';\n      errors.push(AWSDKError.AWSDKFieldValidationError(AWSDKConsumerOverrideDetails, fieldName, reason, recoverySuggestion));\n    }\n    const brandings = consumerOverrideDetails.brandings;\n    if (Array.isArray(brandings) && brandings.size > 0 && brandings.some(item => typeof item !== 'string')) {\n      fieldName = 'brandings';\n      reason = 'invalid format';\n      recoverySuggestion = 'See valid format in docs';\n      errors.push(AWSDKError.AWSDKFieldValidationError(AWSDKConsumerOverrideDetails, fieldName, reason, recoverySuggestion));\n    }\n    const { genderIdentityKey } = consumerOverrideDetails;\n    // allowing gender identity key to be null/unset or empty string\n    if (this.__systemConfiguration.genderSupportEnabled && genderIdentityKey != null && genderIdentityKey !== '' && !Validator.isValidString(genderIdentityKey, false)) {\n      fieldName = 'genderIdentityKey';\n      reason = 'invalid format';\n      recoverySuggestion = 'See valid format in docs';\n      errors.push(AWSDKError.AWSDKFieldValidationError(AWSDKConsumerOverrideDetails, fieldName, reason, recoverySuggestion));\n    }\n    this.__logger.trace(currentFunction, 'Finished', errors);\n  }\n\n  /**\n   * If one exists, retrieves a {@link model.AWSDKVisit|AWSDKVisit} whose disposition is either InProgress or PreScreening for the given authenticated {@link model.AWSDKConsumer|AWSDKConsumer}. If there\n   * is no active visit for the consumer, null is returned.\n   * @param {model.AWSDKConsumer|AWSDKConsumer} consumer REQUIRED the consumer for which to get an active visit\n   * @return {Promise<model.AWSDKVisit|error.AWSDKError>} Returns a promise that will be resolved to an {@link model.AWSDKVisit|AWSDKVisit} with disposition of either InProgress or PreVisitScreening, if one exists,\n   * or will be rejected with an {@link error.AWSDKError|AWSDKError}.\n   * <br>Potential Error Codes<br>\n   * <p><table summary=\"ErrorCodes\" border=\"1\">\n   * <tr><th>Error Code</th><th>reason</th>\n   * <tr><td>{@link error.AWSDKErrorCode.internalError|AWSDKErrorCode.internalError}</td><td>The AWSDK could not complete the request.</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.illegalArgument|AWSDKErrorCode.illegalArgument}</td><td>A parameter is not the correct type.</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.consumerNotAuthenticated|AWSDKErrorCode.consumerNotAuthenticated}</td><td>Consumer is not authenticated.</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.visitNotFound|AWSDKErrorCode.visitNotFound}</td><td>Consumer has no active visits</td></tr>\n   * </table>\n   * @since 2.3.0\n   */\n  findActiveVisit(consumer) {\n    const currentFunction = 'VisitService.findActiveVisit';\n    this.__logger.debug(currentFunction, 'Started', consumer);\n    if (!(consumer instanceof AWSDKConsumer)) {\n      const error = AWSDKError.AWSDKIllegalArgument('consumer argument must be of type AWSDKConsumer');\n      this.__logger.error(currentFunction, 'error', error);\n      return Promise.reject(error);\n    }\n    const link = this.findNamedLink(consumer.links, 'activeVisit');\n    if (!Validator.isValidLink(link)) {\n      const error = AWSDKError.AWSDKInternalError('consumer does not have a \"activeVisit\" link entry');\n      this.__logger.error(currentFunction, 'error', error);\n      return Promise.reject(error);\n    }\n    const options = this.generateOptions('GET', link.url);\n    options.auth = this.getUserAuth(consumer);\n    if (options.auth == null) {\n      const error = AWSDKError.AWSDKConsumerNotAuthenticated();\n      this.__logger.error(currentFunction, 'error', error);\n      return Promise.reject(error);\n    }\n    return this.executeRequest(options, AWSDKVisitResponse)\n      .then((response) => {\n        this.updateUserAuthEntry(consumer, response.authToken);\n        this.__logger.debug(currentFunction, 'Got response', response);\n        return response.visit;\n      })\n      .catch((error) => {\n        this.__logger.error(currentFunction, 'error', error);\n        throw error;\n      });\n  }\n}\n\nexport default VisitService;\n","/*!\r\n * American Well Consumer Web SDK\r\n *\r\n * Copyright (c) 2018 American Well.\r\n * All rights reserved.\r\n *\r\n * It is illegal to use, reproduce or distribute\r\n * any part of this Intellectual Property without\r\n * prior written authorization from American Well.\r\n */\r\n\r\nimport AWSDKResponse from './awsdk_response';\r\nimport AWSDKAppointment from '../../../model/appointment/awsdk_appointment';\r\nimport GenericParser from '../../parser/generic_parser';\r\n\r\n/**\r\n * Simple wrapper around an {@link model.AWSDKAppointment}\r\n * @property {model.AWSDKAppointment} appointment the {@link model.AWSDKAppointment}\r\n * @extends model.AWSDKResponse\r\n */\r\nclass AWSDKAppointmentResponse extends AWSDKResponse {\r\n  get appointment() {\r\n    return GenericParser.parseObject(this.__data.appointment, AWSDKAppointment);\r\n  }\r\n}\r\n\r\nexport default AWSDKAppointmentResponse;\r\n","/*!\n * American Well Consumer Web SDK\n *\n * Copyright (c) 2018 American Well.\n * All rights reserved.\n *\n * It is illegal to use, reproduce or distribute\n * any part of this Intellectual Property without\n * prior written authorization from American Well.\n */\nimport AWSDKDataObject from './awsdk_dataobject';\n\n/**\n * This class represents a platform type that an instance of an AWSDK in running on\n * @property {String} name the string representing the name of the platform\n * @property {String} localizedDisplayName the string representing the localized name for the platform\n * @since 1.4.0\n * @extends model.AWSDKDataObject\n */\nclass AWSDKPlatformType extends AWSDKDataObject {\n  get name() {\n    return this.__data.name;\n  }\n  get localizedDisplayName() {\n    return this.__data.localizedDisplayName;\n  }\n}\nexport default AWSDKPlatformType;\n","/*!\r\n * American Well Consumer Web SDK\r\n *\r\n * Copyright (c) 2018 American Well.\r\n * All rights reserved.\r\n *\r\n * It is illegal to use, reproduce or distribute\r\n * any part of this Intellectual Property without\r\n * prior written authorization from American Well.\r\n */\r\n\r\nimport AWSDKEntity from '../awsdk_entity';\r\nimport GenericParser from '../../internal/parser/generic_parser';\r\nimport AWSDKPlatformType from '../awsdk_platform_type';\r\n\r\n/**\r\n * This class contains all necessary information for representing appointment readiness.\r\n * @property {Boolean} registered whether or not the consumer is registered\r\n * @property {Boolean} techCheckEnabled whether or not the tech check is enabled\r\n * @property {Boolean} techCheckPassed whether or not the tech check has been passed\r\n * @property {Boolean} readyForAppointment whether or not the consumer is ready for the appointment\r\n * @property {Date} datePassedTechCheck the date in which the consumer passed tech check\r\n * @property {Boolean} microphonePassed a boolean describing whether or not the microphone test was successfully completed\r\n * @property {Boolean} speakerPassed a boolean describing whether or not the speaker test was successfully completed\r\n * @property {Boolean} cameraPassed a boolean describing whether or not the camera test was successfully completed\r\n * @property {Number} downloadSpeedMbps the numeric value representing the download speed registered by the testing tool\r\n * @property {Number} uploadSpeedMbps the numeric float value representing the upload speed registered by the testing tool\r\n * @property {Number} latencyMs the numeric float value representing the latency registered by the testing tool\r\n * @property {Number} jitter the numeric integer value representing the variation in latency on a packet flow between two systems\r\n * @property {String} microphoneDeviceName the string name of the microphone device\r\n * @property {String} speakerDeviceName the string name of the speaker device\r\n * @property {String} cameraDeviceName the string name of the front-facing camera\r\n * @property {String} sourceId the source id for this appointment readiness request\r\n * @property {model.AWSDKPlatformType} platformType the platform type that the latest readiness test was performed on\r\n * @property {model.AWSDKAppointment} appointment the appointment for this appointment readiness request\r\n * @property {String} platformVersion the platform version that the latest readiness test was performed on\r\n * @since 1.1.0\r\n * @extends model.AWSDKEntity\r\n */\r\n\r\nclass AWSDKAppointmentReadiness extends AWSDKEntity {\r\n  get registered() {\r\n    return GenericParser.parseBoolean(this.__data.enrolled);\r\n  }\r\n  get techCheckEnabled() {\r\n    return GenericParser.parseBoolean(this.__data.techCheckEnabled);\r\n  }\r\n  get techCheckPassed() {\r\n    return GenericParser.parseBoolean(this.__data.techCheckPassed);\r\n  }\r\n  get readyForAppointment() {\r\n    return GenericParser.parseBoolean(this.__data.readyForAppointment);\r\n  }\r\n  /**\r\n   * @since 1.4.0\r\n   */\r\n  get datePassedTechCheck() {\r\n    return GenericParser.parseDate(this.__data.datePassedTechCheck);\r\n  }\r\n  /**\r\n   * @since 1.4.0\r\n   */\r\n  get microphonePassed() {\r\n    return GenericParser.parseBoolean(this.__data.microphonePassed);\r\n  }\r\n  /**\r\n   * @since 1.4.0\r\n   */\r\n  get speakerPassed() {\r\n    return GenericParser.parseBoolean(this.__speakerPassed);\r\n  }\r\n  /**\r\n   * @since 1.4.0\r\n   */\r\n  get cameraPassed() {\r\n    return GenericParser.parseBoolean(this.__data.cameraPassed);\r\n  }\r\n  /**\r\n   * @since 1.4.0\r\n   */\r\n  get downloadSpeedMbps() {\r\n    return this.__data.downloadSpeedMbps;\r\n  }\r\n  /**\r\n   * @since 1.4.0\r\n   */\r\n  get uploadSpeedMbps() {\r\n    return this.__data.uploadSpeedMbps;\r\n  }\r\n  /**\r\n   * @since 1.4.0\r\n   */\r\n  get latencyMs() {\r\n    return this.__data.latencyMs;\r\n  }\r\n  /**\r\n   * @since 1.4.0\r\n   */\r\n  get jitter() {\r\n    return this.__data.jitter;\r\n  }\r\n  /**\r\n   * @since 1.4.0\r\n   */\r\n  get microphoneDeviceName() {\r\n    return this.__data.microphoneDeviceName;\r\n  }\r\n  /**\r\n   * @since 1.4.0\r\n   */\r\n  get cameraDeviceName() {\r\n    return this.__data.cameraDeviceName;\r\n  }\r\n  /**\r\n   * @since 1.4.0\r\n   */\r\n  get speakerDeviceName() {\r\n    return this.__data.speakerDeviceName;\r\n  }\r\n  /**\r\n   * @since 1.4.0\r\n   */\r\n  get appointment() {\r\n    return this.__data.appointment;\r\n  }\r\n  /**\r\n   * @since 1.4.0\r\n   */\r\n  get sourceId() {\r\n    return this.__sourceId;\r\n  }\r\n  /**\r\n   * @since 1.4.0\r\n   */\r\n  get platformVersion() {\r\n    return this.__data.platformVersion;\r\n  }\r\n  /**\r\n   * @since 1.4.0\r\n   */\r\n  get platformType() {\r\n    return this.__data.platformType ? GenericParser.parseObject(this.__data.platformType, AWSDKPlatformType) : null;\r\n  }\r\n  // setters\r\n  /**\r\n   * @since 1.4.0\r\n   */\r\n  set sourceId(sourceId) {\r\n    this.__sourceId = sourceId;\r\n  }\r\n}\r\n\r\nexport default AWSDKAppointmentReadiness;\r\n","/*!\r\n * American Well Consumer Web SDK\r\n *\r\n * Copyright (c) 2018 American Well.\r\n * All rights reserved.\r\n *\r\n * It is illegal to use, reproduce or distribute\r\n * any part of this Intellectual Property without\r\n * prior written authorization from American Well.\r\n */\r\n\r\nimport AWSDKResponse from './awsdk_response';\r\nimport AWSDKAppointmentReadiness from '../../../model/appointment/awsdk_appointment_readiness';\r\nimport GenericParser from '../../parser/generic_parser';\r\n\r\n/**\r\n * Simple wrapper around an {@link model.AWSDKAppointmentReadiness}\r\n * @property {model.AWSDKAppointmentReadiness} appointmentReadiness the {@link model.AWSDKAppointmentReadiness}\r\n * @since 1.1.0\r\n * @extends model.AWSDKResponse\r\n */\r\nclass AWSDKAppointmentReadinessResponse extends AWSDKResponse {\r\n  get appointmentReadiness() {\r\n    return GenericParser.parseObject(this.__data.appointmentReadiness, AWSDKAppointmentReadiness);\r\n  }\r\n}\r\n\r\nexport default AWSDKAppointmentReadinessResponse;\r\n","/*!\r\n * American Well Consumer Web SDK\r\n *\r\n * Copyright © 2018 American Well.\r\n * All rights reserved.\r\n *\r\n * It is illegal to use, reproduce or distribute\r\n * any part of this Intellectual Property without\r\n * prior written authorization from American Well.\r\n */\r\nimport AWSDKAppointment from '../../../model/appointment/awsdk_appointment';\r\nimport AWSDKResponse from './awsdk_response';\r\nimport GenericParser from '../../parser/generic_parser';\r\n\r\n/**\r\n * Simple wrapper around a collection of {@link model.AWSDKAppointment}s\r\n * @property {model.AWSDKAppointment[]} appointments the {@link model.AWSDKAppointment}s\r\n * @extends model.AWSDKResponse\r\n */\r\nclass AWSDKAppointmentsResponse extends AWSDKResponse {\r\n  get appointments() {\r\n    return (Array.isArray(this.__data.appointments) && this.__data.appointments.map(item => GenericParser.parseObject(item, AWSDKAppointment))) || [];\r\n  }\r\n}\r\n\r\nexport default AWSDKAppointmentsResponse;\r\n","/*!\r\n * American Well Consumer Web SDK\r\n *\r\n * Copyright (c) 2018 American Well.\r\n * All rights reserved.\r\n *\r\n * It is illegal to use, reproduce or distribute\r\n * any part of this Intellectual Property without\r\n * prior written authorization from American Well.\r\n */\r\n\r\n/**\r\n * The AWSDKAppointmentUpdateRequest class represents a request to update an Appointment for a consumer. It is an expected parameter for the {@link service.AppointmentService#updateAppointment|AppointmentService.updateAppointment} function <br>\r\n * Get an instance of this via {@link service.AppointmentService#getNewAppointmentUpdateRequest|AppointmentService.getNewAppointmentUpdateRequest}\r\n * @property {String} initiatorOverridePhoneNumber the override phone number associated with the appointment update request\r\n * @since 1.4.0\r\n */\r\nclass AWSDKAppointmentUpdateRequest {\r\n  constructor(appointment) {\r\n    this.__appointment = appointment;\r\n  }\r\n\r\n  get initiatorOverridePhoneNumber() {\r\n    return this.__initiatorOverridePhoneNumber;\r\n  }\r\n\r\n  set initiatorOverridePhoneNumber(initiatorOverridePhoneNumber) {\r\n    this.__initiatorOverridePhoneNumber = initiatorOverridePhoneNumber;\r\n  }\r\n\r\n  /**\r\n   * This method is a convenience method for presenting this object as a JSON string\r\n   * @returns {String} a json string representation of this object suitable to be used as payload for request that updates an appointment\r\n   */\r\n  getAsJSONString() {\r\n    const request = {};\r\n    request.initiatorOverridePhoneNumber = this.initiatorOverridePhoneNumber || undefined;\r\n    return JSON.stringify(request);\r\n  }\r\n}\r\nexport default AWSDKAppointmentUpdateRequest;\r\n","/*!\n * American Well Consumer Web SDK\n *\n * Copyright (c) 2018 American Well.\n * All rights reserved.\n *\n * It is illegal to use, reproduce or distribute\n * any part of this Intellectual Property without\n * prior written authorization from American Well.\n */\nimport GenericParser from '../../internal/parser/generic_parser';\nimport Util from '../../internal/util/util';\nimport AWSDKError from '../../error/awsdk_error';\nimport AWSDKAppointment from './awsdk_appointment';\n\n\n/**\n * This class should be used to update an appointment readiness. Get an instance of this class by calling {@see service.AppointmentService#getNewAppointmentReadinessRequest|AppointmentService.getNewAppointmentReadinessRequest}\n * @property {Date} datePassedTechCheck the date the consumer passed the tech check\n * @property {Boolean} microphonePassed a boolean describing whether or not the microphone test was successfully completed\n * @property {Boolean} speakerPassed a boolean describing whether or not the speaker test was successfully completed\n * @property {Boolean} cameraPassed a boolean describing whether or not the camera test was successfully completed\n * @property {Number} downloadSpeedMbps the numeric value representing the download speed registered by the testing tool\n * @property {Number} uploadSpeedMbps the numeric float value representing the upload speed registered by the testing tool\n * @property {Number} latencyMs the numeric float value representing the latency registered by the testing tool\n * @property {Number} jitter the numeric integer value representing the variation in latency on a packet flow between two systems\n * @property {String} microphoneDeviceName the string name of the microphone device\n * @property {String} speakerDeviceName the string name of the speaker device\n * @property {String} cameraDeviceName the string name of the front-facing camera\n * @property {String} sourceId the source id for this appointment readiness request\n * @property {Boolean} techCheckPassed a boolean defining whether or not tech check passed\n * @property {model.AWSDKAppointment} appointment the appointment associated with the readiness test\n * @since 1.4.0\n */\nclass AWSDKAppointmentReadinessRequest {\n  // getters\n  get datePassedTechCheck() {\n    return this.__datePassedTechCheck;\n  }\n  get microphonePassed() {\n    return GenericParser.parseBoolean(this.__microphonePassed);\n  }\n  get speakerPassed() {\n    return GenericParser.parseBoolean(this.__speakerPassed);\n  }\n  get cameraPassed() {\n    return GenericParser.parseBoolean(this.__cameraPassed);\n  }\n  get downloadSpeedMbps() {\n    return this.__downloadSpeedMbps;\n  }\n  get uploadSpeedMbps() {\n    return this.__uploadSpeedMbps;\n  }\n  get latencyMs() {\n    return this.__latencyMs;\n  }\n  get jitter() {\n    return this.__jitter;\n  }\n  get microphoneDeviceName() {\n    return this.__microphoneDeviceName;\n  }\n  get cameraDeviceName() {\n    return this.__cameraDeviceName;\n  }\n  get speakerDeviceName() {\n    return this.__speakerDeviceName;\n  }\n  get appointment() {\n    return this.__appointment;\n  }\n  get techCheckPassed() {\n    return GenericParser.parseBoolean(this.__techCheckPassed);\n  }\n  get sourceId() {\n    return this.__sourceId;\n  }\n  // setters\n  set datePassedTechCheck(datePassed) {\n    this.__datePassedTechCheck = datePassed;\n  }\n  set microphonePassed(isMicTestPassed) {\n    this.__microphonePassed = isMicTestPassed;\n  }\n  set speakerPassed(isSpeakerTestPassed) {\n    this.__speakerPassed = isSpeakerTestPassed;\n  }\n  set cameraPassed(isCameraTestPassed) {\n    this.__cameraPassed = isCameraTestPassed;\n  }\n  set downloadSpeedMbps(downloadSpeed) {\n    this.__downloadSpeedMbps = downloadSpeed;\n  }\n  set uploadSpeedMbps(uploadSpeed) {\n    this.__uploadSpeedMbps = uploadSpeed;\n  }\n  set latencyMs(latency) {\n    this.__latencyMs = latency;\n  }\n  set jitter(jitter) {\n    this.__jitter = jitter;\n  }\n  set microphoneDeviceName(micName) {\n    this.__microphoneDeviceName = micName;\n  }\n  set cameraDeviceName(cameraName) {\n    this.__cameraDeviceName = cameraName;\n  }\n  set speakerDeviceName(speakerName) {\n    this.__speakerDeviceName = speakerName;\n  }\n  set sourceId(sourceId) {\n    this.__sourceId = sourceId;\n  }\n  set techCheckPassed(techCheckPassed) {\n    this.__techCheckPassed = techCheckPassed;\n  }\n  set appointment(appointment) {\n    if (!(appointment instanceof AWSDKAppointment)) {\n      throw AWSDKError.AWSDKIllegalArgument('appointment must be instance of AWSDKAppointment');\n    }\n    this.__appointment = appointment;\n  }\n  /**\n   * @private\n   */\n  __getAsRequestBody() {\n    const res = {};\n    if (this.__datePassedTechCheck) res.datePassedTechCheck = Util.formatISODateTime(this.__datePassedTechCheck);\n    res.microphonePassed = this.microphonePassed;\n    res.speakerPassed = this.speakerPassed;\n    res.cameraPassed = this.cameraPassed;\n    res.techCheckPassed = this.techCheckPassed;\n    res.downloadSpeedMbps = this.__downloadSpeedMbps;\n    res.uploadSpeedMbps = this.__uploadSpeedMbps;\n    res.latencyMs = this.__latencyMs;\n    res.jitter = this.__jitter;\n    res.microphoneDeviceName = this.__microphoneDeviceName;\n    res.speakerDeviceName = this.__speakerDeviceName;\n    res.cameraDeviceName = this.__cameraDeviceName;\n    res.sourceId = this.__sourceId;\n    res.engagementId = this.__appointment && this.__appointment.id.encryptedId;\n    return JSON.stringify(res);\n  }\n}\nexport default AWSDKAppointmentReadinessRequest;\n","/*!\n * American Well Consumer Web SDK\n *\n * Copyright © 2018 American Well.\n * All rights reserved.\n *\n * It is illegal to use, reproduce or distribute\n * any part of this Intellectual Property without\n * prior written authorization from American Well.\n */\nimport deprecated from 'awcoresdk/lib/util/deprecated';\nimport AWSDKAppointment from '../model/appointment/awsdk_appointment';\nimport AWSDKAppointmentResponse from '../internal/model/response/awsdk_appointment_response';\nimport AWSDKAppointmentReadinessResponse from '../internal/model/response/awsdk_appointment_readiness_response';\nimport AWSDKAppointmentsResponse from '../internal/model/response/awsdk_appointments_response';\nimport AWSDKConsumer from '../model/consumer/awsdk_consumer';\nimport AWSDKError from '../error/awsdk_error';\nimport AWSDKProvider from '../model/provider/awsdk_provider';\nimport AWSDKReminderOption from '../model/appointment/awsdk_reminder_option';\nimport AWSDKResponse from '../internal/model/response/awsdk_response';\nimport Service from './service';\nimport Validator from '../internal/validator/validator';\nimport Util from '../internal/util/util';\nimport AWSDKAppointmentUpdateRequest from '../model/appointment/awsdk_appointment_update_request';\nimport AWSDKAppointmentReadinessRequest from '../model/appointment/awsdk_appointment_readiness_request';\nimport AWSDKVisit from '../model/visit/awsdk_visit';\nimport AWSDKVisitReportDetail from '../model/visit/awsdk_visit_report_detail';\n\n\n/**\n * This service handles everything related to an {@link model.AWSDKAppointment|AWSDKAppointment} and supporting infrastructure\n *\n * @since 1.1.0\n * @hideconstructor\n * @extends service.Service\n */\nclass AppointmentService extends Service {\n  constructor(props) {\n    super(props);\n    this.__systemConfiguration = props.systemConfiguration;\n  }\n\n  /**\n   * Retrieves a list of {@link model.AWSDKAppointment|AWSDKAppointment} objects pertaining to a {@link model.AWSDKConsumer|AWSDKConsumer}\n   * @param {model.AWSDKConsumer} consumer the {@link model.AWSDKConsumer|AWSDKConsumer} whose appointments to retrieve\n   * @returns {Promise<model.AWSDKAppointment[]|error.AWSDKError>} a Promise that resolves to a list of {@link model.AWSDKAppointment|AWSDKAppointment} or is rejected with a {@link error.AWSDKError|AWSDKError}\n   * <p><br>Potential Error Codes<br>\n   * <table summary=\"ErrorCodes\" border=\"1\">\n   * <thead>\n   * <tr><th>Error Code</th><th>reason</th></tr>\n   * </thead>\n   * <tbody>\n   * <tr><td>{@link error.AWSDKErrorCode.consumerNotAuthenticated|AWSDKErrorCode.consumerNotAuthenticated}</td><td>Consumer is not authenticated.</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.illegalArgument|AWSDKErrorCode.illegalArgument}</td><td>A parameter is not the correct type.</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.internalError|AWSDKErrorCode.internalError}</td><td>The AWSDK could not complete the request.</td></tr>\n   * </tbody>\n   * </table>\n   * @since 1.1.0\n   */\n  getAppointments(consumer) {\n    const currentFunction = 'AppointmentService.getAppointments';\n    this.__logger.debug(currentFunction, 'Started', consumer);\n    if (consumer == null) {\n      const error = AWSDKError.AWSDKIllegalArgument('consumer argument is null');\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    if (!(consumer instanceof AWSDKConsumer)) {\n      const error = AWSDKError.AWSDKIllegalArgument('consumer argument is not of type AWSDKConsumer');\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    const link = this.findNamedLink(consumer.links, 'appointments');\n    if (!Validator.isValidLink(link)) {\n      const error = AWSDKError.AWSDKInternalError('consumer does not have a valid \"appointments\" link entry');\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    const options = this.generateOptions('GET', link.url, false);\n    options.auth = this.getUserAuth(consumer);\n    if (!options.auth) {\n      const error = AWSDKError.AWSDKConsumerNotAuthenticated();\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    return this.executeRequest(options, AWSDKAppointmentsResponse)\n      .then((response) => {\n        this.__logger.debug(currentFunction, 'Got response', response);\n        this.updateUserAuthEntry(consumer, response.authToken);\n        return response.appointments;\n      })\n      .catch((error) => {\n        this.__logger.error(currentFunction, 'Error', error);\n        throw error;\n      });\n  }\n\n  /**\n   * This method will get an updated Appointment\n   * @param {model.AWSDKAppointment} appointment is the object that was created by a call to caretalks.\n   * @returns {Promise<model.AWSDKAppointment|error.AWSDKError>} Returns a promise that will be resolved to an {@link model.AWSDKAppointment|AWSDKAppointment} or will\n   * be rejected with an {@link error.AWSDKError|AWSDKError}.\n   * <p><br>Potential Error Codes<br>\n   * <table summary=\"ErrorCodes\" border=\"1\">\n   * <tr><th>Error Code</th><th>reason</th>\n   * <tr><td>{@link error.AWSDKErrorCode.consumerNotAuthenticated|AWSDKErrorCode.consumerNotAuthenticated}</td><td>Consumer is not authenticated.</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.illegalArgument|AWSDKErrorCode.illegalArgument}</td><td>A parameter is not the correct type.</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.internalError|AWSDKErrorCode.internalError}</td><td>The AWSDK could not complete the request.</td></tr>\n   * </table>\n   * @since 1.1.0\n   */\n  getAppointment(appointment) {\n    const currentFunction = 'AppointmentService.getAppointment';\n    this.__logger.debug(currentFunction, 'Started', appointment);\n    if (appointment == null) {\n      const error = AWSDKError.AWSDKIllegalArgument('appointment argument is null');\n      this.__logger.error(currentFunction, 'error', error);\n      return Promise.reject(error);\n    }\n    if (!(appointment instanceof AWSDKAppointment)) {\n      const error = AWSDKError.AWSDKIllegalArgument('appointment argument is not of type AWSDKAppointment');\n      this.__logger.error(currentFunction, 'error', error);\n      return Promise.reject(error);\n    }\n    const options = this.generateOptions('GET', appointment.href, false);\n    options.auth = this.getUserAuth(appointment.consumer);\n    if (options.auth == null) {\n      const error = AWSDKError.AWSDKConsumerNotAuthenticated();\n      this.__logger.error(currentFunction, 'error', error);\n      return Promise.reject(error);\n    }\n    return this.executeRequest(options, AWSDKAppointmentResponse)\n      .then((appointmentResponse) => {\n        this.updateUserAuthEntry(appointment.consumer, appointmentResponse.authToken);\n        this.__logger.debug(currentFunction, 'Got response', appointmentResponse);\n        const updatedAppointment = appointmentResponse.appointment;\n        return updatedAppointment;\n      })\n      .catch((error) => {\n        this.__logger.error(currentFunction, 'error', error);\n        throw error;\n      });\n  }\n\n  /**\n   * Returns an array of {@link model.AWSDKReminderOption|AWSDKReminderOption} that can be used when scheduling an appointment\n   * @since 1.1.0\n   * @type {model.AWSDKReminderOption}\n   */\n  get reminderOptions() {\n    return this.__systemConfiguration.reminderOptions;\n  }\n\n  __findReminderOption(value) {\n    return this.reminderOptions.find(reminder => reminder.value === value);\n  }\n\n  /**\n   * [DEPRECATED] Schedule an appointment for the given {@link model.AWSDKConsumer} with the given {@link mode.AWSDKProvider} at the given appointment date.<br>\n   * Retrieve the Provider's available dates via {@link ProviderService#findFutureAvailableProviders} or {@link ProviderService#getProviderAvailability}\n   * @param {model.AWSDKConsumer} consumer the {@link model.AWSDKConsumer|AWSDKConsumer} to schedule the appointment for\n   * @param {model.AWSDKProvider} provider the {@link model.AWSDKProvider|AWSDKProvider} to schedule the appointment with\n   * @param {Date} appointmentDate requested Date for appointment\n   * @param {String} [phoneNumber] contact phone number\n   * @param {model.AWSDKReminder|String} [consumerReminder] a {@link model.AWSDKReminderOption|AWSDKReminderOption} or valid value.\n   * @param {model.AWSDKReminder|String} [providerReminder] a {@link model.AWSDKReminderOption|AWSDKReminderOption} or valid value.\n   * @param {model.AWSDKVisit|model.AWSDKVisitReportDetail} [reconnectFromVisit] the {@link model.AWSDKVisit|AWSDKVisit} or {@link model.AWSDKVisitReportDetail|AWSDKVisitReportDetail} to use for reconnecting\n   * @returns {Promise<boolean|error.AWSDKError>} a promise that will resolve to a boolean indicating success, or rejected with an {@link error.AWSDKError|AWSDKError}\n   * <p><br>Potential Error Codes<br>\n   * <table summary=\"ErrorCodes\" border=\"1\">\n   * <tr><th>Error Code</th><th>reason</th>\n   * <tr><td>{@link error.AWSDKErrorCode.consumerNotAuthenticated|AWSDKErrorCode.consumerNotAuthenticated}</td><td>Consumer is not authenticated.</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.illegalArgument|AWSDKErrorCode.illegalArgument}</td><td>A parameter is not the correct type.</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.internalError|AWSDKErrorCode.internalError}</td><td>The AWSDK could not complete the request.</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.providerNotFound|AWSDKErrorCode.providerNotFound}</td><td>The American Well telehealth platform cannot find the provider</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.dependentNotFound|AWSDKErrorCode.dependentNotFound}</td><td>The American Well telehealth platform cannot find the dependent</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.invalidReminderOption|AWSDKErrorCode.invalidReminderOption}</td><td>The consumer or provider reminder does not match an allowable reminder option</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.invalidDate|AWSDKErrorCode.invalidDate}</td><td>The appointment date is invalid</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.invalidDateFormat|AWSDKErrorCode.invalidDateFormat}</td><td>The appointment date is invalid</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.invalidEnum|AWSDKErrorCode.invalidEnum}</td><td>The consumer or provider reminder would be in the past</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.invalidEnumFormat|AWSDKErrorCode.invalidEnumFormat}</td><td>The consumer or provider reminder is not a valid value</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.scheduleAppointmentFailed|AWSDKErrorCode.scheduleAppointmentFailed}</td><td>The American Well telehealth platform failed to schedule the appointment</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.validationError|AWSDKErrorCode.validationError}</td><td>The provider phone number is in an invalid format</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.visitInvalid|AWSDKErrorCode.visitInvalid}</td><td>The visit used for reconnect has an incorrect disposition</td></tr>\n   * </table>\n   * <p><br>Supported Visit Dispositions:</br>\n   * <ul>\n   * <li>{@link model.AWSDKDisposition.ConsumerDisconnected|ConsumerDisconnected}</li>\n   * <li>{@link model.AWSDKDisposition.ConsumerCanceled|ConsumerCanceled}</li>\n   * <li>{@link model.AWSDKDisposition.Deleted|Deleted}</li>\n   * <li>{@link model.AWSDKDisposition.ProviderResponseTimeout|ProviderResponseTimeout}</li>\n   * <li>{@link model.AWSDKDisposition.Bailed|Bailed}</li>\n   * <li>{@link model.AWSDKDisposition.ProviderDisconnected|ProviderDisconnected}</li>\n   * <li>{@link model.AWSDKDisposition.ProviderCanceled|ProviderCanceled}</li>\n   * <li>{@link model.AWSDKDisposition.Expired|Expired}</li>\n   * </ul>\n   * </p>\n   * @since 1.1.0\n   * @deprecated\n   */\n  scheduleAppointment(consumer, provider, appointmentDate, phoneNumber = null, consumerReminder = null, providerReminder = null, reconnectFromVisit = null) {\n    const currentFunction = 'AppointmentService.scheduleAppointment';\n    deprecated(currentFunction, 'Invoke the AppointmentService.schedule function instead', '3.X');\n    const options = {\n      provider,\n      appointmentDate,\n      phoneNumber,\n      consumerReminder,\n      providerReminder,\n      reconnectFromVisit,\n    };\n    return this.schedule(consumer, options);\n  }\n\n  /**\n   * Schedule an appointment for the given {@link model.AWSDKConsumer} with the given {@link mode.AWSDKProvider} at the given appointment date.<br>\n   * Retrieve the Provider's available dates via {@link ProviderService#findFutureAvailableProviders} or {@link ProviderService#getProviderAvailability}\n   * @param {model.AWSDKConsumer} consumer the {@link model.AWSDKConsumer|AWSDKConsumer} to schedule the appointment for\n   * @param {Object} options additional options, some required, for scheduling the visit\n   * @param {model.AWSDKProvider} options.provider the {@link model.AWSDKProvider|AWSDKProvider} to schedule the appointment with\n   * @param {Date} options.appointmentDate requested Date for appointment\n   * @param {String} [options.phoneNumber] contact phone number\n   * @param {model.AWSDKReminder|String} [options.consumerReminder] a {@link model.AWSDKReminderOption|AWSDKReminderOption} or valid value.\n   * @param {model.AWSDKReminder|String} [options.providerReminder] a {@link model.AWSDKReminderOption|AWSDKReminderOption} or valid value.\n   * @param {model.AWSDKVisit|model.AWSDKVisitReportDetail} [options.reconnectFromVisit] the {@link model.AWSDKVisit|AWSDKVisit} or {@link model.AWSDKVisitReportDetail|AWSDKVisitReportDetail} to use for reconnecting\n   * @returns {Promise<boolean|error.AWSDKError>} a promise that will resolve to a boolean indicating success, or rejected with an {@link error.AWSDKError|AWSDKError}\n   * <p><br>Potential Error Codes<br>\n   * <table summary=\"ErrorCodes\" border=\"1\">\n   * <tr><th>Error Code</th><th>reason</th>\n   * <tr><td>{@link error.AWSDKErrorCode.consumerNotAuthenticated|AWSDKErrorCode.consumerNotAuthenticated}</td><td>Consumer is not authenticated.</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.illegalArgument|AWSDKErrorCode.illegalArgument}</td><td>A parameter is not the correct type.</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.internalError|AWSDKErrorCode.internalError}</td><td>The AWSDK could not complete the request.</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.providerNotFound|AWSDKErrorCode.providerNotFound}</td><td>The American Well telehealth platform cannot find the provider</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.dependentNotFound|AWSDKErrorCode.dependentNotFound}</td><td>The American Well telehealth platform cannot find the dependent</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.invalidReminderOption|AWSDKErrorCode.invalidReminderOption}</td><td>The consumer or provider reminder does not match an allowable reminder option</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.invalidDate|AWSDKErrorCode.invalidDate}</td><td>The appointment date is invalid</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.invalidDateFormat|AWSDKErrorCode.invalidDateFormat}</td><td>The appointment date is invalid</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.invalidEnum|AWSDKErrorCode.invalidEnum}</td><td>The consumer or provider reminder would be in the past</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.invalidEnumFormat|AWSDKErrorCode.invalidEnumFormat}</td><td>The consumer or provider reminder is not a valid value</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.scheduleAppointmentFailed|AWSDKErrorCode.scheduleAppointmentFailed}</td><td>The American Well telehealth platform failed to schedule the appointment</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.validationError|AWSDKErrorCode.validationError}</td><td>The provider phone number is in an invalid format</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.visitInvalid|AWSDKErrorCode.visitInvalid}</td><td>The visit used for reconnect has an invalid disposition</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.providerNotLicensedForConsumerLocation|AWSDKErrorCode.providerNotLicensedForConsumerLocation}</td><td>The provider is not licensed for the consumer's current location</td></tr>\n   * </table>\n   * <p><br>Supported Visit Dispositions:</br>\n   * <ul>\n   * <li>{@link model.AWSDKDisposition.ConsumerDisconnected|ConsumerDisconnected}</li>\n   * <li>{@link model.AWSDKDisposition.ConsumerCanceled|ConsumerCanceled}</li>\n   * <li>{@link model.AWSDKDisposition.Deleted|Deleted}</li>\n   * <li>{@link model.AWSDKDisposition.ProviderResponseTimeout|ProviderResponseTimeout}</li>\n   * <li>{@link model.AWSDKDisposition.Bailed|Bailed}</li>\n   * <li>{@link model.AWSDKDisposition.ProviderDisconnected|ProviderDisconnected}</li>\n   * <li>{@link model.AWSDKDisposition.ProviderCanceled|ProviderCanceled}</li>\n   * <li>{@link model.AWSDKDisposition.Expired|Expired}</li>\n   * </ul>\n   * </p>\n   * @since 2.3.0\n   */\n  schedule(consumer, options) {\n    const currentFunction = 'VisitService.schedule';\n    this.__logger.debug(currentFunction, 'Started', consumer);\n    if (!(consumer instanceof AWSDKConsumer)) {\n      const error = AWSDKError.AWSDKIllegalArgument('consumer must be an instance of AWSDKConsumer');\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    if (options == null) {\n      const error = AWSDKError.AWSDKIllegalArgument('options must be an object literal');\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    const { provider, appointmentDate, phoneNumber, consumerReminder, providerReminder, reconnectFromVisit } = options;\n    if (!(provider instanceof AWSDKProvider)) {\n      const error = AWSDKError.AWSDKIllegalArgument('provider argument must be an instance of AWSDKProvider');\n      this.__logger.error(currentFunction, 'error', error);\n      return Promise.reject(error);\n    }\n    if (!(appointmentDate instanceof Date)) {\n      const error = AWSDKError.AWSDKIllegalArgument('appointmentDate must be an instance of Date');\n      this.__logger.error(currentFunction, 'error', error);\n      return Promise.reject(error);\n    }\n    if (Validator.isValidString(phoneNumber) && !Validator.isPhoneNumberValid(phoneNumber)) {\n      const error = AWSDKError.AWSDKValidationError(phoneNumber);\n      this.__logger.error(currentFunction, 'error', error);\n      return Promise.reject(error);\n    }\n    if (reconnectFromVisit != null && (!(reconnectFromVisit instanceof AWSDKVisit || reconnectFromVisit instanceof AWSDKVisitReportDetail))) {\n      const error = AWSDKError.AWSDKIllegalArgument('reconnectFromVisit argument must be an instance of AWSDKVisit or AWSDKVisitReportDetail');\n      this.__logger.error(currentFunction, 'error', error);\n      return Promise.reject(error);\n    }\n    const consumerReminderOption = this.__resolveReminderOption(consumerReminder);\n    if (consumerReminder != null && consumerReminderOption == null) {\n      const error = AWSDKError.AWSDKInvalidReminderOption('consumerReminder is not a valid reminderOption');\n      this.__logger.error(currentFunction, 'error', error);\n      return Promise.reject(error);\n    }\n    const providerReminderOption = this.__resolveReminderOption(providerReminder, 'providerReminder', currentFunction);\n    if (providerReminder != null && providerReminderOption == null) {\n      const error = AWSDKError.AWSDKInvalidReminderOption('providerReminder is not a valid reminderOption');\n      this.__logger.error(currentFunction, 'error', error);\n      return Promise.reject(error);\n    }\n    const link = this.findNamedLink(consumer.links, 'scheduleAppointment');\n    if (!Validator.isValidLink(link)) {\n      const error = AWSDKError.AWSDKInternalError('consumer does not have a valid \"scheduleAppointment\" link entry');\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    const opts = this.generateOptions('POST', link.url, true);\n    opts.auth = this.getUserAuth(consumer);\n    if (!opts.auth) {\n      const error = AWSDKError.AWSDKConsumerNotAuthenticated();\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    if (consumer.isDependent) {\n      opts.form.set('memberId', this.__fetchParentId(consumer).encryptedId);\n      opts.form.set('dependentId', consumer.id.encryptedId);\n    } else {\n      opts.form.set('memberId', consumer.id.encryptedId);\n    }\n    opts.form.set('providerId', provider.id.encryptedId);\n    opts.form.set('appointmentDate', Util.formatISODateTime(appointmentDate));\n    if (phoneNumber != null) {\n      opts.form.set('phoneNumber', phoneNumber);\n    }\n    if (consumerReminderOption != null) {\n      opts.form.set('memberReminder', consumerReminderOption.value);\n    }\n    if (providerReminderOption != null) {\n      opts.form.set('providerReminder', providerReminderOption.value);\n    }\n    if (reconnectFromVisit != null && reconnectFromVisit instanceof AWSDKVisit) {\n      opts.form.set('reconnectToEngagementId', reconnectFromVisit.id.encryptedId);\n    } else if (reconnectFromVisit != null && reconnectFromVisit instanceof AWSDKVisitReportDetail) {\n      opts.form.set('reconnectToEngagementId', reconnectFromVisit.__getEngagementId().encryptedId);\n    }\n    opts.headers.Accept = 'application/vnd.amwell-v3+json, application/json';\n    return this.executeRequest(opts, AWSDKResponse)\n      .then((response) => {\n        this.__logger.debug(currentFunction, 'Got response', response);\n        this.updateUserAuthEntry(consumer, response.authToken);\n        this.__logger.info(currentFunction, 'Completed');\n        return true;\n      })\n      .catch((error) => {\n        this.__logger.error(currentFunction, 'Error', error);\n        throw error;\n      });\n  }\n\n  /**\n   * @private\n   */\n  __resolveReminderOption(reminderOption) {\n    if (reminderOption instanceof AWSDKReminderOption) {\n      return reminderOption;\n    }\n    return this.__findReminderOption(reminderOption);\n  }\n\n  /**\n   * Retrieves an {@link model.AWSDKAppointmentReadiness|AWSDKAppointmentReadiness} object pertaining to a {@link model.AWSDKConsumer|AWSDKConsumer}\n   * @param {model.AWSDKConsumer} consumer the {@link model.AWSDKConsumer|AWSDKConsumer} whose appointment readiness to retrieve\n   * @returns {Promise<model.AWSDKAppointmentReadiness|error.AWSDKError>} a Promise that resolves to an {@link model.AWSDKAppointmentReadiness|AWSDKAppointmentReadiness} or is rejected with an {@link error.AWSDKError|AWSDKError}\n   * <p><br>Potential Error Codes<br>\n   * <table summary=\"ErrorCodes\" border=\"1\">\n   * <thead>\n   * <tr><th>Error Code</th><th>reason</th></tr>\n   * </thead>\n   * <tbody>\n   * <tr><td>{@link error.AWSDKErrorCode.consumerNotAuthenticated|AWSDKErrorCode.consumerNotAuthenticated}</td><td>Consumer is not authenticated.</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.illegalArgument|AWSDKErrorCode.illegalArgument}</td><td>A parameter is not the correct type.</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.internalError|AWSDKErrorCode.internalError}</td><td>The AWSDK could not complete the request.</td></tr>\n   * </tbody>\n   * </table>\n   * @since 1.1.0\n   */\n  getAppointmentReadiness(consumer) {\n    const currentFunction = 'AppointmentService.getAppointmentReadiness';\n    this.__logger.debug(currentFunction, 'Started', consumer);\n    if (consumer == null) {\n      const error = AWSDKError.AWSDKIllegalArgument('consumer argument is null');\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    if (!(consumer instanceof AWSDKConsumer)) {\n      const error = AWSDKError.AWSDKIllegalArgument('consumer argument is not of type AWSDKConsumer');\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    const link = this.findNamedLink(consumer.links, 'appointmentReadiness');\n    if (!Validator.isValidLink(link)) {\n      const error = AWSDKError.AWSDKInternalError('consumer does not have a valid \"appointmentReadiness\" link entry');\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    const options = this.generateOptions('GET', link.url, false);\n    options.auth = this.getUserAuth(consumer);\n    if (!options.auth) {\n      const error = AWSDKError.AWSDKConsumerNotAuthenticated();\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    return this.executeRequest(options, AWSDKAppointmentReadinessResponse)\n      .then((response) => {\n        this.__logger.debug(currentFunction, 'Got response', response);\n        this.updateUserAuthEntry(consumer, response.authToken);\n        return response.appointmentReadiness;\n      })\n      .catch((error) => {\n        this.__logger.error(currentFunction, 'Error', error);\n        throw error;\n      });\n  }\n\n  /**\n   * @deprecated use {@see service.AppointmentService#updateReadiness(appointmentReadinessRequest)|AppointmentService.updateReadiness(appointmentReadinessRequest)}\n   * Updates the {@link model.AWSDKAppointmentReadiness|AWSDKAppointmentReadiness} object pertaining to a {@link model.AWSDKConsumer|AWSDKConsumer}\n   * @param {model.AWSDKAppointment} appointment the {@link model.AWSDKAppointment|AWSDKAppointment} to change the readiness for\n   * @param {Boolean} [techCheckPassed] whether or not the tech check has been passed\n   * @returns {Promise<model.AWSDKAppointmentReadiness|error.AWSDKError>} a Promise that resolves to an {@link model.AWSDKAppointmentReadiness|AWSDKAppointmentReadiness} or is rejected with an {@link error.AWSDKError|AWSDKError}\n   * <p><br>Potential Error Codes<br>\n   * <table summary=\"ErrorCodes\" border=\"1\">\n   * <thead>\n   * <tr><th>Error Code</th><th>reason</th></tr>\n   * </thead>\n   * <tbody>\n   * <tr><td>{@link error.AWSDKErrorCode.consumerNotAuthenticated|AWSDKErrorCode.consumerNotAuthenticated}</td><td>Consumer is not authenticated.</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.illegalArgument|AWSDKErrorCode.illegalArgument}</td><td>A parameter is not the correct type.</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.internalError|AWSDKErrorCode.internalError}</td><td>The AWSDK could not complete the request.</td></tr>\n   * </tbody>\n   * </table>\n   * @since 1.1.0\n   */\n  updateAppointmentReadiness(appointment, techCheckPassed) {\n    const currentFunction = 'AppointmentService.updateAppointmentReadiness';\n    deprecated(currentFunction, 'Invoke the AppointmentService.updateReadiness function instead', '3.X');\n    this.__logger.debug(currentFunction, 'Started', appointment, techCheckPassed);\n    if (appointment == null) {\n      const error = AWSDKError.AWSDKIllegalArgument('appointment argument is null');\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    if (!(appointment instanceof AWSDKAppointment)) {\n      const error = AWSDKError.AWSDKIllegalArgument('appointment argument is not of type AWSDKAppointment');\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    const consumer = appointment.consumer;\n    if (consumer == null) {\n      const error = AWSDKError.AWSDKInternalError('appointment\\'s consumer is null');\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    const link = this.findNamedLink(consumer.links, 'appointmentReadiness');\n    if (!Validator.isValidLink(link)) {\n      const error = AWSDKError.AWSDKInternalError('consumer does not have a valid \"appointmentReadiness\" link entry');\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    const options = this.generateOptions('PUT', link.url);\n    options.auth = this.getUserAuth(consumer);\n    if (!options.auth) {\n      const error = AWSDKError.AWSDKConsumerNotAuthenticated();\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    options.form.set('engagementId', appointment.id.encryptedId);\n    options.form.set('techCheckPassed', techCheckPassed);\n    return this.executeRequest(options, AWSDKAppointmentReadinessResponse)\n      .then((response) => {\n        this.__logger.debug(currentFunction, 'Got response', response);\n        this.updateUserAuthEntry(consumer, response.authToken);\n        return response.appointmentReadiness;\n      })\n      .catch((error) => {\n        this.__logger.error(currentFunction, 'Error', error);\n        throw error;\n      });\n  }\n\n  /**\n  * Finds an {@link model.AWSDKAppointment|AWSDKAppointment} object for a given visit id\n  * @param {model.AWSDKConsumer} consumer the {@link model.AWSDKConsumer|AWSDKConsumer} whose appointment to retrieve\n  * @param {String} visitId the visit id\n  * @returns {Promise<model.AWSDKAppointment|error.AWSDKError>} a Promise that resolves to an {@link model.AWSDKAppointment|AWSDKAppointment} or is rejected with a {@link error.AWSDKError|AWSDKError}\n  * <p><br>Potential Error Codes<br>\n  * <table summary=\"ErrorCodes\" border=\"1\">\n  * <thead>\n  * <tr><th>Error Code</th><th>reason</th></tr>\n  * </thead>\n  * <tbody>\n  * <tr><td>{@link error.AWSDKErrorCode.consumerNotAuthenticated|AWSDKErrorCode.consumerNotAuthenticated}</td><td>Consumer is not authenticated.</td></tr>\n  * <tr><td>{@link error.AWSDKErrorCode.illegalArgument|AWSDKErrorCode.illegalArgument}</td><td>A parameter is not the correct type.</td></tr>\n  * <tr><td>{@link error.AWSDKErrorCode.internalError|AWSDKErrorCode.internalError}</td><td>The AWSDK could not complete the request.</td></tr>\n  * <tr><td>{@link error.AWSDKErrorCode.appointmentNotFound|AWSDKErrorCode.appointmentNotFound}</td><td>The AWSDK could not find the appointment.</td></tr>\n  * </tbody>\n  * </table>\n  * @since 1.1.0\n  */\n  findAppointment(consumer, visitId) {\n    const currentFunction = 'AppointmentService.findAppointment';\n    this.__logger.debug(currentFunction, 'Started', consumer, visitId);\n    if (!Validator.isValidString(visitId)) {\n      const error = AWSDKError.AWSDKIllegalArgument('visitId argument is not a valid string');\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    return this.__findAppointment(consumer, visitId, null);\n  }\n\n  /**\n   * Finds an {@link model.AWSDKAppointment|AWSDKAppointment} object for a given source id\n   * @param {model.AWSDKConsumer} consumer the {@link model.AWSDKConsumer|AWSDKConsumer} whose appointment to retrieve\n   * @param {String} sourceId the source id\n   * @returns {Promise<model.AWSDKAppointment|error.AWSDKError>} a Promise that resolves to an {@link model.AWSDKAppointment|AWSDKAppointment} or is rejected with a {@link error.AWSDKError|AWSDKError}\n   * <p><br>Potential Error Codes<br>\n   * <table summary=\"ErrorCodes\" border=\"1\">\n   * <thead>\n   * <tr><th>Error Code</th><th>reason</th></tr>\n   * </thead>\n   * <tbody>\n   * <tr><td>{@link error.AWSDKErrorCode.consumerNotAuthenticated|AWSDKErrorCode.consumerNotAuthenticated}</td><td>Consumer is not authenticated.</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.illegalArgument|AWSDKErrorCode.illegalArgument}</td><td>A parameter is not the correct type.</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.internalError|AWSDKErrorCode.internalError}</td><td>The AWSDK could not complete the request.</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.appointmentNotFound|AWSDKErrorCode.appointmentNotFound}</td><td>The AWSDK could not find the appointment.</td></tr>\n   * </tbody>\n   * </table>\n   * @since 1.2.0\n   */\n  findAppointmentBySourceId(consumer, sourceId) {\n    const currentFunction = 'AppointmentService.findAppointmentBySourceId';\n    this.__logger.debug(currentFunction, 'Started', consumer, sourceId);\n    if (!Validator.isValidString(sourceId)) {\n      const error = AWSDKError.AWSDKIllegalArgument('sourceId argument is not a valid string');\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    return this.__findAppointment(consumer, null, sourceId);\n  }\n\n  __findAppointment(consumer, visitId, sourceId) {\n    const currentFunction = 'AppointmentService.__findAppointment';\n    this.__logger.debug(currentFunction, 'Started', consumer, visitId, sourceId);\n    if (consumer == null) {\n      const error = AWSDKError.AWSDKIllegalArgument('consumer argument is null');\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    if (!(consumer instanceof AWSDKConsumer)) {\n      const error = AWSDKError.AWSDKIllegalArgument('consumer argument is not of type AWSDKConsumer');\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    const link = this.findNamedLink(consumer.links, 'appointmentDeepLink');\n    if (!Validator.isValidLink(link)) {\n      const error = AWSDKError.AWSDKInternalError('consumer does not have a valid \"appointmentDeepLink\" link entry');\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    const options = this.generateOptions('GET', link.url);\n    options.auth = this.getUserAuth(consumer);\n    if (!options.auth) {\n      const error = AWSDKError.AWSDKConsumerNotAuthenticated();\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n\n    if (visitId) {\n      options.form.set('visitId', visitId);\n    } else if (sourceId) {\n      options.form.set('visitSourceId', sourceId);\n    }\n\n    return this.executeRequest(options, AWSDKAppointmentResponse)\n      .then((response) => {\n        this.__logger.debug(currentFunction, 'Got response', response);\n        this.updateUserAuthEntry(consumer, response.authToken);\n        return response.appointment;\n      })\n      .catch((error) => {\n        this.__logger.error(currentFunction, 'Error', error);\n        throw error;\n      });\n  }\n\n  /**\n   * Cancels a scheduled {@link model.AWSDKAppointment|AWSDKAppointment}\n   * @param {model.AWSDKAppointment} appointment the {@link model.AWSDKAppointment|AWSDKAppointment} to cancel\n   * @returns {Promise<boolean|error.AWSDKError>} a promise that will resolve to a boolean indicating success, or rejected with an {@link error.AWSDKError|AWSDKError}\n   * <p><br>Potential Error Codes<br>\n   * <table summary=\"ErrorCodes\" border=\"1\">\n   * <thead>\n   * <tr><th>Error Code</th><th>reason</th></tr>\n   * </thead>\n   * <tbody>\n   * <tr><td>{@link error.AWSDKErrorCode.consumerNotAuthenticated|AWSDKErrorCode.consumerNotAuthenticated}</td><td>Consumer is not authenticated.</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.illegalArgument|AWSDKErrorCode.illegalArgument}</td><td>A parameter is not the correct type.</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.internalError|AWSDKErrorCode.internalError}</td><td>The AWSDK could not complete the request.</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.visitNotFound|AWSDKErrorCode.visitNotFound}</td><td>The AWSDK could not find the visit.</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.responseError|AWSDKErrorCode.responseError}</td><td>A bad request was made to the server.</td></tr>\n   * </tbody>\n   * </table>\n   * @since 1.1.0\n   */\n  cancelAppointment(appointment) {\n    const currentFunction = 'AppointmentService.cancelAppointment';\n    this.__logger.debug(currentFunction, 'Started', appointment);\n    if (appointment == null) {\n      const error = AWSDKError.AWSDKIllegalArgument('appointment argument is null');\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    if (!(appointment instanceof AWSDKAppointment)) {\n      const error = AWSDKError.AWSDKIllegalArgument('appointment argument is not of type AWSDKAppointment');\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    const link = this.findNamedLink(appointment.links, 'cancelAppt');\n    if (!Validator.isValidLink(link)) {\n      const error = AWSDKError.AWSDKInternalError('appointment does not have a valid \"cancelAppt\" link entry');\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    const options = this.generateOptions('POST', link.url);\n    options.auth = this.getUserAuth(appointment.consumer);\n    if (!options.auth) {\n      const error = AWSDKError.AWSDKConsumerNotAuthenticated();\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    return this.executeRequest(options, AWSDKResponse)\n      .then((response) => {\n        this.__logger.debug(currentFunction, 'Got response', response);\n        this.updateUserAuthEntry(appointment.consumer, response.authToken);\n        return true;\n      })\n      .catch((error) => {\n        this.__logger.error(currentFunction, 'Error', error);\n        throw error;\n      });\n  }\n\n  /**\n   * Get an instance of {@link model.AWSDKAppointmentUpdateRequest|AWSDKAppointmentUpdateRequest} to use when updating an existing appointment. <br>\n   * @param {model.AWSDKAppointment} [appointment the appointment to be updated\n   * @returns {model.AWSDKAppointmentUpdateRequest} returns an instance of a {@link model.AWSDKAppointmentUpdateRequest|AWSDKAppointmentUpdateRequest} object\n   * <p><br>Potential Error Codes<br>\n   * <table summary=\"ErrorCodes\" border=\"1\">\n   * <thead>\n   * <tr><th>Error Code</th><th>reason</th></tr>\n   * </thead>\n   * <tbody>\n   * <tr><td>{@link error.AWSDKErrorCode.illegalArgument|AWSDKErrorCode.illegalArgument}</td><td>A parameter is not valid or is not of the correct type.</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.internalError|AWSDKErrorCode.internalError}</td><td>The AWSDK could not complete the request.</td></tr>\n   * </tbody>\n   * </table>\n   * @since 1.4.0\n   */\n  getNewAppointmentUpdateRequest(appointment) {\n    const currentFunction = 'AppointmentService.getNewAppointmentUpdateRequest';\n    if (!(appointment instanceof AWSDKAppointment)) {\n      const error = AWSDKError.AWSDKIllegalArgument('appointment argument is not of type AWSDKAppointment', 'appointment');\n      this.__logger.error(currentFunction, 'Error', error);\n      throw error;\n    }\n    if (!(appointment.consumer instanceof AWSDKConsumer)) {\n      const error = AWSDKError.AWSDKInternalError('appointment.consumer is not of type AWSDKConsumer');\n      this.__logger.error(currentFunction, 'Error', error);\n      throw error;\n    }\n    return new AWSDKAppointmentUpdateRequest(appointment);\n  }\n\n  /**\n   * Updates an appointment given an {@link model.AWSDKAppointmentUpdateRequest|AWSDKAppointmentUpdateRequest}.<br>\n   * @param {model.AWSDKAppointmentUpdateRequest} appointmentUpdateRequest the {@link model.AWSDKAppointmentUpdateRequest|AWSDKAppointmentUpdateRequest} containing the update request\n   * @returns {Promise<boolean|error.AWSDKError>} a promise that will resolve to a boolean indicating success, or rejected with an {@link error.AWSDKError|AWSDKError}\n   * <p><br>Potential Error Codes<br>\n   * <table summary=\"ErrorCodes\" border=\"1\">\n   * <tr><th>Error Code</th><th>reason</th>\n   * <tr><td>{@link error.AWSDKErrorCode.consumerNotAuthenticated|AWSDKErrorCode.consumerNotAuthenticated}</td><td>Consumer is not authenticated.</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.illegalArgument|AWSDKErrorCode.illegalArgument}</td><td>A parameter is not the correct type.</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.internalError|AWSDKErrorCode.internalError}</td><td>The AWSDK could not complete the request.</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.validationError|AWSDKErrorCode.validationError}</td><td>The provided phone number is in an invalid format</td></tr>\n   * </table>\n   * @since 1.4.0\n   */\n  updateAppointment(appointmentUpdateRequest) {\n    const currentFunction = 'AppointmentService.updateAppointment';\n    this.__logger.debug(currentFunction, 'Started', appointmentUpdateRequest);\n    if (!(appointmentUpdateRequest instanceof AWSDKAppointmentUpdateRequest)) {\n      const error = AWSDKError.AWSDKIllegalArgument('appointmentUpdateRequest argument is not of type AWSDKAppointmentUpdateRequest', 'appointmentUpdateRequest');\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    if (!(appointmentUpdateRequest.__appointment instanceof AWSDKAppointment)) {\n      const error = AWSDKError.AWSDKInternalError('appointment is not of type AWSDKAppointment', 'appointment');\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    const consumer = appointmentUpdateRequest.__appointment.consumer;\n    if (!(consumer instanceof AWSDKConsumer)) {\n      const error = AWSDKError.AWSDKIllegalArgument('consumer is not of type AWSDKConsumer', 'consumer');\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    if (Validator.isValidString(appointmentUpdateRequest.initiatorOverridePhoneNumber) && !Validator.isPhoneNumberValid(appointmentUpdateRequest.initiatorOverridePhoneNumber)) {\n      const error = AWSDKError.AWSDKValidationError(appointmentUpdateRequest.initiatorOverridePhoneNumber);\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    const link = appointmentUpdateRequest.__appointment.href;\n    if (!Validator.isValidString(link)) {\n      const error = AWSDKError.AWSDKInternalError('The appointmentUpdateRequest\\'s appointment does not contain a valid href property');\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    const options = this.generateOptions('PUT', link, false);\n    options.auth = this.getUserAuth(consumer);\n    if (!options.auth) {\n      const error = AWSDKError.AWSDKConsumerNotAuthenticated();\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    options.headers['Content-Type'] = 'application/json';\n    options.headers.Accept = 'application/vnd.amwell-v11.2+json, application/json';\n    options.body = appointmentUpdateRequest.getAsJSONString();\n    return this.executeRequest(options, AWSDKResponse)\n      .then((response) => {\n        this.__logger.debug(currentFunction, 'Got response', response);\n        this.updateUserAuthEntry(appointmentUpdateRequest.consumer, response.authToken);\n        return true;\n      })\n      .catch((error) => {\n        this.__logger.error(currentFunction, 'Error', error);\n        throw error;\n      });\n  }\n  /**\n   * This method returns an instance of the {@link model.AWSDKAppointmentReadinessRequest|AWSDKAppointmentReadinessRequest}\n   * @returns {model.AWSDKAppointmentReadinessRequest} an instance of the appointment readiness request object\n   */\n  getNewAppointmentReadinessRequest() {\n    return new AWSDKAppointmentReadinessRequest();\n  }\n\n  /**\n   * This method updates the appointment readiness for a given consumer\n   * @param {model.AWSDKConsumer} consumer the consumer to update appointment readiness for\n   * @param {model.AWSDKAppointmentReadinessRequest} appointmentReadinessRequest the appointment readiness request\n   * @returns {Promise<model.AWSDKAppointmentReadiness|error.AWSDKError>} returns a promise that will be resolved to a {@link model.AWSDKAppointmentReadiness|AWSDKAppointmentReadiness} <br>\n   * or rejected with an {@link error.AWSDKError|AWSDKError}\n   * <p><br>Potential Error Codes<br>\n   * <table summary=\"ErrorCodes\" border=\"1\">\n   * <thead>\n   * <tr><th>Error Code</th><th>reason</th></tr>\n   * </thead>\n   * <tbody>\n   * <tr><td>{@link error.AWSDKErrorCode.validationErrors|AWSDKErrorCode.validationErrors}</td><td>If any of the appointmentReadinessRequest values are invalid. The errors property will return the array of validation errors.</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.consumerNotAuthenticated|AWSDKErrorCode.consumerNotAuthenticated}</td><td>The consumer is not authenticated.</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.illegalArgument|AWSDKErrorCode.illegalArgument}</td><td>If appointmentReadinessRequest is not an instance of AWSDKAppointmentReadinessRequest</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.internalError|AWSDKErrorCode.internalError}</td><td>The AWSDK could not complete the request.</td></tr>\n   * </tbody>\n   * </table>\n   */\n  updateReadiness(consumer, appointmentReadinessRequest) {\n    const currentFunction = 'AppointmentService.updateReadiness';\n    this.__logger.debug(currentFunction, 'Started', appointmentReadinessRequest);\n    if (!(consumer instanceof AWSDKConsumer)) {\n      const error = AWSDKError.AWSDKIllegalArgument('consumer argument must be of type AWSDKConsumer');\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    if (!(appointmentReadinessRequest instanceof AWSDKAppointmentReadinessRequest)) {\n      const error = AWSDKError.AWSDKIllegalArgument('appointmentReadinessRequest argument must be of type AWSDKAppointmentReadinessRequest');\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    const errors = this.validateAppointmentReadinessRequest(appointmentReadinessRequest);\n    if (errors.length > 0) {\n      const error = AWSDKError.AWSDKValidationErrors(errors);\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    const link = this.findNamedLink(consumer.links, 'appointmentReadiness');\n    if (!Validator.isValidLink(link)) {\n      const error = AWSDKError.AWSDKInternalError('consumer does not have a valid \"appointmentReadiness\" link entry');\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    const options = this.generateOptions('PUT', link.url, false);\n    options.headers['Content-Type'] = 'application/json';\n    options.auth = this.getUserAuth(consumer);\n    if (!options.auth) {\n      const error = AWSDKError.AWSDKConsumerNotAuthenticated();\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    options.headers.Accept = 'application/vnd.amwell-v11.2+json';\n    options.body = appointmentReadinessRequest.__getAsRequestBody();\n    return this.executeRequest(options, AWSDKAppointmentReadinessResponse)\n      .then((response) => {\n        this.__logger.debug(currentFunction, 'Got response', response);\n        this.updateUserAuthEntry(consumer, response.authToken);\n        return response.appointmentReadiness;\n      })\n      .catch((error) => {\n        this.__logger.error(currentFunction, 'Error', error);\n        throw error;\n      });\n  }\n\n  /**\n   * Call this method directly to validate the fields of an {@link model.AWSDKAppointmentReadinessRequest|AWSDKAppointmentReadinessRequest} before calling\n   * {@see service.AppointmentService#updateAppointmentReadiness|updateAppointmentReadiness}. Please note that this method will be called whenever {@see service.AppointmentService#updateAppointmentReadiness|updateAppointmentReadiness}\n   * is called\n   * @returns {error.AWSDKError[]} an array of {@link error.AWSDKError|AWSDKError} that details any validation errors.\n   * <br>Potential validation errors:<br>\n   * <table summary=\"validation\" border=\"1\">\n   * <tr>\n   * <th>Field</th>\n   * <th>Validation Reason</th>\n   * <th>Notes</th>\n   * </tr>\n   * <tr>\n   * <td>datePassedTechCheck</td>\n   * <td>invalid value</td>\n   * <td>Set to a valid date</td>\n   * </tr>\n   * <tr>\n   * <td>datePassedTechCheck</td>\n   * <td>date in future</td>\n   * <td>Set date to valid value in the past</td>\n   * </tr>\n   * <tr>\n   * <td>downloadSpeedMbps</td>\n   * <td>invalid value</td>\n   * <td>Set to non-negative decimal number</td>\n   * </tr>\n   * <tr>\n   * <td>uploadSpeedMbps</td>\n   * <td>out of range value</td>\n   * <td>Set to non-negative decimal number</td>\n   * </tr>\n   * <tr>\n   * <td>latencyMs</td>\n   * <td>invalid value</td>\n   * <td>Set to an integer</td>\n   * </tr>\n   * <tr>\n   * <td>jitter</td>\n   * <td>invalid value</td>\n   * <td>Set to non-negative integer</td>\n   * </tr>\n   * <tr>\n   * <td>microphoneDeviceName</td>\n   * <td>invalid value</td>\n   * <td>Set to non-empty string</td>\n   * </tr>\n   * <tr>\n   * <td>speakerDeviceName</td>\n   * <td>invalid value</td>\n   * <td>Set to non-empty string</td>\n   * </tr>\n   * <tr>\n   * <td>cameraDeviceName</td>\n   * <td>invalid value</td>\n   * <td>Set to non-empty string</td>\n   * </tr>\n   * <tr>\n   * <td>sourceId</td>\n   * <td>invalid value</td>\n   * <td>Set to non-empty string</td>\n   * </tr>\n   * </table>\n   * @since 1.4.0\n   */\n  validateAppointmentReadinessRequest(appointmentReadinessRequest) {\n    this.__logger.info('appointmentService in validateAppointmentReadinessRequest()');\n    this.__logger.debug('Found appointmentReadinessRequest ', appointmentReadinessRequest);\n    const errors = [];\n    if (!(appointmentReadinessRequest instanceof AWSDKAppointmentReadinessRequest)) {\n      throw AWSDKError.AWSDKIllegalArgument('parameter \"appointmentReadinessRequest\" must be an instance of AWSDKAppointmentReadinessRequest');\n    }\n    this.__validateAppointmentReadinessRequest(appointmentReadinessRequest, errors);\n    return errors;\n  }\n\n  /**\n   * @private\n   *\n   */\n  __validateAppointmentReadinessRequest(appointmentReadinessRequest, errors) {\n    let fieldName;\n    let reason;\n    let recoverySuggestion;\n    if (appointmentReadinessRequest.datePassedTechCheck) {\n      if (!(appointmentReadinessRequest.datePassedTechCheck instanceof Date)) {\n        fieldName = 'datePassedTechCheck';\n        reason = 'invalid value';\n        recoverySuggestion = 'Set to valid date';\n        errors.push(AWSDKError.AWSDKFieldValidationError(AWSDKAppointmentReadinessRequest, fieldName, reason, recoverySuggestion));\n      } else if (Date.now() - appointmentReadinessRequest.datePassedTechCheck < 0) {\n        fieldName = 'datePassedTechCheck';\n        reason = 'date in future';\n        recoverySuggestion = 'Set date to valid value in the past';\n        errors.push(AWSDKError.AWSDKFieldValidationError(AWSDKAppointmentReadinessRequest, fieldName, reason, recoverySuggestion));\n      }\n    }\n    if (appointmentReadinessRequest.downloadSpeedMbps) {\n      if (typeof appointmentReadinessRequest.downloadSpeedMbps !== 'number') {\n        fieldName = 'downloadSpeedMbps';\n        reason = 'invalid value';\n        recoverySuggestion = 'Set to a valid number';\n        errors.push(AWSDKError.AWSDKFieldValidationError(AWSDKAppointmentReadinessRequest, fieldName, reason, recoverySuggestion));\n      } else if (appointmentReadinessRequest.downloadSpeedMbps < 0) {\n        fieldName = 'downloadSpeedMbps';\n        reason = 'out of range value';\n        recoverySuggestion = 'Set to a positive number';\n        errors.push(AWSDKError.AWSDKFieldValidationError(AWSDKAppointmentReadinessRequest, fieldName, reason, recoverySuggestion));\n      }\n    }\n    if (appointmentReadinessRequest.uploadSpeedMbps) {\n      if (typeof appointmentReadinessRequest.uploadSpeedMbps !== 'number') {\n        fieldName = 'uploadSpeedMbps';\n        reason = 'invalid value';\n        recoverySuggestion = 'Set to a valid number';\n        errors.push(AWSDKError.AWSDKFieldValidationError(AWSDKAppointmentReadinessRequest, fieldName, reason, recoverySuggestion));\n      } else if (appointmentReadinessRequest.uploadSpeedMbps < 0) {\n        fieldName = 'uploadSpeedMbps';\n        reason = 'out of range value';\n        recoverySuggestion = 'Set to a positive number';\n        errors.push(AWSDKError.AWSDKFieldValidationError(AWSDKAppointmentReadinessRequest, fieldName, reason, recoverySuggestion));\n      }\n    }\n    if (appointmentReadinessRequest.latencyMs && typeof appointmentReadinessRequest.latencyMs !== 'number') {\n      fieldName = 'latencyMs';\n      reason = 'invalid value';\n      recoverySuggestion = 'Set to a valid number';\n      errors.push(AWSDKError.AWSDKFieldValidationError(AWSDKAppointmentReadinessRequest, fieldName, reason, recoverySuggestion));\n    }\n    if (appointmentReadinessRequest.jitter && typeof appointmentReadinessRequest.jitter !== 'number') {\n      fieldName = 'jitter';\n      reason = 'invalid value';\n      recoverySuggestion = 'Set to a valid number';\n      errors.push(AWSDKError.AWSDKFieldValidationError(AWSDKAppointmentReadinessRequest, fieldName, reason, recoverySuggestion));\n    }\n    if (appointmentReadinessRequest.microphoneDeviceName != null && !Validator.isValidString(appointmentReadinessRequest.microphoneDeviceName)) {\n      fieldName = 'microphoneDeviceName';\n      reason = 'invalid value';\n      recoverySuggestion = 'Set to a valid string';\n      errors.push(AWSDKError.AWSDKFieldValidationError(AWSDKAppointmentReadinessRequest, fieldName, reason, recoverySuggestion));\n    }\n    if (appointmentReadinessRequest.speakerDeviceName != null && !Validator.isValidString(appointmentReadinessRequest.speakerDeviceName)) {\n      fieldName = 'speakerDeviceName';\n      reason = 'invalid value';\n      recoverySuggestion = 'Set to a valid string';\n      errors.push(AWSDKError.AWSDKFieldValidationError(AWSDKAppointmentReadinessRequest, fieldName, reason, recoverySuggestion));\n    }\n    if (appointmentReadinessRequest.cameraDeviceName != null && !Validator.isValidString(appointmentReadinessRequest.cameraDeviceName)) {\n      fieldName = 'cameraDeviceName';\n      reason = 'invalid value';\n      recoverySuggestion = 'Set to a valid string';\n      errors.push(AWSDKError.AWSDKFieldValidationError(AWSDKAppointmentReadinessRequest, fieldName, reason, recoverySuggestion));\n    }\n    if (appointmentReadinessRequest.sourceId != null && !Validator.isValidString(appointmentReadinessRequest.sourceId)) {\n      fieldName = 'sourceId';\n      reason = 'invalid value';\n      recoverySuggestion = 'Set to a valid string';\n      errors.push(AWSDKError.AWSDKFieldValidationError(AWSDKAppointmentReadinessRequest, fieldName, reason, recoverySuggestion));\n    }\n  }\n}\n\nexport default AppointmentService;\n","/*!\n * American Well Consumer Web SDK\n *\n * Copyright © 2018 American Well.\n * All rights reserved.\n *\n * It is illegal to use, reproduce or distribute\n * any part of this Intellectual Property without\n * prior written authorization from American Well.\n */\nimport AWSDKDataObject from './awsdk_dataobject';\n\n\n/**\n * This class represents the different topic types available for a secure message.\n *\n * @property {String} name the name of the topic type\n * @property {String} key the unique key of the topic type\n *\n * @since 1.1.0\n * @extends model.AWSDKDataObject\n */\nclass AWSDKTopicType extends AWSDKDataObject {\n  get name() {\n    return this.__data.name;\n  }\n  get key() {\n    return this.__data.key;\n  }\n}\n\nexport default AWSDKTopicType;\n","/*!\r\n * American Well Consumer Web SDK\r\n *\r\n * Copyright (c) 2018 American Well.\r\n * All rights reserved.\r\n *\r\n * It is illegal to use, reproduce or distribute\r\n * any part of this Intellectual Property without\r\n * prior written authorization from American Well.\r\n */\r\n\r\nimport AWSDKEntity from '../awsdk_entity';\r\nimport GenericParser from '../../internal/parser/generic_parser';\r\nimport AWSDKTopicType from '../awsdk_topic_type';\r\n\r\n/**\r\n * This class contains all necessary information for representing a secure message.\r\n * @property {String} subject the subject of the message\r\n * @property {model.AWSDKTopicType} topicType the topic of the message\r\n * @property {Boolean} isLastMessageInThread whether or not the message is the last message in the thread\r\n * @property {Boolean} isSystemNotification whether or not the message is a system notification\r\n * @property {Boolean} isDeleted TRUE if the message is deleted\r\n * @property {Date} date the date of the message\r\n * @property {String} href string url that points to this secure message\r\n * @since 1.1.0\r\n * @extends model.AWSDKEntity\r\n */\r\nclass AWSDKSecureMessage extends AWSDKEntity {\r\n  get subject() {\r\n    return this.__data.subject;\r\n  }\r\n  get topicType() {\r\n    return this.__data.topicType ? GenericParser.parseObject(this.__data.topicType, AWSDKTopicType) : null;\r\n  }\r\n  get isLastMessageInThread() {\r\n    return GenericParser.parseBoolean(this.__data.isLastMessageInThread);\r\n  }\r\n  get isSystemNotification() {\r\n    return GenericParser.parseBoolean(this.__data.isSystemNotification);\r\n  }\r\n  get isDeleted() {\r\n    return GenericParser.parseBoolean(this.__data.isDeleted);\r\n  }\r\n  get date() {\r\n    return GenericParser.parseDate(this.__data.date);\r\n  }\r\n  get href() {\r\n    return this.__data.href;\r\n  }\r\n}\r\nexport default AWSDKSecureMessage;\r\n","/*!\r\n * American Well Consumer Web SDK\r\n *\r\n * Copyright (c) 2018 American Well.\r\n * All rights reserved.\r\n *\r\n * It is illegal to use, reproduce or distribute\r\n * any part of this Intellectual Property without\r\n * prior written authorization from American Well.\r\n */\r\n\r\nimport GenericParser from '../../internal/parser/generic_parser';\r\nimport AWSDKSecureMessage from './awsdk_secure_message';\r\n\r\n/**\r\n * This class contains all necessary information for representing a mailbox message.\r\n * @property {String[]} memberRecipients an array of all member recipients\r\n * @property {String[]} nonMemberRecipients an array of all non-member recipients\r\n * @property {String} senderName the sender's name\r\n * @property {String} bodyPreview the preview of the body of the message\r\n * @property {Boolean} hasAttachment whether or not the message has an attachment\r\n * @property {Boolean} isReplied whether or not the message is replied to\r\n * @since 1.1.0\r\n * @extends model.AWSDKSecureMessage\r\n */\r\nclass AWSDKMailboxMessage extends AWSDKSecureMessage {\r\n  get memberRecipients() {\r\n    return this.__data.memberRecipients;\r\n  }\r\n  get nonMemberRecipients() {\r\n    return this.__data.nonMemberRecipients;\r\n  }\r\n  get senderName() {\r\n    return this.__data.senderName;\r\n  }\r\n  get bodyPreview() {\r\n    return this.__data.bodyPreview;\r\n  }\r\n  get hasAttachment() {\r\n    return GenericParser.parseBoolean(this.__data.hasAttachment);\r\n  }\r\n  get isReplied() {\r\n    return GenericParser.parseBoolean(this.__data.isReplied);\r\n  }\r\n}\r\nexport default AWSDKMailboxMessage;\r\n","/*!\r\n * American Well Consumer Web SDK\r\n *\r\n * Copyright (c) 2018 American Well.\r\n * All rights reserved.\r\n *\r\n * It is illegal to use, reproduce or distribute\r\n * any part of this Intellectual Property without\r\n * prior written authorization from American Well.\r\n */\r\n\r\nimport GenericParser from '../../internal/parser/generic_parser';\r\nimport AWSDKMailboxMessage from './awsdk_mailbox_message';\r\n\r\n/**\r\n * This class contains all necessary information for representing an inbox message.\r\n * @property {String} selfRecipient the self recipient of the message (current consumer)\r\n * @property {Boolean} isUnread whether or not the message is unread\r\n * @since 1.1.0\r\n * @extends model.AWSDKMailboxMessage\r\n */\r\nclass AWSDKInboxMessage extends AWSDKMailboxMessage {\r\n  get selfRecipient() {\r\n    return this.__data.selfRecipient;\r\n  }\r\n  get isUnread() {\r\n    return GenericParser.parseBoolean(this.__data.isUnread);\r\n  }\r\n}\r\nexport default AWSDKInboxMessage;\r\n","/*!\r\n * American Well Consumer Web SDK\r\n *\r\n * Copyright (c) 2018 American Well.\r\n * All rights reserved.\r\n *\r\n * It is illegal to use, reproduce or distribute\r\n * any part of this Intellectual Property without\r\n * prior written authorization from American Well.\r\n */\r\n\r\nimport AWSDKEntity from '../awsdk_entity';\r\nimport GenericParser from '../../internal/parser/generic_parser';\r\nimport AWSDKMailboxMessage from './awsdk_inbox_message';\r\n\r\n/**\r\n * This class contains all necessary information for representing a secure message mailbox.\r\n * @property {model.AWSDKMailboxMessage[]} messages the messages in the mailbox\r\n * @property {Date} timestamp the timestamp the mailbox was retrieved\r\n * @property {Number} total the total number of messages\r\n * @since 1.1.0\r\n * @extends model.AWSDKEntity\r\n */\r\nclass AWSDKMailbox extends AWSDKEntity {\r\n  get messages() {\r\n    return (this.__data.messages && this.__data.messages.map(item => GenericParser.parseObject(item, AWSDKMailboxMessage))) || [];\r\n  }\r\n  get timestamp() {\r\n    return GenericParser.parseDate(this.__data.timestamp);\r\n  }\r\n  get total() {\r\n    return this.__data.total;\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  __assimilate(otherMailbox) {\r\n    this.__data.timestamp = otherMailbox.timestamp;\r\n    this.__data.total = otherMailbox.total;\r\n\r\n    const messageProcessedIds = {};\r\n    const combinedMessages = [];\r\n    otherMailbox.messages.concat(this.messages).forEach((message) => {\r\n      if (!messageProcessedIds[message.id.persistentId]) {\r\n        combinedMessages.push(message);\r\n        messageProcessedIds[message.id.persistentId] = 1;\r\n      }\r\n    });\r\n\r\n    this.__data.messages = combinedMessages.filter(message => !message.isDeleted);\r\n  }\r\n}\r\nexport default AWSDKMailbox;\r\n","/*!\r\n * American Well Consumer Web SDK\r\n *\r\n * Copyright (c) 2018 American Well.\r\n * All rights reserved.\r\n *\r\n * It is illegal to use, reproduce or distribute\r\n * any part of this Intellectual Property without\r\n * prior written authorization from American Well.\r\n */\r\n\r\nimport AWSDKMailbox from './awsdk_mailbox';\r\nimport GenericParser from '../../internal/parser/generic_parser';\r\nimport AWSDKInboxMessage from './awsdk_inbox_message';\r\n\r\n/**\r\n * This class contains all necessary information for representing a secure message inbox.\r\n * @property {model.AWSDKInboxMessage[]} messages the messages in the inbox\r\n * @property {Number} unread the total number of unread messages\r\n * @since 1.1.0\r\n * @extends model.AWSDKMailbox\r\n */\r\nclass AWSDKInbox extends AWSDKMailbox {\r\n  get messages() {\r\n    return (this.__data.messages && this.__data.messages.map(item => GenericParser.parseObject(item, AWSDKInboxMessage))) || [];\r\n  }\r\n  get unread() {\r\n    return this.__data.unread;\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  __assimilate(otherMailbox) {\r\n    super.__assimilate(otherMailbox);\r\n    this.__data.unread = otherMailbox.unread;\r\n  }\r\n}\r\nexport default AWSDKInbox;\r\n","/*!\r\n * American Well Consumer Web SDK\r\n *\r\n * Copyright (c) 2018 American Well.\r\n * All rights reserved.\r\n *\r\n * It is illegal to use, reproduce or distribute\r\n * any part of this Intellectual Property without\r\n * prior written authorization from American Well.\r\n */\r\n\r\nimport AWSDKResponse from './awsdk_response';\r\nimport AWSDKInbox from '../../../model/secure_message/awsdk_inbox';\r\nimport GenericParser from '../../parser/generic_parser';\r\n\r\n/**\r\n * Simple wrapper around an {@link model.AWSDKInbox}\r\n * @property {model.AWSDKInbox} inbox the {@link model.AWSDKInbox}\r\n * @extends model.AWSDKResponse\r\n */\r\nclass AWSDKInboxResponse extends AWSDKResponse {\r\n  get inbox() {\r\n    return this.__data.mailbox ? GenericParser.parseObject(this.__data.mailbox, AWSDKInbox) : null;\r\n  }\r\n}\r\n\r\nexport default AWSDKInboxResponse;\r\n","/*!\n * American Well Consumer Web SDK\n *\n * Copyright © 2018 American Well.\n * All rights reserved.\n *\n * It is illegal to use, reproduce or distribute\n * any part of this Intellectual Property without\n * prior written authorization from American Well.\n */\nimport AWSDKEntity from './awsdk_entity';\n\n\n/**\n * Base class to represent different types of users.\n *\n * @property {String} firstName the firstname on the account\n * @property {String} middleInitial the middle initial on the account\n * @property {String} lastName the lastname on the account\n * @property {String} fullName the full name on the account\n *\n * @since 1.1.0\n * @extends model.AWSDKEntity\n */\nclass AWSDKAccount extends AWSDKEntity {\n  get firstName() {\n    return this.__data.firstName;\n  }\n  get middleInitial() {\n    return this.__data.middleInitial;\n  }\n  get lastName() {\n    return this.__data.lastName;\n  }\n  get fullName() {\n    return this.__data.fullName;\n  }\n}\n\nexport default AWSDKAccount;\n","/*!\r\n * American Well Consumer Web SDK\r\n *\r\n * Copyright © 2018 American Well.\r\n * All rights reserved.\r\n *\r\n * It is illegal to use, reproduce or distribute\r\n * any part of this Intellectual Property without\r\n * prior written authorization from American Well.\r\n */\r\n\r\n/**\r\n * Enum for AWSDKMessageType.\r\n * @readonly\r\n * @enum {string}\r\n * @since 1.2.0\r\n */\r\nconst AWSDKMessageType = {\r\n  /**\r\n   * The inbox message type\r\n   */\r\n  Inbox: 'Inbox',\r\n  /**\r\n   * The sent message type.\r\n   */\r\n  Sent: 'Sent',\r\n};\r\nObject.freeze(AWSDKMessageType);\r\nexport default AWSDKMessageType;\r\n","/*!\r\n * American Well Consumer Web SDK\r\n *\r\n * Copyright (c) 2018 American Well.\r\n * All rights reserved.\r\n *\r\n * It is illegal to use, reproduce or distribute\r\n * any part of this Intellectual Property without\r\n * prior written authorization from American Well.\r\n */\r\n\r\nimport AWSDKEntity from '../awsdk_entity';\r\nimport GenericParser from '../../internal/parser/generic_parser';\r\nimport AWSDKEntityId from '../../internal/model/awsdk_entity_id';\r\n\r\n/**\r\n * This class contains all necessary information for representing a secure message attachment.\r\n * @property {String} name the name of the attachment\r\n * @property {Number} size the size of the attachment in bytes\r\n * @property {String} type the type of the attachment\r\n * @property {String} sourceId the sourceId of the attachment\r\n * @since 1.2.3\r\n * @extends model.AWSDKEntity\r\n */\r\nclass AWSDKAttachment extends AWSDKEntity {\r\n  get name() {\r\n    return this.__data.name;\r\n  }\r\n  get size() {\r\n    return this.__data.size;\r\n  }\r\n  get type() {\r\n    return this.__data.type;\r\n  }\r\n  get sourceId() {\r\n    return this.__data.sourceId;\r\n  }\r\n}\r\nexport default AWSDKAttachment;\r\n","/*!\r\n * American Well Consumer Web SDK\r\n *\r\n * Copyright (c) 2018 American Well.\r\n * All rights reserved.\r\n *\r\n * It is illegal to use, reproduce or distribute\r\n * any part of this Intellectual Property without\r\n * prior written authorization from American Well.\r\n */\r\n\r\nimport AWSDKSecureMessage from './awsdk_secure_message';\r\nimport GenericParser from '../../internal/parser/generic_parser';\r\nimport AWSDKAccount from '../awsdk_account';\r\nimport AWSDKMessageType from './awsdk_message_type';\r\nimport AWSDKAttachment from './awsdk_attachment';\r\n\r\n/**\r\n * This class contains all necessary information for representing a detailed message.\r\n * @property {String} body the full message body\r\n * @property {Boolean} canReply whether or not you can reply to the message\r\n * @property {Number} attachmentCount number of attachments on the message\r\n * @property {Boolean} threadOpen whether or not the thread is still open\r\n * @property {model.AWSDKAccount} sender the sender of the message\r\n * @property {model.AWSDKAccount[]} recipients the recipients of the message\r\n * @property {model.AWSDKMessageType} messageType the type of this message\r\n * @since 1.1.0\r\n * @extends model.AWSDKSecureMessage\r\n */\r\nclass AWSDKDetailedMessage extends AWSDKSecureMessage {\r\n  get body() {\r\n    return this.__data.body;\r\n  }\r\n  get canReply() {\r\n    return GenericParser.parseBoolean(this.__data.canReply);\r\n  }\r\n  get attachmentCount() {\r\n    return this.__data.attachmentCount;\r\n  }\r\n  get attachments() {\r\n    return (this.__data.attachments && this.__data.attachments.map(attachment => GenericParser.parseObject(attachment, AWSDKAttachment))) || [];\r\n  }\r\n  get threadOpen() {\r\n    return GenericParser.parseBoolean(this.__data.threadOpen);\r\n  }\r\n  get sender() {\r\n    return GenericParser.parseObject(this.__data.sender, AWSDKAccount);\r\n  }\r\n  get recipients() {\r\n    const recipients = [];\r\n    if (this.__data.selfRecipient) {\r\n      recipients.push(GenericParser.parseObject(this.__data.selfRecipient, AWSDKAccount));\r\n    }\r\n    if (this.__data.nonMemberRecipients) {\r\n      recipients.push(...this.__data.nonMemberRecipients.map(recipient => GenericParser.parseObject(recipient, AWSDKAccount)));\r\n    }\r\n    return recipients;\r\n  }\r\n  get messageType() {\r\n    return GenericParser.parseEnum(this.__data.messageType, AWSDKMessageType);\r\n  }\r\n}\r\nexport default AWSDKDetailedMessage;\r\n","/*!\r\n * American Well Consumer Web SDK\r\n *\r\n * Copyright (c) 2018 American Well.\r\n * All rights reserved.\r\n *\r\n * It is illegal to use, reproduce or distribute\r\n * any part of this Intellectual Property without\r\n * prior written authorization from American Well.\r\n */\r\n\r\nimport AWSDKResponse from './awsdk_response';\r\nimport GenericParser from '../../parser/generic_parser';\r\nimport AWSDKDetailedMessage from '../../../model/secure_message/awsdk_detailed_message';\r\n\r\n/**\r\n * Simple wrapper around an {@link model.AWSDKDetailedMessage}\r\n * @property {model.AWSDKDetailedMessage} message the {@link model.AWSDKDetailedMessage}\r\n * @extends model.AWSDKResponse\r\n */\r\nclass AWSDKDetailedMessageResponse extends AWSDKResponse {\r\n  get message() {\r\n    return this.__data.message ? GenericParser.parseObject(this.__data.message, AWSDKDetailedMessage) : null;\r\n  }\r\n}\r\n\r\nexport default AWSDKDetailedMessageResponse;\r\n","/*!\r\n * American Well Consumer Web SDK\r\n *\r\n * Copyright (c) 2018 American Well.\r\n * All rights reserved.\r\n *\r\n * It is illegal to use, reproduce or distribute\r\n * any part of this Intellectual Property without\r\n * prior written authorization from American Well.\r\n */\r\n\r\nimport AWSDKMailboxMessage from './awsdk_mailbox_message';\r\n\r\n/**\r\n * This class contains all necessary information for representing a sent message.\r\n * @since 1.1.0\r\n * @extends model.AWSDKMailboxMessage\r\n */\r\nclass AWSDKSentMessage extends AWSDKMailboxMessage {\r\n}\r\nexport default AWSDKSentMessage;\r\n","/*!\r\n * American Well Consumer Web SDK\r\n *\r\n * Copyright (c) 2018 American Well.\r\n * All rights reserved.\r\n *\r\n * It is illegal to use, reproduce or distribute\r\n * any part of this Intellectual Property without\r\n * prior written authorization from American Well.\r\n */\r\n\r\nimport AWSDKMailbox from './awsdk_mailbox';\r\nimport GenericParser from '../../internal/parser/generic_parser';\r\nimport AWSDKSentMessage from './awsdk_sent_message';\r\n\r\n/**\r\n * This class contains all necessary information for representing a collection of sent messages.\r\n * @property {model.AWSDKSentMessage[]} messages the sent messages\r\n * @since 1.1.0\r\n * @extends model.AWSDKMailbox\r\n */\r\nclass AWSDKSentMessages extends AWSDKMailbox {\r\n  get messages() {\r\n    return (this.__data.messages && this.__data.messages.map(item => GenericParser.parseObject(item, AWSDKSentMessage))) || [];\r\n  }\r\n}\r\nexport default AWSDKSentMessages;\r\n","/*!\r\n * American Well Consumer Web SDK\r\n *\r\n * Copyright (c) 2018 American Well.\r\n * All rights reserved.\r\n *\r\n * It is illegal to use, reproduce or distribute\r\n * any part of this Intellectual Property without\r\n * prior written authorization from American Well.\r\n */\r\n\r\nimport AWSDKResponse from './awsdk_response';\r\nimport AWSDKSentMessages from '../../../model/secure_message/awsdk_sent_messages';\r\nimport GenericParser from '../../parser/generic_parser';\r\n\r\n/**\r\n * Simple wrapper around an {@link model.AWSDKSentMessages}\r\n * @property {model.AWSDKSentMessages} sentMessages the {@link model.AWSDKSentMessages}\r\n * @extends model.AWSDKResponse\r\n */\r\nclass AWSDKSentMessagesResponse extends AWSDKResponse {\r\n  get sentMessages() {\r\n    return this.__data.mailbox ? GenericParser.parseObject(this.__data.mailbox, AWSDKSentMessages) : null;\r\n  }\r\n}\r\n\r\nexport default AWSDKSentMessagesResponse;\r\n","/*!\r\n * American Well Consumer Web SDK\r\n *\r\n * Copyright (c) 2018 American Well.\r\n * All rights reserved.\r\n *\r\n * It is illegal to use, reproduce or distribute\r\n * any part of this Intellectual Property without\r\n * prior written authorization from American Well.\r\n */\r\n\r\n/**\r\n * This class contains all necessary information for representing a secure message uploaded attachment.\r\n * Get an instance of this via {@link service.SecureMessageService#newUploadAttachment|SecureMessageService.newUploadAttachment}\r\n * @property {Blob|File} data a blob of data represented by a blob or a file.\r\n * @property {String} name the name of the attachment.\r\n * @since 1.1.0\r\n */\r\nclass AWSDKUploadAttachment {\r\n  set data(content) {\r\n    this.__data = content;\r\n  }\r\n\r\n  get data() {\r\n    return this.__data;\r\n  }\r\n\r\n  set name(name) {\r\n    this.__name = name;\r\n  }\r\n\r\n  get name() {\r\n    return this.__name;\r\n  }\r\n}\r\nexport default AWSDKUploadAttachment;\r\n","/*!\r\n * American Well Consumer Web SDK\r\n *\r\n * Copyright (c) 2018 American Well.\r\n * All rights reserved.\r\n *\r\n * It is illegal to use, reproduce or distribute\r\n * any part of this Intellectual Property without\r\n * prior written authorization from American Well.\r\n */\r\n\r\nimport GenericParser from '../../../internal/parser/generic_parser';\r\nimport AWSDKTopicType from '../../awsdk_topic_type';\r\nimport AWSDKError from '../../../error/awsdk_error';\r\nimport AWSDKUploadAttachment from './awsdk_upload_attachment';\r\nimport AWSDKDetailedMessage from '../awsdk_detailed_message';\r\n\r\n/**\r\n * This class contains all necessary information for representing a message draft. Use one of the more specific subclasses\r\n * to send a New, Reply, or Forward message rather than using this class directly.\r\n * @property {String} subject the subject of the message\r\n * @property {String} body the body of the message\r\n * @property {model.AWSDKTopicType} topicType the topicType of the message\r\n * @property {model.AWSDKMessageActionType} actionType the actionType of the message @since 1.3.0\r\n * @property {String} recipientEncryptedId the encrypted id of the recipient for the message\r\n * @property {String} recipientName the name of the recipient for the message\r\n * @property {String} sourceMessageType the type of the sourceMessage\r\n * @property {String} sourceMessageId the encrypted id of the sourceMessage\r\n * @property {Boolean} attachHealthSummary TRUE if health summary should be attached to the message\r\n * @since 1.3.0\r\n * @property {Boolean} sourceIsSystemNotification TRUE if the sourceMessage is a System Notification Message\r\n * @property {model.AWSDKUploadAttachment} uploadAttachment the uploadAttachment for the message\r\n * @since 1.1.0\r\n */\r\nclass AWSDKMessageDraft {\r\n  set subject(subject) {\r\n    this.__subject = subject;\r\n  }\r\n\r\n  get subject() {\r\n    return this.__subject;\r\n  }\r\n\r\n  set body(body) {\r\n    this.__body = body;\r\n  }\r\n\r\n  get body() {\r\n    return this.__body;\r\n  }\r\n\r\n  get topicType() {\r\n    return this.__topicType ? GenericParser.parseObject(this.__topicType, AWSDKTopicType) : null;\r\n  }\r\n\r\n  get actionType() {\r\n    return this.__actionType;\r\n  }\r\n\r\n  get recipientEncryptedId() {\r\n    return this.__recipientEncryptedId;\r\n  }\r\n\r\n  get recipientName() {\r\n    return this.__recipientName;\r\n  }\r\n\r\n  get sourceMessageType() {\r\n    return this.__sourceMessageType;\r\n  }\r\n\r\n  get sourceMessageId() {\r\n    return this.__sourceMessageId;\r\n  }\r\n\r\n  get sourceIsSystemNotification() {\r\n    return GenericParser.parseBoolean(this.__sourceIsSystemNotification);\r\n  }\r\n\r\n  get attachHealthSummary() {\r\n    return GenericParser.parseBoolean(this.__attachHealthSummary);\r\n  }\r\n\r\n  set attachHealthSummary(attachHealthSummary) {\r\n    this.__attachHealthSummary = attachHealthSummary;\r\n  }\r\n\r\n  set uploadAttachment(uploadAttachment) {\r\n    this.__uploadAttachment = uploadAttachment;\r\n  }\r\n\r\n  get uploadAttachment() {\r\n    return this.__uploadAttachment ? GenericParser.parseObject(this.__uploadAttachment, AWSDKUploadAttachment) : null;\r\n  }\r\n}\r\nexport default AWSDKMessageDraft;\r\n","/*!\r\n * American Well Consumer Web SDK\r\n *\r\n * Copyright (c) 2018 American Well.\r\n * All rights reserved.\r\n *\r\n * It is illegal to use, reproduce or distribute\r\n * any part of this Intellectual Property without\r\n * prior written authorization from American Well.\r\n */\r\nimport AWSDKNamedEntity from '../awsdk_named_entity';\r\nimport GenericParser from '../../internal/parser/generic_parser';\r\nimport AWSDKUserType from '../../awsdk_user_type';\r\n\r\n/**\r\n * This class contains all necessary information for representing a secure message contact.\r\n * @property {model.AWSDKUserType} userType the type of userType of the contact\r\n * @property {Boolean} acceptsSecureMessage TRUE if the contact accepts secure messages\r\n * @since 1.1.0\r\n * @extends model.AWSDKNamedEntity\r\n */\r\nclass AWSDKSecureMessageContact extends AWSDKNamedEntity {\r\n  get userType() {\r\n    return GenericParser.parseEnum(this.__data.userType, AWSDKUserType);\r\n  }\r\n  get acceptsSecureMessage() {\r\n    return GenericParser.parseBoolean(this.__data.acceptsSecureMessage);\r\n  }\r\n}\r\nexport default AWSDKSecureMessageContact;\r\n","/*!\n * American Well Consumer Web SDK\n *\n * Copyright © 2017 American Well.\n * All rights reserved.\n *\n * It is illegal to use, reproduce or distribute\n * any part of this Intellectual Property without\n * prior written authorization from American Well.\n */\nimport AWSDKEntity from './awsdk_entity';\n/**\n * AWSDKNamedEntity class represents a known {@link model.AWSDKEntity|AWSDKEntity} that has a name.\n * @property {String} name The full name associated with this object\n * @property {String} firstName The first name associated with this object\n * @property {String} middleInitial The middle initial associated with this object\n * @property {String} lastName The last name associated with this object\n * @extends model.AWSDKEntity\n */\nclass AWSDKNamedEntity extends AWSDKEntity {\n  get name() {\n    return this.__data.name;\n  }\n\n  /**\n   * @since 3.0.0\n   */\n  get firstName() {\n    return this.__data.firstName;\n  }\n\n  /**\n   * @since 3.0.0\n   */\n  get middleInitial() {\n    return this.__data.middleInitial;\n  }\n\n  /**\n   * @since 3.0.0\n   */\n  get lastName() {\n    return this.__data.lastName;\n  }\n}\n\nexport default AWSDKNamedEntity;\n","/*!\r\n * American Well Consumer Web SDK\r\n *\r\n * Copyright © 2018 American Well.\r\n * All rights reserved.\r\n *\r\n * It is illegal to use, reproduce or distribute\r\n * any part of this Intellectual Property without\r\n * prior written authorization from American Well.\r\n */\r\n\r\n/**\r\n * Enum for AWSDKMessageActionType.\r\n * @readonly\r\n * @enum {string}\r\n * @since 1.3.0\r\n */\r\nconst AWSDKMessageActionType = {\r\n  /**\r\n   * The Forward message action\r\n   */\r\n  New: 'New',\r\n  /**\r\n   * The Forward message action\r\n   */\r\n  Forward: 'Forward',\r\n  /**\r\n   * The Forward message action\r\n   */\r\n  Reply: 'Reply',\r\n};\r\nObject.freeze(AWSDKMessageActionType);\r\nexport default AWSDKMessageActionType;\r\n","/*!\r\n * American Well Consumer Web SDK\r\n *\r\n * Copyright (c) 2018 American Well.\r\n * All rights reserved.\r\n *\r\n * It is illegal to use, reproduce or distribute\r\n * any part of this Intellectual Property without\r\n * prior written authorization from American Well.\r\n */\r\n\r\nimport AWSDKTopicType from '../../awsdk_topic_type';\r\nimport AWSDKError from '../../../error/awsdk_error';\r\nimport AWSDKMessageDraft from './awsdk_message_draft';\r\nimport GenericParser from '../../../internal/parser/generic_parser';\r\nimport AWSDKSecureMessageContact from '../awsdk_secure_message_contact';\r\nimport AWSDKMessageActionType from './awsdk_message_action_type';\r\n\r\n/**\r\n * This class contains all necessary information for representing a new message draft.\r\n * Get an instance of this via {@link service.SecureMessageService#getNewMessageDraft|SecureMessageService.getNewMessageDraft}\r\n * @property {model.AWSDKTopicType} topicType the topic of the message\r\n * @property {model.AWSDKSecureMessageContact} recipient the recipient of the message\r\n * @since 1.1.0\r\n * @extends model.AWSDKMessageDraft\r\n */\r\nclass AWSDKNewMessageDraft extends AWSDKMessageDraft {\r\n  constructor() {\r\n    super();\r\n    this.__actionType = AWSDKMessageActionType.New;\r\n  }\r\n\r\n  /**\r\n   * @since 1.3.0\r\n   */\r\n  get recipient() {\r\n    return this.__recipient ? GenericParser.parseObject(this.__recipient, AWSDKSecureMessageContact) : null;\r\n  }\r\n\r\n  set recipient(recipient) {\r\n    if (recipient) {\r\n      if (!(recipient instanceof AWSDKSecureMessageContact)) {\r\n        throw AWSDKError.AWSDKIllegalArgument('recipient must be of type AWSDKSecureMessageContact');\r\n      }\r\n      this.__recipient = recipient;\r\n      this.__recipientEncryptedId = recipient.id.encryptedId;\r\n      this.__recipientName = recipient.name;\r\n    }\r\n  }\r\n\r\n  get topicType() {\r\n    return this.__topicType ? GenericParser.parseObject(this.__topicType, AWSDKTopicType) : null;\r\n  }\r\n\r\n  set topicType(topicType) {\r\n    this.__topicType = topicType;\r\n  }\r\n}\r\nexport default AWSDKNewMessageDraft;\r\n","/*!\r\n * American Well Consumer Web SDK\r\n *\r\n * Copyright (c) 2018 American Well.\r\n * All rights reserved.\r\n *\r\n * It is illegal to use, reproduce or distribute\r\n * any part of this Intellectual Property without\r\n * prior written authorization from American Well.\r\n */\r\n\r\nimport AWSDKMessageDraft from './awsdk_message_draft';\r\nimport AWSDKMessageActionType from './awsdk_message_action_type';\r\n\r\n/**\r\n * This class contains all necessary information for representing a reply message draft.\r\n * Get an instance of this via {@link service.SecureMessageService#getReplyMessageDraft|SecureMessageService.getReplyMessageDraft}\r\n * @since 1.1.0\r\n * @extends model.AWSDKMessageDraft\r\n */\r\nclass AWSDKReplyMessageDraft extends AWSDKMessageDraft {\r\n  constructor(sourceMessage) {\r\n    super();\r\n    this.__actionType = AWSDKMessageActionType.Reply;\r\n    this.__recipientEncryptedId = sourceMessage.sender.id.encryptedId;\r\n    this.__recipientName = sourceMessage.sender.fullName;\r\n    this.__topicType = sourceMessage.topicType;\r\n    this.__sourceMessageId = sourceMessage.id.encryptedId;\r\n    this.__sourceMessageType = sourceMessage.messageType;\r\n    this.__subject = sourceMessage.subject;\r\n    this.__body = sourceMessage.body;\r\n  }\r\n}\r\nexport default AWSDKReplyMessageDraft;\r\n\r\n","/*!\r\n * American Well Consumer Web SDK\r\n *\r\n * Copyright (c) 2018 American Well.\r\n * All rights reserved.\r\n *\r\n * It is illegal to use, reproduce or distribute\r\n * any part of this Intellectual Property without\r\n * prior written authorization from American Well.\r\n */\r\n\r\nimport AWSDKMessageDraft from './awsdk_message_draft';\r\nimport AWSDKError from '../../../error/awsdk_error';\r\nimport GenericParser from '../../../internal/parser/generic_parser';\r\nimport AWSDKSecureMessageContact from '../awsdk_secure_message_contact';\r\nimport AWSDKMessageActionType from './awsdk_message_action_type';\r\n\r\n/**\r\n * This class contains all necessary information for representing a forward message draft.\r\n * Get an instance of this via {@link service.SecureMessageService#getForwardMessageDraft|SecureMessageService.getForwardMessageDraft}\r\n * @property {model.AWSDKSecureMessageContact} recipient the recipient of the message\r\n * @since 1.1.0\r\n * @extends model.AWSDKMessageDraft\r\n */\r\nclass AWSDKForwardMessageDraft extends AWSDKMessageDraft {\r\n  constructor(sourceMessage) {\r\n    super();\r\n    this.__actionType = AWSDKMessageActionType.Forward;\r\n    this.__topicType = sourceMessage.topicType;\r\n    this.__sourceMessageId = sourceMessage.id.encryptedId;\r\n    this.__sourceMessageType = sourceMessage.messageType;\r\n    this.__sourceIsSystemNotification = sourceMessage.isSystemNotification;\r\n    this.__subject = sourceMessage.subject;\r\n    this.__body = sourceMessage.body;\r\n  }\r\n\r\n  /**\r\n  * @since 1.3.0\r\n  */\r\n  get recipient() {\r\n    return this.__recipient ? GenericParser.parseObject(this.__recipient, AWSDKSecureMessageContact) : null;\r\n  }\r\n\r\n  set recipient(recipient) {\r\n    if (recipient) {\r\n      if (!(recipient instanceof AWSDKSecureMessageContact)) {\r\n        throw AWSDKError.AWSDKIllegalArgument('recipient must be of type AWSDKSecureMessageContact');\r\n      }\r\n      this.__recipient = recipient;\r\n      this.__recipientEncryptedId = recipient.id.encryptedId;\r\n      this.__recipientName = recipient.name;\r\n    }\r\n  }\r\n}\r\nexport default AWSDKForwardMessageDraft;\r\n","/*!\r\n * American Well Consumer Web SDK\r\n *\r\n * Copyright (c) 2018 American Well.\r\n * All rights reserved.\r\n *\r\n * It is illegal to use, reproduce or distribute\r\n * any part of this Intellectual Property without\r\n * prior written authorization from American Well.\r\n */\r\n\r\nimport AWSDKResponse from './awsdk_response';\r\nimport GenericParser from '../../parser/generic_parser';\r\nimport AWSDKSecureMessageContact from '../../../model/secure_message/awsdk_secure_message_contact';\r\n\r\n/**\r\n * Simple wrapper around an {@link model.AWSDKSecureMessageContact[]}\r\n * @property {model.AWSDKSecureMessageContact[]} contacts an array of {@link model.AWSDKSecureMessageContact}\r\n * @extends model.AWSDKResponse\r\n */\r\nclass AWSDKSecureMessageContactsResponse extends AWSDKResponse {\r\n  get contacts() {\r\n    return this.__data.contacts ? this.__data.contacts.map(item => GenericParser.parseObject(item, AWSDKSecureMessageContact)) : null;\r\n  }\r\n}\r\n\r\nexport default AWSDKSecureMessageContactsResponse;\r\n","/*!\n * American Well Consumer Web SDK\n *\n * Copyright © 2018 American Well.\n * All rights reserved.\n *\n * It is illegal to use, reproduce or distribute\n * any part of this Intellectual Property without\n * prior written authorization from American Well.\n */\nimport Service from './service';\nimport AWSDKError from '../error/awsdk_error';\nimport Validator from '../internal/validator/validator';\nimport AWSDKConsumer from '../model/consumer/awsdk_consumer';\nimport AWSDKInboxResponse from '../internal/model/response/awsdk_inbox_response';\nimport AWSDKDetailedMessageResponse from '../internal/model/response/awsdk_detailed_message_response';\nimport AWSDKSecureMessage from '../model/secure_message/awsdk_secure_message';\nimport AWSDKSentMessagesResponse from '../internal/model/response/awsdk_sent_messages_response';\nimport AWSDKMessageDraft from '../model/secure_message/compose/awsdk_message_draft';\nimport AWSDKNewMessageDraft from '../model/secure_message/compose/awsdk_new_message_draft';\nimport AWSDKReplyMessageDraft from '../model/secure_message/compose/awsdk_reply_message_draft';\nimport AWSDKForwardMessageDraft from '../model/secure_message/compose/awsdk_forward_message_draft';\nimport AWSDKResponse from '../internal/model/response/awsdk_response';\nimport AWSDKSecureMessageContact from '../model/secure_message/awsdk_secure_message_contact';\nimport AWSDKDetailedMessage from '../model/secure_message/awsdk_detailed_message';\nimport AWSDKSecureMessageContactsResponse from '../internal/model/response/awsdk_secure_message_contacts_response';\nimport AWSDKUploadAttachment from '../model/secure_message/compose/awsdk_upload_attachment';\nimport AWSDKTopicType from '../model/awsdk_topic_type';\nimport AWSDKUserType from '../awsdk_user_type';\nimport AWSDKMessageType from '../model/secure_message/awsdk_message_type';\nimport AWSDKInboxMessage from '../model/secure_message/awsdk_inbox_message';\nimport AWSDKAttachment from '../model/secure_message/awsdk_attachment';\nimport AWSDKInbox from '../model/secure_message/awsdk_inbox';\nimport AWSDKSentMessages from '../model/secure_message/awsdk_sent_messages';\nimport AWSDKMessageActionType from '../model/secure_message/compose/awsdk_message_action_type';\n\n/**\n * This service handles everything related to secure messages and supporting infrastructure\n *\n * @since 1.1.0\n * @hideconstructor\n * @extends service.Service\n */\nclass SecureMessageService extends Service {\n  constructor(props) {\n    super(props);\n    this.__systemConfiguration = props.systemConfiguration;\n  }\n\n  /**\n   * Get an instance of {@link model.AWSDKUploadAttachment|AWSDKUploadAttachment} to use when sending an attachment with a secure message. <br>\n   * @returns {model.AWSDKUploadAttachment} returns an instance of a {@link model.AWSDKUploadAttachment|AWSDKUploadAttachment} object\n   * @since 1.1.0\n   */\n  newUploadAttachment() {\n    return new AWSDKUploadAttachment();\n  }\n\n  /**\n   * Get an instance of {@link model.AWSDKNewMessageDraft|AWSDKNewMessageDraft} to use when sending a new secure message. <br>\n   * @returns {model.AWSDKNewMessageDraft} returns an instance of a {@link model.AWSDKNewMessageDraft|AWSDKNewMessageDraft} object\n   * @since 1.1.0\n   */\n  getNewMessageDraft() {\n    return new AWSDKNewMessageDraft();\n  }\n\n  /**\n   * Get an instance of {@link model.AWSDKReplyMessageDraft|AWSDKReplyMessageDraft} to use when sending a reply secure message. <br>\n   * @param {model.AWSDKDetailedMessage} detailedMessage the {@link model.AWSDKDetailedMessage|AWSDKDetailedMessage} the secure message is a reply to\n   * @returns {model.AWSDKReplyMessageDraft} returns an instance of a {@link model.AWSDKReplyMessageDraft|AWSDKReplyMessageDraft} object\n   * <p><br>Potential Error Codes<br>\n   * <table summary=\"ErrorCodes\" border=\"1\">\n   * <thead>\n   * <tr><th>Error Code</th><th>reason</th></tr>\n   * </thead>\n   * <tbody>\n   * <tr><td>{@link error.AWSDKErrorCode.illegalArgument|AWSDKErrorCode.illegalArgument}</td><td>A parameter is not the correct type.</td></tr>\n   * </tbody>\n   * </table>\n   * @since 1.1.0\n   */\n  getReplyMessageDraft(detailedMessage) {\n    if (!(detailedMessage instanceof AWSDKDetailedMessage)) {\n      const error = AWSDKError.AWSDKIllegalArgument('detailedMessage argument is null or not of type AWSDKDetailedMessage');\n      this.__logger.error('getReplyMessageDraft', 'Error', error);\n      throw error;\n    }\n    return new AWSDKReplyMessageDraft(detailedMessage);\n  }\n\n  /**\n   * Get an instance of {@link model.AWSDKForwardMessageDraft|AWSDKForwardMessageDraft} to use when sending a forward secure message. <br>\n   * @param {model.AWSDKSecureMessageContact} secureMessageContact the {@link model.AWSDKSecureMessageContact|AWSDKSecureMessageContact} to send the message to\n   * @param {model.AWSDKDetailedMessage} detailedMessage the {@link model.AWSDKDetailedMessage|AWSDKDetailedMessage} the secure message is forwarding\n   * @returns {model.AWSDKForwardMessageDraft} returns an instance of a {@link model.AWSDKForwardMessageDraft|AWSDKForwardMessageDraft} object\n   * <p><br>Potential Error Codes<br>\n   * <table summary=\"ErrorCodes\" border=\"1\">\n   * <thead>\n   * <tr><th>Error Code</th><th>reason</th></tr>\n   * </thead>\n   * <tbody>\n   * <tr><td>{@link error.AWSDKErrorCode.illegalArgument|AWSDKErrorCode.illegalArgument}</td><td>A parameter is not the correct type.</td></tr>\n   * </tbody>\n   * </table>\n   * @since 1.1.0\n   */\n  getForwardMessageDraft(detailedMessage) {\n    if (!(detailedMessage instanceof AWSDKDetailedMessage)) {\n      const error = AWSDKError.AWSDKIllegalArgument('detailedMessage argument is null or not of type AWSDKDetailedMessage');\n      this.__logger.error('getForwardMessageDraft', 'Error', error);\n      throw error;\n    }\n    return new AWSDKForwardMessageDraft(detailedMessage);\n  }\n\n  /**\n   * First-time retrieval of secure inbox messages<br>\n   * This can be used in a \"batch\" mode by providing a value for startIndex and maxResults<br>\n   * The optional SINCE parameter will ALSO include any messages that have changed after the\n   * given timestamp. These are in addition to the batch messages.<br>\n   * This method will retrieve all messages that are within the startIndex and maxResults\n   * parameters and all messages that have changed after the specified \"since\" time. The since\n   * parameter is not applied to the messages that are within the startIndex and maxResults\n   * parameters.<br>\n   * @param {model.AWSDKConsumer} consumer the {@link model.AWSDKConsumer|AWSDKConsumer} to retrieve messages for\n   * @param {Number} [startIndex] the index of first message to retrieve\n   * @param {Number} [maxResults] the number of messages to retrieve, must be an int greater than 0 or 'null' for all results\n   * @param {Date} [since] the timestamp for changed messages\n   * @returns {Promise<model.AWSDKInbox|error.AWSDKError>} a Promise that resolves to an {@link model.AWSDKInbox|AWSDKInbox} or is rejected with an {@link error.AWSDKError|AWSDKError}\n   * <p><br>Potential Error Codes<br>\n   * <table summary=\"ErrorCodes\" border=\"1\">\n   * <thead>\n   * <tr><th>Error Code</th><th>reason</th></tr>\n   * </thead>\n   * <tbody>\n   * <tr><td>{@link error.AWSDKErrorCode.consumerNotAuthenticated|AWSDKErrorCode.consumerNotAuthenticated}</td><td>Consumer is not authenticated.</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.illegalArgument|AWSDKErrorCode.illegalArgument}</td><td>A parameter is not the correct type.</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.internalError|AWSDKErrorCode.internalError}</td><td>The AWSDK could not complete the request.</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.validationError|AWSDKErrorCode.validationError}</td><td>The provided maxResults was not a number greater than 0.</td></tr>\n   * </tbody>\n   * </table>\n   * @since 1.1.0\n   */\n  getInboxMessages(consumer, startIndex = null, maxResults = null, since = null) {\n    const currentFunction = 'SecureMessageService.getInboxMessages';\n    this.__logger.debug(currentFunction, 'Started', consumer, startIndex, maxResults, since);\n\n    const potentialError = this.__validateGetMessagesRequest(consumer, startIndex, maxResults, since);\n    if (potentialError !== null) {\n      return Promise.reject(potentialError);\n    }\n\n    const link = this.findNamedLink(consumer.links, 'inbox');\n    if (!Validator.isValidLink(link)) {\n      const error = AWSDKError.AWSDKInternalError('consumer does not have a valid inbox link entry');\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n\n    const options = this.generateOptions('GET', link.url);\n    options.auth = this.getUserAuth(consumer);\n    if (!options.auth) {\n      const error = AWSDKError.AWSDKConsumerNotAuthenticated();\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n\n    if (startIndex !== null) options.form.set('startIndex', startIndex);\n    if (since !== null) options.form.set('since', since.getMilliseconds());\n    if (maxResults !== null) {\n      options.form.set('maxResults', maxResults);\n    } else {\n      options.form.set('maxResults', -1);\n    }\n\n    return this.executeRequest(options, AWSDKInboxResponse)\n      .then((response) => {\n        this.__logger.debug(currentFunction, 'Got response', response);\n        this.updateUserAuthEntry(consumer, response.authToken);\n        return response.inbox;\n      })\n      .catch((error) => {\n        this.__logger.error(currentFunction, 'Error', error);\n        throw error;\n      });\n  }\n\n  /**\n   * First-time retrieval of sent secure messages<br>\n   * This can be used in a \"batch\" mode by providing a value for startIndex and maxResults<br>\n   * The optional SINCE parameter will ALSO include any messages that have changed after the\n   * given timestamp. These are in addition to the batch messages.<br>\n   * This method will retrieve all messages that are within the startIndex and maxResults\n   * parameters and all messages that have changed after the specified \"since\" time. The since\n   * parameter is not applied to the messages that are within the startIndex and maxResults\n   * parameters.<br>\n   * @param {model.AWSDKConsumer} consumer the {@link model.AWSDKConsumer|AWSDKConsumer} to retrieve messages for\n   * @param {Number} [startIndex] the index of first message to retrieve\n   * @param {Number} [maxResults] the number of messages to retrieve, must be an int greater than 0 or 'null' for all results\n   * @param {Date} [since] the timestamp for changed messages\n   * @returns {Promise<model.AWSDKSentMessages|error.AWSDKError>} a Promise that resolves to an {@link model.AWSDKSentMessages|AWSDKSentMessages} or is rejected with an {@link error.AWSDKError|AWSDKError}\n   * <p><br>Potential Error Codes<br>\n   * <table summary=\"ErrorCodes\" border=\"1\">\n   * <thead>\n   * <tr><th>Error Code</th><th>reason</th></tr>\n   * </thead>\n   * <tbody>\n   * <tr><td>{@link error.AWSDKErrorCode.consumerNotAuthenticated|AWSDKErrorCode.consumerNotAuthenticated}</td><td>Consumer is not authenticated.</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.illegalArgument|AWSDKErrorCode.illegalArgument}</td><td>A parameter is not the correct type.</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.internalError|AWSDKErrorCode.internalError}</td><td>The AWSDK could not complete the request.</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.validationError|AWSDKErrorCode.validationError}</td><td>The provided maxResults was not a number greater than 0.</td></tr>\n   * </tbody>\n   * </table>\n   * @since 1.1.0\n   */\n  getSentMessages(consumer, startIndex = null, maxResults = null, since = null) {\n    const currentFunction = 'SecureMessageService.getSentMessages';\n    this.__logger.debug(currentFunction, 'Started', consumer, startIndex, maxResults, since);\n\n    const potentialError = this.__validateGetMessagesRequest(consumer, startIndex, maxResults, since);\n    if (potentialError !== null) {\n      return Promise.reject(potentialError);\n    }\n\n    const link = this.findNamedLink(consumer.links, 'sentMessages');\n    if (!Validator.isValidLink(link)) {\n      const error = AWSDKError.AWSDKInternalError('consumer does not have a valid sentMessages link entry');\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n\n    const options = this.generateOptions('GET', link.url);\n    options.auth = this.getUserAuth(consumer);\n    if (!options.auth) {\n      const error = AWSDKError.AWSDKConsumerNotAuthenticated();\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n\n    if (startIndex !== null) options.form.set('startIndex', startIndex);\n    if (since !== null) options.form.set('since', since.getMilliseconds());\n    if (maxResults !== null) {\n      options.form.set('maxResults', maxResults);\n    } else {\n      options.form.set('maxResults', -1);\n    }\n\n    return this.executeRequest(options, AWSDKSentMessagesResponse)\n      .then((response) => {\n        this.__logger.debug(currentFunction, 'Got response', response);\n        this.updateUserAuthEntry(consumer, response.authToken);\n        return response.sentMessages;\n      })\n      .catch((error) => {\n        this.__logger.error(currentFunction, 'Error', error);\n        throw error;\n      });\n  }\n\n  /**\n   * For internal Use Only!!\n   * @private\n   */\n  __validateGetMessagesRequest(consumer, startIndex, maxResults, since) {\n    const currentFunction = 'SecureMessageService.__validateGetMessagesRequest';\n    this.__logger.trace(currentFunction, 'Started', consumer, startIndex, maxResults, since);\n\n    if (!(consumer instanceof AWSDKConsumer)) {\n      const error = AWSDKError.AWSDKIllegalArgument('consumer argument is null or not of type AWSDKConsumer');\n      this.__logger.error(currentFunction, 'Error', error);\n      return error;\n    }\n    if (startIndex != null && !Validator.isInt(startIndex)) {\n      const error = AWSDKError.AWSDKIllegalArgument('startIndex is not an integer');\n      this.__logger.error(currentFunction, 'Error', error);\n      return error;\n    }\n    if (maxResults != null && !Validator.isInt(maxResults)) {\n      const error = AWSDKError.AWSDKIllegalArgument('maxResults is not an integer');\n      this.__logger.error(currentFunction, 'Error', error);\n      return error;\n    }\n    if (maxResults != null && (maxResults < -1 || maxResults === 0)) {\n      const error = AWSDKError.AWSDKValidationError('maxResults is not an integer greater than zero');\n      this.__logger.error(currentFunction, 'Error', error);\n      return error;\n    }\n    if (since != null && !(since instanceof Date)) {\n      const error = AWSDKError.AWSDKIllegalArgument('since is not of type Date');\n      this.__logger.error(currentFunction, 'Error', error);\n      return error;\n    }\n\n    this.__logger.trace(currentFunction, 'Finished', consumer, startIndex, maxResults, since);\n\n    return null;\n  }\n\n  /**\n   * Get the full detail of a given secure message\n   * @param {model.AWSDKConsumer} consumer the {@link model.AWSDKConsumer|AWSDKConsumer} to retrieve the message for\n   * @param {model.AWSDKSecureMessage} secureMessage the message to retrieve more detail for\n   * @returns {Promise<model.AWSDKInbox|error.AWSDKError>} a Promise that resolves to an {@link model.AWSDKDetailedMessage|AWSDKDetailedMessage} or is rejected with an {@link error.AWSDKError|AWSDKError}\n   * <p><br>Potential Error Codes<br>\n   * <table summary=\"ErrorCodes\" border=\"1\">\n   * <thead>\n   * <tr><th>Error Code</th><th>reason</th></tr>\n   * </thead>\n   * <tbody>\n   * <tr><td>{@link error.AWSDKErrorCode.consumerNotAuthenticated|AWSDKErrorCode.consumerNotAuthenticated}</td><td>Consumer is not authenticated.</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.illegalArgument|AWSDKErrorCode.illegalArgument}</td><td>A parameter is not the correct type.</td></tr>\n   * </tbody>\n   * </table>\n   * @since 1.1.0\n   */\n  getMessageDetail(consumer, secureMessage) {\n    const currentFunction = 'SecureMessageService.getMessageDetail';\n    this.__logger.debug(currentFunction, 'Started', consumer, secureMessage);\n    if (!(consumer instanceof AWSDKConsumer)) {\n      const error = AWSDKError.AWSDKIllegalArgument('consumer argument is null or not of type AWSDKConsumer');\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    if (!(secureMessage instanceof AWSDKSecureMessage)) {\n      const error = AWSDKError.AWSDKIllegalArgument('secureMessage argument is null or not of type AWSDKSecureMessage');\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    const options = this.generateOptions('GET', secureMessage.href);\n    options.auth = this.getUserAuth(consumer);\n    if (!options.auth) {\n      const error = AWSDKError.AWSDKConsumerNotAuthenticated();\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    return this.executeRequest(options, AWSDKDetailedMessageResponse)\n      .then((response) => {\n        this.__logger.debug(currentFunction, 'Got response', response);\n        this.updateUserAuthEntry(consumer, response.authToken);\n        return response.message;\n      })\n      .catch((error) => {\n        this.__logger.error(currentFunction, 'Error', error);\n        throw error;\n      });\n  }\n\n  /**\n   * Get the secure message contacts for a consumer\n   * @param {model.AWSDKConsumer} consumer the {@link model.AWSDKConsumer|AWSDKConsumer} to retrieve contacts for\n   * @returns {Promise<model.AWSDKSecureMessageContact[]|error.AWSDKError>} a Promise that resolves to an array of {@link model.AWSDKSecureMessageContact|AWSDKSecureMessageContact} or is rejected with an {@link error.AWSDKError|AWSDKError}\n   * <p><br>Potential Error Codes<br>\n   * <table summary=\"ErrorCodes\" border=\"1\">\n   * <thead>\n   * <tr><th>Error Code</th><th>reason</th></tr>\n   * </thead>\n   * <tbody>\n   * <tr><td>{@link error.AWSDKErrorCode.consumerNotAuthenticated|AWSDKErrorCode.consumerNotAuthenticated}</td><td>Consumer is not authenticated.</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.illegalArgument|AWSDKErrorCode.illegalArgument}</td><td>A parameter is not the correct type.</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.internalError|AWSDKErrorCode.internalError}</td><td>The AWSDK could not complete the request.</td></tr>\n   * </tbody>\n   * </table>\n   * @since 1.1.0\n   */\n  getContacts(consumer) {\n    const currentFunction = 'SecureMessageService.getContacts';\n    this.__logger.debug(currentFunction, 'Started', consumer);\n\n    if (!(consumer instanceof AWSDKConsumer)) {\n      const error = AWSDKError.AWSDKIllegalArgument('consumer argument is null or not of type AWSDKConsumer');\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    const link = this.findNamedLink(consumer.links, 'messageContacts');\n    if (!Validator.isValidLink(link)) {\n      const error = AWSDKError.AWSDKInternalError('consumer does not have a valid messageContacts link entry');\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    const options = this.generateOptions('GET', link.url);\n    options.auth = this.getUserAuth(consumer);\n    if (!options.auth) {\n      const error = AWSDKError.AWSDKConsumerNotAuthenticated();\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    return this.executeRequest(options, AWSDKSecureMessageContactsResponse)\n      .then((response) => {\n        this.__logger.debug(currentFunction, 'Got response', response);\n        this.updateUserAuthEntry(consumer, response.authToken);\n        return response.contacts;\n      })\n      .catch((error) => {\n        this.__logger.error(currentFunction, 'Error', error);\n        throw error;\n      });\n  }\n\n  /**\n   * Send a new, reply, or forward secure message.\n   * @param {model.AWSDKConsumer} consumer the {@link model.AWSDKConsumer|AWSDKConsumer} sending the message\n   * @param {model.AWSDKMessageDraft} messageDraft the {@link model.AWSDKMessageDraft|AWSDKMessageDraft} to send\n   * @returns {Promise<boolean|error.AWSDKError>} a promise that will resolve to a boolean indicating success, or rejected with an {@link error.AWSDKError|AWSDKError}\n   * <p><br>Potential Error Codes<br>\n   * <table summary=\"ErrorCodes\" border=\"1\">\n   * <thead>\n   * <tr><th>Error Code</th><th>reason</th></tr>\n   * </thead>\n   * <tbody>\n   * <tr><td>{@link error.AWSDKErrorCode.validationError|AWSDKErrorCode.validationError}</td><td>A parameter is not the correct type.</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.consumerNotAuthenticated|AWSDKErrorCode.consumerNotAuthenticated}</td><td>Consumer is not authenticated.</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.illegalArgument|AWSDKErrorCode.illegalArgument}</td><td>A parameter is not the correct type.</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.internalError|AWSDKErrorCode.internalError}</td><td>The AWSDK could not complete the request.</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.attachmentSizeTooLarge|AWSDKErrorCode.attachmentSizeTooLarge}</td><td>The provided UploadAttachment exceeds the max kb limit.</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.consumerRecipientError|AWSDKErrorCode.consumerRecipientError}</td><td>The recipient of a secure message sent by a consumer cannot be a consumer.</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.doesNotAcceptSecureMessages|AWSDKErrorCode.doesNotAcceptSecureMessages}</td><td>The provided secure message contact does not accept secure messages.</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.unsupportedMimeType|AWSDKErrorCode.unsupportedMimeType}</td><td>The provided UploadAttachment is not of a supported mime type.</td></tr>\n   * </tbody>\n   * </table>\n   * @since 1.1.0\n   */\n  sendMessage(consumer, messageDraft) {\n    const currentFunction = 'SecureMessageService.sendMessage';\n    this.__logger.debug(currentFunction, 'Started', consumer, messageDraft);\n\n    if (!(consumer instanceof AWSDKConsumer)) {\n      const error = AWSDKError.AWSDKIllegalArgument('consumer argument is null or not of type AWSDKConsumer');\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    if (!(messageDraft instanceof AWSDKMessageDraft)) {\n      const error = AWSDKError.AWSDKIllegalArgument('messageDraft argument is null or not of type AWSDKMessageDraft');\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    const link = this.findNamedLink(consumer.links, 'compose');\n    if (!Validator.isValidLink(link)) {\n      const error = AWSDKError.AWSDKInternalError('consumer does not have a valid compose link entry');\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    if (!messageDraft.sourceIsSystemNotification && !(messageDraft.topicType instanceof AWSDKTopicType)) {\n      const error = AWSDKError.AWSDKValidationError('topicType');\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    if (messageDraft.actionType === AWSDKMessageActionType.Forward || messageDraft.actionType === AWSDKMessageActionType.New) {\n      if (!(messageDraft.recipient instanceof AWSDKSecureMessageContact)) {\n        const error = AWSDKError.AWSDKValidationError('recipient');\n        this.__logger.error(currentFunction, 'Error', error);\n        return Promise.reject(error);\n      }\n      if (messageDraft.recipient.userType === AWSDKUserType.CONSUMER) {\n        const error = AWSDKError.AWSDKConsumerRecipientError();\n        this.__logger.error(currentFunction, 'Error', error);\n        return Promise.reject(error);\n      }\n      if (!messageDraft.recipient.acceptsSecureMessage) {\n        const error = AWSDKError.AWSDKDoesNotAcceptSecureMessages();\n        this.__logger.error(currentFunction, 'Error', error);\n        return Promise.reject(error);\n      }\n    }\n    const options = this.generateOptions('POST', link.url, false);\n    options.auth = this.getUserAuth(consumer);\n    if (!options.auth) {\n      const error = AWSDKError.AWSDKConsumerNotAuthenticated();\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    const formData = new FormData();\n    const uploadAttachment = messageDraft.uploadAttachment;\n\n    let actionType = 'New';\n    if (messageDraft.actionType === AWSDKMessageActionType.Reply) actionType = 'Reply';\n    if (messageDraft.actionType === AWSDKMessageActionType.Forward) actionType = 'Forward';\n\n    if (uploadAttachment != null) {\n      const potentialError = this.__validateUploadAttachment(uploadAttachment);\n      if (potentialError != null) {\n        return Promise.reject(potentialError);\n      }\n      options.headers.Accept = `${options.headers.Accept}, ${uploadAttachment.data.type}`;\n      formData.append('attachment', uploadAttachment.data, uploadAttachment.name);\n      formData.append('contentType', uploadAttachment.data.type);\n      formData.append('filename', uploadAttachment.name);\n    }\n    formData.append('from', consumer.id.encryptedId);\n    formData.append('toList', messageDraft.recipientEncryptedId);\n    formData.append('actionType', actionType);\n    formData.append('attachHealthSummary', messageDraft.attachHealthSummary);\n    formData.append('body', messageDraft.body);\n\n    if (messageDraft.topicType) formData.append('topicType', messageDraft.topicType.key);\n    if (messageDraft.sourceMessageType) formData.append('sourceMessageType', messageDraft.sourceMessageType === AWSDKMessageType.Sent ? 'Sent' : 'Inbox');\n    if (messageDraft.sourceMessageId) formData.append('sourceMessageId', messageDraft.sourceMessageId);\n    if (messageDraft.subject) formData.append('subject', messageDraft.subject);\n\n    options.body = formData;\n    return this.executeRequest(options, AWSDKResponse)\n      .then((response) => {\n        this.__logger.info(currentFunction, 'Got response', response);\n        this.updateUserAuthEntry(consumer, response.authToken);\n        return true;\n      })\n      .catch((error) => {\n        this.__logger.error(currentFunction, 'Error', error);\n        throw error;\n      });\n  }\n\n  /**\n   * For internal Use Only!!\n   * @private\n   */\n  __validateUploadAttachment(uploadAttachment) {\n    const currentFunction = 'SecureMessageService.__validateUploadAttachment';\n    this.__logger.trace(currentFunction, 'Started', uploadAttachment);\n\n    if (!(uploadAttachment.data instanceof Blob) && !(uploadAttachment.data instanceof File)) {\n      const error = AWSDKError.AWSDKIllegalArgument('uploadAttachment.data must be a Blob or File');\n      this.__logger.error(currentFunction, 'Error', error);\n      return error;\n    }\n    const size = uploadAttachment.data.size;\n    const maxSizeInKb = this.__systemConfiguration.secureMessageAttachmentMaxSizeKB;\n    if (maxSizeInKb < (size / 1024)) {\n      const error = AWSDKError.AWSDKAttachmentSizeTooLarge('data', maxSizeInKb);\n      this.__logger.error(currentFunction, 'Error', error);\n      return error;\n    }\n    if (!Validator.isValidString(uploadAttachment.name)) {\n      const error = AWSDKError.AWSDKIllegalArgument('uploadAttachment.name is not an instance of String');\n      this.__logger.error(currentFunction, 'Error', error);\n      return error;\n    }\n    const type = uploadAttachment.data.type ? uploadAttachment.data.type : '';\n    if (!this.__systemConfiguration.mimeTypeWhitelist.includes(type)) {\n      const error = AWSDKError.AWSDKUnsupportedMimeType('uploadAttachment.data');\n      this.__logger.error(currentFunction, 'Error', error);\n      return error;\n    }\n    this.__logger.trace(currentFunction, 'Finished', uploadAttachment);\n\n    return null;\n  }\n\n  /**\n   * Remove a secure message\n   * @param {model.AWSDKConsumer} consumer the {@link model.AWSDKConsumer|AWSDKConsumer} removing the message\n   * @param {model.AWSDKSecureMessage} secureMessage the {@link model.AWSDKSecureMessage|AWSDKSecureMessage} to remove\n   * @returns {Promise<model.AWSDKDetailedMessage|error.AWSDKError>} a promise that will resolve to an {@link model.AWSDKDetailedMessage|AWSDKDetailedMessage} indicating success, or rejected with an {@link error.AWSDKError|AWSDKError}\n   * <p><br>Potential Error Codes<br>\n   * <table summary=\"ErrorCodes\" border=\"1\">\n   * <thead>\n   * <tr><th>Error Code</th><th>reason</th></tr>\n   * </thead>\n   * <tbody>\n   * <tr><td>{@link error.AWSDKErrorCode.consumerNotAuthenticated|AWSDKErrorCode.consumerNotAuthenticated}</td><td>Consumer is not authenticated.</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.illegalArgument|AWSDKErrorCode.illegalArgument}</td><td>A parameter is not the correct type.</td></tr>\n   * </tbody>\n   * </table>\n   * @since 1.2.3\n   */\n  removeMessage(consumer, secureMessage) {\n    const currentFunction = 'SecureMessageService.removeMessage';\n    this.__logger.debug(currentFunction, 'Started', consumer, secureMessage);\n    if (!(consumer instanceof AWSDKConsumer)) {\n      const error = AWSDKError.AWSDKIllegalArgument('consumer argument is null or not of type AWSDKConsumer');\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    if (!(secureMessage instanceof AWSDKSecureMessage)) {\n      const error = AWSDKError.AWSDKIllegalArgument('secureMessage argument is null or not of type AWSDKSecureMessage');\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    const options = this.generateOptions('DELETE', secureMessage.href);\n    options.auth = this.getUserAuth(consumer);\n    if (!options.auth) {\n      const error = AWSDKError.AWSDKConsumerNotAuthenticated();\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    return this.executeRequest(options, AWSDKDetailedMessageResponse)\n      .then((response) => {\n        this.__logger.debug(currentFunction, 'Got response', response);\n        this.updateUserAuthEntry(consumer, response.authToken);\n        this.__logger.info(currentFunction, 'Completed');\n        return response.message;\n      })\n      .catch((error) => {\n        this.__logger.error(currentFunction, 'Error', error);\n        throw error;\n      });\n  }\n\n  /**\n   * Update a {@link model.AWSDKInboxMessage|AWSDKInboxMessage} or {@link model.AWSDKDetailedMessage|AWSDKDetailedMessage} with {@link model.AWSDKMessageType|AWSDKMessageType} \"Inbox\" from unread to read.\n   * @param {model.AWSDKConsumer} consumer the {@link model.AWSDKConsumer|AWSDKConsumer} who read the message\n   * @param {model.AWSDKInboxMessage|model.AWSDKDetailedMessage} inboxOrDetailedMessage the {@link model.AWSDKInboxMessage|AWSDKInboxMessage} or {@link model.AWSDKDetailedMessage|AWSDKDetailedMessage} to update\n   * @returns {Promise<model.AWSDKDetailedMessage|error.AWSDKError>} a promise that will resolve to an {@link model.AWSDKDetailedMessage|AWSDKDetailedMessage} indicating success, or rejected with an {@link error.AWSDKError|AWSDKError}\n   * <p><br>Potential Error Codes<br>\n   * <table summary=\"ErrorCodes\" border=\"1\">\n   * <thead>\n   * <tr><th>Error Code</th><th>reason</th></tr>\n   * </thead>\n   * <tbody>\n   * <tr><td>{@link error.AWSDKErrorCode.consumerNotAuthenticated|AWSDKErrorCode.consumerNotAuthenticated}</td><td>Consumer is not authenticated.</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.illegalArgument|AWSDKErrorCode.illegalArgument}</td><td>A parameter is not the correct type.</td></tr>\n   * </tbody>\n   * </table>\n   * @since 1.2.3\n   */\n  updateMessageRead(consumer, inboxOrDetailedMessage) {\n    const currentFunction = 'SecureMessageService.updateMessageRead';\n    this.__logger.debug(currentFunction, 'Started', consumer, inboxOrDetailedMessage);\n    if (!(consumer instanceof AWSDKConsumer)) {\n      const error = AWSDKError.AWSDKIllegalArgument('consumer argument is null or not of type AWSDKConsumer');\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    if (!(inboxOrDetailedMessage instanceof AWSDKInboxMessage)\n      && !(inboxOrDetailedMessage instanceof AWSDKDetailedMessage\n        && inboxOrDetailedMessage.messageType === AWSDKMessageType.Inbox)) {\n      const error = AWSDKError.AWSDKIllegalArgument('inboxOrDetailedMessage argument is null or not of type AWSDKInboxMessage or AWSDKDetailedMessage');\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    const options = this.generateOptions('PUT', inboxOrDetailedMessage.href);\n    options.auth = this.getUserAuth(consumer);\n    if (!options.auth) {\n      const error = AWSDKError.AWSDKConsumerNotAuthenticated();\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    return this.executeRequest(options, AWSDKDetailedMessageResponse)\n      .then((response) => {\n        this.__logger.debug(currentFunction, 'Got response', response);\n        this.updateUserAuthEntry(consumer, response.authToken);\n        this.__logger.info(currentFunction, 'Completed');\n        return response.message;\n      })\n      .catch((error) => {\n        this.__logger.error(currentFunction, 'Error', error);\n        throw error;\n      });\n  }\n\n  /**\n   * Retrieve the blob for a given {@link model.AWSDKAttachment|AWSDKAttachment}\n   * @param {model.AWSDKConsumer} consumer the {@link model.AWSDKConsumer|AWSDKConsumer} to get the attachment for\n   * @param {model.AWSDKAttachment} attachment the {@link model.AWSDKAttachment|AWSDKAttachment} to get\n   * @returns {Promise<Blob|error.AWSDKError>} a promise that will resolve to a Blob of data or rejected with an {@link error.AWSDKError|AWSDKError}.\n   * <p><br>Potential Error Codes<br>\n   * <table summary=\"ErrorCodes\" border=\"1\">\n   * <thead>\n   * <tr><th>Error Code</th><th>reason</th></tr>\n   * </thead>\n   * <tbody>\n   * <tr><td>{@link error.AWSDKErrorCode.consumerNotAuthenticated|AWSDKErrorCode.consumerNotAuthenticated}</td><td>Consumer is not authenticated.</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.internalError|AWSDKErrorCode.internalError}</td><td>The AWSDK could not complete the request.</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.illegalArgument|AWSDKErrorCode.illegalArgument}</td><td>A parameter is not the correct type.</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.unsupportedMimeType|AWSDKErrorCode.unsupportedMimeType}</td><td>The attachment data's mime type is not supported.</td></tr>\n   * </tbody>\n   * </table>\n   * @since 1.2.3\n   */\n  getAttachment(consumer, attachment) {\n    const currentFunction = 'SecureMessageService.getAttachment';\n    this.__logger.debug(currentFunction, 'Started', consumer, attachment);\n    if (!(consumer instanceof AWSDKConsumer)) {\n      const error = AWSDKError.AWSDKIllegalArgument('consumer argument is null or not of type AWSDKConsumer');\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    if (!(attachment instanceof AWSDKAttachment)) {\n      const error = AWSDKError.AWSDKIllegalArgument('attachment argument is null or not of type AWSDKAttachment');\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    const link = this.findNamedLink(attachment.links, 'getAttachment');\n    if (!Validator.isValidLink(link)) {\n      const error = AWSDKError.AWSDKInternalError('attachment does not have a valid getAttachment link entry');\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    const mimeType = attachment.type;\n    if (!Validator.isValidString(mimeType)) {\n      const error = AWSDKError.AWSDKUnsupportedMimeType('attachment.type');\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    const options = this.generateOptions('GET', link.url);\n    const currAccHeader = options.headers.Accept;\n    options.headers.Accept = `${currAccHeader}, ${mimeType}`;\n    options.auth = this.getUserAuth(consumer);\n    if (!options.auth) {\n      const error = AWSDKError.AWSDKConsumerNotAuthenticated();\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    return this.executeRequest(options)\n      .then((blob) => {\n        this.__logger.debug(currentFunction, 'Completed');\n        return new Blob([blob], { type: mimeType });\n      })\n      .catch((error) => {\n        this.__logger.error(currentFunction, 'Error', error);\n        throw error;\n      });\n  }\n\n  /**\n   * Refresh the given {@link model.AWSDKInbox|AWSDKInbox} with any changes that have occurred since its timestamp\n   * @param {model.AWSDKConsumer} consumer the {@link model.AWSDKConsumer|AWSDKConsumer} to get the refreshed inbox for\n   * @param {model.AWSDKInbox} inbox the {@link model.AWSDKInbox|AWSDKInbox} to refresh\n   * @returns {Promise<boolean|error.AWSDKError>} a promise that will resolve to a boolean indicating success, or rejected with an {@link error.AWSDKError|AWSDKError}\n   * <p><br>Potential Error Codes<br>\n   * <table summary=\"ErrorCodes\" border=\"1\">\n   * <thead>\n   * <tr><th>Error Code</th><th>reason</th></tr>\n   * </thead>\n   * <tbody>\n   * <tr><td>{@link error.AWSDKErrorCode.consumerNotAuthenticated|AWSDKErrorCode.consumerNotAuthenticated}</td><td>Consumer is not authenticated.</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.illegalArgument|AWSDKErrorCode.illegalArgument}</td><td>A parameter is not the correct type.</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.internalError|AWSDKErrorCode.internalError}</td><td>The AWSDK could not complete the request.</td></tr>\n   * </tbody>\n   * </table>\n   * @since 1.2.3\n   */\n  refreshInbox(consumer, inbox) {\n    const currentFunction = 'SecureMessageService.refreshInbox';\n    this.__logger.debug(currentFunction, 'Started', consumer, inbox);\n    if (!(consumer instanceof AWSDKConsumer)) {\n      const error = AWSDKError.AWSDKIllegalArgument('consumer argument is null or not of type AWSDKConsumer');\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    if (!(inbox instanceof AWSDKInbox)) {\n      const error = AWSDKError.AWSDKIllegalArgument('inbox argument is null or not of type AWSDKInbox');\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    const link = this.findNamedLink(inbox.links, 'changes');\n    if (!Validator.isValidLink(link)) {\n      const error = AWSDKError.AWSDKInternalError('inbox does not have a valid changes link entry');\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    const options = this.generateOptions('GET', link.url);\n    options.auth = this.getUserAuth(consumer);\n    if (!options.auth) {\n      const error = AWSDKError.AWSDKConsumerNotAuthenticated();\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n\n    options.form.set('since', inbox.timestamp.getMilliseconds());\n\n    return this.executeRequest(options, AWSDKInboxResponse)\n      .then((response) => {\n        this.__logger.debug(currentFunction, 'Got response', response);\n        this.updateUserAuthEntry(consumer, response.authToken);\n        inbox.__assimilate(response.inbox);\n        return true;\n      })\n      .catch((error) => {\n        this.__logger.error(currentFunction, 'Error', error);\n        throw error;\n      });\n  }\n\n  /**\n   * Refresh the given {@link model.AWSDKSentMessages|AWSDKSentMessages} with any changes that have occurred since its timestamp\n   * @param {model.AWSDKConsumer} consumer the {@link model.AWSDKConsumer|AWSDKConsumer} to get the refreshed sentMessages for\n   * @param {model.AWSDKSentMessages} sentMessages the {@link model.AWSDKSentMessages|AWSDKSentMessages} to refresh\n   * @returns {Promise<boolean|error.AWSDKError>} a promise that will resolve to a boolean indicating success, or rejected with an {@link error.AWSDKError|AWSDKError}\n   * <p><br>Potential Error Codes<br>\n   * <table summary=\"ErrorCodes\" border=\"1\">\n   * <thead>\n   * <tr><th>Error Code</th><th>reason</th></tr>\n   * </thead>\n   * <tbody>\n   * <tr><td>{@link error.AWSDKErrorCode.consumerNotAuthenticated|AWSDKErrorCode.consumerNotAuthenticated}</td><td>Consumer is not authenticated.</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.illegalArgument|AWSDKErrorCode.illegalArgument}</td><td>A parameter is not the correct type.</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.internalError|AWSDKErrorCode.internalError}</td><td>The AWSDK could not complete the request.</td></tr>\n   * </tbody>\n   * </table>\n   * @since 1.2.3\n   */\n  refreshSentMessages(consumer, sentMessages) {\n    const currentFunction = 'SecureMessageService.refreshSentMessages';\n    this.__logger.debug(currentFunction, 'Started', consumer, sentMessages);\n    if (!(consumer instanceof AWSDKConsumer)) {\n      const error = AWSDKError.AWSDKIllegalArgument('consumer argument is null or not of type AWSDKConsumer');\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    if (!(sentMessages instanceof AWSDKSentMessages)) {\n      const error = AWSDKError.AWSDKIllegalArgument('sentMessages argument is null or not of type AWSDKSentMessages');\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    const link = this.findNamedLink(sentMessages.links, 'changes');\n    if (!Validator.isValidLink(link)) {\n      const error = AWSDKError.AWSDKInternalError('sentMessages does not have a valid changes link entry');\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    const options = this.generateOptions('GET', link.url);\n    options.auth = this.getUserAuth(consumer);\n    if (!options.auth) {\n      const error = AWSDKError.AWSDKConsumerNotAuthenticated();\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n\n    options.form.set('since', sentMessages.timestamp.getMilliseconds());\n\n    return this.executeRequest(options, AWSDKSentMessagesResponse)\n      .then((response) => {\n        this.__logger.debug(currentFunction, 'Got response', response);\n        this.updateUserAuthEntry(consumer, response.authToken);\n        sentMessages.__assimilate(response.sentMessages);\n        return true;\n      })\n      .catch((error) => {\n        this.__logger.error(currentFunction, 'Error', error);\n        throw error;\n      });\n  }\n}\n\nexport default SecureMessageService;\n","/*!\n * American Well Consumer Web SDK\n *\n * Copyright (c) 2017 American Well.\n * All rights reserved.\n *\n * It is illegal to use, reproduce or distribute\n * any part of this Intellectual Property without\n * prior written authorization from American Well.\n */\n\nimport AWSDKResponse from './awsdk_response';\nimport AWSDKCreditCardType from '../../../model/billing/awsdk_credit_card_type';\nimport GenericParser from '../../parser/generic_parser';\n\nclass AWSDKCreditCardTypesResponse extends AWSDKResponse {\n  get creditCardTypes() {\n    return this.__data.creditCards.map(item => GenericParser.parseObject(item, AWSDKCreditCardType));\n  }\n}\n\nexport default AWSDKCreditCardTypesResponse;\n","/*!\n * American Well Consumer Web SDK\n *\n * Copyright (c) 2017 American Well.\n * All rights reserved.\n *\n * It is illegal to use, reproduce or distribute\n * any part of this Intellectual Property without\n * prior written authorization from American Well.\n */\n\nimport AWSDKResponse from './awsdk_response';\nimport AWSDKCountry from '../../../model/awsdk_country';\nimport GenericParser from '../../parser/generic_parser';\n\nclass AWSDKCountriesResponse extends AWSDKResponse {\n  get countries() {\n    return this.__data.countries.map(item => GenericParser.parseObject(item, AWSDKCountry));\n  }\n}\n\nexport default AWSDKCountriesResponse;\n","/*!\n * American Well Consumer Web SDK\n *\n * Copyright (c) 2017 American Well.\n * All rights reserved.\n *\n * It is illegal to use, reproduce or distribute\n * any part of this Intellectual Property without\n * prior written authorization from American Well.\n */\n\nimport AWSDKResponse from './awsdk_response';\nimport AWSDKHealthPlan from '../../../model/insurance/awsdk_health_plan';\nimport GenericParser from '../../parser/generic_parser';\n\nclass AWSDKHealthPlansResponse extends AWSDKResponse {\n  get healthPlans() {\n    return this.__data.healthPlans.map(item => GenericParser.parseObject(item, AWSDKHealthPlan));\n  }\n}\n\nexport default AWSDKHealthPlansResponse;\n","/*!\n * American Well Consumer Web SDK\n *\n * Copyright © 2019 American Well.\n * All rights reserved.\n *\n * It is illegal to use, reproduce or distribute\n * any part of this Intellectual Property without\n * prior written authorization from American Well.\n */\n\nimport AWSDKDataObject from './awsdk_dataobject';\n\n/**\n * Representation of supported vendors for different visit types.\n * @property {string} name The name of the vendor.\n * @property {string} clientApiUrl The url used to access vendor api code\n * @since 2.0.0\n * @extends model.AWSDKDataObject\n */\nclass AWSDKModalityVendor extends AWSDKDataObject {\n  get name() {\n    return this.__data.name;\n  }\n\n  get clientApiUrl() {\n    return this.__data.clientApiUrl;\n  }\n}\n\nexport default AWSDKModalityVendor;\n","/*!\n * American Well Consumer Web SDK\n *\n * Copyright © 2017 American Well.\n * All rights reserved.\n *\n * It is illegal to use, reproduce or distribute\n * any part of this Intellectual Property without\n * prior written authorization from American Well.\n */\nimport AWSDKCountry from '../../../model/awsdk_country';\nimport AWSDKHealthPlan from '../../../model/insurance/awsdk_health_plan';\nimport AWSDKLanguage from '../../../model/awsdk_language';\nimport AWSDKRelationshipToSubscriberCode from '../../../model/insurance/awsdk_relationship_to_subscriber_code';\nimport AWSDKResponse from './awsdk_response';\nimport AWSDKSystemConfiguration from '../../../model/awsdk_system_configuration';\nimport GenericParser from '../../parser/generic_parser';\nimport AWSDKCreditCardType from '../../../model/billing/awsdk_credit_card_type';\nimport AWSDKProviderType from '../../../model/provider/awsdk_provider_type';\nimport AWSDKModality from '../../../model/awsdk_modality';\nimport AWSDKModalityVendor from '../../../model/awsdk_modality_vendor';\nimport AWSDKPracticeSearchType from '../../../model/practice/awsdk_practice_search_type';\n\nclass AWSDKInitializationResponse extends AWSDKResponse {\n  get systemConfiguration() {\n    return this.__data.initialization ? GenericParser.parseObject(this.__data.initialization.systemConfiguration, AWSDKSystemConfiguration) : null;\n  }\n\n  get healthPlans() {\n    return this.__data.initialization ? this.__data.initialization.healthPlans.map(item => GenericParser.parseObject(item, AWSDKHealthPlan)) : null;\n  }\n\n  get initializationLinks() {\n    return this.__data.initialization ? this.__data.initialization.links : null;\n  }\n\n  get languages() {\n    return this.__data.initialization ? this.__data.initialization.languages.map(item => GenericParser.parseObject(item, AWSDKLanguage)) : null;\n  }\n\n  get relationshipsToSubsriber() {\n    return this.__data.initialization ? this.__data.initialization.relationshipsToSubscriber.map(item => GenericParser.parseObject(item, AWSDKRelationshipToSubscriberCode)) : null;\n  }\n\n  get countries() {\n    return this.__data.initialization ? this.__data.initialization.countries.map(item => GenericParser.parseObject(item, AWSDKCountry)) : null;\n  }\n\n  get creditCardTypes() {\n    return this.__data.initialization ? this.__data.initialization.creditCards.map(item => GenericParser.parseObject(item, AWSDKCreditCardType)) : null;\n  }\n\n  get providerTypes() {\n    return this.__data.initialization ? this.__data.initialization.providerTypes.map(item => GenericParser.parseObject(item, AWSDKProviderType)) : null;\n  }\n\n  get practiceSearchTypes() {\n    return this.__data.initialization ? this.__data.initialization.practiceSearchTypes.map(item => GenericParser.parseObject(item, AWSDKPracticeSearchType)) : null;\n  }\n\n  /**\n   * @since 1.4.0\n   */\n  get availableModalities() {\n    return (this.__data.initialization && Array.isArray(this.__data.initialization.availableModalities)) ? this.__data.initialization.availableModalities.map(item => GenericParser.parseObject(item, AWSDKModality)) : [];\n  }\n\n  /**\n   * The modality vendors for the platform.\n   * @type {model.AWSDKModalityVendor[]}\n   * @since 2.0.0\n   * @private\n   */\n  get modalityVendors() {\n    return (this.__data.initialization && Array.isArray(this.__data.initialization.modalityVendors)) ? this.__data.initialization.modalityVendors.map(item => GenericParser.parseObject(item, AWSDKModalityVendor)) : [];\n  }\n}\n\nexport default AWSDKInitializationResponse;\n","/*!\n * American Well Consumer Web SDK\n *\n * Copyright © 2017 American Well.\n * All rights reserved.\n *\n * It is illegal to use, reproduce or distribute\n * any part of this Intellectual Property without\n * prior written authorization from American Well.\n */\nimport AWSDKLanguage from '../../../model/awsdk_language';\nimport AWSDKResponse from './awsdk_response';\nimport GenericParser from '../../parser/generic_parser';\n\n/**\n * Represents a response class for an array of {@link model.AWSDKLanguage|AWSDKLanguage} supported by the sdk.\n * @property {model.AWSDKLanguage[]} languages an array of languages supported by the sdk.\n * @extends model.AWSDKResponse\n */\nclass AWSDKLanguagesResponse extends AWSDKResponse {\n  get languages() {\n    return this.__data.languages.map(item => GenericParser.parseObject(item, AWSDKLanguage));\n  }\n}\n\nexport default AWSDKLanguagesResponse;\n","/*!\n * American Well Consumer Web SDK\n *\n * Copyright (c) 2017 American Well.\n * All rights reserved.\n *\n * It is illegal to use, reproduce or distribute\n * any part of this Intellectual Property without\n * prior written authorization from American Well.\n */\n\nimport AWSDKResponse from './awsdk_response';\nimport AWSDKRelationshipToSubscriberCode from '../../../model/insurance/awsdk_relationship_to_subscriber_code';\nimport GenericParser from '../../parser/generic_parser';\n\nclass AWSDKRelationshipsResponse extends AWSDKResponse {\n  get relationshipsToSubscriber() {\n    return this.__data.relationships.map(item => GenericParser.parseObject(item, AWSDKRelationshipToSubscriberCode));\n  }\n}\n\nexport default AWSDKRelationshipsResponse;\n","/*!\n * American Well Consumer Web SDK\n *\n * Copyright (c) 2017 American Well.\n * All rights reserved.\n *\n * It is illegal to use, reproduce or distribute\n * any part of this Intellectual Property without\n * prior written authorization from American Well.\n */\n\nimport AWSDKResponse from './awsdk_response';\nimport AWSDKSystemConfiguration from '../../../model/awsdk_system_configuration';\nimport GenericParser from '../../parser/generic_parser';\n\nclass AWSDKSystemConfigurationResponse extends AWSDKResponse {\n  get systemConfiguration() {\n    return GenericParser.parseObject(this.__data.configuration, AWSDKSystemConfiguration);\n  }\n}\n\nexport default AWSDKSystemConfigurationResponse;\n","/*!\n * American Well Consumer Web SDK\n *\n * Copyright © 2017 American Well.\n * All rights reserved.\n *\n * It is illegal to use, reproduce or distribute\n * any part of this Intellectual Property without\n * prior written authorization from American Well.\n */\nimport AWSDKResponse from './awsdk_response';\nimport GenericParser from '../../parser/generic_parser';\n\nclass AWSDKValidateSdkApiKeyResponse extends AWSDKResponse {\n  get valid() {\n    return this.__data.sdkAuthentication ? GenericParser.parseBoolean(this.__data.sdkAuthentication.valid) : false;\n  }\n\n  get links() {\n    return this.__data.links;\n  }\n\n  /**\n   * The version of the Amwell platform that we are initializing against\n   * @type {String}\n   * @private\n   */\n  get amWellPlatformVersion() {\n    return this.__data.amWellPlatformVersion;\n  }\n}\n\nexport default AWSDKValidateSdkApiKeyResponse;\n","/*!\r\n * American Well Consumer Web SDK\r\n *\r\n * Copyright (c) 2018 American Well.\r\n * All rights reserved.\r\n *\r\n * It is illegal to use, reproduce or distribute\r\n * any part of this Intellectual Property without\r\n * prior written authorization from American Well.\r\n */\r\n\r\nimport AWSDKResponse from './awsdk_response';\r\nimport GenericParser from '../../parser/generic_parser';\r\nimport AWSDKTopicType from '../../../model/awsdk_topic_type';\r\nimport AWSDKSentMessages from '../../../model/secure_message/awsdk_sent_messages';\r\nimport AWSDKSentMessage from '../../../model/secure_message/awsdk_sent_message';\r\n\r\n/**\r\n * Simple wrapper around an {@link model.AWSDKTopicType[]}\r\n * @property {model.AWSDKTopicType[]} topicTypes an array of {@link model.AWSDKTopicType}\r\n * @extends model.AWSDKResponse\r\n */\r\nclass AWSDKTopicTypesResponse extends AWSDKResponse {\r\n  get topicTypes() {\r\n    return this.__data.topics ? this.__data.topics.map(item => GenericParser.parseObject(item, AWSDKTopicType)) : null;\r\n  }\r\n}\r\n\r\nexport default AWSDKTopicTypesResponse;\r\n","/*!\n * American Well Consumer Web SDK\n *\n * Copyright (c) 2018 American Well.\n * All rights reserved.\n *\n * It is illegal to use, reproduce or distribute\n * any part of this Intellectual Property without\n * prior written authorization from American Well.\n */\n\nimport AWSDKResponse from './awsdk_response';\nimport GenericParser from '../../parser/generic_parser';\nimport AWSDKProviderType from '../../../model/provider/awsdk_provider_type';\n\n/**\n * A wrapper class representing a collection of {@link model.AWSDKProviderType} objects\n * @property {model.AWSDKProviderType[]} providerTypes representing an array of {@link model.AWSDKProviderType} objects\n * @extends model.AWSDKResponse\n */\nclass AWSDKProviderTypesResponse extends AWSDKResponse {\n  get providerTypes() {\n    return (Array.isArray(this.__data.providerTypes) && this.__data.providerTypes.map(item => GenericParser.parseObject(item, AWSDKProviderType))) || [];\n  }\n}\nexport default AWSDKProviderTypesResponse;\n","/*!\n * American Well Consumer Web SDK\n *\n * Copyright (c) 2018 American Well.\n * All rights reserved.\n *\n * It is illegal to use, reproduce or distribute\n * any part of this Intellectual Property without\n * prior written authorization from American Well.\n */\nimport AWSDKTrackerTemplate from '../../../model/tracker/awsdk_tracker_template';\nimport GenericParser from '../../parser/generic_parser';\nimport AWSDKResponse from './awsdk_response';\n\n/**\n * This class represents a response whose payload is a list of {@link model.AWSDKTrackerTemplate|AWSDKTrackerTemplate}\n * @property {model.AWSDKTrackerTemplate[]} trackerTemplates an array of {@link model.AWSDKTrackerTemplate|AWSDKTrackerTemplate} objects\n * @extends model.AWSDKResponse\n * @since 1.4.0\n */\nclass AWSDKTrackerTemplatesList extends AWSDKResponse {\n  get trackerTemplates() {\n    return (Array.isArray(this.__data.trackerTemplates) && this.__data.trackerTemplates.map(item => GenericParser.parseObject(item, AWSDKTrackerTemplate))) || [];\n  }\n}\nexport default AWSDKTrackerTemplatesList;\n","/*!\n * American Well Consumer Web SDK\n *\n * Copyright © 2018 American Well.\n * All rights reserved.\n *\n * It is illegal to use, reproduce or distribute\n * any part of this Intellectual Property without\n * prior written authorization from American Well.\n */\nimport AWSDKModality from '../../../model/awsdk_modality';\nimport AWSDKResponse from './awsdk_response';\nimport GenericParser from '../../parser/generic_parser';\n\n/**\n * Represents a response class for an array of {@link model.AWSDKModality|AWSDKModality} supported by the sdk.\n * @property {model.AWSDKModality[]} availableModalities an array of modalities supported by the sdk.\n * @since 1.4.0\n * @extends model.AWSDKResponse\n */\nclass AWSDKModalitiesResponse extends AWSDKResponse {\n  get availableModalities() {\n    return this.__data.availableModalities.map(item => GenericParser.parseObject(item, AWSDKModality));\n  }\n}\nexport default AWSDKModalitiesResponse;\n","/*!\n * American Well Consumer Web SDK\n *\n * Copyright (c) 2018 American Well.\n * All rights reserved.\n *\n * It is illegal to use, reproduce or distribute\n * any part of this Intellectual Property without\n * prior written authorization from American Well.\n */\nimport AWSDKPlatformType from '../../../model/awsdk_platform_type';\nimport AWSDKResponse from './awsdk_response';\nimport GenericParser from '../../parser/generic_parser';\n\n/**\n * This class represents a wrapper around the response obtained from getting a list of supported platformTypes from the Telehealth platform\n * @property {model.AWSDKPlatformType[]} platformTypes an array of {@link model.AWSDKPlatformType|AWSDKPlatformType}\n * @extends model.AWSDKResponse\n */\nclass AWSDKPlatformTypeResponse extends AWSDKResponse {\n  get platformTypes() {\n    return Array.isArray(this.__data.platformTypes) ? this.__data.platformTypes.map(entry => GenericParser.parseObject(entry, AWSDKPlatformType)) : [];\n  }\n}\nexport default AWSDKPlatformTypeResponse;\n","/*!\n * American Well Consumer Web SDK\n *\n * Copyright © 2017 American Well.\n * All rights reserved.\n *\n * It is illegal to use, reproduce or distribute\n * any part of this Intellectual Property without\n * prior written authorization from American Well.\n */\n\nimport AWSDKCreditCardTypesResponse from './../model/response/awsdk_credit_card_types_response';\nimport AWSDKCountriesResponse from './../model/response/awsdk_countries_response';\nimport AWSDKError from './../../error/awsdk_error';\nimport AWSDKErrorCode from './../../error/awsdk_error_code';\nimport AWSDKHealthPlansResponse from './../model/response/awsdk_health_plans_response';\nimport AWSDKInitializationResponse from './../model/response/awsdk_initialization_response';\nimport AWSDKLanguagesResponse from './../model/response/awsdk_languages_response';\nimport AWSDKRelationshipsResponse from './../model/response/awsdk_relationships_response';\nimport AWSDKSystemConfigurationResponse from './../model/response/awsdk_system_configuration_response';\nimport AWSDKValidateSdkApiKeyResponse from '../model/response/validate_sdkapikey_response';\nimport AWSDKTopicTypesResponse from '../model/response/awsdk_topic_types_response';\nimport AWSDKProviderTypesResponse from '../model/response/awsdk_provider_types_response';\nimport AWSDKTrackerTemplatesList from '../model/response/awsdk_tracker_templates_list';\nimport Validator from '../validator/validator';\nimport Service from './../../service/service';\nimport AWSDKModalitiesResponse from '../model/response/awsdk_modalities_response';\nimport AWSDKPlatformTypeResponse from '../model/response/awsdk_platform_type_response';\n\n/**\n * This is the InitializationService class.\n * @since 1.0.0\n * @hideconstructor\n * @extends service.Service\n */\nclass InitializationService extends Service {\n  /**\n   * Validate the sdk api key and return links\n   * @since 1.0.0\n   * @returns a Promise.<AWSDKInitSdkResponse>\n   */\n  validateSdkApiKey(url) {\n    const currentFunction = 'validateSdkApiKey';\n    this.__logger.debug(currentFunction, 'Started');\n    const options = this.generateOptions('POST', url);\n    options.auth = this.getSdkAuth();\n    options.form.append('sdkApiKey', this.__config.sdkApiKey);\n    return this.executeRequest(options, AWSDKValidateSdkApiKeyResponse)\n      .then((validationResponse) => {\n        // The Amwell platform version is first seen here\n        // add it manually for later comparison\n        this.__config.amWellPlatformVersion = validationResponse.amWellPlatformVersion;\n        return Promise.resolve(validationResponse);\n      })\n      .catch((error) => {\n        this.__logger.error(currentFunction, 'Error', error);\n        let resolvedError = error;\n        if (error instanceof AWSDKError\n          && error.errorCode === AWSDKErrorCode.authenticationAccessDenied) {\n          resolvedError = AWSDKError.AWSDKInitializationError();\n        }\n        throw resolvedError;\n      });\n  }\n  /**\n   * Validate the sdk api key and return links\n   * @since 1.0.0\n   * @returns a Promise.<AWSDKInitSdkResponse>\n   */\n  initialization() {\n    const link = this.findNamedLink(this.__links, 'initialization');\n    if (!Validator.isValidLink(link)) {\n      return Promise.reject(AWSDKError.AWSDKInitializationError());\n    }\n    const options = this.generateOptions('GET', link.url);\n    options.auth = this.getSdkAuth();\n    return this.executeRequest(options, AWSDKInitializationResponse);\n  }\n\n  getSystemConfiguration() {\n    const currentFunction = 'getSystemConfiguration';\n    this.__logger.debug(currentFunction, 'Started');\n    const link = this.findNamedLink(this.__links, 'configuration');\n    if (!Validator.isValidLink(link)) {\n      const error = AWSDKError.AWSDKInternalError('service does not have a \"configuration\" link entry');\n      this.__logger.error(currentFunction, 'error', error);\n      return Promise.reject(error);\n    }\n    const options = this.generateOptions('GET', link.url);\n    options.auth = this.getSdkAuth();\n    return this.executeRequest(options, AWSDKSystemConfigurationResponse)\n      .then((systemConfigurationResponse) => {\n        this.__logger.debug(currentFunction, 'Got response', systemConfigurationResponse);\n        return systemConfigurationResponse.systemConfiguration;\n      })\n      .catch((error) => {\n        this.__logger.error(currentFunction, 'Error', error);\n        throw error;\n      });\n  }\n\n  getLanguages() {\n    const currentFunction = 'getLanguages';\n    this.__logger.debug(currentFunction, 'Started');\n    const link = this.findNamedLink(this.__links, 'languages');\n    if (!Validator.isValidLink(link)) {\n      const error = AWSDKError.AWSDKInternalError('service does not have a \"languages\" link entry');\n      this.__logger.error(currentFunction, 'error', error);\n      return Promise.reject(error);\n    }\n    const options = this.generateOptions('GET', link.url);\n    options.auth = this.getSdkAuth();\n    return this.executeRequest(options, AWSDKLanguagesResponse)\n      .then((languagesResponse) => {\n        this.__logger.debug(currentFunction, 'Got response', languagesResponse);\n        return languagesResponse.languages;\n      })\n      .catch((error) => {\n        this.__logger.error(currentFunction, 'Error', error);\n        throw error;\n      });\n  }\n\n  getProviderTypes() {\n    const currentFunction = 'getProviderTypes';\n    this.__logger.debug(currentFunction, 'Started');\n    const link = this.findNamedLink(this.__links, 'providerTypes');\n    if (!Validator.isValidLink(link)) {\n      const error = AWSDKError.AWSDKInternalError('service does not have a \"providerTypes\" link entry');\n      this.__logger.error(currentFunction, 'error', error);\n      return Promise.reject(error);\n    }\n    const options = this.generateOptions('GET', link.url);\n    options.auth = this.getSdkAuth();\n    return this.executeRequest(options, AWSDKProviderTypesResponse)\n      .then((providerTypesResponse) => {\n        this.__logger.debug(currentFunction, 'Got response', providerTypesResponse);\n        return providerTypesResponse.providerTypes;\n      })\n      .catch((error) => {\n        this.__logger.error(currentFunction, 'Error', error);\n        throw error;\n      });\n  }\n\n  getTopicTypes() {\n    const currentFunction = 'getTopicTypes';\n    this.__logger.debug(currentFunction, 'Started');\n    const link = this.findNamedLink(this.__links, 'topicTypes');\n    if (!Validator.isValidLink(link)) {\n      const error = AWSDKError.AWSDKInternalError('service does not have a \"topicTypes\" link entry');\n      this.__logger.error(currentFunction, 'error', error);\n      return Promise.reject(error);\n    }\n    const options = this.generateOptions('GET', link.url);\n    options.auth = this.getSdkAuth();\n    return this.executeRequest(options, AWSDKTopicTypesResponse)\n      .then((topicTypesResponse) => {\n        this.__logger.debug(currentFunction, 'Got response', topicTypesResponse);\n        return topicTypesResponse.topicTypes;\n      })\n      .catch((error) => {\n        this.__logger.error(currentFunction, 'Error', error);\n        throw error;\n      });\n  }\n\n  getCreditCardTypes() {\n    const currentFunction = 'getCreditCardTypes';\n    this.__logger.debug(currentFunction, 'Started');\n    const link = this.findNamedLink(this.__links, 'creditCards');\n    if (!Validator.isValidLink(link)) {\n      const error = AWSDKError.AWSDKInternalError('service does not have a \"creditCards\" link entry');\n      this.__logger.error(currentFunction, 'error', error);\n      return Promise.reject(error);\n    }\n    const options = this.generateOptions('GET', link.url);\n    options.auth = this.getSdkAuth();\n    return this.executeRequest(options, AWSDKCreditCardTypesResponse)\n      .then((creditCardTypesResponse) => {\n        this.__logger.debug(currentFunction, 'Got response', creditCardTypesResponse);\n        return creditCardTypesResponse.creditCardTypes;\n      })\n      .catch((error) => {\n        this.__logger.error(currentFunction, 'Error', error);\n        throw error;\n      });\n  }\n\n  getHealthPlans() {\n    const currentFunction = 'getHealthPlans';\n    this.__logger.debug(currentFunction, 'Started');\n    const link = this.findNamedLink(this.__links, 'healthPlans');\n    if (!Validator.isValidLink(link)) {\n      const error = AWSDKError.AWSDKInternalError('service does not have a \"healthPlans\" link entry');\n      this.__logger.error(currentFunction, 'error', error);\n      return Promise.reject(error);\n    }\n    const options = this.generateOptions('GET', link.url);\n    options.auth = this.getSdkAuth();\n    return this.executeRequest(options, AWSDKHealthPlansResponse)\n      .then((healthPlansResponse) => {\n        this.__logger.debug(currentFunction, 'Got response', healthPlansResponse);\n        return healthPlansResponse.healthPlans;\n      })\n      .catch((error) => {\n        this.__logger.error(currentFunction, 'Error', error);\n        throw error;\n      });\n  }\n\n  getRelationshipsToSubscriber() {\n    const currentFunction = 'getRelationshipsToSubscriber';\n    this.__logger.debug(currentFunction, 'Started');\n    const link = this.findNamedLink(this.__links, 'relationships');\n    if (!Validator.isValidLink(link)) {\n      const error = AWSDKError.AWSDKInternalError('service does not have a \"relationships\" link entry');\n      this.__logger.error('getRelationshipsToSubscriber', 'error', error);\n      return Promise.reject(error);\n    }\n    const options = this.generateOptions('GET', link.url);\n    options.auth = this.getSdkAuth();\n    return this.executeRequest(options, AWSDKRelationshipsResponse)\n      .then((relationshipsResponse) => {\n        this.__logger.debug(currentFunction, 'Got response', relationshipsResponse);\n        return relationshipsResponse.relationshipsToSubscriber;\n      })\n      .catch((error) => {\n        this.__logger.error(currentFunction, 'Error', error);\n        throw error;\n      });\n  }\n\n  getCountries() {\n    const currentFunction = 'getCountries';\n    this.__logger.debug(currentFunction, 'Started');\n    const link = this.findNamedLink(this.__links, 'countries');\n    if (!Validator.isValidLink(link)) {\n      const error = AWSDKError.AWSDKInternalError('service does not have a \"countries\" link entry');\n      this.__logger.error(currentFunction, 'error', error);\n      return Promise.reject(error);\n    }\n    const options = this.generateOptions('GET', link.url);\n    options.auth = this.getSdkAuth();\n    return this.executeRequest(options, AWSDKCountriesResponse)\n      .then((countriesResponse) => {\n        this.__logger.debug(currentFunction, 'Got response', countriesResponse);\n        return countriesResponse.countries;\n      })\n      .catch((error) => {\n        this.__logger.error(currentFunction, 'Error', error);\n        throw error;\n      });\n  }\n\n  /**\n   * Retrieves the list of available modalities that can be offered for a visit\n   * @since 1.4.0\n   * @returns an array of Modality <AWSDKModality>\n   */\n  getAvailableModalities() {\n    const currentFunction = 'getAvailableModalities';\n    this.__logger.debug(currentFunction, 'Started');\n    const link = this.findNamedLink(this.__links, 'availableModalities');\n    if (!Validator.isValidLink(link)) {\n      const error = AWSDKError.AWSDKInternalError('service does not have an \"availableModalities\" link entry');\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n    const options = this.generateOptions('GET', link.url);\n    options.auth = this.getSdkAuth();\n    return this.executeRequest(options, AWSDKModalitiesResponse)\n      .then((modalitiesResponse) => {\n        this.__logger.debug(currentFunction, 'Got response', modalitiesResponse);\n        return modalitiesResponse.availableModalities;\n      })\n      .catch((error) => {\n        this.__logger.error(currentFunction, 'Error', error);\n        throw error;\n      });\n  }\n\n  /**\n   * Retrieves an array of {@link model.AWSDKPlatformType}\n   * @returns {Promise<model.AWSDKPlatformType[]|AWSDKError} a Promise that will resolve to an array of {@link model.AWSDKPlatformType|AWSDKPlatformType} or\n   * rejected with an {@link error.AWSDKError|AWSDKError}\n   * <br>Potential Error Codes<br>\n   * <p><table summary=\"ErrorCodes\" border=\"1\">\n   * <tr><th>Error Code</th><th>reason</th>\n   * <tr><td>{@link error.AWSDKErrorCode.internalError}</td><td>Error if the AWSDK found an issue with itself</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.illegalArgument}</td><td>Error if a bad argument is passed into the method</td></tr>\n   * </table>\n   * @since 1.4.0\n   */\n  getPlatformTypes() {\n    const currentFunction = 'getPlatformTypes';\n    this.__logger.debug(currentFunction, 'Started');\n    const link = this.findNamedLink(this.__links, 'platformTypes');\n    if (!Validator.isValidLink(link)) {\n      const error = AWSDKError.AWSDKInternalError('service does not have a \"platformTypes\" link entry');\n      this.__logger.error(currentFunction, 'error', error);\n      return Promise.reject(error);\n    }\n    const options = this.generateOptions('GET', link.url);\n    options.auth = this.getSdkAuth();\n    return this.executeRequest(options, AWSDKPlatformTypeResponse)\n      .then((platformTypeList) => {\n        this.__logger.debug(currentFunction, 'Got response', platformTypeList);\n        return platformTypeList.platformTypes;\n      })\n      .catch((error) => {\n        this.__logger.error(currentFunction, 'Error', error);\n        throw error;\n      });\n  }\n\n  /**\n   * Retrieves an array of {@link model.AWSDKTrackerTemplate|AWSDKTrackerTemplate}\n   * @param {String} searchTerm the string search term to be used in the search\n   * @returns {Promise<model.AWSDKTrackerTemplate[]|error.AWSDKError>} a Promise that resolves to an array of {@link model.AWSDKTrackerTemplate|AWSDKTrackerTemplate} or\n   * rejected with an instance of {@link error.AWSDKError|AWSDKError}.\n   * <br>Potential Error Codes<br>\n   * <p><table summary=\"ErrorCodes\" border=\"1\">\n   * <tr><th>Error Code</th><th>reason</th>\n   * <tr><td>{@link error.AWSDKErrorCode.internalError}</td><td>Error if the AWSDK found an issue with itself</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.illegalArgument}</td><td>Error if a bad argument is passed into the method</td></tr>\n   * </table>\n   * @since 1.4.0\n   */\n  searchTrackerTemplates(searchTerm) {\n    const currentFunction = 'searchTrackerTemplates';\n    this.__logger.debug(currentFunction, 'Started', searchTerm);\n    const link = this.findNamedLink(this.__links, 'trackerTemplateSearch');\n    if (!Validator.isValidLink(link)) {\n      const error = AWSDKError.AWSDKInternalError('service does not have a \"trackerTemplateSearch\" link entry');\n      this.__logger.error(currentFunction, 'error', error);\n      return Promise.reject(error);\n    }\n    if (searchTerm && !typeof searchTerm === 'string') {\n      const error = AWSDKError.AWSDKIllegalArgument('searchTerm param must be of type string when included');\n      this.__logger.error(currentFunction, 'error', error);\n      return Promise.reject(error);\n    }\n    const options = this.generateOptions('GET', link.url);\n    options.auth = this.getSdkAuth();\n    if (searchTerm) {\n      options.form.set('tracker', searchTerm);\n    }\n    return this.executeRequest(options, AWSDKTrackerTemplatesList)\n      .then((trackerTemplatesResponse) => {\n        this.__logger.debug(currentFunction, 'Got response', trackerTemplatesResponse);\n        return trackerTemplatesResponse.trackerTemplates;\n      })\n      .catch((error) => {\n        this.__logger.error(currentFunction, 'Error', error);\n        throw error;\n      });\n  }\n\n  setLinks(links) {\n    this.__links = links;\n  }\n\n  setConfig(config) {\n    this.__config = config;\n  }\n}\n\nexport default InitializationService;\n","/*!\n * American Well Consumer Web SDK\n *\n * Copyright © 2018 American Well.\n * All rights reserved.\n *\n * It is illegal to use, reproduce or distribute\n * any part of this Intellectual Property without\n * prior written authorization from American Well.\n */\nimport Service from './service';\nimport AWSDKConsumer from '../model/consumer/awsdk_consumer';\nimport AWSDKError from '../error/awsdk_error';\nimport Validator from '../internal/validator/validator';\nimport AWSDKProvider from '../model/provider/awsdk_provider';\nimport AWSDKResponse from '../internal/model/response/awsdk_response';\n\n/**\n * This service handles everything related to IVR (Interactive Voice Response) calls\n *\n * @since 1.2.0\n * @hideconstructor\n * @extends service.Service\n */\nclass IVRService extends Service {\n  constructor(props) {\n    super(props);\n    this.__systemConfiguration = props.systemConfiguration;\n  }\n\n  /**\n   * Initiates an IVR call between a {@link model.AWSDKConsumer|AWSDKConsumer} and a {@link model.AWSDKProvider|AWSDKProvider}\n   * @param {model.AWSDKConsumer} consumer the {@link model.AWSDKConsumer|AWSDKConsumer} initiating the call\n   * @param {model.AWSDKProvider} provider the {@link model.AWSDKProvider|AWSDKProvider} to call\n   * @param {String} [overridePhoneNumber] an optional phone number to override the consumer's phone number\n   * @returns {Promise<boolean|error.AWSDKError>} a promise that will resolve to a boolean indicating success, or rejected with an {@link error.AWSDKError|AWSDKError}\n   * <p><br>Potential Error Codes<br>\n   * <table summary=\"ErrorCodes\" border=\"1\">\n   * <thead>\n   * <tr><th>Error Code</th><th>reason</th></tr>\n   * </thead>\n   * <tbody>\n   * <tr><td>{@link error.AWSDKErrorCode.consumerNotAuthenticated|AWSDKErrorCode.consumerNotAuthenticated}</td><td>Consumer is not authenticated.</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.illegalArgument|AWSDKErrorCode.illegalArgument}</td><td>A parameter is not the correct type.</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.internalError|AWSDKErrorCode.internalError}</td><td>The AWSDK could not complete the request.</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.validationError|AWSDKErrorCode.validationError}</td><td>The provided overridePhoneNumber is not a valid format</td></tr>\n   * </tbody>\n   * </table>\n   * @since 1.2.0\n   */\n  initiateCall(consumer, provider, overridePhoneNumber) {\n    const currentFunction = 'IVRService.initiateCall';\n    this.__logger.debug(currentFunction, 'Started', consumer, provider, overridePhoneNumber);\n    if (!(consumer instanceof AWSDKConsumer)) {\n      const error = AWSDKError.AWSDKIllegalArgument('consumer is null or not an instance of AWSDKConsumer');\n      this.__logger.error(currentFunction, 'error', error);\n      return Promise.reject(error);\n    }\n    if (!(provider instanceof AWSDKProvider)) {\n      const error = AWSDKError.AWSDKIllegalArgument('provider is null or not an instance of AWSDKProvider');\n      this.__logger.error(currentFunction, 'error', error);\n      return Promise.reject(error);\n    }\n    if (overridePhoneNumber && !Validator.isPhoneNumberValid(overridePhoneNumber)) {\n      const error = AWSDKError.AWSDKValidationError('overridePhoneNumber');\n      this.__logger.error(currentFunction, 'error', error);\n      return Promise.reject(error);\n    }\n    const link = this.findNamedLink(this.__links, 'ivrRequestCall');\n    if (!Validator.isValidLink(link)) {\n      const error = AWSDKError.AWSDKInternalError('service does not have a \"ivrRequestCall\" link entry');\n      this.__logger.error(currentFunction, 'error', error);\n      return Promise.reject(error);\n    }\n    const options = this.generateOptions('POST', link.url);\n    options.auth = this.getUserAuth(consumer);\n    if (options.auth == null) {\n      const error = AWSDKError.AWSDKConsumerNotAuthenticated();\n      this.__logger.error(currentFunction, 'error', error);\n      return Promise.reject(error);\n    }\n    options.form.set('memberId', consumer.id.encryptedId);\n    options.form.set('providerId', provider.id.encryptedId);\n    if (overridePhoneNumber) options.form.set('phoneNumber', overridePhoneNumber);\n\n    return this.executeRequest(options, AWSDKResponse)\n      .then((response) => {\n        this.__logger.debug(currentFunction, 'Got response', response);\n        this.updateUserAuthEntry(consumer, response.authToken);\n        return true;\n      })\n      .catch((error) => {\n        this.__logger.error(currentFunction, 'Error', error);\n        throw error;\n      });\n  }\n}\n\nexport default IVRService;\n","/*!\r\n * American Well Consumer Web SDK\r\n *\r\n * Copyright (c) 2019 American Well.\r\n * All rights reserved.\r\n *\r\n * It is illegal to use, reproduce or distribute\r\n * any part of this Intellectual Property without\r\n * prior written authorization from American Well.\r\n */\r\nimport AWSDKDataObject from '../../model/awsdk_dataobject';\r\n/**\r\n * Internal use only!\r\n * This class encapsulates the URL to launch an authenticated Test My Computer wizard via Electron\r\n * @private\r\n * @extends model.AWSDKDataObject\r\n */\r\nclass AWSDKTechCheckURL extends AWSDKDataObject {\r\n  get URL() {\r\n    return this.__data.URL;\r\n  }\r\n}\r\nexport default AWSDKTechCheckURL;\r\n","/*!\r\n * American Well Consumer Web SDK\r\n *\r\n * Copyright (c) 2019 American Well.\r\n * All rights reserved.\r\n *\r\n * It is illegal to use, reproduce or distribute\r\n * any part of this Intellectual Property without\r\n * prior written authorization from American Well.\r\n */\r\n\r\nimport AWSDKResponse from './awsdk_response';\r\nimport GenericParser from '../../parser/generic_parser';\r\nimport AWSDKTechCheckURL from '../awsdk_tech_check_url';\r\n\r\n/**\r\n * Internal use only!\r\n * Simple wrapper around an {@link model.AWSDKTechCheckUrl}\r\n * @property {model.AWSDKTechCheckUrl} techCheckUrl the {@link model.AWSDKTechCheckUrl}\r\n * @private\r\n * @extends model.AWSDKResponse\r\n */\r\nclass AWSDKTechCheckURLResponse extends AWSDKResponse {\r\n  get techCheckURL() {\r\n    return GenericParser.parseObject(this.__data.techCheck, AWSDKTechCheckURL);\r\n  }\r\n}\r\n\r\nexport default AWSDKTechCheckURLResponse;\r\n","/*!\n * American Well Consumer Web SDK\n *\n * Copyright © 2019 American Well.\n * All rights reserved.\n *\n * It is illegal to use, reproduce or distribute\n * any part of this Intellectual Property without\n * prior written authorization from American Well.\n */\nimport TMCMini from 'awcoresdk/lib/test_my_computer/mini';\nimport AWCoreSDKTestMyComputerWizard from 'awcoresdk/lib/test_my_computer/Wizard';\nimport Service from './service';\nimport Util from '../internal/util/util';\nimport AWSDKError from '../error/awsdk_error';\nimport CustomProtocolHandler from '../internal/util/custom_protocol_handler';\nimport Validator from '../internal/validator/validator';\nimport AWSDKAppointmentReadinessRequest from '../model/appointment/awsdk_appointment_readiness_request';\nimport AWSDKConsumer from '../model/consumer/awsdk_consumer';\nimport AWSDKAppointment from '../model/appointment/awsdk_appointment';\nimport AWSDKTechCheckURLResponse from '../internal/model/response/awsdk_tech_check_url_response';\n\n/**\n * This service handles everything related to running the test my computer flow\n *\n * @since 2.0.0\n * @hideconstructor\n */\nclass TestMyComputerService extends Service {\n  constructor(props) {\n    super(props);\n    this.__systemConfiguration = props.systemConfiguration;\n    this.__appointmentService = props.appointmentService;\n  }\n\n  /**\n   * This method will launch the TelehealthVideo Client in 'Test My Computer' mode.<br>\n   *\n   * <p>\n   * NOTE: <em><b>The telehealth client is only supported on Windows.</b></em>\n   * </p>\n   * Note: In order to use WebRTC, the appropriate server configurations need to be made on the AmWell platform to enable WebRTC and to use the latest supported video platform.\n   * @param {model.AWSDKConsumer} [consumer] if provided will run the Test My Computer workflow and store the result for the authenticated consumer\n   * @returns {Promise<boolean|error.AWSDKError>} Returns a promise that will be resolved to a {@link boolean} indicating if the\n   * telehealth video has launched successfully or will be rejected with an {@link error.AWSDKError}.\n   * <p><br>Potential Error Codes<br>\n   * <table summary=\"ErrorCodes\" border=\"1\">\n   * <thead>\n   * <tr><th>Error Code</th><th>reason</th></tr>\n   * </thead>\n   * <tbody>\n   * <tr><td>{@link error.AWSDKErrorCode.illegalArgument|AWSDKErrorCode.illegalArgument}</td><td>If authentication is null or not a valid instance of AWSDKAuthentication.</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.AWSDKInitializationError|AWSDKErrorCode.AWSDKInitializationError}</td><td>The AWSDK was not initialized correctly.</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.internalError|AWSDKErrorCode.internalError}</td><td>The AWSDK could not complete the request.</td></tr>\n   * </tbody>\n   * </table>\n   * @since 2.0.0\n   */\n  launchTestMyComputerTelehealthVideoClient(consumer) {\n    const currentFunction = 'testMyComputerService.launchTestMyComputerTelehealthVideoClient';\n    this.__logger.debug(`${currentFunction} Started`);\n\n    const propertyName = this.__getTelehealthClientPropertyName(consumer);\n\n    let launchUri;\n    if (consumer) {\n      if (!(consumer instanceof AWSDKConsumer)) {\n        const error = AWSDKError.AWSDKIllegalArgument('consumer must be of type AWSDKConsumer');\n        this.__logger.error(currentFunction, 'error', error);\n        return Promise.reject(error);\n      }\n\n      launchUri = Util.findNamedLinkUrl(consumer.links, propertyName);\n      if (!Validator.isValidString(launchUri)) {\n        const error = AWSDKError.AWSDKInternalError(`consumer does not have a valid \"${propertyName}\" link entry`);\n        this.__logger.error(currentFunction, 'error', error);\n        return Promise.reject(error);\n      }\n    } else {\n      launchUri = this.__systemConfiguration[propertyName];\n\n      if (!Validator.isValidString(launchUri)) {\n        const error = AWSDKError.AWSDKInitializationError(`${propertyName} missing from systemConfiguration`);\n        this.__logger.error(currentFunction, 'error', error);\n        return Promise.reject(error);\n      }\n    }\n\n    return (() => {\n      if (this.__systemConfiguration.webRTCEnabled && consumer) {\n        return this.__getAuthenticatedElectronURL(consumer);\n      }\n      return Promise.resolve(launchUri);\n    })()\n      .then(uri => (\n        new Promise((resolve, reject) => {\n          const handler = new CustomProtocolHandler(this.__config.launchTelehealthVideoClientTimeout);\n          handler.launchUri(uri, reject, resolve);\n        })\n      ))\n      .then(() => {\n        this.__logger.debug(currentFunction, 'Completed - launched ok returned true');\n        return true;\n      })\n      .catch(() => {\n        this.__logger.debug(currentFunction, 'Completed - not launched returned false');\n        return false;\n      });\n  }\n\n  /**\n   * Gets a new instance of the Test My Computer wizard.<br>\n   *\n   * Note: In order to use WebRTC, the appropriate server configurations need to be made on the AmWell platform to enable WebRTC and to use the latest supported video platform.\n   * @param {Object} config The configuration used to create the wizard.\n   * @param {HTMLElement} config.container The DOM node that the wizard will attach itself to\n   * @param {Function} config.doneCallback The callback to be invoked with the test results when the user has completed the wizard\n   * @param {model.AWSDKConsumer=} config.consumer The consumer to run the wizard for, upon completion their appointment readiness will be updated if SystemConfiguration.appointmentReadinessEnabled is TRUE\n   * @param {model.AWSDKAppointment=} config.appointment The appointment to run the wizard for, upon completion the readiness for the appointment will be updated\n   * @returns {Object} returns an instance of the wizard which can be started with wizard.start() and stopped with wizard.stop()\n   * <p><br>Potential Error Codes<br>\n   * <table summary=\"ErrorCodes\" border=\"1\">\n   * <thead>\n   * <tr><th>Error Code</th><th>reason</th></tr>\n   * </thead>\n   * <tbody>\n   * <tr><td>{@link error.AWSDKErrorCode.illegalArgument|AWSDKErrorCode.illegalArgument}</td><td>The provided config or has a null container element.</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.AWSDKInitializationError|AWSDKErrorCode.AWSDKInitializationError}</td><td>The AWSDK was not initialized correctly.</td></tr>\n   * </tbody>\n   * </table>\n   */\n  getTestMyComputerWizard(config) {\n    const currentFunction = 'testMyComputerService.getTestMyComputerWizard';\n    if (!this.__systemConfiguration) {\n      const error = AWSDKError.AWSDKInitializationError();\n      this.__logger.error(currentFunction, 'error', error);\n      throw error;\n    }\n    if (!config) {\n      const error = AWSDKError.AWSDKIllegalArgument('config must not be null or undefined');\n      this.__logger.error(currentFunction, 'error', error);\n      throw error;\n    }\n    if (!(config.container instanceof Element)) {\n      const error = AWSDKError.AWSDKIllegalArgument('config.container must be a valid html Node');\n      this.__logger.error(currentFunction, 'error', error);\n      throw error;\n    }\n    if (config.consumer && !(config.consumer instanceof AWSDKConsumer)) {\n      const error = AWSDKError.AWSDKIllegalArgument('config.consumer must be an instance of AWSDKConsumer');\n      this.__logger.error(currentFunction, 'error', error);\n      throw error;\n    }\n    if (config.appointment && !(config.appointment instanceof AWSDKAppointment)) {\n      const error = AWSDKError.AWSDKIllegalArgument('config.appointment must be an instance of AWSDKAppointment');\n      this.__logger.error(currentFunction, 'error', error);\n      throw error;\n    }\n\n    // Wrap the user's callback with our own that maps the result to the cwsdk's AppointmentReadinessRequest obj\n    const userProvidedCallback = config.doneCallback || (result => this.__logger.debug('No TMC callback provided: ', result));\n    config.doneCallback = (result) => {\n      const appointmentReadinessRequest = new AWSDKAppointmentReadinessRequest();\n      Object.assign(appointmentReadinessRequest, result);\n\n      if (config.appointment) {\n        appointmentReadinessRequest.appointment = config.appointment;\n      }\n\n      if (config.consumer && this.__systemConfiguration.appointmentReadinessEnabled) {\n        this.__appointmentService.updateReadiness(config.consumer, appointmentReadinessRequest)\n          .then((readiness) => {\n            userProvidedCallback(readiness);\n          })\n          .catch((error) => {\n            userProvidedCallback(error);\n          });\n      } else {\n        userProvidedCallback(appointmentReadinessRequest);\n      }\n    };\n\n    config.speedTestConfig = this.__systemConfiguration.speedTestConfiguration;\n    config.systemConfiguration = this.__systemConfiguration;\n    return new AWCoreSDKTestMyComputerWizard(config);\n  }\n\n  /**\n   * Get an instance of a TestMyComputerMini component. Register an `onStatus` callback, and\n   * call `start` when ready. Call `stop` when tearing down.\n   *\n   * @private\n   * @param {object} props A configuration object to define callbacks\n   * @param {function=} props.onStatus fired for all device permission states. Called with an object containing `mic` and `camera` members.  The absence of ` mic.error` or `camera.error` in the state indicates success.\n   * @param {HTMLElement} props.container The HTMLElement that will host the TestMyComputerMini DOM\n   * @param {string} locale A locale to use for messages, defaults to built-in `en-US` strings\n   * @param {object} messages Individual message overrides, to align with i18n keys.  Trumps `locale` messages detected.\n   * @returns {TMCMini} the MiniWizard component to start/stop\n   * @since 2.6.0\n   */\n  getTestMyComputerMiniWizard(props) {\n    const wizard = new TMCMini(props);\n    return wizard;\n  }\n\n  /**\n   * Returns the relevant WINDOWS Telehealth Video installation url\n   * @since 2.0.0\n   * @type {string}\n   */\n  get testMyComputerTelehealthVideoClientInstallUrl() {\n    return this.__systemConfiguration.electronDownloadUrl;\n  }\n\n  /**\n   * Utility function to figure out the telehealth client test URL link name\n   * @private\n   */\n  __getTelehealthClientPropertyName(consumer) {\n    if (consumer) {\n      return 'techCheck';\n    }\n    return 'electronVideoTestUri';\n  }\n\n  /**\n   * Utility function to figure out the telehealth client test URL for an authenticated consumer\n   * @private\n   */\n  __getAuthenticatedElectronURL(consumer) {\n    const currentFunction = 'TestMyComputerService.__getAuthenticatedElectronURL';\n    this.__logger.debug(currentFunction, 'Started', consumer);\n    if (!(consumer instanceof AWSDKConsumer)) {\n      const error = AWSDKError.AWSDKIllegalArgument('consumer must be of type AWSDKConsumer');\n      this.__logger.error(currentFunction, 'error', error);\n      return Promise.reject(error);\n    }\n    const link = this.findNamedLink(consumer.links, 'techCheck');\n    if (!Validator.isValidLink(link)) {\n      const error = AWSDKError.AWSDKInternalError('consumer does not have a \"techCheck\" link entry');\n      this.__logger.error(currentFunction, 'error', error);\n      return Promise.reject(error);\n    }\n    const options = this.generateOptions('POST', link.url);\n    options.auth = this.getUserAuth(consumer);\n    if (options.auth == null) {\n      const error = AWSDKError.AWSDKConsumerNotAuthenticated();\n      this.__logger.error(currentFunction, 'error', error);\n      return Promise.reject(error);\n    }\n    return this.executeRequest(options, AWSDKTechCheckURLResponse)\n      .then(techCheckUrlResponse => techCheckUrlResponse.techCheckURL.URL)\n      .catch((error) => {\n        this.__logger.error(currentFunction, 'error', error);\n        throw error;\n      });\n  }\n}\n\nexport default TestMyComputerService;\n","/*!\n * American Well Consumer Web SDK\n *\n * Copyright © 2017 American Well.\n * All rights reserved.\n *\n * It is illegal to use, reproduce or distribute\n * any part of this Intellectual Property without\n * prior written authorization from American Well.\n */\nimport commonVersion from 'awcoresdk/lib/version';\nimport deprecated from 'awcoresdk/lib/util/deprecated';\n\nimport log from 'loglevel';\nimport uuid from 'uuid/v4';\n\nimport AWSDKConsumer from './model/consumer/awsdk_consumer';\nimport AWSDKCountry from './model/awsdk_country';\nimport AWSDKPractice from './model/practice/awsdk_practice';\nimport AWSDKProviderDetails from './model/provider/awsdk_provider_details';\nimport AWSDKSystemConfiguration from './model/awsdk_system_configuration';\nimport AWSDKCreditCardType from './model/billing/awsdk_credit_card_type';\nimport AWSDKProviderType from './model/provider/awsdk_provider_type';\n\nimport AuthenticationService from './service/authentication_service';\nimport ConsumerService from './service/consumer_service';\nimport AWSDKError from './error/awsdk_error';\nimport PharmacyService from './service/pharmacy_service';\nimport PracticeService from './service/practice_service';\nimport ProviderService from './service/provider_service';\nimport DeviceLiveStreamService from './service/device_live_stream_service';\nimport VisitService from './service/visit_service';\nimport AppointmentService from './service/appointment_service';\nimport SecureMessageService from './service/secure_message_service';\n\nimport CustomProtocolHandler from './internal/util/custom_protocol_handler';\nimport GenericParser from './internal/parser/generic_parser';\nimport Logger from './internal/logger/logger';\nimport InitializationService from './internal/service/initialization_service';\nimport Validator from './internal/validator/validator';\nimport version from './version';\nimport IVRService from './service/ivr_service';\nimport ServerLogger from './internal/logger/server_logger';\nimport AWSDKModality from './model/awsdk_modality';\nimport AWSDKModalityVendor from './model/awsdk_modality_vendor';\nimport AWSDKPlatformType from './model/awsdk_platform_type';\nimport AWSDKAuthentication from './model/authentication/awsdk_authentication';\nimport Util from './internal/util/util';\nimport TestMyComputerService from './service/test_my_computer_service';\nimport AWSDKPracticeSearchType from './model/practice/awsdk_practice_search_type';\n\n/**\n * This is the main entry point of the American Well Consumer Web SDK<br>\n *\n * @property {boolean} isConsumer Always true for Consumer SDK instances, as a way to differentiate instances from Provider SDK instances.\n * @property {String} version The version of the SDK.\n */\nclass AWSDK {\n  /**\n   * The sdk accepts a logger config object that configures the logger. This is an optional parameter and if not provided, the sdk will default to a logger configured to\n   * to output to the console with logging level set to <code>error</code>.\n   * @param {Object} loggerConfig the logger configuration.\n   * @param {String} loggerConfig.name a string name that identifies the logger. This is the only required property.\n   * @param {String} [loggerConfig.level='error'] a string representing the logging level to use. The logger defaults to 'error'. The supported values are: 'fatal', 'error', 'warn', 'info', 'debug' and 'trace'.\n   */\n  constructor(loggerConfig) {\n    this.__logger = new Logger();\n    if (loggerConfig != null) {\n      this.__logger.setLevel(loggerConfig.level);\n    }\n    this.__authKeys = [];\n    this.__initialized = false;\n    this.__initializationService = new InitializationService({ logger: this.__logger });\n    this.__serverLogger = new ServerLogger({ logger: this.__logger });\n    this.isConsumer = true;\n    this.version = version.sdkVersion;\n  }\n\n  /**\n   * Required call to initialize the AWSDK.<br>\n   * Upon success, the AWSDK instance will be initialized and configured.<br>\n   * @param {Object} config The configuration used to initialize the sdk.\n   * @param {String} config.sdkApiKey The SDK key to use for identifying the client.\n   * @param {String} config.baseUrl=https://sdk.myonlinecare.com/ The base American Well telehealth platform URL to target.\n   * @param {String} [config.locale=en_US] The locale used for all SDK requests.\n   * @param {Number} [config.visitPollingInterval] the interval in milliseconds between requests to update the visit while the visit is started\n   * @param {Number} [config.visitCostPollingInterval] the interval in milliseconds between requests to update the visitCost while the visitCost is calculating\n   * @param {Number} [config.visitCostPollingTimeout] the timeout in milliseconds to wait for the visitCost to finish calculating\n   * @param {Number} [config.eligibilityPollingInterval] the interval in milliseconds between requests to update the eligibility while the insurance subscription is being updated\n   * @param {Number} [config.eligibilityPollingTimeout] the timeout in milliseconds to wait for the eligibility request while the insurance subscription is being updated\n   * @param {Number} [config.firstAvailablePollingInterval] the interval in milliseconds between requests to determine the status of an ongoing first available search\n   * @param {Number} [config.firstAvailablePollingTimeout] the timeout in milliseconds to wait for the first available search to complete\n   * @param {Number} [config.launchTelehealthVideoClientTimeout] the timeout in milliseconds to wait for the telehealth video client to launch\n   * @param {boolean} [config.isIVRCallbackEnabled] set to TRUE if IVR callback should be enabled for webrtc visits\n   * @param {boolean} [config.ignorePropagation] a boolean that determines whether or not a parent's account information should propagate to the dependents. This is set to false by default @since 1.4.0\n   * @param {string} [config.uuid] optional uuid that will be generated if not provided and will be sent with each request to the American Well telehealth platform (for logging purposes only).\n   * @since 1.0.0\n   * @returns {Promise<boolean|error.AWSDKError>} Returns a promise that will be resolved to a boolean or will be rejected with an {@link error.AWSDKError}.\n   * <br>Potential Error Codes<br>\n   * <table summary=\"ErrorCodes\" border=\"1\">\n   * <tr><th>Error Code</th><th>reason</th></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.initializationException|AWSDKErrorCode.initializationException}</td><td>The SDK failed to initialize</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.versionIncompatible|AWSDKErrorCode.versionIncompatible}</td><td>The Telehealth Platform is running an incompatible version</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.validationError|AWSDKErrorCode.validationError}</td><td>The provided configuration is invalid.</td></tr>\n   * </table>\n   */\n  initialize(config = {\n    sdkApiKey: '',\n    baseUrl: 'https://sdk.myonlinecare.com/',\n    locale: 'en_US',\n    visitPollingInterval: 3000,\n    launchTelehealthVideoClientTimeout: 10000 }) {\n    // always log version\n    const versionLog = log.getLogger('AWSDKVersion');\n    versionLog.enableAll();\n    versionLog.info(`AWSDK Version: ${version.sdkVersion}`);\n    versionLog.info(`AWCommonSDK Version: ${commonVersion.sdkVersion}`);\n    if (!config) {\n      return Promise.reject(AWSDKError.AWSDKValidationError('Config is invalid'));\n    }\n    if (!Validator.isValidString(config.baseUrl)) {\n      return Promise.reject(AWSDKError.AWSDKValidationError('config.baseUrl is not a valid string'));\n    }\n    if (config.uuid && !Validator.isValidString(config.uuid)) {\n      return Promise.reject(AWSDKError.AWSDKValidationError('config.uuid is not a valid string'));\n    }\n\n    this.reset();\n    this.__config = config;\n\n    // always check for a trailing slash. All of our URL appending logic internally in the rest of the models depends on this.\n    if (this.__config.baseUrl.charAt(this.__config.baseUrl.length - 1) !== '/') {\n      this.__config.baseUrl += '/';\n    }\n\n    // generate a uuid if not provided\n    if (!this.__config.uuid) {\n      this.__config.uuid = uuid();\n    }\n\n    this.__initializationService.setConfig(this.__config);\n    this.__serverLogger.setConfig(this.__config);\n\n    const validateSdkKeyUrl = `${this.__config.baseUrl}restws/api/sdk/`;\n    return this.__initializationService.validateSdkApiKey(validateSdkKeyUrl)\n      .then((initSDKResponse) => {\n        this.__links = initSDKResponse.links;\n        this.__initializationService.setLinks(this.__links);\n        this.__serverLogger.setLinks(this.__links);\n        this.__initialized = true;\n        this.__serverLogger.logToServer('info', `SDK API key validation successful. Response: ${initSDKResponse}`);\n      })\n      .then(() => this.__initializationService.initialization())\n      .then((initializationResponse) => {\n        this.__countries = initializationResponse.countries;\n        this.__creditCardTypes = initializationResponse.creditCardTypes;\n        this.__providerTypes = initializationResponse.providerTypes;\n        this.__platformTypes = initializationResponse.platformTypes;\n        this.__availableModalities = initializationResponse.availableModalities;\n        this.__modalityVendors = initializationResponse.modalityVendors;\n        this.__practiceSearchTypes = initializationResponse.practiceSearchTypes;\n        this.__systemConfiguration = initializationResponse.systemConfiguration;\n        if (this.__systemConfiguration) {\n          this.__systemConfiguration.modalityVendors = this.__modalityVendors;\n        }\n        this.__serverLogger.logToServer('info', `SDK initialization successful. Response: ${initializationResponse}`);\n        return true;\n      });\n  }\n\n  /**\n   * Re-initializes the AWSDK using a new locale.<br>\n   * Upon success, the AWSDK instance will be re-initialized and configured for the new locale.<br>\n   * @param {String}  [locale=en_US] The locale used for all SDK requests. See https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.4 for details.\n   * @since 1.0.0\n   * @returns {Promise<boolean|error.AWSDKError>} Returns a promise that will be resolved to a boolean or will be rejected with an {@link error.AWSDKError}.\n   * <br>Potential Error Codes<br>\n   * <table summary=\"ErrorCodes\" border=\"1\">\n   * <tr><th>Error Code</th><th>reason</th></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.validationRequiredParameterMissing}</td><td>Missing parameter.</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode#initializationException}</td><td>if reinitialization cannot be completed</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode#validationError}</td><td>if the config parameters are invalid.</td></tr>\n   * <tr><td>{@link error.AWSDKLocaleNotSupported#localeNotSupported}</td><td>locale is not supported by caretalks.</td></tr>\n   * </table>\n   */\n  changeLocale(locale) {\n    if (locale == null) {\n      return Promise.reject(AWSDKError.AWSDKValidationRequiredParameterMissing('locale'));\n    }\n    if (!Validator.isValidString(locale)) {\n      return Promise.reject(AWSDKError.AWSDKValidationError('locale'));\n    }\n    if (this.__systemConfiguration && !this.__systemConfiguration.supportedLocales.includes(locale)) {\n      return Promise.reject(AWSDKError.AWSDKLocaleNotSupported());\n    }\n    const config = this.__config;\n    config.locale = locale;\n    this.reset();\n    return this.initialize(config);\n  }\n\n  /*\n   * This method will reset the sdk\n   * @private\n   */\n  reset() {\n    this.__initialized = false;\n    this.__authenticationService = undefined;\n    this.__consumerService = undefined;\n    this.__pharmacyService = undefined;\n    this.__practiceService = undefined;\n    this.__providerService = undefined;\n    this.__deviceLiveStreamService = undefined;\n    this.__visitService = undefined;\n    this.__appointmentService = undefined;\n    this.__secureMessageService = undefined;\n    this.__IVRService = undefined;\n    this.__TestMyComputerService = undefined;\n    this.__countries = undefined;\n    this.__creditCardTypes = undefined;\n    this.__providerTypes = undefined;\n    this.__availableModalities = undefined;\n    this.__modalityVendors = undefined;\n    this.__systemConfiguration = undefined;\n    this.__platformTypes = undefined;\n    this.__practiceSearchTypes = undefined;\n  }\n\n  // Getters/Setters\n  get initialized() {\n    return this.__initialized;\n  }\n\n  /**\n   * Get an {@link service.AuthenticationService}\n   * @type {service.AuthenticationService}\n   */\n  get authenticationService() {\n    if (this.__initialized !== true) {\n      throw AWSDKError.AWSDKInitializationError();\n    }\n    // throw exception if not initialized\n    if (this.__authenticationService === undefined) {\n      this.__authenticationService = new AuthenticationService({ config: this.__config, logger: this.__logger, links: this.__links, authKeys: this.__authKeys, serverLogger: this.__serverLogger });\n    }\n    return this.__authenticationService;\n  }\n\n  /**\n   * get a {@link service.ConsumerService}\n   * @type {service.ConsumerService}\n   */\n  get consumerService() {\n    if (this.__initialized !== true) {\n      throw AWSDKError.AWSDKInitializationError();\n    }\n    if (this.__consumerService === undefined) {\n      this.__consumerService = new ConsumerService({ config: this.__config, logger: this.__logger, links: this.__links, authKeys: this.__authKeys, systemConfiguration: this.__systemConfiguration, countries: this.__countries, creditCardTypes: this.__creditCardTypes, serverLogger: this.__serverLogger });\n    }\n    return this.__consumerService;\n  }\n\n  /**\n   * Get a {@link service.PharmacyService}\n   * @type {service.PharmacyService}\n   */\n  get pharmacyService() {\n    if (this.__initialized !== true) {\n      throw AWSDKError.AWSDKInitializationError();\n    }\n    if (this.__pharmacyService === undefined) {\n      this.__pharmacyService = new PharmacyService({ config: this.__config, logger: this.__logger, links: this.__links, authKeys: this.__authKeys, serverLogger: this.__serverLogger });\n    }\n    return this.__pharmacyService;\n  }\n\n  /**\n   * Get a {@link service.PracticeService}\n   * @type {service.PracticeService}\n   */\n  get practiceService() {\n    if (this.__initialized !== true) {\n      throw AWSDKError.AWSDKInitializationError();\n    }\n    if (this.__practiceService === undefined) {\n      this.__practiceService = new PracticeService({ config: this.__config, logger: this.__logger, links: this.__links, authKeys: this.__authKeys, serverLogger: this.__serverLogger });\n    }\n    return this.__practiceService;\n  }\n\n  /**\n   * Get a {@link service.ProviderService}\n   * @type {service.ProviderService}\n   */\n  get providerService() {\n    if (this.__initialized !== true) {\n      throw AWSDKError.AWSDKInitializationError();\n    }\n    if (this.__providerService === undefined) {\n      this.__providerService = new ProviderService({ config: this.__config, logger: this.__logger, links: this.__links, authKeys: this.__authKeys, serverLogger: this.__serverLogger });\n    }\n    return this.__providerService;\n  }\n\n  /**\n   * Get a {@link service.DeviceLiveStreamService}\n   * @type {service.DeviceLiveStreamService}\n   */\n  get deviceLiveStreamService() {\n    if (this.__initialized !== true) {\n      throw AWSDKError.AWSDKInitializationError();\n    }\n    if (this.__deviceLiveStreamService === undefined) {\n      this.__deviceLiveStreamService = new DeviceLiveStreamService({ config: this.__config, logger: this.__logger, links: this.__links, authKeys: this.__authKeys, serverLogger: this.__serverLogger });\n    }\n    return this.__deviceLiveStreamService;\n  }\n\n  /**\n   * Get a {@link service.VisitService}\n   * @type {service.VisitService}\n   */\n  get visitService() {\n    if (this.__initialized !== true) {\n      throw AWSDKError.AWSDKInitializationError();\n    }\n    if (this.__visitService === undefined) {\n      this.__visitService = new VisitService({ config: this.__config, logger: this.__logger, links: this.__links, authKeys: this.__authKeys, systemConfiguration: this.__systemConfiguration, serverLogger: this.__serverLogger, modalityVendors: this.__modalityVendors });\n    }\n    return this.__visitService;\n  }\n\n  /**\n   * Get a {@link service.AppointmentService}\n   * @type {service.AppointmentService}\n   */\n  get appointmentService() {\n    if (this.__initialized !== true) {\n      throw AWSDKError.AWSDKInitializationError();\n    }\n    if (this.__appointmentService === undefined) {\n      this.__appointmentService = new AppointmentService({ config: this.__config, logger: this.__logger, links: this.__links, authKeys: this.__authKeys, systemConfiguration: this.__systemConfiguration, serverLogger: this.__serverLogger });\n    }\n    return this.__appointmentService;\n  }\n\n  /**\n   * Get a {@link service.SecureMessageService}\n   * @type {service.SecureMessageService}\n   */\n  get secureMessageService() {\n    if (this.__initialized !== true) {\n      throw AWSDKError.AWSDKInitializationError();\n    }\n    if (this.__secureMessageService === undefined) {\n      this.__secureMessageService = new SecureMessageService({ config: this.__config, logger: this.__logger, links: this.__links, authKeys: this.__authKeys, systemConfiguration: this.__systemConfiguration, serverLogger: this.__serverLogger });\n    }\n    return this.__secureMessageService;\n  }\n\n  /**\n   * Get a {@link service.IVRService}\n   * @type {service.IVRService}\n   */\n  get IVRService() {\n    if (this.__initialized !== true) {\n      throw AWSDKError.AWSDKInitializationError();\n    }\n    if (this.__IVRService === undefined) {\n      this.__IVRService = new IVRService({ config: this.__config, logger: this.__logger, links: this.__links, authKeys: this.__authKeys, systemConfiguration: this.__systemConfiguration, serverLogger: this.__serverLogger });\n    }\n    return this.__IVRService;\n  }\n\n  /**\n   * Get a {@link service.TestMyComputerService}\n   */\n  get testMyComputerService() {\n    if (this.__initialized !== true) {\n      throw AWSDKError.AWSDKInitializationError();\n    }\n    if (this.__TestMyComputerService === undefined) {\n      this.__TestMyComputerService = new TestMyComputerService({ config: this.__config, logger: this.__logger, links: this.__links, authKeys: this.__authKeys, systemConfiguration: this.__systemConfiguration, serverLogger: this.__serverLogger, appointmentService: this.appointmentService });\n    }\n    return this.__TestMyComputerService;\n  }\n\n  /**\n   * This method will get an array of {@link model.AWSDKCreditCardType}<br>\n   * @returns {Promise<model.AWSDKCreditCardType[]|error.AWSDKError>} Returns a promise that will be resolved to an array of {@link model.AWSDKCreditCardType} or will\n   * be rejected with an {@link error.AWSDKError}.\n   * <br>Potential Error Codes<br>\n   * <p><table summary=\"ErrorCodes\" border=\"1\">\n   * <tr><th>Error Code</th><th>reason</th>\n   * <tr><td>{@link error.AWSDKErrorCode.uninitialized}</td><td>Error if the AWSDK has not been initialized</td></tr>\n   * </table>\n   */\n  getCreditCardTypes() {\n    if (this.__initialized !== true) {\n      throw AWSDKError.AWSDKInitializationError();\n    }\n    if (this.__creditCardTypes === undefined) {\n      return this.__initializationService.getCreditCardTypes()\n        .then((creditCardTypes) => {\n          this.__creditCardTypes = creditCardTypes;\n          return creditCardTypes;\n        });\n    }\n    return Promise.resolve(this.__creditCardTypes);\n  }\n\n  /**\n   * This method will get an array of  {@link model.AWSDKLanguage}<br>\n   * @returns {Promise<model.AWSDKLanguage[]|error.AWSDKError>} Returns a promise that will be resolved to an array of {@link model.AWSDKLanguage} or will\n   * be rejected with an {@link error.AWSDKError}.\n   * <br>Potential Error Codes<br>\n   * <p><table summary=\"ErrorCodes\" border=\"1\">\n   * <tr><th>Error Code</th><th>reason</th>\n   * <tr><td>{@link error.AWSDKErrorCode.uninitialized}</td><td>Error if the AWSDK has not been initialized</td></tr>\n   * </table>\n   * @since 1.1.0\n   */\n  getLanguages() {\n    if (this.__initialized !== true) {\n      throw AWSDKError.AWSDKInitializationError();\n    }\n    if (this.__languages === undefined) {\n      return this.__initializationService.getLanguages()\n        .then((languages) => {\n          this.__languages = languages;\n          return languages;\n        });\n    }\n    return Promise.resolve(this.__languages);\n  }\n\n  /**\n   *\n   * This method will get an array of  {@link model.AWSDKCountry}<br>\n   * @returns {Promise<model.AWSDKCountry[]|error.AWSDKError>} Returns a promise that will be resolved to an array of {@link model.AWSDKCountry} or will\n   * be rejected with an {@link error.AWSDKError}.\n   * <br>Potential Error Codes<br>\n   * <p><table summary=\"ErrorCodes\" border=\"1\">\n   * <tr><th>Error Code</th><th>reason</th>\n   * <tr><td>{@link error.AWSDKErrorCode.uninitialized}</td><td>Error if the AWSDK has not been initialized</td></tr>\n   * </table>\n   */\n  getCountries() {\n    if (this.__initialized !== true) {\n      throw AWSDKError.AWSDKInitializationError();\n    }\n    if (this.__countries === undefined) {\n      return this.__initializationService.getCountries()\n        .then((countries) => {\n          this.__countries = countries;\n          return countries;\n        });\n    }\n    return Promise.resolve(this.__countries);\n  }\n\n  /**\n   * This method will get an array of {@link model.AWSDKHealthPlan}<br>\n   * @returns {Promise<model.AWSDKHealthPlan[]|error.AWSDKError>} Returns a promise that will be resolved to an array of {@link model.AWSDKHealthPlan} or will\n   * be rejected with an {@link error.AWSDKError}.\n   * <br>Potential Error Codes<br>\n   * <p><table summary=\"ErrorCodes\" border=\"1\">\n   * <tr><th>Error Code</th><th>reason</th>\n   * <tr><td>{@link error.AWSDKErrorCode.uninitialized}</td><td>Error if the AWSDK has not been initialized</td></tr>\n   * </table>\n   */\n  getHealthPlans() {\n    if (this.__initialized !== true) {\n      throw AWSDKError.AWSDKInitializationError();\n    }\n    if (this.__healthPlans === undefined) {\n      return this.__initializationService.getHealthPlans()\n        .then((healthPlans) => {\n          this.__healthPlans = healthPlans;\n          return healthPlans;\n        });\n    }\n    return Promise.resolve(this.__healthPlans);\n  }\n\n  /**\n   * This method will get an array of {@link model.AWSDKRelationshipToSubscriberCode}<br>\n   * @returns {Promise<model.AWSDKRelationshipToSubscriberCode[]|error.AWSDKError>} Returns a promise that will be resolved to an array of {@link model.AWSDKRelationshipToSubscriberCode} or will\n   * be rejected with an {@link error.AWSDKError}.\n   * <br>Potential Error Codes<br>\n   * <p><table summary=\"ErrorCodes\" border=\"1\">\n   * <tr><th>Error Code</th><th>reason</th>\n   * <tr><td>{@link error.AWSDKErrorCode.uninitialized}</td><td>Error if the AWSDK has not been initialized</td></tr>\n   * </table>\n   */\n  getRelationshipsToSubscriber() {\n    if (this.__initialized !== true) {\n      throw AWSDKError.AWSDKInitializationError();\n    }\n    if (this.__relationships === undefined) {\n      return this.__initializationService.getRelationshipsToSubscriber()\n        .then((relationships) => {\n          this.__relationships = relationships;\n          return relationships;\n        });\n    }\n    return Promise.resolve(this.__relationships);\n  }\n\n  /**\n   * This method will get an array of {@link model.AWSDKTopicType}<br>\n   * @returns {Promise<model.AWSDKTopicType[]|error.AWSDKError>} Returns a promise that will be resolved to an array of {@link model.AWSDKTopicType} or will\n   * be rejected with an {@link error.AWSDKError}.\n   * <br>Potential Error Codes<br>\n   * <p><table summary=\"ErrorCodes\" border=\"1\">\n   * <tr><th>Error Code</th><th>reason</th>\n   * <tr><td>{@link error.AWSDKErrorCode.uninitialized}</td><td>Error if the AWSDK has not been initialized</td></tr>\n   * </table>\n   */\n  getTopicTypes() {\n    if (this.__initialized !== true) {\n      throw AWSDKError.AWSDKInitializationError();\n    }\n    if (this.__topicTypes === undefined) {\n      return this.__initializationService.getTopicTypes()\n        .then((topicTypes) => {\n          this.__topicTypes = topicTypes;\n          return topicTypes;\n        });\n    }\n    return Promise.resolve(this.__topicTypes);\n  }\n\n  /**\n   * This method will get an array of {@link model.AWSDKProviderType}<br>\n   * @returns {Promise<model.AWSDKProviderType[]|error.AWSDKError>} Returns a promise that will be resolved to an array of {@link model.AWSDKProviderType} or will\n   * be rejected with an {@link error.AWSDKError}.\n   * <br>Potential Error Codes<br>\n   * <p><table summary=\"ErrorCodes\" border=\"1\">\n   * <tr><th>Error Code</th><th>reason</th>\n   * <tr><td>{@link error.AWSDKErrorCode.uninitialized}</td><td>Error if the AWSDK has not been initialized</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.internalError}</td><td>Error if the AWSDK found an issue with itself</td></tr>\n   * </table>\n   */\n  getProviderTypes() {\n    if (this.__initialized !== true) {\n      throw AWSDKError.AWSDKInitializationError();\n    }\n    if (this.__providerTypes === undefined) {\n      return this.__initializationService.getProviderTypes()\n        .then((providerTypes) => {\n          this.__providerTypes = providerTypes;\n          return providerTypes;\n        });\n    }\n    return Promise.resolve(this.__providerTypes);\n  }\n\n  /**\n   * This method will get an array of {@link model.AWSDKPlatformType|AWSDKPlatformType}\n   * @returns {Promise<model.AWSDKPlatformType[]|error.AWSDKError>} Returns a promise that will be resolved to an array of {@link model.AWSDKPlatformType} or will\n   * be rejected with an {@link error.AWSDKError}.\n   * <br>Potential Error Codes<br>\n   * <p><table summary=\"ErrorCodes\" border=\"1\">\n   * <tr><th>Error Code</th><th>reason</th>\n   * <tr><td>{@link error.AWSDKErrorCode.uninitialized}</td><td>Error if the AWSDK has not been initialized</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.internalError}</td><td>Error if the AWSDK found an issue with itself</td></tr>\n   * </table>\n   * @since 1.4.0\n   */\n  getPlatformTypes() {\n    if (this.__initialized !== true) {\n      throw AWSDKError.AWSDKInitializationError();\n    }\n    if (this.__platformTypes === undefined) {\n      return this.__initializationService.getPlatformTypes()\n        .then((platformTypes) => {\n          this.__platformTypes = platformTypes;\n          return platformTypes;\n        });\n    }\n    return Promise.resolve(this.__platformTypes);\n  }\n\n  /**\n   * This method will get an array of {@link model.AWSDKPracticeSearchType|AWSDKPracticeSearchType}\n   * @returns {Promise<model.AWSDKPracticeSearchType[]>} Returns a promise that will be resolved to an array of {@link model.AWSDKPracticeSearchType}.\n   * @since 3.0.0\n   */\n  getPracticeSearchTypes() {\n    if (this.__initialized !== true) {\n      throw AWSDKError.AWSDKInitializationError();\n    }\n    const practiceSearchTypes = Array.isArray(this.__practiceSearchTypes) ? this.__practiceSearchTypes.map(item => GenericParser.parseObject(item, AWSDKPracticeSearchType)) : [];\n    return Promise.resolve(practiceSearchTypes);\n  }\n\n  /**\n   * This method will get an array of {@link model.AWSDKTrackerTemplate|AWSDKTrackerTemplate}<br>\n   * @param {String} [searchTerm] any sequence of characters to be used to search against.\n   * @returns {Promise<model.AWSDKTrackerTemplate[]|error.AWSDKError>} Returns a promise that will be resolved to an array of {@link model.AWSDKTrackerTemplate|AWSDKTrackerTemplate} or will\n   * be rejected with an {@link error.AWSDKError|AWSDKError}.\n   * <br>Potential Error Codes<br>\n   * <p><table summary=\"ErrorCodes\" border=\"1\">\n   * <tr><th>Error Code</th><th>reason</th>\n   * <tr><td>{@link error.AWSDKErrorCode.uninitialized}</td><td>Error if the AWSDK has not been initialized</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.internalError}</td><td>Error if the AWSDK found an issue with itself</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.illegalArgument}</td><td>Error if a bad argument is passed into the method</td></tr>\n   * </table>\n   * @since 1.4.0\n   */\n  searchTrackerTemplates(searchTerm) {\n    if (this.__initialized !== true) {\n      throw AWSDKError.AWSDKInitializationError();\n    }\n    return this.__initializationService.searchTrackerTemplates(searchTerm)\n      .then((trackerTemplates) => {\n        this.__trackerTemplates = trackerTemplates;\n        return trackerTemplates;\n      });\n  }\n\n  /**\n   * This method will get an {@link model.AWSDKSystemConfiguration}<br>\n   * @returns {model.AWSDKSystemConfiguration|error.AWSDKError} Returns an object that will be a {@link model.AWSDKSystemConfiguration} or will\n   * be fail with an {@link error.AWSDKError}.\n   * <br>Potential Error Codes<br>\n   * <p><table summary=\"ErrorCodes\" border=\"1\">\n   * <tr><th>Error Code</th><th>reason</th>\n   * <tr><td>{@link error.AWSDKErrorCode.uninitialized}</td><td>Error if the AWSDK has not been initialized</td></tr>\n   * </table>\n   */\n  getSystemConfiguration() {\n    if (this.__initialized !== true) {\n      throw AWSDKError.AWSDKInitializationError();\n    }\n    return this.__systemConfiguration;\n  }\n\n  /**\n   * This method will get an array of {@link model.AWSDKModality}<br>\n   * @returns {Promise<model.AWSDKModality[]|error.AWSDKError>} Returns a promise that will be resolved to an array of {@link model.AWSDKModality} or will\n   * be rejected with an {@link error.AWSDKError}.\n   * <br>Potential Error Codes<br>\n   * <p><table summary=\"ErrorCodes\" border=\"1\">\n   * <tr><th>Error Code</th><th>reason</th>\n   * <tr><td>{@link error.AWSDKErrorCode.uninitialized}</td><td>Error if the AWSDK has not been initialized</td></tr>\n   * </table>\n   * @since 1.4.0\n   */\n  getAvailableModalities() {\n    if (this.__initialized !== true) {\n      throw AWSDKError.AWSDKInitializationError();\n    }\n    if (this.__availableModalities === undefined) {\n      return this.__initializationService.getAvailableModalities()\n        .then((availableModalities) => {\n          this.__availableModalities = availableModalities;\n          return availableModalities;\n        });\n    }\n    return Promise.resolve(this.__availableModalities);\n  }\n\n  /**\n   * @deprecated since 2.0.0 please use {@link service.TestMyComputerService#launchTestMyComputerTelehealthVideoClient(model.AWSDKAuthentication)|launchTestMyComputerTelehealthVideoClient(authentication)}\n   *\n   * This method will launch the TelehealthVideo Client in 'Test My Computer' mode.<br />\n   * <p>\n   * <b>NOTE:</b> This method will <b>NOT</b> work in any of the browsers operating on a <b>MacOS</b> when the {@link model.AWSDKSystemConfiguration#webRTCEnabled|AWSDKSystemConfiguration.webRTCEnabled} property returns TRUE.\n   * To successfully launch a 'Test My Computer' client, please switch to a WebRTC implementation by calling the {@link service.TestMyComputerService#getTestMyComputerWizard|TestMyComputerService.getTestMyComputerWizard()} function.\n   * </p>\n   *\n   * @param {model.AWSDKAuthentication|model.AWSDKConsumer} [authenticationOrDependent] if provided will run the Test My Computer workflow and store the result for the authenticated consumer or dependent, if a {@link model.AWSDKConsumer} is provided it must be a dependent\n   * @returns {Promise<boolean|error.AWSDKError>} Returns a promise that will be resolved to a {@link boolean} indicating if the\n   * telehealth video has launched successfully or will be rejected with an {@link error.AWSDKError}.\n   * <br>Potential Error Codes<br>\n   * <p><table summary=\"ErrorCodes\" border=\"1\">\n   * <thead>\n   * <tr><th>Error Code</th><th>reason</th></tr>\n   * </thead>\n   * <tbody>\n   * <tr><td>{@link error.AWSDKErrorCode.illegalArgument|AWSDKErrorCode.illegalArgument}</td><td>If authentication is null or not a valid instance of AWSDKAuthentication.</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.AWSDKInitializationError|AWSDKErrorCode.AWSDKInitializationError}</td><td>The AWSDK was not initialized correctly.</td></tr>\n   * <tr><td>{@link error.AWSDKErrorCode.internalError|AWSDKErrorCode.internalError}</td><td>The AWSDK could not complete the request.</td></tr>\n   * </tbody>\n   * </table>\n   */\n  launchTestMyComputer(authenticationOrDependent) {\n    const currentFunction = 'awsdk.launchTestMyComputer';\n    deprecated(currentFunction, 'Invoke the TestMyComputerService.launchTestMyComputerTelehealthVideoClient function instead', '3.X');\n    this.__logger.debug(`${currentFunction} Started`);\n    const propertyName = (navigator.platform.toUpperCase().indexOf('MAC') >= 0) ? 'telehealthVideoTestUriForMac' : 'telehealthVideoTestUriForWindows';\n\n    if (this.__initialized !== true) {\n      const error = AWSDKError.AWSDKInitializationError();\n      this.__logger.error(error, currentFunction);\n      return Promise.reject(error);\n    }\n\n    let launchUri;\n    if (authenticationOrDependent) {\n      if (!(authenticationOrDependent instanceof AWSDKAuthentication) && !(authenticationOrDependent instanceof AWSDKConsumer)) {\n        const error = AWSDKError.AWSDKIllegalArgument('authenticationOrDependent must be of type AWSDKAuthentication or AWSDKConsumer');\n        this.__logger.error(currentFunction, 'error', error);\n        return Promise.reject(error);\n      }\n\n      if ((authenticationOrDependent instanceof AWSDKConsumer) && !authenticationOrDependent.isDependent) {\n        const error = AWSDKError.AWSDKIllegalArgument('authenticationOrDependent must be a dependent');\n        this.__logger.error(currentFunction, 'error', error);\n        return Promise.reject(error);\n      }\n\n      const links = authenticationOrDependent.links || authenticationOrDependent.authenticationLinks;\n      launchUri = Util.findNamedLinkUrl(links, propertyName);\n      if (!Validator.isValidString(launchUri)) {\n        const error = AWSDKError.AWSDKInternalError(`authenticationOrDependent does not have a valid \"${propertyName}\" link entry`);\n        this.__logger.error(currentFunction, 'error', error);\n        return Promise.reject(error);\n      }\n    } else {\n      launchUri = this.__systemConfiguration[propertyName];\n\n      if (!Validator.isValidString(launchUri)) {\n        const error = AWSDKError.AWSDKInitializationError(`${propertyName} missing from systemConfiguration`);\n        this.__logger.error(currentFunction, 'error', error);\n        return Promise.reject(error);\n      }\n    }\n\n    return new Promise((resolve, reject) => {\n      const handler = new CustomProtocolHandler(this.__config.launchTelehealthVideoClientTimeout);\n      handler.launchUri(launchUri, reject, resolve);\n    })\n      .then(() => {\n        this.__logger.info(currentFunction, 'Completed - launched ok returned true');\n        return true;\n      })\n      .catch(() => {\n        this.__logger.info(currentFunction, 'Completed - not launched returned false');\n        return false;\n      });\n  }\n\n  /**\n  * @deprecated since 2.0.0 please use {@link service.TestMyComputerService#testMyComputerTelehealthVideoClientInstallUrl|testMyComputerTelehealthVideoClientInstallUrl}\n  */\n  get testMyComputerInstallUrl() {\n    deprecated('AWSDK.testMyComputerInstallUrl', 'Use TestMyComputerService.testMyComputerTelehealthVideoClientInstallUrl instead', '3.X');\n    return (navigator.platform.toUpperCase().indexOf('MAC') >= 0) ?\n      this.__systemConfiguration.telehealthVideoInstallUrlForMac :\n      this.__systemConfiguration.telehealthVideoInstallUrlForWindows;\n  }\n\n  get instanceState() {\n    const authKeys = this.__authKeys;\n    const config = this.__config;\n    const links = this.__links;\n    const initialized = this.__initialized;\n    const systemConfiguration = (this.__systemConfiguration !== undefined) ? this.__systemConfiguration.toString() : null;\n    const countries = (this.__countries !== undefined) ? this.__countries.map(item => item.toString()) : null;\n    const creditCardTypes = (this.__creditCardTypes !== undefined) ? this.__creditCardTypes.map(item => item.toString()) : null;\n    const providerTypes = (this.__providerTypes !== undefined) ? this.__providerTypes.map(item => item.toString()) : null;\n    const availableModalities = (this.__availableModalities !== undefined) ? this.__availableModalities.map(item => item.toString()) : null;\n    const platformTypes = (this.__platformTypes !== undefined) ? this.__platformTypes.map(item => item.toString()) : null;\n    const practiceSearchTypes = (this.__practiceSearchTypes !== undefined) ? this.__practiceSearchTypes.map(item => item.toString()) : null;\n    const modalityVendors = (this.__modalityVendors !== undefined) ? this.__modalityVendors.map(item => item.toString()) : null;\n    return JSON.stringify({ config, links, authKeys, initialized, systemConfiguration, countries, creditCardTypes, providerTypes, availableModalities, platformTypes, modalityVendors, practiceSearchTypes });\n  }\n\n  /**\n   * @deprecated please use AWSDKFactory.restoreConsumer\n   */\n  restoreConsumer(state) {\n    deprecated('AWSDK.restoreConsumer', 'Use AWSDKFactory.restoreConsumer instead', '3.X');\n    const newState = JSON.parse(state);\n    return GenericParser.parseObject(newState, AWSDKConsumer);\n  }\n\n  /**\n   * @deprecated please use AWSDKFactory.restorePractice\n   */\n  restorePractice(state) {\n    deprecated('AWSDK.restorePractice', 'Use AWSDKFactory.restorePractice instead', '3.X');\n    const newState = JSON.parse(state);\n    return GenericParser.parseObject(newState, AWSDKPractice);\n  }\n\n  /**\n   * @deprecated please use AWSDKFactory.restoreProviderDetails\n   */\n  restoreProviderDetails(state) {\n    deprecated('AWSDK.restoreProviderDetails', 'Use AWSDKFactory.restoreProviderDetails instead', '3.X');\n    const newState = JSON.parse(state);\n    return GenericParser.parseObject(newState, AWSDKProviderDetails);\n  }\n\n  restoreInstanceState(state) {\n    const newState = JSON.parse(state);\n    this.__config = newState.config;\n    this.__links = newState.links;\n    this.__authKeys = newState.authKeys;\n    if (newState.systemConfiguration != null) {\n      this.__systemConfiguration = GenericParser.parseObject(JSON.parse(newState.systemConfiguration), AWSDKSystemConfiguration);\n    }\n    if (newState.countries != null) {\n      this.__countries = newState.countries.map(item => GenericParser.parseObject(JSON.parse(item), AWSDKCountry));\n    }\n    if (newState.creditCardTypes != null) {\n      this.__creditCardTypes = newState.creditCardTypes.map(item => GenericParser.parseObject(JSON.parse(item), AWSDKCreditCardType));\n    }\n    if (newState.providerTypes != null) {\n      this.__providerTypes = newState.providerTypes.map(item => GenericParser.parseObject(JSON.parse(item), AWSDKProviderType));\n    }\n    if (newState.availableModalities != null) {\n      this.__availableModalities = newState.availableModalities.map(item => GenericParser.parseObject(JSON.parse(item), AWSDKModality));\n    }\n    if (newState.platformTypes != null) {\n      this.__platformTypes = newState.platformTypes.map(item => GenericParser.parseObject(JSON.parse(item), AWSDKPlatformType));\n    }\n    if (newState.practiceSearchTypes != null) {\n      this.__practiceSearchTypes = newState.practiceSearchTypes.map(item => GenericParser.parseObject(JSON.parse(item), AWSDKPracticeSearchType));\n    }\n    if (newState.modalityVendors !== null && Array.isArray(newState.modalityVendors)) {\n      this.__modalityVendors = newState.modalityVendors.map(item => GenericParser.parseObject(JSON.parse(item), AWSDKModalityVendor));\n    }\n    if (this.__systemConfiguration) {\n      this.__systemConfiguration.modalityVendors = this.__modalityVendors;\n    }\n    this.__initializationService.setConfig(this.__config);\n    this.__initializationService.setLinks(this.__links);\n    this.__serverLogger.setConfig(this.__config);\n    this.__serverLogger.setLinks(this.__links);\n    this.__initialized = GenericParser.parseBoolean(newState.initialized);\n  }\n}\n\nexport default AWSDK;\n","/*!\n * American Well Consumer Web SDK\n *\n * Copyright © 2019 American Well.\n * All rights reserved.\n *\n * It is illegal to use, reproduce or distribute\n * any part of this Intellectual Property without\n * prior written authorization from American Well.\n */\n\n/**\n * The base class for all data objects in AWFRE.\n * \n * @class\n * @ignore\n * \n * @since 2.4.0\n */\nclass AWFREDataObject {\n  constructor(data = {}) {\n    this.__data = data;\n  }\n\n  toString() {\n    const dataString = JSON.stringify(this.__data);\n    return dataString;\n  }\n}\n\nexport default AWFREDataObject;\n","/*!\n * American Well Consumer Web SDK\n *\n * Copyright © 2019 American Well.\n * All rights reserved.\n *\n * It is illegal to use, reproduce or distribute\n * any part of this Intellectual Property without\n * prior written authorization from American Well.\n */\nimport AWFREDataObject from '../awfre_dataobject';\n\n/**\n * AWFREResponse used for all types of responses in AWFRE\n * @class\n * @ignore\n * \n * @extends model.AWFREDataObject\n * @since 2.4.0\n */\nclass AWFREResponse extends AWFREDataObject {\n}\n\nexport default AWFREResponse;\n","/*!\n * American Well Consumer Web SDK\n *\n * Copyright © 2019 American Well.\n * All rights reserved.\n *\n * It is illegal to use, reproduce or distribute\n * any part of this Intellectual Property without\n * prior written authorization from American Well.\n */\n\nimport AWFREDataObject from './awfre_dataobject';\n/**\n * @class\n * @ignore\n * \n */\nclass AWFRERestLink extends AWFREDataObject {\n  constructor(data) {\n    super(data);\n  }\n\n  get name() {\n    return this.__data.name;\n  }\n\n  get url() {\n    return this.__data.url;\n  }\n\n  get method() {\n    return this.__data.method;\n  }\n}\n\nexport default AWFRERestLink;\n","/*!\n * American Well Consumer Web SDK\n *\n * Copyright © 2019 American Well.\n * All rights reserved.\n *\n * It is illegal to use, reproduce or distribute\n * any part of this Intellectual Property without\n * prior written authorization from American Well.\n */\n\nimport AWFREDataObject from '../awfre_dataobject';\n\n/**\n * Health plan object to hold the information of enterprise's health plan.\n * \n * @property {String} healthPlanName The health plan name.\n * @property {String} healthPlanQualifier The health plan unique identifier.\n * @property {String} healthPlanDisplayName The health plan display name, original name.\n *\n * @since 2.4.0\n */\nclass AWFREHealthPlan extends AWFREDataObject {\n  constructor(data) {\n    super(data);\n  }\n\n  get healthPlanName() {\n    return this.__data.healthPlanName;\n  }\n\n  get healthPlanQualifier() {\n    return this.__data.healthPlanQualifier;\n  }\n\n  get healthPlanDisplayName() {\n    return this.__data.healthPlanDisplayName;\n  }\n}\n\nexport default AWFREHealthPlan;","/*!\n * American Well Consumer Web SDK\n *\n * Copyright © 2019 American Well.\n * All rights reserved.\n *\n * It is illegal to use, reproduce or distribute\n * any part of this Intellectual Property without\n * prior written authorization from American Well.\n */\n\nimport AWFREDataObject from './awfre_dataobject';\n\n/**\n * Service object that holds information about the enterprise's Service.\n * \n * @property {String} id The service id.\n * @property {String} name The service name.\n * \n * @since 2.4.0\n */\nclass AWFREService extends AWFREDataObject {\n  get id() {\n    return this.__data.id;\n  }\n\n  get name() {\n    return this.__data.name;\n  }\n}\n\nexport default AWFREService;\n","/*!\n * American Well Consumer Web SDK\n *\n * Copyright © 2019 American Well.\n * All rights reserved.\n *\n * It is illegal to use, reproduce or distribute\n * any part of this Intellectual Property without\n * prior written authorization from American Well.\n */\n\nimport AWFREResponse from './awfre_response';\nimport GenericParser from '../../../awsdk/internal/parser/generic_parser';\nimport AWFRERestLink from '../awfre_rest_link';\nimport AWFREHealthPlan from '../healthplans/awfre_health_plan';\nimport AWFREService from '../awfre_service';\n\n/**\n  * The AWFREInitializationResponse class represents the response object to an initialization call.\n  * \n  * @property {model.AWFREHealthPlan[]} healthPlans The health plan details for a given cfgId.\n  * @property {model.AWFREService[]} services The available health services.\n  *\n  * @since 2.4.0\n  */\nclass AWFREInitializationResponse extends AWFREResponse {\n\n  /**\n   * @private\n   */\n  get links() {\n    const links = this.__data.links;\n    if (!Array.isArray(links) || links.length === 0) {\n      return [];\n    }\n    return links.map(item => GenericParser.parseObject(item, AWFRERestLink));\n  }\n\n  get healthPlans() {\n    const healthPlans = this.__data.healthPlans;\n    if (!Array.isArray(healthPlans) || healthPlans.length === 0) {\n      return [];\n    }\n    return healthPlans.map(item => GenericParser.parseObject(item, AWFREHealthPlan));\n  }\n\n  get services() {\n    const services = this.__data.services;\n    if (!Array.isArray(services) || services.length === 0) {\n      return [];\n    }\n    return services.map(item => GenericParser.parseObject(item, AWFREService));\n  }\n}\n\nexport default AWFREInitializationResponse;\n","/*!\n * American Well Consumer Web SDK\n *\n * Copyright © 2019 American Well.\n * All rights reserved.\n *\n * It is illegal to use, reproduce or distribute\n * prior written authorization from American Well.\n */\n\n/**\n * A Service for initializing FRE connection to the server.\n * By connecting we're getting the REST links that we can call while we got this\n * server instantiated\n */\nimport Service from '../../../awsdk/service/service';\nimport Validator from '../../../awsdk/internal/validator/validator';\nimport AWFREInitializationResponse from '../../model/response/awfre_initialization_response';\n\n/**\n * This service handles everything related to the initialization process of FRE (Federated Recommendation Engine)\n * @class\n * @ignore\n * \n * @since 2.4.0\n * @hideconstructor\n * @extends service.Service\n */\nclass FreInitializationService extends Service {\n  constructor(config) {\n    super(config);\n    this.__config = config;\n  }\n\n  initialization() {\n    const initializationUrl = `${this.__config.freBaseUrl}fre/rest/ext/sdk/initialization`;\n    const options = this.generateOptions('POST', initializationUrl, false);\n    options.headers['Content-Type'] = 'application/json';\n    const initializationBody = {\n      cfgId: this.__config.cfgId,\n      locale: 'en_US',\n    };\n    options.body = JSON.stringify(initializationBody);\n    const currentFunction = 'initialization';\n    return this.executeRequest(options, AWFREInitializationResponse)\n      .then((initializationResponse) => {\n        this.__logger.debug(currentFunction, 'Got initialization response', initializationResponse);\n        this.__links = initializationResponse.links;\n        this.__healthPlans = initializationResponse.healthPlans;\n        this.__services = initializationResponse.services;\n        return initializationResponse;\n      })\n      .catch((error) => {\n        this.__logger.error(currentFunction, 'Error', error);\n        throw error;\n      });\n  }\n\n  get config() {\n    return this.__config;\n  }\n\n  set config(config) {\n    this.__config = config;\n  }\n\n  get links() {\n    return this.__links;\n  }\n\n  set links(links) {\n    this.__links = links;\n  }\n\n  validate(freConfig) {\n    return Validator.isValidString(freConfig.cfgId) && Validator.isValidString(freConfig.freBaseUrl);\n  }\n}\n\nexport default FreInitializationService;\n","/*!\n * American Well Consumer Web SDK\n *\n * Copyright © 2019 American Well.\n * All rights reserved.\n *\n * It is illegal to use, reproduce or distribute\n * any part of this Intellectual Property without\n * prior written authorization from American Well.\n */\n\n/**\n * Enum for AWFREErrorCode.\n * @readonly\n * @enum\n * \n */\nconst AWFREErrorCode = {\n  /**\n   * A generic error.\n   * @since 2.4.0\n   */\n  otherError: 'otherError',\n\n  /**\n   * A client attempted to initialize FRE server with missing values for configuration.\n   * @since 2.4.0\n   */\n  initializationError: 'initializationError',\n  \n    /**\n   * The FRE platform is incompatible with this version of the sdk\n   * @since 2.4.0\n   */\n  versionIncompatible: 'versionIncompatible',\n};\n\n/**\n * @private\n */\nAWFREErrorCode.__codes = Object.values(AWFREErrorCode);\n\nexport default AWFREErrorCode;\n","/*!\n * American Well Consumer Web SDK\n *\n * Copyright © 2019 American Well.\n * All rights reserved.\n *\n * It is illegal to use, reproduce or distribute\n * any part of this Intellectual Property without\n * prior written authorization from American Well.\n */\nimport AWFREErrorCode from './awfre_error_code';\n\n/**\n * This class represents a wrapper class for any Error encountered by the AWFRE library during interaction with the server or internal to the AWFRE. <br>\n * Its purpose is to provide a more digestible data type for error encapsulation and handling.\n * \n * @property {error.AWFREErrorCode} errorCode the {@link error.AWFREErrorCode|AWFREErrorCode} associated with this error object.\n * @property {String} message String message of the main error.\n * @property {String} reason String explanation for the cause of the error.\n * @property {String} recoverySuggestion String suggesting a possible recovery strategy, if applicable.\n * @property {Number} httpResponseCode Integer representing the http error code associated with the error.\n * \n * @since 2.4.0\n */\nclass AWFREError {\n  constructor(error, message, reason, recoverySuggestion, httpResponseCode) {\n    if (error instanceof Error) {\n      this.__errorCode = AWFREErrorCode.otherError;\n      this.__error = error;\n    } else if (typeof error === 'symbol' || AWFREErrorCode.__codes.includes(error)) {\n      this.__errorCode = error;\n      this.__error = new Error(message);\n    } else {\n      this.__errorCode = AWFREErrorCode.otherError;\n      this.__error = new Error(message);\n    }\n    this.__reason = reason;\n    this.__recoverySuggestion = recoverySuggestion;\n    this.__httpResponseCode = httpResponseCode;\n  }\n  static AWFREInitializationError() {\n    return new AWFREError(AWFREErrorCode.initializationError,\n      'AWFRE was not properly initialized',\n      'Potential incorrect or missing cfgId field or wrong server url',\n      'Retry AWFRE initialization and ensure you receive a success');\n  }\n  static AWFREVersionIncompatibleError() {\n    return new AWFREError(AWFREErrorCode.versionIncompatible,\n      'The FRE platform is incompatible with this version of sdk',\n      '',\n      'Either upgrade the FRE platform or use different sdk version that is compatible');\n  }\n  get errorCode() {\n    return this.__errorCode;\n  }\n  get message() {\n    return this.__error.message;\n  }\n  get reason() {\n    return this.__reason;\n  }\n  get recoverySuggestion() {\n    return this.__recoverySuggestion;\n  }\n  get httpResponseCode() {\n    return this.__httpResponseCode;\n  }\n  set httpResponseCode(httpResponseCode) {\n    this.__httpResponseCode = httpResponseCode;\n  }\n}\n\nexport default AWFREError;\n","/*!\n * American Well Consumer Web SDK\n *\n * Copyright © 2019 American Well.\n * All rights reserved.\n *\n * It is illegal to use, reproduce or distribute\n * any part of this Intellectual Property without\n * prior written authorization from American Well.\n */\n\nimport AWFREDataObject from '../awfre_dataobject';\nimport GenericParser from '../../../awsdk/internal/parser/generic_parser';\nimport AWSDKGender from '../../../awsdk//model/consumer/awsdk_gender';\n\n/**\n * Demographics object holds the relevant consumer's demographics data.\n * \n * @property {String} firstName The consumer first name.\n * @property {String} lastName The consumer last name.\n * @property {model.AWSDKGender} The consumer gender {@link model.AWSDKGender|AWSDKGender}\n * @property {Date} dateOfBirth The consumer date of birth.\n *\n * @since 2.4.0\n */\nclass AWFREDemographics extends AWFREDataObject {\n  constructor(data) {\n    super(data);\n  }\n\n  get firstName() {\n    return this.__data.firstName;\n  }\n\n  get lastName() {\n    return this.__data.lastName;\n  }\n\n  get gender() {\n    return GenericParser.parseEnum(this.__data.gender, AWSDKGender);\n  }\n\n  get dateOfBirth() {\n    return GenericParser.parseDate(this.__data.dateOfBirth);\n  }\n\n  set firstName(firstName) {\n    this.__data.firstName = firstName;\n  }\n\n  set lastName(lastName) {\n    this.__data.lastName = lastName;\n  }\n\n  set gender(gender) {\n    this.__data.gender = gender;\n  }\n\n  set dateOfBirth(dateOfBirth) {\n    this.__data.dateOfBirth = dateOfBirth;\n  }\n}\n\nexport default AWFREDemographics;\n","/*!\n * American Well Consumer Web SDK\n *\n * Copyright (c) 2019 American Well.\n * All rights reserved.\n *\n * It is illegal to use, reproduce or distribute\n * any part of this Intellectual Property without\n * prior written authorization from American Well.\n */\n\nimport GenericParser from '../../../awsdk/internal/parser/generic_parser';\nimport AWFREDemographics from './awfre_demographics';\n\n/**\n * Request object to hold the relevant fields for making Recommendations call.\n * \n * @property {String} cfgId Consumer aggregator id.\n * @property {String} state The state where the enterprise is installed. For example CA (California).\n * @property {String} [requestId] Consumer Request id.\n * @property {String} [healthPlanQualifier] The health plan unique identifier.\n * @property {String} [serviceId] Service id is an identifier of Service type.\n * @property {String} [subscriberId] health plan subscriber id.\n * @property {String} [suffix] Suffix for the health plan subscriber id.\n * @property {model.AWFREDemographics} [demographics] Contains demographic information about the consumer.\n *\n * @since 2.4.0\n */\nclass AWFRERecommendationsRequest {\n  get requestId() {\n    return this.__requestId;\n  }\n\n  get cfgId() {\n    return this.__cfgId;\n  }\n\n  get state() {\n    return this.__state;\n  }\n\n  get healthPlanQualifier() {\n    return this.__healthPlanQualifier;\n  }\n\n  get serviceId() {\n    return this.__serviceId;\n  }\n\n  get subscriberId() {\n    return this.__subscriberId;\n  }\n\n  get suffix() {\n    return this.__suffix;\n  }\n\n  get demographics() {\n    return GenericParser.parseObject(this.__demographics, AWFREDemographics);\n  }\n\n  set requestId(requestId) {\n    this.__requestId = requestId;\n  }\n\n  set cfgId(cfgId) {\n    this.__cfgId = cfgId;\n  }\n\n  set state(state) {\n    this.__state = state;\n  }\n\n  set healthPlanQualifier(healthPlanQualifier) {\n    this.__healthPlanQualifier = healthPlanQualifier;\n  }\n\n  set serviceId(serviceId) {\n    this.__serviceId = serviceId;\n  }\n\n  set subscriberId(subscriberId) {\n    this.__subscriberId = subscriberId;\n  }\n\n  set suffix(suffix) {\n    this.__suffix = suffix;\n  }\n\n  set demographics(demographics) {\n    this.__demographics = demographics;\n  }\n\n  /**\n   * @private\n   */\n  __getAsRequestBody() {\n    const res = {};\n\n    res.cfgId = this.__cfgId;\n    res.requestId = this.__requestId;\n    res.state = this.__state;\n    res.healthPlanQualifier = this.__healthPlanQualifier;\n    res.serviceId = this.__serviceId;\n    res.subscriberId = this.__subscriberId;\n    res.suffix = this.__suffix;\n    res.demographics = this.__demographics;\n\n    return JSON.stringify(res);\n  }\n}\nexport default AWFRERecommendationsRequest;\n","/*!\n * American Well Consumer Web SDK\n *\n * Copyright © 2019 American Well.\n * All rights reserved.\n *\n * It is illegal to use, reproduce or distribute\n * any part of this Intellectual Property without\n * prior written authorization from American Well.\n */\n\nimport AWFREDataObject from '../awfre_dataobject';\n\n/**\n * Visit Cost object that holds information about estimated visit costs.\n * \n * @property {Number} costLow The lowest possible cost calculated per practice.\n * @property {Number} costHigh The highest possible cost calculated per practice.\n *\n * @since 2.4.0\n */\nclass AWFREVisitCost extends AWFREDataObject {\n\n  get costLow() {\n    return this.__data.costLow;\n  }\n\n  get costHigh() {\n    return this.__data.costHigh;\n  }\n}\n\nexport default AWFREVisitCost;\n","/*!\n * American Well Consumer Web SDK\n *\n * Copyright © 2019 American Well.\n * All rights reserved.\n *\n * It is illegal to use, reproduce or distribute\n * any part of this Intellectual Property without\n * prior written authorization from American Well.\n */\n\nimport AWFREDataObject from '../awfre_dataobject';\nimport AWFREVisitCost from '../../model/recommendations/awfre_visit_cost';\nimport GenericParser from '../../../awsdk/internal/parser/generic_parser';\n\n/**\n * Practice object holds information of enterprise's practice.\n * \n * @property {String} practiceName is the Practice name.\n * @property {String} practiceSourceId Unique identifier of the practice.\n * @property {String} practiceLogoUrl The URL for practice logo.\n * @property {String} practiceSmallLogoUrl The URL for practice small logo.\n * @property {model.AWFREVisitCost} visitCost The visit cost details.\n *\n * @since 2.4.0\n */\nclass AWFREPractice extends AWFREDataObject {\n  get practiceName() {\n    return this.__data.practiceName;\n  }\n\n  get practiceSourceId() {\n    return this.__data.practiceSourceId;\n  }\n\n  get practiceLogoUrl() {\n    return this.__data.practiceLogoUrl;\n  }\n\n  get practiceSmallLogoUrl() {\n    return this.__data.practiceSmallLogoUrl;\n  }\n\n  get visitCost() {\n    return GenericParser.parseObject(this.__data.visitCost, AWFREVisitCost);\n  }\n}\n\nexport default AWFREPractice;\n","/*!\n * American Well Consumer Web SDK\n *\n * Copyright © 2019 American Well.\n * All rights reserved.\n *\n * It is illegal to use, reproduce or distribute\n * any part of this Intellectual Property without\n * prior written authorization from American Well.\n */\n\nimport AWFREDataObject from '../awfre_dataobject';\nimport AWFREHealthPlan from '../healthplans/awfre_health_plan';\nimport AWFREPractice from './awfre_practice';\nimport GenericParser from '../../../awsdk/internal/parser/generic_parser';\n\n/**\n * This object is used to hold a single recommendation in the recommendations response.\n * \n * @property {String} installationId Unique identifier of the enterprise installation.\n * @property {String} name is the name of the enterprise.\n * @property {String[]} states The state where the enterprise is installed. For example CA (California).\n * @property {String} locale Locale. For example en_US.\n * @property {String} webSdkKey Web SDK key required to connect to an enterprise installation from a website.\n * @property {String} logoURL The URL of the enterprise logo.\n * @property {String} serverURL The URL of the enterprise installation server.\n * @property {model.AWFREHealthPlan[]} healthPlans A list of health plans covered by the enterprise.\n * @property {model.AWFREPractice[]} practices A list of practices offered by the enterprise.\n * @property {boolean} likelyCovered An indicator that services offered by the platform are likely to be covered according to the health plan supplied by the customer and the list of supported health plans configured on the enterprise.\n *\n * @since 2.4.0\n */\nclass AWFREEnterprise extends AWFREDataObject {\n  get installationId() {\n    return this.__data.installationId;\n  }\n\n  get name() {\n    return this.__data.name;\n  }\n\n  get states() {\n    return this.__data.states;\n  }\n\n  get locale() {\n    return this.__data.locale;\n  }\n\n  get likelyCovered() {\n    return GenericParser.parseBoolean(this.__data.likelyCovered);\n  }\n\n  get webSdkKey() {\n    return this.__data.webSdkKey;\n  }\n\n  get logoURL() {\n    return this.__data.logoURL;\n  }\n\n  get serverURL() {\n    return this.__data.serverURL;\n  }\n\n  get healthPlans() {\n    const healthPlans = this.__data.healthPlans;\n    if (!Array.isArray(healthPlans) || healthPlans.length === 0) {\n      return [];\n    }\n    return healthPlans.map(item => GenericParser.parseObject(item, AWFREHealthPlan));\n  }\n\n  get practices() {\n    const practices = this.__data.practices;\n    if (!Array.isArray(practices) || practices.length === 0) {\n      return [];\n    }\n    return practices.map(item => GenericParser.parseObject(item, AWFREPractice));\n  }\n}\n\nexport default AWFREEnterprise;\n","/*!\n * American Well Consumer Web SDK\n *\n * Copyright (c) 2019 American Well.\n * All rights reserved.\n *\n * It is illegal to use, reproduce or distribute\n * any part of this Intellectual Property without\n * prior written authorization from American Well.\n */\nimport GenericParser from '../../../awsdk/internal/parser/generic_parser';\nimport AWFREEnterprise from '../recommendations/awfre_enterprise';\nimport AWFREResponse from './awfre_response';\n\n/**\n * The AWFRERecommendationsResponse class represents the response object to a call for a recommendation details call.\n * @property {String} trackingId is a Unique identifier retrieved as a part of the recommendations response in order to get updated cost for recommendations.\n * @property {model.AWFREEnterprise[]} enterprises The enterprises details for a given cfgId.\n * @property {String} [requestId] Identifier of the request.\n *\n * @since 2.4.0\n */\nclass AWFRERecommendationsResponse extends AWFREResponse {\n  get trackingId() {\n    return this.__data.trackingId;\n  }\n\n  get enterprises() {\n    const enterprises = this.__data.enterprises;\n    if (!Array.isArray(enterprises) || enterprises.length === 0) {\n      return [];\n    }\n    return enterprises.map(item => GenericParser.parseObject(item, AWFREEnterprise));\n  }\n\n  get requestId() {\n    return this.__data.requestId;\n  }\n}\n\nexport default AWFRERecommendationsResponse;\n","/*!\n * American Well Consumer Web SDK\n *\n * Copyright (c) 2019 American Well.\n * All rights reserved.\n *\n * It is illegal to use, reproduce or distribute\n * any part of this Intellectual Property without\n * prior written authorization from American Well.\n */\n\n/**\n * Request object holds additional recommendations data in order to fetch recommendations response from the AmWell platform.\n * \n * @property {String} trackingId Unique identifier of the response we need to retrieve.\n *\n * @since 2.4.0\n */\nclass AWFRERecommendationsAdditionalDataRequest {\n  get trackingId() {\n    return this.__trackingId;\n  }\n\n  set trackingId(trackingId) {\n    this.__trackingId = trackingId;\n  }\n\n  /**\n   * @private\n   */\n  __getAsRequestBody() {\n    const res = {};\n    res.trackingId = this.__trackingId;\n    return JSON.stringify(res);\n  }\n}\nexport default AWFRERecommendationsAdditionalDataRequest;","/*!\n * American Well Consumer Web SDK\n *\n * Copyright © 2019 American Well.\n * All rights reserved.\n *\n * It is illegal to use, reproduce or distribute\n * any part of this Intellectual Property without\n * prior written authorization from American Well.\n */\nimport Service from '../../awsdk/service/service';\nimport Validator from '../../awsdk/internal/validator/validator';\nimport AWSDKError from '../../awsdk/error/awsdk_error';\nimport AWFRERecommendationsRequest from '../model/recommendations/awfre_recommendations_request';\nimport AWFRERecommendationsResponse from '../model/response/awfre_recommendations_response';\nimport AWFRERecommendationsAdditionalDataRequest from '../model/recommendations/awfre_recommendations_additional_data_request';\n\n/**\n * This service handles everything related to FRE (Federated Recommendation Engine) calls\n *\n * @since 2.4.0\n * \n * @hideconstructor\n * @extends service.Service\n */\nclass FreService extends Service {\n  constructor(config) {\n    super(config);\n    this.__config = config;\n  }\n\n  /**\n    * Method for getting recommendations (AmWell enterprise installations) from the FRE server.\n    * @param {model.AWFRERecommendationsRequest} recommendationsRequest The recommendation request that contains consumer input for recommendations.\n    * @returns {Promise<model.AWFRERecommendationsResponse|error.AWSDKError>} A Promise that resolves to an {@link model.AWFRERecommendationsResponse|AWFRERecommendationsResponse} or is rejected with a {@link error.AWSDKError|AWSDKError}\n    * <p><br>Potential Error Codes<br>\n    * <table summary=\"ErrorCodes\" border=\"1\">\n    * <thead>\n    * <tr><th>Error Code</th><th>reason</th></tr>\n    * </thead>\n    * <tbody>\n    * <tr><td>{@link error.AWSDKErrorCode.illegalArgument|AWSDKErrorCode.illegalArgument}</td><td>A parameter is not the correct type.</td></tr>\n    * <tr><td>{@link error.AWSDKErrorCode.internalError|AWSDKErrorCode.internalError}</td><td>The AWSDK could not complete the request.</td></tr>\n    * <tr><td>{@link error.AWSDKErrorCode.validationError|AWSDKErrorCode.AWSDKFieldValidationError}</td><td>If the cfgId field is empty, or if the state has two uppercase letters.\n    * </td></tr>\n    * </tbody>\n    * </table>\n    * @since 2.4.0\n    */\n  getRecommendations(recommendationsRequest) {\n    const currentFunction = 'FreService.getRecommendations';\n    this.__logger.debug(currentFunction, 'Started', recommendationsRequest);\n\n    if (!(recommendationsRequest instanceof AWFRERecommendationsRequest)) {\n      const error = AWSDKError.AWSDKIllegalArgument('recommendationsRequest argument must be of type AWFRERecommendationsRequest');\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n\n    if (!Validator.isValidString(recommendationsRequest.cfgId)) {\n      const error = AWSDKError.AWSDKFieldValidationError(null, 'cfgId', 'field required', 'set to non-empty value');\n      this.__logger.error(currentFunction, 'error', error);\n      return Promise.reject(error);\n    }\n\n    if (!Validator.isValidString(recommendationsRequest.state)) {\n      const error = AWSDKError.AWSDKFieldValidationError(null, 'state', 'field required', 'set to non-empty value');\n      this.__logger.error(currentFunction, 'error', error);\n      return Promise.reject(error);\n    }\n\n    const link = this.findNamedLink(this.__links, 'recommendations');\n    if (!Validator.isValidLink(link)) {\n      const error = AWSDKError.AWSDKInternalError('service does not have a \"recommendations\" link entry');\n      this.__logger.error(currentFunction, 'error', error);\n      return Promise.reject(error);\n    }\n\n    const options = this.generateOptions('POST', link.url, false);\n    options.headers['Content-Type'] = 'application/json';\n    options.body = recommendationsRequest.__getAsRequestBody();\n\n    return this.executeRequest(options, AWFRERecommendationsResponse)\n      .then((recommendationsResponse) => {\n        this.__logger.debug(currentFunction, 'Got response', recommendationsResponse);\n        return Promise.resolve(recommendationsResponse);\n      })\n      .catch((error) => {\n        this.__logger.error(currentFunction, 'Error', error);\n        throw error;\n      });\n  }\n\n\n  /**\n    * Method for retrieving recommendations (AmWell enterprise installations) from the FRE server.\n    * This method depends on trackingId coming from the getRecommendations method and may return additional data such as visit cost (if exists).\n    * In case no additional data exists, it will return the same as getRecommendations.\n    * @param {model.AWFRERecommendationsAdditionalDataRequest} recommendationsAdditionalDataRequest Request for getting additional data that was late to gathered, such as cost.\n    * @returns {Promise<model.AWFRERecommendationsResponse|error.AWSDKError>} a Promise that resolves to an {@link model.AWFRERecommendationsResponse|AWFRERecommendationsResponse} or is rejected with a {@link error.AWSDKError|AWSDKError}\n    * <p><br>Potential Error Codes<br>\n    * <table summary=\"ErrorCodes\" border=\"1\">\n    * <thead>\n    * <tr><th>Error Code</th><th>reason</th></tr>\n    * </thead>\n    * <tbody>\n    * <tr><td>{@link error.AWSDKErrorCode.illegalArgument|AWSDKErrorCode.illegalArgument}</td><td>A parameter is not the correct type.</td></tr>\n    * <tr><td>{@link error.AWSDKErrorCode.internalError|AWSDKErrorCode.internalError}</td><td>The AWSDK could not complete the request.</td></tr>\n    * <tr><td>{@link error.AWSDKErrorCode.validationError|AWSDKErrorCode.AWSDKFieldValidationError}</td><td>If the tracking field is empty.</td></tr>\n    * </tbody>\n    * </table>\n    * \n    * @since 2.4.0\n    */\n   getRecommendationsAdditionalData(recommendationsAdditionalDataRequest) {\n    const currentFunction = 'FreService.getRecommendationsAdditionalData';\n    this.__logger.debug(currentFunction, 'Started', recommendationsAdditionalDataRequest);\n    if (!(recommendationsAdditionalDataRequest instanceof AWFRERecommendationsAdditionalDataRequest)) {\n      const error = AWSDKError.AWSDKIllegalArgument('recommendationsAdditionalDataRequest argument must be of type AWFRERecommendationsAdditionalDataRequest');\n      this.__logger.error(currentFunction, 'Error', error);\n      return Promise.reject(error);\n    }\n\n    if (!Validator.isValidString(recommendationsAdditionalDataRequest.trackingId)) {\n      const error = AWSDKError.AWSDKFieldValidationError(null, 'trackingId', 'field required', 'set to non-empty value');\n      this.__logger.error(currentFunction, 'error', error);\n      return Promise.reject(error);\n    }\n\n    const link = this.findNamedLink(this.__links, 'recommendations-tracking');\n\n    if (!Validator.isValidLink(link)) {\n      const error = AWSDKError.AWSDKInternalError('service does not have a \"recommendations-AdditionalData\" link entry');\n      this.__logger.error(currentFunction, 'error', error);\n      return Promise.reject(error);\n    }\n\n    const options = this.generateOptions('POST', link.url, false);\n    options.headers['Content-Type'] = 'application/json';\n    options.body = recommendationsAdditionalDataRequest.__getAsRequestBody();\n    return this.executeRequest(options, AWFRERecommendationsResponse)\n      .then((recommendationsResponse) => {\n        this.__logger.debug(currentFunction, 'Got response', recommendationsResponse);\n        return Promise.resolve(recommendationsResponse);\n      })\n      .catch((error) => {\n        this.__logger.error(currentFunction, 'Error', error);\n        throw error;\n      });\n  }\n\n  /**\n   * This method calls getRecommendationsAdditionalData at every interval until timeout or error limit reached.\n   * Polling functionality is required since some of the data (e.g. visit cost) may require more time to be retrieved. \n   * @param {model.AWFRERecommendationsAdditionalDataRequest} recommendationsAdditionalDataRequest is the object that was created by a call to {@link service.FreService#getRecommendationsAdditionalData}.\n   * @param {function} [callback] the callback to be called on while the recommendations is in progress.\n   * @returns {Promise<model.AWFRERecommendationsResponse|error.AWSDKError>} Returns a promise that will be resolved to an {@link model.AWFRERecommendationsResponse|AWFRERecommendationsResponse} or will\n   * be rejected with an {@link error.AWSDKError|AWSDKError}.\n   * <p><br>Potential Error Codes<br>\n   * <table summary=\"ErrorCodes\" border=\"1\">\n   * <tr><th>Error Code</th><th>reason</th>\n   * <tr><td>{@link error.AWSDKErrorCode.illegalArgument|AWSDKErrorCode.illegalArgument}</td><td>A parameter is not the correct type.</td></tr>\n   * </table>\n   * @since 2.4.0\n   */\n  waitForRecommendationsAdditionalDataToFinish(recommendationsAdditionalDataRequest, callback) {\n    const currentFunction = 'FreService.waitForRecommendationsAdditionalDataToFinish';\n    this.__logger.debug(currentFunction, 'Started', recommendationsAdditionalDataRequest);\n\n    if (callback != null && !(callback instanceof Function)) {\n      const error = AWSDKError.AWSDKIllegalArgument('callback argument is not a function');\n      this.__logger.error(currentFunction, 'error', error);\n      return Promise.reject(error);\n    }\n\n    let errorCount = 0;\n    const errorLimit = 3;\n    const interval = this.__config.recommendationsPollingInterval; \n    const timeout = this.__config.recommendationsPollingTimeout;\n    const endTime = Number(new Date()) + (timeout);\n\n    const checkCondition = (resolve, reject) => {\n      this.getRecommendationsAdditionalData(recommendationsAdditionalDataRequest)\n        .then((response) => {\n          if (Number(new Date()) < endTime) {\n            if (callback != null) {\n              try {\n                 callback(response);\n               } catch (error) {\n                this.__logger.error(currentFunction, 'error', error);\n              }\n            }\n            setTimeout(checkCondition, interval, resolve, reject);\n          } else {\n            resolve(response);\n          }\n        })\n        .catch((error) => {\n          errorCount += 1;\n          this.__logger.warn(currentFunction, 'error during polling', errorCount, error);\n          if (errorCount >= errorLimit) {\n            this.__logger.error(currentFunction, 'Error', error);\n            reject(error);\n          } else {\n            setTimeout(checkCondition, interval, resolve, reject);\n          }\n        });\n    };\n    return new Promise(checkCondition);\n  }\n}\n\nexport default FreService;\n","/*!\n * American Well Consumer Web SDK\n *\n * Copyright © 2019 American Well.\n * All rights reserved.\n *\n * It is illegal to use, reproduce or distribute\n * any part of this Intellectual Property without\n * prior written authorization from American Well.\n */\n\n/**\n * This is the main entry point of the American Well AWFRE SDK\n */\nimport FreInitializationService from './internal/service/fre_initialization_service';\nimport Logger from '../awsdk/internal/logger/logger';\nimport AWFREError from './error/awfre_error';\nimport FreService from '../awfre/service/fre_service';\nimport log from 'loglevel';\nimport version from '../awsdk/version';\n\n/**\n * This is the main JS file which is exposed as part of the awsdk.js\n * \n * @since 2.4.0\n */\nclass AWFRE {\n  constructor() {\n    this.__logger = new Logger();\n  }\n\n/**\n * Required call to initialize the AWFRE.\n * Upon success, the AWFRE instance will be initialized and configured.\n * @param {Object} config The configuration used to initialize the FRE.\n * @param {String} config.freBaseUrl https://fre-american-well.com/ The base American Well telehealth platform URL to target.\n * @returns {Promise<boolean|error.AWSDKError>} Returns a promise that will be resolved to a boolean or will be rejected with an {@link error.AWFREError}.\n * \n * <br>Potential Error Codes<br>\n * <table summary=\"ErrorCodes\" border=\"1\">\n * <tr><th>Error Code</th><th>reason</th></tr>\n * <tr><td>{@link error.AWFREInitializationError|AWFREError.AWFREInitializationError}</td><td>The FRE failed to initialize</td></tr>\n * </table>\n * \n * @since 2.4.0\n */\n  initializeFre(config = {}) {\n    this.reset();\n\n    this.__config = config;\n    this.__config.logger = this.__logger;\n    this.__logger.info('Initializing AWFRE');\n\n    /**\n     * always check for a trailing slash. All of our URL appending logic internally in the rest of the models depends on this.\n     */\n    if (this.__config.freBaseUrl.charAt(this.__config.freBaseUrl.length - 1) !== '/') {\n      this.__config.freBaseUrl += '/';\n    }\n\n    this.__freInitializationService = new FreInitializationService(this.__config);\n\n    if (!this.__freInitializationService.validate(this.__config)) {\n      this.__initialized = false;\n      return Promise.reject(AWFREError.AWFREInitializationError());\n    }\n\n    return (this.__freInitializationService.initialization(this.__config))\n      .then((awfreInitializationResponse) => {\n        this.__links = awfreInitializationResponse.links;\n        this.__healthPlans = awfreInitializationResponse.healthPlans;\n        this.__services = awfreInitializationResponse.services;\n        this.__initialized = true;\n        const versionLog = log.getLogger('AWSDKVersion');\n        versionLog.enableAll();\n        versionLog.info('AWSDK Version', version.sdkVersion);\n        this.__logger.info('info', `AWFRE initialization success. Response: ${awfreInitializationResponse}`);\n        return true;\n      })\n      .catch((error) => {\n        this.__logger.error('AWFRE.initialize', 'Error', error);\n        throw error;\n      });\n  }\n\n  reset() {\n    this.__initialized = false;\n    this.__healthPlans = undefined;\n    this.__services = undefined;\n    this.__freService = undefined;\n    this.__freInitializationService = undefined;\n  }\n\n  /**\n   * Get a {@link service.FreService}\n   * @type {service.FreService}\n   */\n  get freService() {\n    if (!this.__initialized) {\n      throw AWFREError.AWFREInitializationError();\n    }\n    if (this.__freService === undefined) {\n      this.__freService = new FreService({\n        logger: this.__logger, \n        links: this.__freInitializationService.__links, \n        recommendationsPollingInterval: this.__config.recommendationsPollingInterval, \n        recommendationsPollingTimeout: this.__config.recommendationsPollingTimeout \n      });\n    }\n    return this.__freService;\n  }\n\n  get services() {\n    return this.__services;\n  }\n\n  get healthPlans() {\n    return this.__healthPlans;\n  }\n\n  restoreInstanceState(state) {\n    const newState = JSON.parse(state);\n    this.__config = newState.config;\n    this.__links = newState.links;\n    this.__healthPlans = newState.healthPlans;\n    this.__services = newState.services;\n    this.__initialized = newState.initialized;\n\n    this.__freInitializationService.setConfig(this.__config);\n    this.__freInitializationService.setLinks(this.__links);\n    this.__initialized = GenericParser.parseBoolean(this.__initialized);\n  }\n\n}\n\nexport default AWFRE;\n","/*!\n * American Well Consumer Web SDK\n *\n * Copyright © 2019 American Well.\n * All rights reserved.\n *\n * It is illegal to use, reproduce or distribute\n * any part of this Intellectual Property without\n * prior written authorization from American Well.\n */\n\nimport AWFRERecommendationsRequest from '../awfre/model/recommendations/awfre_recommendations_request';\nimport AWFRERecommendationsAdditionalDataRequest from './model/recommendations/awfre_recommendations_additional_data_request';\nimport AWFREDemographics from '../awfre/model/recommendations/awfre_demographics';\n\n/**\n * This is the object factory for the American Well FRE SDK module <br>\n * \n * @since 2.4.0\n */\nclass AWFREFactory {\n\n  /**\n   * @return new {model.recommendations.AWFRERecommendationsRequest}\n   */\n  get newRecommendationsRequest() {\n    return new AWFRERecommendationsRequest();\n  }\n\n  /**\n   * @return new {model.recommendations.AWFRERecommendationsAdditionalDataRequest}\n   */\n  get newRecommendationsAdditionalDataRequest() {\n    return new AWFRERecommendationsAdditionalDataRequest();\n  }\n\n  /**\n   * @return new {model.recommendations.AWFREDemographics}\n   */\n  get newAWFREDemographics() {\n    return new AWFREDemographics();\n  }\n}\n\nexport default AWFREFactory;\n","/*!\n * American Well Consumer Web SDK\n *\n * Copyright © 2017 American Well.\n * All rights reserved.\n *\n * It is illegal to use, reproduce or distribute\n * any part of this Intellectual Property without\n * prior written authorization from American Well.\n */\nimport AWSDKConsumer from './model/consumer/awsdk_consumer';\nimport AWSDKPaymentMethod from './model/billing/awsdk_payment_method';\nimport AWSDKPractice from './model/practice/awsdk_practice';\nimport AWSDKProviderDetails from './model/provider/awsdk_provider_details';\nimport AWSDKVisit from './model/visit/awsdk_visit';\nimport AWSDKVisitContext from './model/visit/awsdk_visit_context';\nimport AWSDKVisitSummary from './model/visit/awsdk_visit_summary';\nimport AWSDKAppointment from './model/appointment/awsdk_appointment';\n\nimport GenericParser from './internal/parser/generic_parser';\nimport AWSDKOnDemandSpecialty from './model/practice/awsdk_on_demand_specialty';\nimport AWSDKVideoParticipant from './model/visit/awsdk_video_participant';\nimport AWSDKAuthentication from './model/authentication/awsdk_authentication';\nimport AWSDKTrackerTemplate from './model/tracker/awsdk_tracker_template';\nimport AWSDKOnlineVisitFollowUpItem from './model/visit/awsdk_online_visit_follow_up_item';\n\n/**\n * This is the object factory for the American Well Consumer Web SDK<br>\n */\nclass AWSDKFactory {\n  /**\n   * This method is used to parse and instantiate an AWSDKConsumer from the provided stringifiedConsumer\n   * @param {String} stringifiedConsumer the stringified consumer to restore\n   * @returns {model.AWSDKConsumer} the restored consumer\n   */\n  static restoreConsumer(stringifiedConsumer) {\n    const newState = JSON.parse(stringifiedConsumer);\n    return GenericParser.parseObject(newState, AWSDKConsumer);\n  }\n\n  /**\n   * This method is used to parse and instantiate an AWSDKAuthentication from the provided stringifiedAuthentication\n   * @param {String} stringifiedAuthentication the stringified authentication to restore\n   * @returns {model.AWSDKAuthentication} the restored authentication\n   */\n  static restoreAuthentication(stringifiedAuthentication) {\n    const newState = JSON.parse(stringifiedAuthentication);\n    return GenericParser.parseObject(newState, AWSDKAuthentication);\n  }\n\n  /**\n   * This method is used to parse and instantiate an AWSDKPractice from the provided stringifiedPractice\n   * @param {String} stringifiedPractice the stringified practice to restore\n   * @returns {model.AWSDKPractice} the restored practice\n   */\n  static restorePractice(stringifiedPractice) {\n    const newState = JSON.parse(stringifiedPractice);\n    return GenericParser.parseObject(newState, AWSDKPractice);\n  }\n\n  /**\n   * This method is used to parse and instantiate an AWSDKProviderDetails from the provided stringifiedProviderDetails\n   * @param {String} stringifiedProviderDetails the stringified provider details to restore\n   * @returns {model.AWSDKProviderDetails} the restored provider details\n   */\n  static restoreProviderDetails(stringifiedProviderDetails) {\n    const newState = JSON.parse(stringifiedProviderDetails);\n    return GenericParser.parseObject(newState, AWSDKProviderDetails);\n  }\n\n  /**\n   * This method is used to parse and instantiate an AWSDKVisitContext from the provided stringifiedVisitContext\n   * @param {String} stringifiedVisitContext the stringified visit context to restore\n   * @returns {model.AWSDKVisitContext} the restored visit context\n   */\n  static restoreVisitContext(stringifiedVisitContext) {\n    const newState = JSON.parse(stringifiedVisitContext);\n    return GenericParser.parseObject(newState, AWSDKVisitContext);\n  }\n\n  /**\n   * This method is used to parse and instantiate an AWSDKVisit from the provided stringifiedVisit\n   * @param {String} stringifiedVisit the stringified visit to restore\n   * @returns {model.AWSDKVisit} the restored visit\n   */\n  static restoreVisit(stringifiedVisit) {\n    const newState = JSON.parse(stringifiedVisit);\n    return GenericParser.parseObject(newState, AWSDKVisit);\n  }\n\n  /**\n   * This method is used to parse and instantiate an AWSDKVisitSummary from the provided stringifiedVisitSummary\n   * @param {String} stringifiedVisitSummary the stringified visit summary to restore\n   * @returns {model.AWSDKVisitSummary} the restored visit summary\n   */\n  static restoreVisitSummary(stringifiedVisitSummary) {\n    const newState = JSON.parse(stringifiedVisitSummary);\n    return GenericParser.parseObject(newState, AWSDKVisitSummary);\n  }\n\n  /**\n   * This method is used to parse and instantiate an AWSDKPaymentMethod from the provided stringifiedPaymentMethod\n   * @param {String} stringifiedPaymentMethod the stringified payment method to restore\n   * @returns {model.AWSDKPaymentMethod} the restored payment method\n   */\n  static restorePaymentMethod(stringifiedPaymentMethod) {\n    const newState = JSON.parse(stringifiedPaymentMethod);\n    return GenericParser.parseObject(newState, AWSDKPaymentMethod);\n  }\n\n  /**\n   * This method is used to parse and instantiate an AWSDKAppointment from the provided stringifiedAppointment\n   * @param {String} stringifiedAppointment the stringified appointment to restore\n   * @returns {model.AWSDKAppointment} the restored appointment\n   */\n  static restoreAppointment(stringifiedAppointment) {\n    const newState = JSON.parse(stringifiedAppointment);\n    return GenericParser.parseObject(newState, AWSDKAppointment);\n  }\n\n  /**\n   * This method is used to parse and instantiate an AWSDKOnDemandSpecialty from the provided stringifiedOnDemandSpecialty\n   * @param {String} stringifiedOnDemandSpecialty the stringified on demand specialty to restore\n   * @returns {model.AWSDKOnDemandSpecialty} the restored on demand specialty\n   */\n  static restoreSpecialty(stringifiedOnDemandSpecialty) {\n    const newState = JSON.parse(stringifiedOnDemandSpecialty);\n    return GenericParser.parseObject(newState, AWSDKOnDemandSpecialty);\n  }\n\n  /**\n   * This method is used to parse and instantiate an AWSDKVideoParticipant from the provided stringifiedVideoParticipant\n   * @param {String} stringifiedVideoParticipant the stringified video participant to restore\n   * @returns {model.AWSDKVideoParticipant} the restored video participant\n   */\n  static restoreParticipant(stringifiedVideoParticipant) {\n    const newState = JSON.parse(stringifiedVideoParticipant);\n    return GenericParser.parseObject(newState, AWSDKVideoParticipant);\n  }\n\n  /**\n   * This method is used to parse and instantiate an AWSDKTrackerTemplate from the provided stringifiedTrackerTemplate\n   * @param {String} stringifiedTrackerTemplate the stringified tracker template to restore\n   * @returns {model.AWSDKTrackerTemplate} the restored tracker template\n   */\n  static restoreTrackerTemplate(stringifiedTrackerTemplate) {\n    const newState = JSON.parse(stringifiedTrackerTemplate);\n    return GenericParser.parseObject(newState, AWSDKTrackerTemplate);\n  }\n\n  /**\n   * This method is used to parse and instantiate an AWSDKOnlineVisitFollowUpItem from the provided\n   * @param {String} stringifiedOnlineVisitFollowUpItem\n   * @returns {model.AWSDKOnlineVisitFollowUpItem} the restored Online Visit Follow Up Item\n   * @since 3.0.0\n   */\n  static restoreOnlineVisitFollowUpItem(stringifiedOnlineVisitFollowUpItem) {\n    const newState = JSON.parse(stringifiedOnlineVisitFollowUpItem);\n    return GenericParser.parseObject(newState, AWSDKOnlineVisitFollowUpItem);\n  }\n}\n\n\nexport default AWSDKFactory;\n","/*!\n * American Well Consumer Web SDK\n *\n * Copyright © 2017 American Well.\n * All rights reserved.\n *\n * It is illegal to use, reproduce or distribute\n * any part of this Intellectual Property without\n * prior written authorization from American Well.\n */\nimport 'whatwg-fetch';\nimport empty from 'awcoresdk/lib/util/empty';\nimport deprecated from 'awcoresdk/lib/util/deprecated';\nimport replace from 'awcoresdk/lib/util/replace';\nimport isWebRTCSupported from 'awcoresdk/lib/util/rtc_supported';\nimport messages from 'awcoresdk/lib/i18n/index';\nimport 'awcoresdk/lib/styles/main.scss';\n\nimport AWSDK from './awsdk/awsdk';\nimport AWFRE from './awfre/awfre';\nimport AWFREFactory from './awfre/awfre_factory';\nimport version from './awsdk/version';\nimport AWSDKError from './awsdk/error/awsdk_error';\nimport AWSDKErrorCode from './awsdk/error/awsdk_error_code';\nimport AWSDKFactory from './awsdk/awsdk_factory';\nimport AWSDKSortOrder from './awsdk/model/awsdk_sort_order';\nimport AWSDKConsumerMiddleNameHandling from './awsdk/model/consumer/awsdk_consumer_middle_name_handling';\nimport AWSDKGender from './awsdk/model/consumer/awsdk_gender';\nimport AWSDKDisclaimerEntityType from './awsdk/model/awsdk_disclaimer_entity_type';\nimport AWSDKFirstAvailableStatus from './awsdk/model/visit/awsdk_first_available_status';\nimport AWSDKEligibilityRequestStatus from './awsdk/model/visit/awsdk_eligibility_request_status';\nimport AWSDKConnectionType from './awsdk/model/visit/awsdk_connection_type';\nimport AWSDKConsumerInitiatedIVRStatus from './awsdk/model/visit/awsdk_consumer_initiated_ivr_status';\nimport AWSDKDisposition from './awsdk/model/visit/awsdk_disposition';\nimport AWSDKEndReason from './awsdk/model/visit/awsdk_end_reason';\nimport AWSDKConferenceStatus from './awsdk/model/visit/awsdk_conference_status';\nimport AWSDKUserType from './awsdk/awsdk_user_type';\nimport AWSDKMessageType from './awsdk/model/secure_message/awsdk_message_type';\nimport AWSDKRecoverEmailStatus from './awsdk/model/authentication/awsdk_recover_email_status';\nimport AWSDKProviderVisibility from './awsdk/model/provider/awsdk_provider_visibility';\nimport AWSDKCheckInStatus from './awsdk/model/appointment/awsdk_check_in_status';\nimport AWSDKAgendaItemFollowUpType from './awsdk/model/visit/awsdk_agenda_item_follow_up_type';\nimport AWSDKMessageActionType from './awsdk/model/secure_message/compose/awsdk_message_action_type';\nimport AWSDKVisitModalityType from './awsdk/model/visit/awsdk_visit_modality_type';\nimport AWSDKDevicePairingStatusEnum from './awsdk/model/device_live_streaming/awsdk_device_pairing_status_enum';\nimport AWSDKDeviceLiveStreamType from './awsdk/model/device_live_streaming/awsdk_device_live_stream_type';\nimport AWSDKDeviceIntegrationMode from './awsdk/model/device_integration/awsdk_device_integration_mode';\nimport AWSDKGenderIdentity from './awsdk/model/consumer/awsdk_gender_identity';\nimport AWSDKPostVisitFollowUpItemsTypeFilter from './awsdk/model/post_visit_follow_up_items/awsdk_post_visit_follow_up_items_type_filter';\nimport AWSDKPostVisitFollowUpItemType from './awsdk/model/post_visit_follow_up_items/awsdk_post_visit_follow_up_item_type';\nimport AWSDKPostVisitFollowUpItemCategory from './awsdk/model/post_visit_follow_up_items/awsdk_post_visit_follow_up_item_category';\nimport AWSDKIntegrationContext from './awsdk/model/integration/awsdk_integration_context';\nimport AWSDKIntegrationStatus from './awsdk/model/integration/awsdk_integration_status';\n\nAWSDK.version = version.sdkVersion;\nAWSDK.supportedOnlineCareVersion = version.supportedOnlineCareVersion;\n\nexport default { AWSDK,\n  AWFRE,\n  AWFREFactory,\n  AWSDKError,\n  AWSDKErrorCode,\n  AWSDKFactory,\n  AWSDKSortOrder,\n  AWSDKConnectionType,\n  AWSDKConsumerMiddleNameHandling,\n  AWSDKGender,\n  AWSDKGenderIdentity,\n  AWSDKDisclaimerEntityType,\n  AWSDKFirstAvailableStatus,\n  AWSDKEligibilityRequestStatus,\n  AWSDKConsumerInitiatedIVRStatus,\n  AWSDKDisposition,\n  AWSDKEndReason,\n  AWSDKConferenceStatus,\n  AWSDKUserType,\n  AWSDKMessageType,\n  AWSDKRecoverEmailStatus,\n  AWSDKProviderVisibility,\n  AWSDKCheckInStatus,\n  AWSDKAgendaItemFollowUpType,\n  AWSDKPostVisitFollowUpItemType,\n  AWSDKPostVisitFollowUpItemCategory,\n  AWSDKPostVisitFollowUpItemsTypeFilter,\n  AWSDKMessageActionType,\n  AWSDKVisitModalityType,\n  AWSDKDevicePairingStatusEnum,\n  AWSDKDeviceLiveStreamType,\n  AWSDKDeviceIntegrationMode,\n  AWSDKIntegrationStatus,\n  AWSDKIntegrationContext,\n  utils: {\n    empty,\n    deprecated,\n    replace,\n    WebRTCHelper: {\n      isWebRTCSupported,\n    },\n  },\n  i18n: messages,\n};\n"],"sourceRoot":""}